{"milestones":[],"attachments":[{"path":"attachments\/f822fcfaf44a487893d7def28659d6d5","issue":210,"user":"dan.sanduleac","filename":"missing_symbols.txt"},{"path":"attachments\/0e4cbdde8e394a1f8c32b46b639fa195","issue":210,"user":"dan.sanduleac","filename":"linking.txt"},{"path":"attachments\/d9936bad789c46adb16f651ad7232d2f","issue":210,"user":"dan.sanduleac","filename":"missing_symbols.txt"},{"path":"attachments\/55d789fc69a14abab79598f4407d8caa","issue":120,"user":"ibuclaw","filename":"issue120.patch"},{"path":"attachments\/95706182ea3347c886a3a8de6f7762dd","issue":351,"user":"TurkeyMan","filename":"rt_init-crash.png"},{"path":"attachments\/c675740e87424e37858a42c664eeed70","issue":347,"user":"mattcaron_redlion","filename":"lots_of_cflags.patch"},{"path":"attachments\/43a3022c01bd48d9b8a2021869b98b69","issue":41,"user":"trass3r","filename":"MinGW.wiki"},{"path":"attachments\/b9300115d0604bec9e7172e240ff87e9","issue":335,"user":"WebDrake","filename":"arguments.d"},{"path":"attachments\/9035b2bf54a34aea927fa2c27538c997","issue":229,"user":"venix1","filename":"issue229_D2.patch"},{"path":"attachments\/dab6fcff210d43d590b1a448654383a1","issue":100,"user":"venix1","filename":"stdio.patch"},{"path":"attachments\/b9ee9198e5e944c495ad2a8c6b14adcd","issue":100,"user":"venix1","filename":"trivial.patch"},{"path":"attachments\/6f04a3b82098414fb36d89cae60a7b24","issue":100,"user":"venix1","filename":"mingw.patch"},{"path":"attachments\/bec96cabeb73476ba7d5b80e4eafd52c","issue":3,"user":"klickverbot","filename":"gdc-define-version-posix.patch"},{"path":"attachments\/7c1a2d4fa3254a6da39f66331ee5f050","issue":314,"user":"jpf","filename":"file.d"},{"path":"attachments\/a9894a21152448a2a4a15f37caf7eccd","issue":314,"user":"jpf","filename":"stdio.d"},{"path":"attachments\/229344b57fdf488ea42e9bfda494289c","issue":21,"user":"venix1","filename":"dllimport_fix.patch"},{"path":"attachments\/083297c1175c41ea93741af836735b4e","issue":21,"user":"venix1","filename":"iob_fix.patch"},{"path":"attachments\/3b72b3ae67f64699934582dede1ecd92","issue":18,"user":"ibuclaw","filename":"freebsd.diff"},{"path":"attachments\/590bc4158c1842999511ef0c2a64af3b","issue":5,"user":"ricochet1k","filename":"Error2.txt"},{"path":"attachments\/37bfe81161bd4ae9bcdbffee3d3746c3","issue":5,"user":"ricochet1k","filename":"error4.txt"},{"path":"attachments\/75324000dec24f5bbdc0f711cdeceadd","issue":5,"user":"ricochet1k","filename":"error3.txt"},{"path":"attachments\/1eefcaf7c38a416fbe6806a1b53d7e6a","issue":5,"user":"ricochet1k","filename":"Error.txt"},{"path":"attachments\/e77feed871bd409cb00ef67322729a19","issue":10,"user":"ibuclaw","filename":"fdeps.patch"},{"path":"attachments\/b22ef153d65444398d13d839a05235a8","issue":9,"user":"venix1","filename":"fix_param_zu.patch"},{"path":"attachments\/310faf6d4bf14859a1efcef8c8bbc831","issue":6,"user":"ibuclaw","filename":"segfault-wrong-type.patch"},{"path":"attachments\/b5e7e964c89a44ad8b8ac772d838fbd9","issue":13,"user":"ibuclaw","filename":"gdc-libphobos-kbsd.patch"},{"path":"attachments\/570aa2e166be4757b90cc48b84492dea","issue":13,"user":"ibuclaw","filename":"gdc-libphobos-kbsd2.patch"},{"path":"attachments\/bcc2730693744b1a91287fdbd51744b1","issue":8,"user":"venix1","filename":"version_windows.patch"},{"path":"attachments\/395ca29fead04753a45264cc9c3c78e6","issue":2,"user":"ibuclaw","filename":"revision.diff"},{"path":"attachments\/f44c68072c1540038f0da037f826c2d1","issue":19,"user":"ibuclaw","filename":"gdc.diff"},{"path":"attachments\/53af34adbe104cf7a1700680cfc667cd","issue":55,"user":"ibuclaw","filename":"integerconstant.patch"},{"path":"attachments\/9d6dd0b78f5a47d2a83f8c9451a8d8c2","issue":17,"user":"ibuclaw","filename":"fix1.patch"},{"path":"attachments\/024af59a9957473fa01932cee87ba816","issue":17,"user":"ibuclaw","filename":"fix2.patch"},{"path":"attachments\/f2d6135d057347ed803eb198fd8c3b5e","issue":35,"user":"ibuclaw","filename":"struct-abi.patch"},{"path":"attachments\/eb8d2f9351f741d9ac4e21c93085eaee","issue":47,"user":"venix1","filename":"stdcall.patch"},{"path":"attachments\/962985d992524c12b3cd33ed9e06b05a","issue":47,"user":"venix1","filename":"ibuclaw_stdcall.patch"},{"path":"attachments\/4b4f3418140c486a9336232c0501ce7a","issue":47,"user":"venix1","filename":"dummy.d"},{"path":"attachments\/c359b36b60544e9b8feb5649a0e2b7b7","issue":30,"user":"ibuclaw","filename":"inline-asm.patch"},{"path":"attachments\/8fca01f9188f405186debbc30830a1ef","issue":27,"user":"ibuclaw","filename":"gdc.patch"},{"path":"attachments\/f2f266f5294c4483900b20c8d5716960","issue":27,"user":"ibuclaw","filename":"phobos.patch"},{"path":"attachments\/aa7017dc35964c7ab47bd348d86d5e73","issue":27,"user":"ibuclaw","filename":"phobos-testing.patch"},{"path":"attachments\/9ac53b5a6d764edf9a1df1bbe99dbb4e","issue":254,"user":"trass3r","filename":"files.7z"},{"path":"attachments\/8070a71579ed4e65baee7745c4a2eaa4","issue":57,"user":"venix1","filename":"c_variadic_function.patch"},{"path":"attachments\/abadd799761d485ea5e0900387266f31","issue":22,"user":"venix1","filename":"inline_asm_segment_register_fix.patch"},{"path":"attachments\/50d416261451425e8d4d3e96da83e6a5","issue":66,"user":"venix1","filename":"arraybounds.patch"},{"path":"attachments\/a6cbdab0b9264cb69ea76199b44f4b40","issue":40,"user":"ibuclaw","filename":"dmd2020fe.patch"},{"path":"attachments\/43a1f410a7bf4b05b79f0caadcc7d451","issue":40,"user":"ibuclaw","filename":"dmd2020fe.2.patch"},{"path":"attachments\/9dbf6d0549a749bd986193492336a4da","issue":33,"user":"ibuclaw","filename":"array_init.tar.gz"},{"path":"attachments\/53d6d892eed44370941e7885bbe4145d","issue":24,"user":"venix1","filename":"dmd1047_rev88.patch"},{"path":"attachments\/e59b1f9534d74d9b9586ee28f6b3cd81","issue":24,"user":"venix1","filename":"dmd1047_rev89.patch"},{"path":"attachments\/7f1ca9fe9bfa48e785b38ceb902ac112","issue":24,"user":"venix1","filename":"dmd1047_rev90.patch"},{"path":"attachments\/5e0e45d9cd4348bd99f118ec19be9f5e","issue":24,"user":"venix1","filename":"dmd1047_rev91.patch"},{"path":"attachments\/0a5fb9eece714946941036d982e231e0","issue":24,"user":"ibuclaw","filename":"dmd1047_rev92~ibuclaw.patch"},{"path":"attachments\/cf69df97e00c45ec9d14d33a30be8c98","issue":24,"user":"venix1","filename":"bug_foreach_ref.patch"},{"path":"attachments\/042c9d6d723440578d8220e295178f11","issue":24,"user":"ibuclaw","filename":"bug_foreach_ref~ibuclaw.patch"},{"path":"attachments\/6150abfbb05448dead4ca7ce1b770b2d","issue":24,"user":"ibuclaw","filename":"dmd1047_rev93~ibuclaw.patch"},{"path":"attachments\/43250109c85d46e1868139841505aa1f","issue":24,"user":"ibuclaw","filename":"bug_foreach_ref-rev2.patch"},{"path":"attachments\/373a00b3233f4c6698da96ecfc3e1809","issue":25,"user":"ibuclaw","filename":"issue25.patch"},{"path":"attachments\/bfe379fe85d9444ab79476b830918135","issue":50,"user":"venix1","filename":"sjlj_exception_fix.patch"},{"path":"attachments\/2975fa87c65140c19a0210fcce074af3","issue":50,"user":"ibuclaw","filename":"deh.patch"},{"path":"attachments\/63e0f3d62f1940c6a4b0f03dd41fc735","issue":50,"user":"venix1","filename":"sjlj_fix_for_ert_catch.patch"},{"path":"attachments\/66d57cde8d1f4df9b6325ca426f3dd52","issue":50,"user":"venix1","filename":"zero_ip.patch"},{"path":"attachments\/a8f9b1d84eaa4980b40e00aaa39d643a","issue":50,"user":"ibuclaw","filename":"gdc-arm-unwind_ptr.dpatch"},{"path":"attachments\/1119ffa8d97f47f2afa98e300d25ac3b","issue":43,"user":"ibuclaw","filename":"tokushr-fix.patch"},{"path":"attachments\/608291f6aec143049347265cc621c873","issue":43,"user":"ibuclaw","filename":"tokushr.patch"},{"path":"attachments\/508919b238a8470080cbad194d273f81","issue":51,"user":"ibuclaw","filename":"terror.patch"},{"path":"attachments\/959dd846a7f3491aa49fa1d85da0cd96","issue":29,"user":"michaelp","filename":"files.txt"},{"path":"attachments\/ea8e45fc3bf740699b8a0cba70e6147d","issue":44,"user":"trass3r","filename":"langcc.patch"},{"path":"attachments\/bb5c16f1bd824c7f8eefdb6e04f52c52","issue":54,"user":"michaelp","filename":"phobos62-63.diff"},{"path":"attachments\/a7fce3f9cfa74315931be53a9445fab4","issue":54,"user":"michaelp","filename":"dmd62-63.diff"},{"path":"attachments\/ccfcf4808f464c239751b386fea1b4ad","issue":54,"user":"michaelp","filename":"dmd62-63.clean.diff"},{"path":"attachments\/fb82e16f8a5245ba9ddc693354766532","issue":79,"user":"ibuclaw","filename":"real.patch"},{"path":"attachments\/0d32ea856c0c4ddfa732449c053111c9","issue":56,"user":"ibuclaw","filename":"fwdrefs.patch"},{"path":"attachments\/169a2991587c405a93398fd046e51576","issue":56,"user":"ibuclaw","filename":"issue56.patch"},{"path":"attachments\/d6e9bc2600c940aeadec980b2e961e9d","issue":56,"user":"ibuclaw","filename":"issue56-updates.patch"},{"path":"attachments\/05c40990a853456f856aeaa28fd8cd32","issue":81,"user":"ibuclaw","filename":"d2enum.patch"},{"path":"attachments\/4f9c7501c38c478f8f10d24b4f15140e","issue":62,"user":"vgivanovic","filename":"check.log"},{"path":"attachments\/cb2de66b324c49358b51f3264bdb73a4","issue":62,"user":"vgivanovic","filename":"make.log"},{"path":"attachments\/83eb09d87af1431dba67522a11a41e10","issue":65,"user":"ibuclaw","filename":"zlib.patch"},{"path":"attachments\/08d5b6b5f61041059c9841e72be67e16","issue":69,"user":"ibuclaw","filename":"typedef_arraycat.patch"},{"path":"attachments\/7b0dfb705f5b4f5896d1f74ce010d1bc","issue":106,"user":"itecgo","filename":"Makefile"},{"path":"attachments\/91b001ff588e49ba8f57ca7e9e3274fb","issue":106,"user":"itecgo","filename":"main.d"},{"path":"attachments\/78d2468c910e4dd9986159c0c0622f7d","issue":67,"user":"ibuclaw","filename":"structthisref.patch"},{"path":"attachments\/f1af8ad624104bc9bb45a136acde0135","issue":71,"user":"opticron","filename":"multilib.diff"},{"path":"attachments\/2deadf40fae64905878bb2e3b8fd8405","issue":74,"user":"ibuclaw","filename":"phobos2029.patch"},{"path":"attachments\/19a2e719db544d8485dd6e55006107fd","issue":77,"user":"ibuclaw","filename":"d2032-64bit.patch"},{"path":"attachments\/fb5a5e166f3f452dbf4ff5e9428e702b","issue":108,"user":"eldar","filename":"crash.tar.gz"},{"path":"attachments\/cc43b02a9da34457aaada268c63d4660","issue":108,"user":"ibuclaw","filename":"issue108.patch"},{"path":"attachments\/a8c6113db8bb4ed4b4abf436f6ea354a","issue":82,"user":"ibuclaw","filename":"issue82.patch"},{"path":"attachments\/700d286e7ec34b76a70e84f7f3b42d66","issue":112,"user":"Ingrater","filename":"tracehandler.d"},{"path":"attachments\/1e8c0020bc204f909c90bc10f3c73cbf","issue":112,"user":"Ingrater","filename":"TraceHandler.patch"},{"path":"attachments\/c44e460f497343ba9047cfb007b49e55","issue":112,"user":"ibuclaw","filename":"issue112.patch"},{"path":"attachments\/22c42ded0b434a61afe90d281cc6ee33","issue":150,"user":"akb825","filename":"test.d"},{"path":"attachments\/fd3aca7595414cb19fa7f2b7f61bbb88","issue":196,"user":"venix1","filename":"issue196.patch"},{"path":"attachments\/cd707486fa644b5eb7ce9a7c10bcac40","issue":158,"user":"heromyth","filename":"d-lang.cc.patch"},{"path":"attachments\/ce0c1fc092214c9eb5c655304af46c0f","issue":158,"user":"venix1","filename":"relocatable.patch"},{"path":"attachments\/57f5854551ea42669ff5633c4abcc80e","issue":158,"user":"venix1","filename":"New_d-lang.cc.patch"},{"path":"attachments\/86234396d39f4f8988abfc38e2b87c36","issue":49,"user":"venix1","filename":"tango_gdc.patch"},{"path":"attachments\/b074b81e09e44fc58f5762ea6722fe51","issue":49,"user":"heromyth","filename":"error.txt"},{"path":"attachments\/a13c66a5ee1346c6a9c0e4c6dc9a73fe","issue":49,"user":"ibuclaw","filename":"03_gdc_mingw.diff"},{"path":"attachments\/183d9a62a1f6498387d70418f7a60a98","issue":49,"user":"venix1","filename":"dirty_stdio.patch"},{"path":"attachments\/7fb2e82f36c34221b70b8b398ba177fd","issue":173,"user":"venix1","filename":"mingw_stdioV0.patch"},{"path":"attachments\/c5747f681f334561b23a4fc7400d6348","issue":1,"user":"ibuclaw","filename":"valist.patch"},{"path":"attachments\/e18744e3757d45a3b2d8a8fcf1f1c505","issue":175,"user":"venix1","filename":"registers.error"},{"path":"attachments\/166ba26ccb774f56a3d0da6b83ef2eb5","issue":188,"user":"ibuclaw","filename":"issue188.patch"},{"path":"attachments\/cae28da7e48841eeaa86c27f51416c08","issue":187,"user":"venix1","filename":"issue187.patch"},{"path":"attachments\/559e6a548432459bbaa89ba5a2244bac","issue":187,"user":"venix1","filename":"issue187.patch"},{"path":"attachments\/e54bb13c9f0d43599b187e9d60f20662","issue":187,"user":"venix1","filename":"issue187.patch"},{"path":"attachments\/efd875f3770443df86ad4378532ca93f","issue":193,"user":"debio","filename":"bitmanip.patch"},{"path":"attachments\/6039224ab1d44f55a81eb77976cfe5af","issue":193,"user":"debio","filename":"file.patch"},{"path":"attachments\/7697d17c1b7f4982b88a1ed29dcd83ec","issue":193,"user":"debio","filename":"pthread.patch"},{"path":"attachments\/36a4dc2a50124aaa88a2158065249733","issue":206,"user":"venix1","filename":"Phobos_D1v0.patch"},{"path":"attachments\/a150662462d041d8ae374b3c046d45b4","issue":206,"user":"venix1","filename":"druntime_v0.patch"},{"path":"attachments\/0c3d16d7a3394adb8aabf91bc66f6186","issue":206,"user":"venix1","filename":"phobos_D2v0.patch"},{"path":"attachments\/b51078538b164779b22be63fe03c2ec2","issue":209,"user":"dan.sanduleac","filename":"gdc-compile-error.txt"},{"path":"attachments\/420c409ee96b446b9e9490bceca21300","issue":209,"user":"dan.sanduleac","filename":"patch.txt"},{"path":"attachments\/dd982ffc65144d8eacaef8cabbd76a2e","issue":78,"user":"ibuclaw","filename":"issue78.patch"},{"path":"attachments\/fe89e79ff0fc4916a94efa88ce0b83a8","issue":159,"user":"venix1","filename":"cc1d.c"},{"path":"attachments\/1880121a58c64b7eb6ba08b49b2795bc","issue":159,"user":"venix1","filename":"gdc_d1_d2.patch"},{"path":"attachments\/f4809fb74ab4468aad77181622ab5751","issue":159,"user":"venix1","filename":"package-release.sh"},{"path":"attachments\/6e3b6a70e2234849a61f78bb57ad809c","issue":217,"user":"venix1","filename":"issue217.patch"},{"path":"attachments\/1b2c5b3230ab4c07af86c95188d459d3","issue":145,"user":"tbone","filename":"object.d"},{"path":"attachments\/8dd925b1369e4461ba2cc0ceed808403","issue":261,"user":"trass3r","filename":"files.tar.bz2"},{"path":"attachments\/8ff72cb487c14435bd60cf52e0b476b9","issue":214,"user":"ibuclaw","filename":"issue214.patch"},{"path":"attachments\/bddbf448020041a8af80db86e06b31cc","issue":262,"user":"trass3r","filename":"files.tar.bz2"},{"path":"attachments\/85a56544542141b481a1da30ad78eb92","issue":170,"user":"venix1","filename":"changes.diff"},{"path":"attachments\/7f61c6b7b4534d87a77ee3df1adde7b0","issue":249,"user":"ibuclaw","filename":"issue249.patch"},{"path":"attachments\/472d9ef384f64823aa798856b948a6bc","issue":311,"user":"venix1","filename":"issue311_0.patch"},{"path":"attachments\/b8c3a43905684dfebea11374407c34f2","issue":265,"user":"rbouqueau","filename":"build.log"},{"path":"attachments\/8efbc8196bba428492fd8b1428c1905c","issue":215,"user":"jpf","filename":"stat.c"},{"path":"attachments\/5d6b08532e71404d8cba5c1f48fc5f74","issue":215,"user":"jpf","filename":"stat.d"},{"path":"attachments\/762c9d7202034b4b8bb9a7a44f520334","issue":215,"user":"debio","filename":"layoutpatch2"},{"path":"attachments\/b508b4ae9f694287bcf3f2794e3e224c","issue":215,"user":"debio","filename":"layoutpatch"},{"path":"attachments\/4dc27d9960274420a4c543e86b975a37","issue":215,"user":"ibuclaw","filename":"issue215.patch"},{"path":"attachments\/513d2b2eb11943e784d802450b5552f0","issue":215,"user":"ibuclaw","filename":"alignment.patch"},{"path":"attachments\/985a191c17b84c1c95f508a538c98659","issue":306,"user":"venix1","filename":"testcontracts.d"},{"path":"attachments\/0ea1f17fc6ef45c1bf5b4e36b158ea8b","issue":156,"user":"Andrej08","filename":"config.log"},{"path":"attachments\/08eb469d340644e78d0d9f271aead7f5","issue":156,"user":"Andrej08","filename":"build.log"},{"path":"attachments\/6ff9966e61854becaa28302b08fbde17","issue":156,"user":"Andrej08","filename":"build.log"},{"path":"attachments\/58041d55317b4a2881cb2d6bdf401128","issue":156,"user":"Andrej08","filename":"config.log"},{"path":"attachments\/d8cc0bb75ddd432bb5aded4ce5299339","issue":326,"user":"Ingrater","filename":"repro.d"},{"path":"attachments\/5f21780dd34e413cb8e87900d47f7d91","issue":329,"user":"TurkeyMan","filename":"win32.zip"},{"path":"attachments\/2a3ac605f52148618f18b2ebec99628d","issue":329,"user":"TurkeyMan","filename":"VS-Build.zip"},{"path":"attachments\/4b391de4a59b4979819ce467042b6563","issue":337,"user":"Varriount","filename":"config.log"},{"path":"attachments\/a0230f80ccae423099ca90059c82bdd8","issue":337,"user":"Varriount","filename":"config.status"},{"path":"attachments\/3b33e91da5ec4ab496c2f2a9ed4067d8","issue":337,"user":"Varriount","filename":"Makefile"},{"path":"attachments\/10ad933eefac442a87ebe564fe8dcf92","issue":339,"user":"Varriount","filename":"config.log"},{"path":"attachments\/c347863205f743f28390cf91295e2861","issue":339,"user":"Varriount","filename":"config.status"},{"path":"attachments\/b33a7050295d44d49dbcdf7a177a3ef0","issue":339,"user":"Varriount","filename":"Makefile"},{"path":"attachments\/4fee3610fb8a44a3b3ffe606239a0230","issue":343,"user":"Calrama","filename":"config.log"},{"path":"attachments\/6103d431044442519d9e3201b955557a","issue":343,"user":"Calrama","filename":"build.log"},{"path":"attachments\/4e500e2f7cca485f9b1936eab399176e","issue":345,"user":"Calrama","filename":"gdc-gcc-4.8.0.patch"},{"path":"attachments\/cc707382fbff4f668f8600752bf973e4","issue":344,"user":"Calrama","filename":"config.log"},{"path":"attachments\/d03d7f4444514889af2b71ebd22f455b","issue":344,"user":"Calrama","filename":"build.log"},{"path":"attachments\/b0dc82a0b9ad4f51b0c677e43f87a056","issue":344,"user":"Calrama","filename":"config.log"},{"path":"attachments\/4aa82388d6724648918da3e31dbafecb","issue":344,"user":"Calrama","filename":"build.log"},{"path":"attachments\/472f9abdac2747d9b33343b5e82e3c49","issue":160,"user":"venix1","filename":"dirty_stdio.patch"},{"path":"attachments\/ae1f511b78284db6b363c83eed862abf","issue":160,"user":"venix1","filename":"mingw_stdioV2.patch"},{"path":"attachments\/f87f65ef9aa64762adb523e4aee46c69","issue":160,"user":"venix1","filename":"mingw_stdioV0.patch"},{"path":"attachments\/706cbd0f1673449393985838522f5bc0","issue":160,"user":"venix1","filename":"mingw_stdioV1.patch"},{"path":"attachments\/a9163bf2c8ea4927894dc0282ee88452","issue":354,"user":"Calrama","filename":"undref.zip"},{"path":"attachments\/50f47cc199534fb0a9b763cd20a2f879","issue":354,"user":"Calrama","filename":"Makefile"},{"path":"attachments\/d5c6c7f8b31741fcad8b77e8730e2d59","issue":354,"user":"Calrama","filename":"log.txt"},{"path":"attachments\/81b0a5c3f3934e229c7d2c67127d06c7","issue":354,"user":"Calrama","filename":"undref.zip"},{"path":"attachments\/5549f6c60b5a4dd0985158515e07609e","issue":333,"user":"WebDrake","filename":"inout.d"},{"path":"attachments\/6a81c47f602e4665a8fdd7bda60ed9ca","issue":284,"user":"Calrama","filename":"config.log"},{"path":"attachments\/87c73bfa90c34a1293bfda6cdad3d15c","issue":284,"user":"Calrama","filename":"lto02.log"},{"path":"attachments\/5010a03eb79546d597e054259b65c3aa","issue":284,"user":"Calrama","filename":"lto02_flto.log"},{"path":"attachments\/80b05c9dd06c450eab243b353f34116f","issue":284,"user":"Calrama","filename":"lto04.d"},{"path":"attachments\/cb72d80d4f66498c9b1e89a0a894f9b1","issue":284,"user":"Calrama","filename":"lto04.log"},{"path":"attachments\/6fdc4d8cbcb54a06a3da890d276bd274","issue":284,"user":"Calrama","filename":"undref.zip"},{"path":"attachments\/b72b6c0942b3447db270a4ac553b4ea9","issue":284,"user":"Calrama","filename":"lto02.d"},{"path":"attachments\/a39bd1fc3b864bb89954a3854b6e252c","issue":284,"user":"Calrama","filename":"lto02.log"},{"path":"attachments\/0455168c53bc468687794b215ff6ce16","issue":353,"user":"Calrama","filename":"gcc-4.8.x.patch"},{"path":"attachments\/57b1ee39cf704bc4bcd5344f9cc69b23","issue":246,"user":"debio","filename":"output"},{"path":"attachments\/4eeb05f741f645bcbb9052a4c69c60a4","issue":246,"user":"debio","filename":"mod1.d"},{"path":"attachments\/dc307fe81a504be4b55126bb55121b16","issue":246,"user":"debio","filename":"mod2.d"},{"path":"attachments\/356e516c3309473e9b10e78cf158d83c","issue":315,"user":"jpf","filename":"algorithm.d"},{"path":"attachments\/a92fe1e4cdf1442e9648de9a93d8f427","issue":146,"user":"tbone","filename":"object.d"},{"path":"attachments\/86ae7bc9717444a88cd6678d2383a07e","issue":146,"user":"tbone","filename":"stubs.d"},{"path":"attachments\/2b11abd37dac478ba792a75093394c68","issue":213,"user":"venix1","filename":"asm.patch"},{"path":"attachments\/82ba42e5f43c4957819d6469eff9135b","issue":213,"user":"venix1","filename":"issue213.patch"},{"path":"attachments\/acd1cffdf7f44a65b23428d07b167672","issue":213,"user":"ibuclaw","filename":"issue213_gcc46.patch"},{"path":"attachments\/a055fdf5c1594850858096d879783e60","issue":213,"user":"venix1","filename":"issue213V0.patch"},{"path":"attachments\/96e3c7510ec8498ba59d8990bce58487","issue":213,"user":"venix1","filename":"issue213V1.patch"},{"path":"attachments\/2aabf6025fb24787b273c8b3c733ab32","issue":358,"user":"Calrama","filename":"build.log"},{"path":"attachments\/312d7435fad04db79f0da0d5bf96278e","issue":228,"user":null,"filename":"main.d"},{"path":"attachments\/cd7eb631fb6e49f9811c8272add6b29b","issue":228,"user":null,"filename":"cmain.c"},{"path":"attachments\/c50b020008cb4cf3bacbbec8a0a8c365","issue":228,"user":null,"filename":"makefile"}],"versions":[],"comments":[{"content":"External Bug. (#103)","created_on":"2014-03-31T15:17:01.210467+00:00","user":"ibuclaw","updated_on":null,"issue":208,"id":9408158},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=103\n\nPlease continue discussion there.","created_on":"2014-02-01T11:29:57.821695+00:00","user":"JinShil","updated_on":null,"issue":208,"id":8035430},{"content":"It looks like adding -combine makes this work. Should this bug just close then? Seems like it would be useful if the driver could provide a warning if it's called with -fdeps and multiple sourcefiles without -combine, as this combination is basically useless.","created_on":"2011-05-25T18:56:34.252474+00:00","user":"debio","updated_on":null,"issue":208,"id":494747},{"content":"External Bug. (#102)","created_on":"2014-03-31T15:16:46.683136+00:00","user":"ibuclaw","updated_on":null,"issue":210,"id":9408149},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=102\n\nPlease continue discussion there.","created_on":"2014-02-01T11:27:59.620497+00:00","user":"JinShil","updated_on":null,"issue":210,"id":8035416},{"content":null,"created_on":"2011-05-31T21:03:37.755001+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":502358},{"content":null,"created_on":"2011-05-31T21:04:19.213037+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":502360},{"content":null,"created_on":"2011-06-02T01:46:39.817004+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":503978},{"content":null,"created_on":"2011-06-02T01:44:54.824592+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":503976},{"content":null,"created_on":"2011-06-02T01:45:30.770011+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":503977},{"content":null,"created_on":"2011-06-02T01:49:10.090307+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":503982},{"content":null,"created_on":"2011-06-02T01:50:34.820800+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":503984},{"content":null,"created_on":"2011-06-02T14:34:21.713725+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":504558},{"content":null,"created_on":"2011-06-02T14:36:08.944076+00:00","user":"dan.sanduleac","updated_on":null,"issue":210,"id":504563},{"content":"Fixed upstream.","created_on":"2014-03-31T15:15:02.858307+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":9408109},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=99\n\nPlease continue discussion there.","created_on":"2014-02-01T11:03:04.844587+00:00","user":"JinShil","updated_on":null,"issue":120,"id":8035233},{"content":null,"created_on":"2010-12-04T10:44:12.334019+00:00","user":"jpf","updated_on":null,"issue":120,"id":306833},{"content":"Can you backtrace with argument name\/values?\n\nI think this is what I was referring to in the NG thread. What you should see is a parameter with a corrupt\/large value.\n\nAlso, shot in the dark, but what are your configure flags? Have you tried building with flags that closely match your ARM board spec?\n\nie:\n{{{\n--with-arch=armv7-a --with-float=softfp --with-fpu=vfpv3-d16 --with-mode=thumb\n}}}\n\nValid arch flags:\narmv[23456] | armv2a | armv3m | armv4t | armv5t | armv5te | armv6j | armv6k | armv6z | armv6zk | armv6-m | armv7 | armv7-a | armv7-r | armv7-m | iwmmxt | ep9312\n\nValid float flags:\nsoft | hard | softfp\n\nValid fpu flags:\nfpa | fpe2 | fpe3 | maverick | vfp | vfp3 | vfpv3 | vfpv3-d16 | neon\n\nValid mode flags:\narm | thumb\n\nIf in doubt, probably just use the same flags as what your system gcc was built with.\n\nRegards\n","created_on":"2010-12-05T00:30:04.693547+00:00","user":"ibuclaw","updated_on":"2010-12-05T00:43:59.590227+00:00","issue":120,"id":307231},{"content":"Is \"bt full\" with gdb enough? Some values are optimized out, but as the problem doesn't show with the unoptimized version:\n\n==== Full Backtrace, optimized version ====\n{{{\n0  _D2gc3gcx3Gcx9allocPageMFhZi (this=<value optimized out>, \n    bin=<value optimized out>)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:2179\n        pn = <value optimized out>\n        pool = <value optimized out>\n        b = 0x66094\n        size = 0\n        ptop = 0x40235000 \"\"\n        p = 0x40234000 \"\"\n        n = <value optimized out>\n1  0x0004444c in _D2gc3gcx2GC12mallocNoSyncMFkkPkZPv (this=..., size=88, \n    bits=1, alloc_size=<value optimized out>)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:459\n        collected = false\n        state = 2\n        bin = 3 '\\003'\n        p = <value optimized out>\n2  0x000451d4 in _D2gc3gcx2GC6mallocMFkkPkZPv (this=..., size=88, bits=1, \n    alloc_size=0x0) at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:418\n        __sync7 = @0x64c0c\n3  0x00041d58 in gc_malloc (sz=269656, ba=0)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:188\nNo locals.\n4  0x0003c1f8 in _d_newclass (ci=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:125\n        p = <value optimized out>\n5  0x00040c4c in thread_attachThis ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1813\n        thisContext = 0xbee79628\n        thisThread = <value optimized out>\n6  0x00040da0 in thread_init ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1792\n        sigusr2 = {sa_handler = 0x3fde4 <thread_resumeHandler>, \n          sa_sigaction = 0x3fde4 <thread_resumeHandler>, sa_mask = {__val = {\n              2147483647, 4294967294, 4294967295 <repeats 30 times>}}, \n          sa_flags = 0, sa_restorer = 0}\n        sigusr1 = {sa_handler = 0x40b94 <thread_suspendHandler>, \n          sa_sigaction = 0x40b94 <thread_suspendHandler>, sa_mask = {__val = {\n              2147483647, 4294967294, 4294967295 <repeats 30 times>}}, \n          sa_flags = 268435456, sa_restorer = 0}\n7  0x000423ac in gc_init () at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:115\n        p = 0x66018\n8  0x00045f50 in runAll ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:498\nNo locals.\n9  0x00045cec in tryExec (dg=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:438\nNo locals.\n10 0x00045e84 in main (argc=<value optimized out>, argv=0xbee79944)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:515\n        args = {length = 1, ptr = 0x66008}\n        result = 0\n        trapExceptions = true\n}}}\n\nInteresting stuff, you are right, in 3 size and ba are wrong, but they are correct in 2.\n\n==== Partial backtrace, optimized version, with breakpoints ====\n{{{\nBreakpoint 1, gc_malloc (sz=88, ba=1)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:188\n188\t..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d: No such file or directory.\n\tin ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d\nCurrent language:  auto\nThe current source language is \"auto; currently minimal\".\n(gdb) cont\nContinuing.\n\nBreakpoint 2, _D2gc3gcx2GC6mallocMFkkPkZPv (this=..., size=88, bits=1, \n    alloc_size=0x0) at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:406\n406\t..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d: No such file or directory.\n\tin ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d\n(gdb) bt\n0  _D2gc3gcx2GC6mallocMFkkPkZPv (this=..., size=88, bits=1, alloc_size=0x0)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:406\n1  0x00041d58 in gc_malloc (sz=269656, ba=1)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:188\n2  0x0003c1f8 in _d_newclass (ci=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:125\n3  0x00040c4c in thread_attachThis ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1813\n4  0x00040da0 in thread_init ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1792\n5  0x000423ac in gc_init () at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:115\n6  0x00045f50 in runAll ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:498\n7  0x00045cec in tryExec (dg=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:438\n8  0x00045e84 in main (argc=<value optimized out>, argv=0xbe829944)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:515\n}}}\nThe value is actually correct in the gc_malloc function and it's passed on correctly, but it's corrupted in the backtrace. Strange.\nDoesn't happen for the unoptimized version. Also in the optimized version printf output is corrupted, maybe this all somehow belongs together.\n\n==== Full backtrace with -O0 ====\n{{{\n0  _D2gc3gcx3Gcx9allocPageMFhZi (this=..., bin=3 '\\003')\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:2179\n        pn = 0\n        pool = 0x6a0f0\n        b = 0x6a094\n        size = 128\n        ptop = 0x40235000 \"\"\n        p = 0x40234000 \"\"\n        n = 0\n1  0x00043414 in _D2gc3gcx2GC12mallocNoSyncMFkkPkZPv (this=..., size=88, \n    bits=1, alloc_size=0x0) at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:459\n        collected = false\n        state = 2\n        bin = 3 '\\003'\n        p = 0x0\n2  0x00043298 in _D2gc3gcx2GC6mallocMFkkPkZPv (this=..., size=88, bits=1, \n    alloc_size=0x0) at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcx.d:418\n        __sync7 = @0x68c00\n3  0x00042014 in gc_malloc (sz=88, ba=1)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:188\nNo locals.\n4  0x0003c1f8 in _d_newclass (ci=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:125\n        p = <value optimized out>\n5  0x00040c4c in thread_attachThis ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1813\n        thisContext = 0xbee3c618\n        thisThread = <value optimized out>\n6  0x00040da0 in thread_init ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/thread.d:1792\n        sigusr2 = {sa_handler = 0x3fde4 <thread_resumeHandler>, \n          sa_sigaction = 0x3fde4 <thread_resumeHandler>, sa_mask = {__val = {\n              2147483647, 4294967294, 4294967295 <repeats 30 times>}}, \n          sa_flags = 0, sa_restorer = 0}\n        sigusr1 = {sa_handler = 0x40b94 <thread_suspendHandler>, \n          sa_sigaction = 0x40b94 <thread_suspendHandler>, sa_mask = {__val = {\n              2147483647, 4294967294, 4294967295 <repeats 30 times>}}, \n          sa_flags = 268435456, sa_restorer = 0}\n7  0x00041c58 in gc_init () at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gc.d:115\n        ci = @0x68c50\n        p = 0x6a018\n8  0x0004991c in runAll ()\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:498\nNo locals.\n9  0x000496b8 in tryExec (dg=...)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:438\nNo locals.\n10 0x00049850 in main (argc=<value optimized out>, argv=0xbee3c944)\n    at ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/dmain2.d:515\n        args = {length = 1, ptr = 0x6a008}\n        result = 0\n        trapExceptions = true\n}}}\n==== Configure flags, native GCC ====\n{{{\nConfigured with: ..\/src\/configure -v --with-pkgversion='Debian 4.4.5-6' --with-bugurl=file:\/\/\/usr\/share\/doc\/gcc-4.4\/README.Bugs\n--enable-languages=c,c++,fortran,objc,obj-c++ --prefix=\/usr --program-suffix=-4.4 --enable-shared --enable-multiarch --enable-linker-build-id --with-system-zlib\n--libexecdir=\/usr\/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=\/usr\/include\/c++\/4.4 --libdir=\/usr\/lib --enable-nls\n--enable-clocale=gnu --enable-libstdcxx-debug --enable-objc-gc --disable-sjlj-exceptions --enable-checking=release --build=arm-linux-gnueabi\n--host=arm-linux-gnueabi --target=arm-linux-gnueabi\n}}}\n==== Configure flags, cross GDC ====\n{{{\nConfigured with: ..\/gcc-4.4.5-build\/configure --prefix=\/usr --target=arm-linux-gnueabi --host=i686-pc-linux-gnu --build=i686-pc-linux-gnu --enable-languages=d\n--enable-threads --disable-nls --enable-shared --enable-multiarch --disable-multilib --with-as=\/usr\/bin\/arm-linux-gnueabi-as --with-ld=\/usr\/bin\/arm-linux-gnueabi-ld\n--with-sysroot=\/usr\/i686-pc-linux-gnu\/arm-linux-gnueabi\n}}}\n\nThe board uses a Feroceon 88FR131 rev 1, google says that's armv5te, thumb mode supported, no hardware floating point, so I should use\n{{{\n--with-arch=armv5te --with-float=softfp --with-mode=thumb\n}}}\n? I will try that later today.","created_on":"2010-12-05T09:32:55.426297+00:00","user":"jpf","updated_on":"2010-12-05T09:35:09.156485+00:00","issue":120,"id":307342},{"content":"Hmm, maybe it's all insignificant, but I can't recall why I knew that was there now. Possibly at the time (I was kindly given an ssh account to login to for testing) I may have seen that the call for: gc_malloc (sz=269656, ba=0) somehow messed things up later on. I honestly can't remember am afraid. :)\r\n\r\nIt's certainly worth a try using using that. As it may have an affect on the ASM generated by GCC.\r\n\r\nThough I can see that at the very least, when I get my C̶h̶r̶i̶s̶t̶m̶a̶s̶ ̶p̶r̶e̶s̶e̶n̶t̶ Sheeva plug, will have to build phobos with -O0 and then debug\/slim-down a standalone version of  gcx.d","created_on":"2010-12-05T10:52:08.399092+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":307395},{"content":"Ok, I tried to build with those flags, but I hit this error.\r\n{{{\r\n\/var\/abs\/local\/cross-arm-linux-gnueabi\/cross-arm-none-linux-gnueabi-gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/var\/abs\/local\/cross-arm-linux-gnueabi\/cross-arm-none-linux-gnueabi-gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/arm-linux-gnueabi\/bin\/ -B\/usr\/arm-linux-gnueabi\/lib\/ -isystem \/usr\/arm-linux-gnueabi\/include -isystem \/usr\/arm-linux-gnueabi\/sys-include -o std\/math.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/arm-linux-gnueabi  -femit-templates -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/math.d\r\n{standard input}: Assembler messages:\r\n{standard input}:383: Error: selected processor does not support `mrc p10,7,r0,cr1,cr0,0'\r\n{standard input}:470: Error: selected processor does not support `mcr p10,7,r0,cr1,cr0,0'\r\n}}}\r\n\r\nInteresting, I didn't know gcc can detect this. Seems like software floating point needs some special handling there. I just commented out the asm blocks and the compiler built fine. However, the GC problem still remains. Well I'll just compile without optimization until you get your sheevaplug and this can hopefully be fixed.","created_on":"2010-12-05T16:43:37.687668+00:00","user":"jpf","updated_on":null,"issue":120,"id":307616},{"content":"Update:\r\n\r\nWith newest hg dmd and the patches from issue 193 and gcc 4.5.2 the infinite loop is gone and instead a segmentation fault happens. The location where the segfault occurs according to gdb is just as weird as the gc infinite loop bug. Again this only occurs with -O >= 1, everything's fine with -O0.\r\n\r\nFurther investigation showed that the problem is -fsection-anchors. With -fno-section-anchors even -O3 works fine.\r\nInterestingly -fsection-anchors is enabled by default on ARM, but not on x86. Probably this is not even an ARM specific bug. I'll recompile phobos with -fsection-anchors on x86 to see what happens there.\r\n\r\n(speculation:)\r\nI don't know much about compilers, machine code, etc. but reading gccs description of -fsection-anchors it seems quite possible that this optimization has caused all the trouble. The gc problem was caused by a variable being read as 0 although the static data and everything was correct. If this data was read from a wrong address that could explain the wrong value and it also explains the segfaults I'm seeing with a recent gdc.","created_on":"2011-04-22T09:57:37.593146+00:00","user":"jpf","updated_on":null,"issue":120,"id":451145},{"content":"x86 doesn't support -fsection-anchors, even if explicitly enabled. So it could still be a problem on all architectures which support -fsection-anchors but I've got no hardware to test that.\r\n\r\nIain, would it be possible to \"blacklist\"  -fsection-anchors? Or to add \"-fno-section-anchors\" to the default arguments for gdc so that it would just work on ARM?","created_on":"2011-04-22T11:38:25.560382+00:00","user":"jpf","updated_on":null,"issue":120,"id":451237},{"content":null,"created_on":"2011-04-22T11:39:04.647221+00:00","user":"jpf","updated_on":null,"issue":120,"id":451238},{"content":"From my understanding of ARM assembly, I would guess that they want -fsection-anchors because ARM cannot use full size pointers as immediate values in instructions, which makes statically computed addresses hard to use. That said, I'm not sure how much of a performance hit -fno-section-anchors would cause.","created_on":"2011-04-22T18:16:53.599289+00:00","user":"debio","updated_on":null,"issue":120,"id":451563},{"content":"> Further investigation showed that the problem is -fsection-anchors. With -fno-section-anchors even -O3 works fine. Interestingly -fsection-anchors is enabled by default on ARM, but not on x86. Probably this is not even an ARM specific bug. I'll recompile phobos with -fsection-anchors on x86 to see what happens there.\r\n\r\nRight, turning off flag_section_anchors is the workaround. The next step would be to bastardise the gcx module into a simple program to showcase an example of what gets affected by -fsection-anchors (assuming it's just the one problem that propagates the issue).","created_on":"2011-04-23T13:38:10.804065+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":452301},{"content":"I still wasn't able to reduce gcx.d, but I stepped through the asm code and found the following:\r\nThe exact error changes a lot depending on the compiler flags and gdc version. In this case, findBin returned 0 instead of 3, which caused the memset in mallocNoSync to fail: memset(p + size, 0, binsize[bin] - size) evaluated to binsize[0] - 88 = 16-88 so it passed a negative size to memset.\r\n\r\nThis is the correct address & values for binTable in the findBin function: \r\n{{{\r\n(gdb) info address _D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g\r\nSymbol \"_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g\" is at 0x59110 in a file compiled without debugging.\r\n\r\n(gdb) x\/88db  0x59110\r\n\r\n0x59110 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g>:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59118 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+8>:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59120 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+16>:\t0\t1\t1\t1\t1\t1\t1\t1\r\n0x59128 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+24>:\t1\t1\t1\t1\t1\t1\t1\t1\r\n0x59130 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+32>:\t1\t2\t2\t2\t2\t2\t2\t2\r\n0x59138 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+40>:\t2\t2\t2\t2\t2\t2\t2\t2\r\n0x59140 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+48>:\t2\t2\t2\t2\t2\t2\t2\t2\r\n0x59148 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+56>:\t2\t2\t2\t2\t2\t2\t2\t2\r\n0x59150 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+64>:\t2\t3\t3\t3\t3\t3\t3\t3\r\n0x59158 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+72>:\t3\t3\t3\t3\t3\t3\t3\t3\r\n---Type <return> to continue, or q <return> to quit---\r\n0x59160 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+80>:\t3\t3\t3\t3\t3\t3\t3\t3\r\n}}}\r\n\r\nAnd this is the findBin function:\r\n{{{\r\n(gdb) disas _D2gc3gcx3Gcx7findBinFkZh\r\nDump of assembler code for function _D2gc3gcx3Gcx7findBinFkZh:\r\n   0x0001b904 <+0>:\tcmp\tr0, #2048\t; 0x800; size <= 2048\r\n   \/\/if size <= 2048 load the word at <_D2gc3gcx3Gcx7findBinFkZh+20> into r3\r\n   0x0001b908 <+4>:\tldrls\tr3, [pc, #8]\t; 0x1b918 <_D2gc3gcx3Gcx7findBinFkZh+20>\r\n   \/\/if not, move 8(B_PAGE) into r0(return value register)\r\n   0x0001b90c <+8>:\tmovhi\tr0, #8\r\n   \/\/Load value at address r3+r0 into r0; r0 = binTable[size]\r\n   0x0001b910 <+12>:\tldrbls r0, [r3, r0]\r\n   \/\/return from function\r\n   0x0001b914 <+16>:\tbx\tlr\r\n   \/\/not an instruction, this is the base address of binTable\r\n   0x0001b918 <+20>:\tmuleq\tr5, r0, r0\r\nEnd of assembler dump.\r\n}}}\r\n\r\nLet's have a look at the base address for binTable:\r\n{{{\r\n(gdb) x\/xw 0x0001b918\r\n0x1b918 <_D2gc3gcx3Gcx7findBinFkZh+20>:\t0x00059090\r\n}}}\r\nThe address is 128 bytes off! And this is where the 0 returned by findBin comes from:\r\n{{{\r\n(gdb) x\/88db  0x00059090\r\n0x59090:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59098:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590a0 <_D2gc3gcx10notbinsizeyG12k>:\t-16\t-1\t-1\t-1\t-32\t-1\t-1\t-1\r\n0x590a8 <_D2gc3gcx10notbinsizeyG12k+8>:\t-64\t-1\t-1\t-1\t-128\t-1\t-1\t-1\r\n0x590b0 <_D2gc3gcx10notbinsizeyG12k+16>:\t0\t-1\t-1\t-1\t0-2\t-1\t-1\r\n0x590b8 <_D2gc3gcx10notbinsizeyG12k+24>:\t0\t-4\t-1\t-1\t0-8\t-1\t-1\r\n0x590c0 <_D2gc3gcx10notbinsizeyG12k+32>:\t0\t-16\t-1\t-1\t00\t0\t0\r\n0x590c8 <_D2gc3gcx10notbinsizeyG12k+40>:\t0\t0\t0\t0\t00\t0\t0\r\n0x590d0:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590d8:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590e0:\t0\t0\t0\t0\t0\t0\t0\t0\r\n}}}\r\n\r\nLarger view of the memory at 0x00059090\r\n{{{\r\n(gdb) x\/216db  0x00059090\r\n0x59090:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59098:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590a0 <_D2gc3gcx10notbinsizeyG12k>:\t-16\t-1\t-1\t-1\t-32\t-1\t-1\t-1\r\n0x590a8 <_D2gc3gcx10notbinsizeyG12k+8>:\t-64\t-1\t-1\t-1\t-128\t-1\t-1\t-1\r\n0x590b0 <_D2gc3gcx10notbinsizeyG12k+16>:\t0\t-1\t-1\t-1\t0 -2\t-1\t-1\r\n0x590b8 <_D2gc3gcx10notbinsizeyG12k+24>:\t0\t-4\t-1\t-1\t0 -8\t-1\t-1\r\n0x590c0 <_D2gc3gcx10notbinsizeyG12k+32>:\t0\t-16\t-1\t-1\t0 0\t0\t0\r\n0x590c8 <_D2gc3gcx10notbinsizeyG12k+40>:\t0\t0\t0\t0\t0 0\t0\t0\r\n0x590d0:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590d8:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590e0:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590e8:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590f0:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x590f8:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59100:\t0\t0\t0\t0\t0\t0\t0\t0\r\n---Type <return> to continue, or q <return> to quit---\r\n0x59108:\t0\t0\t0\t0\t0\t0\t0\t0\r\n0x59110 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g>:\t0\t0\t0\t0 0\t0\t0\t0\r\n0x59118 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+8>:\t0\t0\t0\t0 0\t0\t0\t0\r\n0x59120 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+16>:\t0\t1\t1\t1 1\t1\t1\t1\r\n0x59128 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+24>:\t1\t1\t1\t1 1\t1\t1\t1\r\n0x59130 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+32>:\t1\t2\t2\t2 2\t2\t2\t2\r\n0x59138 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+40>:\t2\t2\t2\t2 2\t2\t2\t2\r\n0x59140 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+48>:\t2\t2\t2\t2 2\t2\t2\t2\r\n0x59148 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+56>:\t2\t2\t2\t2 2\t2\t2\t2\r\n0x59150 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+64>:\t2\t3\t3\t3 3\t3\t3\t3\r\n0x59158 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+72>:\t3\t3\t3\t3 3\t3\t3\t3\r\n---Type <return> to continue, or q <return> to quit---\r\n0x59160 <_D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g+80>:\t3\t3\t3\t3 3\t3\t3\t3\r\n}}}\r\n\r\nLet's also have a look how relocation affects this whole thing:\r\n{{{\r\nobjdump -x GDC\/gdc\/dev\/gcc-4.6.1\/objdir\/armv7l-unknown-linux-gnueabi\/libphobos\/gc\/gcx.o\r\nSYMBOL TABLE:\r\n000000e0 g     O .rodata\t00000801 _D2gc3gcx3Gcx7findBinFkZh8binTablexG2049g\r\n\r\nRELOCATION RECORDS FOR [.text]:\r\n00000c08 R_ARM_ABS32       .rodata\r\n}}}\r\n\r\nand in gcx.o:\r\n{{{\r\nDump of assembler code for function _D2gc3gcx3Gcx7findBinFkZh:\r\n   0x00000bf4 <+0>:\tcmp\tr0, #2048\t; 0x800\r\n   0x00000bf8 <+4>:\tldrls\tr3, [pc, #8]\t; 0xc08 <_D2gc3gcx3Gcx7findBinFkZh+20>\r\n   0x00000bfc <+8>:\tmovhi\tr0, #8\r\n   0x00000c00 <+12>:\tldrbls\tr0, [r3, r0]\r\n   0x00000c04 <+16>:\tbx\tlr\r\n   0x00000c08 <+20>:\tandeq\tr0, r0, r0, rrx\r\nEnd of assembler dump.\r\n(gdb) x\/x 0x00000c08\r\n0xc08 <_D2gc3gcx3Gcx7findBinFkZh+20>:\t0x00000060\r\n}}}\r\n\r\nbinTable is at offset 0x000000e0 --> 224\r\nThe address in the literal pool is 0x00000060 --> 96\r\nSo relocation doesn't change anything, the address is already off by 128 before relocation.\r\n\r\n@Iain do you have a clue what could cause the wrong address? If not, I'll try to write a script for dustmite and let dustmite reduce that thing.\r\n\r\n\r\n","created_on":"2011-09-27T10:52:49.271015+00:00","user":"jpf","updated_on":null,"issue":120,"id":672938},{"content":"OK, I think I tracked this thing down, but I'd be very grateful if someone else could write the gdc patch ;-)\r\n\r\nThis is the problematic declaration in gcx.d:\r\n{{{\r\nimmutable uint binsize[B_MAX] = [ 16,32,64,128,256,512,1024,2048,4096 ];\r\n}}}\r\n\r\nWhat's special about this declaration? It's incomplete: B_MAX is 12, but the array literal only has 9 values. AFAICS gdc currently only passes a constructor with the 9 values to the backend and assumes that gcc adds the additional zeros. Long story short: it doesn't (correctly) and the zero padding should be added in the frontend.\r\n\r\nBut what exactly happens in the backend?\r\nThis code is from varasm.c function \"output_constructor_regular_field\":\r\n{{{\r\n    fieldpos = (tree_low_cst (TYPE_SIZE_UNIT (TREE_TYPE (local->val)), 1)\r\n\t\t* ((tree_low_cst (local->index, 0)\r\n\t\t    - tree_low_cst (local->min_index, 0))));\r\n}}}\r\nit calculates field positions for array members. tree_low_cst (TYPE_SIZE_UNIT (TREE_TYPE (local->val)), 1) is the size of the elements,  ((tree_low_cst (local->index, 0) is the index in the array.\r\nThis works fine for the first 9 entries in our example. But, for some reason, the backend(or maybe the frontend, I'm not sure where the padding is added) added the 12 bytes final padding as one tree\/element. This means, tree_low_cst (TYPE_SIZE_UNIT (TREE_TYPE (local->val)), 1) is 12 in this case and the calculation calculates 12*9=108 instead of 4*9=36. GCC detects that there's a gap between the last and the current offset and fills it with 72 zeros.\r\n\r\nAFAICS this should affect all architectures. What makes it catastrophic on ARM are section anchors: Section anchors refer to the arrays relative to the .rodata base address. But the section anchor code uses a different code path to calculate the offset, and ignores the zero padding added earlier. As a result, data is loaded from wrong offsets. (Although, technically, the offsets are correct, the .rodata is actually wrong)\r\n\r\nWhat needs to be done in the frontend then is this: For incomplete arrays, add the zero padding manually, so that the constructor is complete. The padding must be added as **single elements of the array element size.** It has to pass the same tree to the backend as [ 16,32,64,128,256,512,1024,2048,4096, 0, 0, 0 ] would.","created_on":"2011-10-04T10:54:32.063103+00:00","user":"jpf","updated_on":null,"issue":120,"id":684398},{"content":"Thanks for a great bug report Johannes, will fix this today.","created_on":"2011-10-04T11:52:38.348242+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":684537},{"content":"Patch should fix the issue. Can you test?\r\n\r\nRegards","created_on":"2011-10-05T06:06:44.111141+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":686378},{"content":"Yep, I can confirm this patch is working. The .rodata segment is fine now and the crash is gone :-)\r\n\r\nHowever, there still is a problem with section anchors, we may have missed a case somewhere:\r\n{{{\r\n...\r\n_moduleinfo_array: 71:0x8ea0c\r\n_moduleinfo_array: 72:0x8e79c\r\n_moduleinfo_array: 73:0x4           <---------------------------------\r\n_moduleinfo_array: 74:0x8e530\r\n}}}\r\n\r\nThat moduleinfo belongs to core.runtime. If core-runtime is compiled with -fno-section-anchors, a hello world works. It's caused by incorrect relocations again. I think the issue is caused by this symbol: **_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ**\r\n\r\nThe length of that entry in the .data section is set to 76, but for some reason 108 bytes are output for this symbol.\r\n{{{\r\n_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ:\r\n\t.word\t_D14TypeInfo_Class6__vtblZ\r\n\t.word\t0\r\n\t.word\t4120\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__initZ\r\n\t.word\t49\r\n\t.word\t.LC1\r\n\t.word\t8\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__vtblZ\r\n\t.word\t1\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+76\r\n\t.word\t_D6Object7__ClassZ\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__dtorMFZv\r\n\t.word\t0\r\n\t.word\t60\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__ctorMFZC4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo\r\n\t.word\t0\r\n\t.word\t_D6object9Throwable9TraceInfo11__InterfaceZ\r\n\t.word\t4\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+92\r\n\t.word\t4116\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+76\r\n\t.word\t___t.0.1431\r\n\t.word\t___t.1.1432\r\n\t.word\t___t.2.1433\r\n}}}\r\nIt doesn't happen for other ClassZ though. Any idea what could cause this?","created_on":"2011-10-05T12:20:09.609012+00:00","user":"jpf","updated_on":null,"issue":120,"id":687030},{"content":"OK, the ClassZ size is bigger as the class implements an interface. This code\r\n{{{\r\ninterface A {}\r\nclass B : A {}\r\n}}}\r\ncompiled with gdc -c -S test.d produces this\r\n{{{\r\n.LC1:\r\n\t.ascii\t\"test2.B\\000\"\r\n\t.data\r\n\t.align\t2\r\n\t.type\t_D5test21B7__ClassZ, %object\r\n\t.size\t_D5test21B7__ClassZ, 76\r\n_D5test21B7__ClassZ:\r\n\t.word\t_D14TypeInfo_Class6__vtblZ\r\n\t.word\t0\r\n\t.word\t12\r\n\t.word\t_D5test21B6__initZ\r\n\t.word\t7\r\n\t.word\t.LC1\r\n\t.word\t6\r\n\t.word\t_D5test21B6__vtblZ\r\n\t.word\t1\r\n\t.word\t_D5test21B7__ClassZ+76\r\n\t.word\t_D6Object7__ClassZ\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t54\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t_D5test21A11__InterfaceZ\r\n\t.word\t1\r\n\t.word\t_D5test21B7__ClassZ+92\r\n\t.word\t8\r\n\t.word\t_D5test21B7__ClassZ+76\r\n}}}\r\nI'm concerned about this line:\r\n{{{\r\n.size\t_D5test21B7__ClassZ, 76\r\n}}}\r\n\r\nas size is not 76, even in this simple example it's 96. I'm not sure if the wrong size at this position is a problem, but it seems likely that it causes the issues with anchors: Simply making DefaultTraceInfo a 'normal' class (not implementing an interface) makes the problem go away.\r\n","created_on":"2011-10-05T14:20:19.980570+00:00","user":"jpf","updated_on":null,"issue":120,"id":687315},{"content":"The issue here is slightly different:\r\n\r\n{{{\r\nsizeof B == 76\r\nsizeof B.init.type == 96\r\n}}}","created_on":"2011-10-05T18:11:31.027534+00:00","user":"ibuclaw","updated_on":null,"issue":120,"id":687776},{"content":"OK, it's been 6 months since I last looked at this, so another try :-)\r\n\r\nI diffed the asm output of the core.runtime.d file with sections anchors enabled and with section anchors disabled. I then ported the changes from the no-anchor one to the anchor one, till the anchor one worked. I then removed the changes again, one by one, to find the minimal difference causing the issue.\r\n\r\nTurns out, this little asm sequence in function _D4core7runtime9__modinitFZv causes the issue:\r\n{{{\r\n-\tmovw\tr3, #:lower16:.LANCHOR1\r\n-\tmovt\tr3, #:upper16:.LANCHOR1\r\n+\tmovw\tr3, #:lower16:__mod_ref.1703\r\n+\tmovt\tr3, #:upper16:__mod_ref.1703\r\n \tldr\tr1, [r2, #0]\r\n-\tstr\tr1, [r3, #76]!\r\n \tstr\tr3, [r2, #0]\r\n+\tstr\tr1, [r3, #0]\r\n}}}\r\nThis code is correct, but **{{{LANCHOR1+76 != __mod_ref.1703}}} **.\r\n\r\nLANCHOR1 is defined here:\r\n{{{\r\n.LANCHOR1 = . + 0\r\n\t.type\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ, %object\r\n\t.size\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ, 76\r\n_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ:\r\n\t.word\t_D14TypeInfo_Class6__vtblZ\r\n\t.word\t0\r\n\t.word\t4120\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__initZ\r\n\t.word\t49\r\n\t.word\t.LC1\r\n\t.word\t8\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__vtblZ\r\n\t.word\t1\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+76\r\n\t.word\t_D6Object7__ClassZ\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__dtorMFZv\r\n\t.word\t0\r\n\t.word\t60\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t0\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo6__ctorMFZC4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo\r\n\t.word\t0\r\n\t.word\t_D6object9Throwable9TraceInfo11__InterfaceZ\r\n\t.word\t4\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+92\r\n\t.word\t4116\r\n\t.word\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ+76\r\n\t.word\t___t.0.1647\r\n\t.word\t___t.1.1648\r\n\t.word\t___t.2.1649\r\n\t.type\t__mod_ref.1703, %object\r\n\t.size\t__mod_ref.1703, 8\r\n__mod_ref.1703:\r\n}}}\r\n\r\nSo the **+76** in the anchor code is caused by this line:\r\n{{{\r\n.size\t_D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ, 76\r\n}}}\r\n\r\nthis is wrong, size of _D4core7runtime19defaultTraceHandlerFPvZC6object9Throwable9TraceInfo16DefaultTraceInfo7__ClassZ isn't 76 it's 108.\r\n\r\nHowever, the size classinfo is fixed to CLASSINFO_SIZE and must be 76. Those additional 32 bytes is the interfaces[] array (see toobj.c).\r\n\r\nThe dmd source (toobj.c, ClassDeclaration::toObjFile(int multiobj)) says\r\n{{{\r\n    \/\/ Put out vtblInterfaces->data[]. Must immediately follow csym, because\r\n    \/\/ of the fixup (*)\r\nand\r\n    \/\/ Put out the vtblInterfaces->data[].vtbl[]\r\n    \/\/ This must be mirrored with ClassDeclaration::baseVtblOffset()\r\n}}}\r\n\r\nso it seems this is correct and can't be changed in an easy way. We have to make sure GDC doesn't output 76 as the symbols size, but the correct complete size including the interface table. I guess the size is output by the call to toSymbol(); in toobj.c: ClassDeclaration::toObjFile which I guess calls ClassDeclaration::toSymbol() in the end?","created_on":"2012-06-11T16:52:25.782732+00:00","user":null,"updated_on":null,"issue":120,"id":1534431},{"content":"Sorry I don't understand your last answer 100%. sizeof B and sizeof B.init.type are meant to be the same, aren't they? So we'd have to research why those are different \/ how to fix that?","created_on":"2011-11-20T14:08:03.558916+00:00","user":"jpf","updated_on":"2011-11-20T14:08:14.493370+00:00","issue":120,"id":800746},{"content":"After some more investigation it seems this needs to be fixed in the front end. I posted a detailed message to the dmd-internals list here:\nhttp:\/\/forum.dlang.org\/thread\/50476C77.20608@googlemail.com","created_on":"2012-09-05T15:21:42.339666+00:00","user":"jpf","updated_on":null,"issue":120,"id":1921331},{"content":"External Bug. (#97)","created_on":"2014-03-31T15:14:13.447845+00:00","user":"ibuclaw","updated_on":null,"issue":351,"id":9408089},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=97\n\nPlease continue discussion there","created_on":"2014-02-01T10:24:02.006195+00:00","user":"JinShil","updated_on":null,"issue":351,"id":8034972},{"content":null,"created_on":"2012-06-18T14:53:54.733071+00:00","user":"TurkeyMan","updated_on":null,"issue":351,"id":1561219},{"content":"I'm not sure rt.lifetime is well suited for shared libraries on windows yet.\r\n\r\nDaniel, could you look into this?","created_on":"2012-06-18T15:27:16.049567+00:00","user":"ibuclaw","updated_on":null,"issue":351,"id":1561378},{"content":"I can probably supply a binary... but I think the precise context when loading the dll is critical, because it usually loads fine without problems, so a binary may not be of any use.","created_on":"2012-06-18T15:59:39.796158+00:00","user":"TurkeyMan","updated_on":null,"issue":351,"id":1561501},{"content":"Here's the Map information from a DLL that was built.\r\n{{{\r\n\r\n.tls            0x000000006fa62000      0x200\r\n                0x000000006fa62010                _D2rt8lifetime18__blkcache_storagePS2rt8lifetime7BlkInfo\r\n}}}\r\n\r\nSubtracting _D2rt8lifetime18__blkcache_storagePS2rt8lifetime7BlkInfo from .tls, for a secrel32 offset gives 0x10.\r\n\r\nThis is the same value as shown in the assembly dump from the Dll and is in contrast with the value 0xACEE47F8  as shown in your assembly dump.\r\n\r\n{{{\r\n000000006fa0972b <_D2rt8lifetime10__blkcacheFNdZPS2rt8lifetime7BlkInfo>:\r\n        int __nextRndNum = 0;\r\n    }\r\n    int __nextBlkIdx;\r\n}\r\n\r\n@property BlkInfo *__blkcache()\r\n    6fa0972b:\t55                   \tpush   rbp\r\n    6fa0972c:\t48 89 e5             \tmov    rbp,rsp\r\n    6fa0972f:\t48 83 ec 30          \tsub    rsp,0x30\r\n{\r\n    if(!__blkcache_storage)\r\n    6fa09733:\t8b 04 25 4c c4 a5 6f \tmov    eax,DWORD PTR ds:0x6fa5c44c\r\n    6fa0973a:\t65 48 8b 14 25 58 00 \tmov    rdx,QWORD PTR gs:0x58\r\n    6fa09741:\t00 00 \r\n    6fa09743:\t48 8b 14 c2          \tmov    rdx,QWORD PTR [rdx+rax*8]\r\n    6fa09747:\tb8 10 00 00 00       \tmov    eax,0x10\r\n    6fa0974c:\t48 8b 04 02          \tmov    rax,QWORD PTR [rdx+rax*1]\r\n    6fa09750:\t48 85 c0             \ttest   rax,rax\r\n    6fa09753:\t0f 95 c0             \tsetne  al\r\n    6fa09756:\t83 f0 01             \txor    eax,0x1\r\n    6fa09759:\t84 c0                \ttest   al,al\r\n    6fa0975b:\t74 5f                \tje     6fa097bc <_D2rt8lifetime10__blkcacheFNdZPS2rt8lifetime7BlkInfo+0x91>\r\n}}}\r\n\r\nThe issue is mostly likely a result of the binutils not having the necessary TLS patches and not generating the proper relocation offset.","created_on":"2012-06-23T20:45:05.937062+00:00","user":"venix1","updated_on":null,"issue":351,"id":1583663},{"content":"The objdump gave us the same thing you pasted.\r\n\r\nSo you think it's just a bad toolchain?\r\nAny chance of a new 2.059 toolchain with that patch applied? Will that fix the problem?\r\n\r\nIt's very strange that this only occurs occasionally.\r\nYou'd think this would cause the DLL to fail to load every time... but we only see it fail occasionally. Other times it loads just fine\r\n\r\nDoes LoadLibrary actually patch the offsets in the loaded binary with the absolute addresses as it loads or something?","created_on":"2012-06-23T21:24:00.226252+00:00","user":"TurkeyMan","updated_on":null,"issue":351,"id":1583727},{"content":"Can you generate a Map file for the library?  I'd like to compare the offsets with what's in your assembly code.\r\n\r\nIf the objdump produced the secrel32 output, then it's probably something else.  With the data I had, that was the most likely scenario.  The TLS patch fixes a bug in the linker as well as giving access to secrel32 relocation in assembly.  If for some reason the compile\/link phase was using binutils(gas or ld) not included with GDC this type of issue would occur.  It's still possible a different linker is being used.  [[http:\/\/lists.gnu.org\/archive\/html\/bug-binutils\/2011-12\/msg00058.html|ld bug]]\r\n\r\nIn order to figure out what else it could be, it's necessary to see the map file and raw assembly for your dll.\r\n\r\nCompile or link with -Wl,-Map=output.map. \r\n\r\n objdump.exe -S -M intel mydll.dll > mydll.asm\r\n\r\nCan be used to generate intel formatted assembly.\r\n\r\nRandom failures on accessing invalid memory are not as strange as you might think.  That's actually the first clue, you're accessing an invalid memory location.\r\n\r\nI'll look into the runtime behavior of LoadLibrary after I've checked the map and assembly output of the Dll.\r\n\r\n","created_on":"2012-06-23T21:40:24.257782+00:00","user":"venix1","updated_on":null,"issue":351,"id":1583748},{"content":"Looking at that, it's definitely crashing in loading a TLS variable.\r\n\r\n * The use of EBX\/RBX is acceptable as 32-bit operations are implicitly zero extended to 64-bit.\r\n * The issue looks to be with the value being loaded.   0xACEE47F8 ( 3 billion )\r\n * RSI should be ok, as it doesn't require TLS relative location to function.\r\n\r\nThis value loaded into EBX should be relative to the TLS section which means it should be significantly smaller.\r\n\r\nDid you custom build this?  The value loaded into EBX is determined at link time without a TLS aware assembler\/linker you wouldn't get the relative offset.\r\n\r\nCan you output a map file with -Wl,-Map=output.map for the DLL and the output of the following command on lifetime.o?  To extract it run\r\n\r\nar x libgphobos.a lifetime.o\r\n\r\nThen compare it with this? Line 2ea is where the magic happens that generates the relative offest.\r\n\r\nI'll work on getting the assembly output from a Dll dump as well to ensure it's linking properly.\r\n\r\n{{{\r\n$ \/c\/MinGW64\/bin\/objdump.exe -d -r -M Intel lifetime.o \r\n00000000000002d0 <_D2rt8lifetime10__blkcacheFNdZPS2rt8lifetime7BlkInfo>:\r\n     2d0:\t56                   \tpush   rsi\r\n     2d1:\t53                   \tpush   rbx\r\n     2d2:\t48 83 ec 28          \tsub    rsp,0x28\r\n     2d6:\t8b 04 25 00 00 00 00 \tmov    eax,DWORD PTR ds:0x0\r\n\t\t\t2d9: R_X86_64_32S\t_tls_index\r\n     2dd:\t65 48 8b 34 25 58 00 \tmov    rsi,QWORD PTR gs:0x58\r\n     2e4:\t00 00 \r\n     2e6:\t48 8b 34 c6          \tmov    rsi,QWORD PTR [rsi+rax*8]\r\n     2ea:\tbb 08 00 00 00       \tmov    ebx,0x8\r\n\t\t\t2eb: secrel32\t.tls$GCC\r\n     2ef:\t48 8b 04 1e          \tmov    rax,QWORD PTR [rsi+rbx*1]\r\n     2f3:\t48 85 c0             \ttest   rax,rax\r\n     2f6:\t74 08                \tje     300 <_D2rt8lifetime10__blkcacheFNdZPS2rt8lifetime7BlkInfo+0x30>\r\n     2f8:\t48 83 c4 28          \tadd    rsp,0x28\r\n     2fc:\t5b                   \tpop    rbx\r\n     2fd:\t5e                   \tpop    rsi\r\n     2fe:\tc3                   \tret    \r\n\r\n}}}\r\n\r\n","created_on":"2012-06-20T00:19:56.552349+00:00","user":"venix1","updated_on":null,"issue":351,"id":1567861},{"content":"External Bug. (#98)","created_on":"2014-03-31T15:13:11.774220+00:00","user":"ibuclaw","updated_on":null,"issue":348,"id":9408073},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=98\n\nPlease continue discussion there.","created_on":"2014-02-01T10:42:40.673439+00:00","user":"JinShil","updated_on":null,"issue":348,"id":8035110},{"content":"External Bug. (#96)","created_on":"2014-03-31T15:12:32.966749+00:00","user":"ibuclaw","updated_on":null,"issue":347,"id":9408060},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=96\n\nPlease continue discussion there","created_on":"2014-02-01T10:04:47.459623+00:00","user":"JinShil","updated_on":null,"issue":347,"id":8034875},{"content":"# It should be DFLAGS, not CFLAGS\r\n# You will want to assign CFLAGS to OUR_CFLAGS, rather than paste it everywhere.\r\n# Similarly for DFLAGS, assign it to ALL_DFLAGS so it will be included where needed.\r\n# The name FLAGS_FOR_BUILD could probably be named FLAGS_FOR_TARGET, as it appropriately matches where you will be wanting to use them (when I see BUILD, I think of the host the compiler will be running off, not the target it is compiling for).\r\n\r\nIf you make a pull request on github, and I'll look it over.\r\n\r\n\r\n\r\nRegards\r\n\r\nIain","created_on":"2012-06-06T13:41:12.575857+00:00","user":"ibuclaw","updated_on":null,"issue":347,"id":1515107},{"content":"Thanks for the feedback, Iain. I will make the requested changes and submit a pull request from github.\r\n\r\nPlease note that, without making changes to crosstool-ng (which is even more difficult than making changes to gdc, as crosstool-ng is a bit of a jumbly mess in spots), I can't rename certain variables, since it's kind of a \"this is how crosstool calls gcc's build\". In the end, I patched it how I did because it ended up being the path of least resistance. If I could have figured out how to get crosstool-ng to pass DFLAGS to the build, I would have just done that.\r\n\r\nI know that this seems like a really poor solution, and I make no defense of it, save that it actually works and it got me where I needed to be.\r\n\r\nAnyway, it may take me some time to do this - since I've gotten what needs to be done finished, this has now become an \"on my own time\" project. So, expect a pull request and further correspondence from a different account\/email address\/etc., because I'll be working at it from home.","created_on":"2012-06-07T14:56:40.037610+00:00","user":"mattcaron_redlion","updated_on":null,"issue":347,"id":1520585},{"content":"So, finally, after a month, I'm getting back to this.\r\n\r\nYour point about FLAGS_FOR_TARGET is well taken, and I'm working to fix that. However, it's not that simple. The main application here is building it under crosstool, and I cannot, for the life if me, find where CFLAGS_FOR_TARGET gets set - it's set when libphobos gets built to: \"CFLAGS_FOR_TARGET=-g -Os\", but I can't figure out where that comes from, and it's driving me nuts (I've been researching it for about six hours already).","created_on":"2012-07-13T02:19:35.040247+00:00","user":"mattcaron","updated_on":null,"issue":347,"id":1660262},{"content":"External Bug. (#104)","created_on":"2014-03-31T15:11:05.807543+00:00","user":"ibuclaw","updated_on":null,"issue":162,"id":9408030},{"content":"This has been migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=104\n\nPlease continue discussion there.","created_on":"2014-02-01T11:34:34.407344+00:00","user":"JinShil","updated_on":null,"issue":162,"id":8035463},{"content":"Is there a reason you chose cygwin?  MinGW's msys environment is supported for windows building.  I do not believe any work has been done for cygwin compiling.\n\nThe use of {{{__libc_stack_end}}} appears to be related to garbage collection. \n\nIs the test you posted verbatim?  Scanning the config files {{{libc_stack_end}}} should be {{{__libc_stack_end}}}.\n\nAlso does cygwin support {{{__libc_stack_end}}}.  If it doesn't look at **config.in:677** in the phobos2 directory.  MinGW is a special case but not cygwin.\n\nAdding the following snippet above the {{{mingw*)}}} statement may help.\n{{{\n  cygwin*)\n\t    need_to_cfgr_gc=''\n\t    ;;\n}}}\n\nEdit: Fixed formatting issues.","created_on":"2011-03-07T23:14:34.507616+00:00","user":"venix1","updated_on":"2011-03-07T23:16:29.875679+00:00","issue":162,"id":395376},{"content":null,"created_on":"2011-03-08T08:30:03.640097+00:00","user":"sschuerger","updated_on":null,"issue":162,"id":395760},{"content":"sorry, didn't login - the above entry is mine :-)","created_on":"2011-03-08T15:44:29.258854+00:00","user":"sschuerger","updated_on":null,"issue":162,"id":396146},{"content":"Cygwin is the more powerful environment with a more \"Linux-like\" behaviour than MinGW.\r\n\r\nCorrected the verbatim quotes for {{{__libc_stack_end}}}, my fault. Cygwin does not support glibc, it supports newlib.\r\nHowever, running gcc's {{{configure}}} with the {{{--with-newlib}}} option results in strange compilation errors at stage 3.\r\n\r\nAdding \r\n{{{\r\n  cygwin*)\r\n\t    need_to_cfgr_gc=''\r\n\t    ;;\r\n}}}\r\ndidn't help.","created_on":"2011-03-08T15:43:21.497495+00:00","user":null,"updated_on":null,"issue":162,"id":396144},{"content":"Did you run autoconf after changing the file?  I downloaded cygwin and got it to configure but it's not a supported platform.  Which brings up the question is cygwin:  {{{linux, Windows, posix}}} or something else version wise and what does GDC automaticallly set for it.  Is there a Cygwin specific define that GDC can use to test for and set a cygwin version?\n\nGDC declares the following symbols for cygwin.\n{{{\nUnix\nPosix\nGNU_Semaphore_POSIX\nGNU_CBridge_Stdio\nGNU_Unix_Have_MMap\nGNU_Unix_Have_getpwnam_r\n}}}\n\nError message. (Windows, linux, OSX, FreeBSD, Solaris) are the only options.\n{{{\n..\/..\/..\/..\/gcc-4.4.5\/libphobos\/core\/stdc\/stdlib.d:50: Error: static assert  \"Unsupported platform\"\n}}}\n\nEdit: Tried to clean up ambiguities.\n\nEdit: Looks like GDC uses {{{cygwin}}} to identify it.","created_on":"2011-03-10T04:51:32.194793+00:00","user":"venix1","updated_on":"2011-03-10T04:59:36.332845+00:00","issue":162,"id":398235},{"content":"Code's currently commented out in D2 configure file:\r\n\r\n{{{\r\ndnl if test -z \"$d_gc_stack\"; then\r\ndnl    d_gc_stack=GC_Use_Stack_Guess\r\ndnl    D_GC_MODULES=\"$D_GC_MODULES gc\/gc_guess_stack.o\"\r\ndnl fi\r\n}}}\r\n\r\nThe implementation can be moved into rt.gccmemory.","created_on":"2011-03-10T11:37:19.461541+00:00","user":"ibuclaw","updated_on":null,"issue":162,"id":398570},{"content":"To get cygwin to compile libphobos work will need to be done on druntime.  There is the static assert in **core\/stdc\/stdlib.d** and in **core\/stdc\/stdio.d**.  Those are the only files I've looked at so far.\r\n","created_on":"2011-03-12T03:36:18.026070+00:00","user":"venix1","updated_on":null,"issue":162,"id":400764},{"content":"External Bug. (#105)","created_on":"2014-03-31T15:10:09.969195+00:00","user":"ibuclaw","updated_on":null,"issue":41,"id":9408010},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=105\n\nPlease continue discussion there.","created_on":"2014-02-01T11:45:59.051132+00:00","user":"JinShil","updated_on":null,"issue":41,"id":8035555},{"content":"Not strictly about gdc internals, but I've attached some wiki source based on ibuclaw's explanations about compiling gdc with MinGW. It might serve as a start.","created_on":"2010-07-20T22:18:00.613061+00:00","user":"trass3r","updated_on":null,"issue":41,"id":218737},{"content":"I barely understand it myself, so naturally I'll approve. :)\r\n\r\nConsidering that the average project has 10 lines of comments for every 100 LOC, I don't think we are doing that bad. Once druntime is up and running for D2, I think that will be a good time to stop and test heavily for regressions and bugs - most notably platform-specific quirks. Then focus on building our portfolio for documentation and in code comments.\r\n\r\n{{{\r\nTechnical prose is almost immortal.\r\n                                  — Frederick P. Brooks, Jr.\r\n}}}","created_on":"2010-07-20T22:50:12.251900+00:00","user":"ibuclaw","updated_on":null,"issue":41,"id":218761},{"content":"As I already said on IRC, gcc 4.3.5 compiles just as good \/ bad as 4.1.2 using\r\n{{{\r\n#!sh\r\n..\/configure --enable-languages=d --disable-bootstrap --disable-nls --enable-checking --disable-multilib --disable-shared --prefix=\/mingw && make -j 2\r\n}}}\r\nThat '%' makefile error didn't occur.","created_on":"2010-07-21T00:18:30.544305+00:00","user":"trass3r","updated_on":null,"issue":41,"id":218788},{"content":"A documentation page is now in the works. Scroll down to the bottom to find the link to the Documentation page. Or just follow this link:\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/Documentation\r\n\r\nNote that right now, there is next to no content on it.\r\n\r\nAlso, I added the MinGW page to the wiki as well.\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/MinGW\r\n\r\nIt can be found on the Home wiki page in the Installation section.","created_on":"2010-07-21T15:12:45.058888+00:00","user":"michaelp","updated_on":null,"issue":41,"id":219222},{"content":"There are now separate pages for User and Developer documentation:\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/DeveloperDocumentation\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/UserDocumentation\r\n\r\nThe command line options and descriptions on the User documentation page were taken from lang.opt.","created_on":"2010-08-03T03:00:21.499884+00:00","user":"michaelp","updated_on":null,"issue":41,"id":225036},{"content":"Bug only present in the version shipped with Debian.  Please raise a bug there to update their packaged sources with upstream.\n\nAlso, wrong place to raise bugs (it was only by chance that I even noticed this was here).","created_on":"2014-02-03T09:31:43.173191+00:00","user":"ibuclaw","updated_on":null,"issue":361,"id":8053938},{"content":"External Bug. (#95)","created_on":"2014-03-31T15:11:59.051192+00:00","user":"ibuclaw","updated_on":null,"issue":357,"id":9408048},{"content":"Migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=95\n\nPlease continue discussion there.","created_on":"2014-02-01T09:57:50.972537+00:00","user":"JinShil","updated_on":null,"issue":357,"id":8034846},{"content":"I'm never satisfied! ;)\nFair enough, didn't know there was a gdc bugzilla.","created_on":"2013-09-17T11:15:59.862902+00:00","user":"TurkeyMan","updated_on":null,"issue":360,"id":6093347},{"content":"Also, I would like to try and re-direct all bugs here over to bugzilla.gdcproject.org as I only look here once every blue moon... by which time most bugs are so old \/ using an unsupported gcc release that it is hard to tell if it is even a relevant bug anymore... :o)","created_on":"2013-09-17T10:10:19.772549+00:00","user":"ibuclaw","updated_on":"2013-09-17T10:11:13.999996+00:00","issue":360,"id":6092544},{"content":"Well aussies are hardest to please in my experience. :þ\n\nI'm just going through building on cygwin as we speak...","created_on":"2013-09-17T10:09:10.457322+00:00","user":"ibuclaw","updated_on":null,"issue":360,"id":6092525},{"content":"This doesn't really seem resolved to me ;)\nIt was actually March, and the build doesn't even work (seems to be missing dependencies). Others in the forums haven't been able to use it either.\nI'd like to think that this should be marked resolved when semi-regular GDC builds for windows exist... :)","created_on":"2013-09-17T10:06:08.145986+00:00","user":"TurkeyMan","updated_on":null,"issue":360,"id":6092455},{"content":"Last mingw release was April 2013... hmm...\n\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/downloads","created_on":"2013-09-17T08:58:46.481061+00:00","user":"ibuclaw","updated_on":null,"issue":360,"id":6091429},{"content":"The MinGW sources have gotten out of sync with GDC head.  I'm working on pulling those changes into the 4.6 branch.  After which, there will be a new release.\n\nOnce that's done, I'll be more diligent in keeping the 4.6 and 4.7 branches caught up to avoid these kind of delays.  As long as MinGW GCC lags behind GCC, I'll try to keep those branches up to date.","created_on":"2012-09-11T00:47:04.544203+00:00","user":"venix1","updated_on":null,"issue":360,"id":1949788},{"content":null,"created_on":"2012-09-11T00:47:16.121192+00:00","user":"venix1","updated_on":null,"issue":360,"id":1949790},{"content":"Ah, I see. Is MinGW GCC actually separated from GCC? I thought MinGW support was actively maintained via patches into GCC main :\/ .. Is it maintained by a totally separate group in their own fork?","created_on":"2012-09-11T07:39:34.655400+00:00","user":"TurkeyMan","updated_on":null,"issue":360,"id":1951086},{"content":"I can't find the reference, but I recall that Windows support was secondary, low priority, for GCC.  Due to this and limited number of developers for the platform a stable MinGW generally lags behind GCC.\n\nThere's also compatibility with binutils and the MinGW runtime to consider.  For Linux and other Posix systems there's a far greater number of developers to work out those problems so support comes at a faster pace.  \n\nSince there's only one of me.  It's easier to stick to a stable release that's well tested.  That was TDM which appears to be unmaintained now and I've been slow to adapt to the change in development within GDC. So now, I get to play catch up.\n\nI'll probably experiment with GCC 4.7 eventually and move away from the dependency on TDM.","created_on":"2012-09-11T15:24:11.493728+00:00","user":"venix1","updated_on":null,"issue":360,"id":1954045},{"content":"TDM-GCC was recently updated to 4.7.1","created_on":"2012-09-25T04:49:51.940422+00:00","user":"TommiT","updated_on":null,"issue":360,"id":2030922},{"content":"I wonder if there's any movement on this?\nWe're kinda stuck in the dark ages...","created_on":"2012-10-10T15:24:07.647884+00:00","user":"TurkeyMan","updated_on":null,"issue":360,"id":2128592},{"content":"I've gotten 4.6 updated. https:\/\/github.com\/venix1\/GDC\/tree\/gdc-4.6\nThere's some bugs that need working out.  Once, I get a build compiled that passes the basic tests.  I'll release a binary for it.","created_on":"2012-10-10T18:04:14.291645+00:00","user":"venix1","updated_on":null,"issue":360,"id":2129718},{"content":"Cool, looking forward to it! :)","created_on":"2012-10-10T19:53:09.152419+00:00","user":"TurkeyMan","updated_on":null,"issue":360,"id":2130648},{"content":"Closing old bug.","created_on":"2013-09-17T10:02:07.137936+00:00","user":"ibuclaw","updated_on":null,"issue":250,"id":6092393},{"content":"Checking the documentation it does say \"argument must be an integral type\" - but it would be nice if it behaved the same for 32 bit and 64 bit code.","created_on":"2011-10-20T01:06:14.564086+00:00","user":"GrahamC","updated_on":null,"issue":250,"id":725855},{"content":"Specifying %X for a real variable gives the exception \"std.format floating\" which is a better outcome. Perhaps %X for a float variable should do the same. This might help people catch errors in their format strings.","created_on":"2011-10-20T11:59:06.591472+00:00","user":"GrahamC","updated_on":null,"issue":250,"id":726798},{"content":"gdmd no longer part of main project.","created_on":"2013-09-17T10:01:30.358775+00:00","user":"ibuclaw","updated_on":null,"issue":271,"id":6092382},{"content":"4.6.x no longer supported in development branch, and as per above CNR, closing.","created_on":"2013-09-17T10:00:04.579482+00:00","user":"ibuclaw","updated_on":null,"issue":340,"id":6092366},{"content":"I forgot to mention that we are building this on x64 Windows using gdc version 4.6.1 20110627 (gdc hg r826:396ce79e6402(default), using dmd ) (tdm64-1).","created_on":"2012-05-10T14:17:03.713112+00:00","user":null,"updated_on":null,"issue":340,"id":1403373},{"content":"Works well (not reproduced) on Debian x86 gdc 4.6.2\r\n{{{\r\nCOLLECT_GCC=gdc\r\nCOLLECT_LTO_WRAPPER=\/usr\/lib\/gcc\/i486-linux-gnu\/4.6\/lto-wrapper\r\nTarget: i486-linux-gnu\r\nConfigured with: ..\/src\/configure -v --with-pkgversion='Debian 4.6.2-4' --with-bugurl=file:\/\/\/usr\/share\/doc\/gdc-4.6\/README.Bugs --enable-languages=c,c++,d --prefix=\/usr --program-suffix=-4.6 --enable-shared --enable-linker-build-id --with-system-zlib --libexecdir=\/usr\/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=\/usr\/include\/c++\/4.6 --libdir=\/usr\/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-time=yes --disable-libmudflap --enable-plugin --with-arch-32=i586 --with-tune=generic --disable-libquadmath --enable-checking=release --build=i486-linux-gnu --host=i486-linux-gnu --target=i486-linux-gnu\r\nThread model: posix\r\ngcc version 4.6.2 (Debian 4.6.2-4) \r\n}}}\r\n","created_on":"2012-06-01T16:30:38.026989+00:00","user":"kirikaza","updated_on":null,"issue":340,"id":1495820},{"content":"I'm still using the master-branch Perl gdmd, but can confirm that in any case gdmd -run seems to be working correctly.","created_on":"2013-09-17T14:01:55.154983+00:00","user":"WebDrake","updated_on":null,"issue":335,"id":6095803},{"content":"gdmd is now a separate project and has been re-written in D.","created_on":"2013-09-17T09:57:58.900901+00:00","user":"ibuclaw","updated_on":null,"issue":335,"id":6092343},{"content":null,"created_on":"2012-04-21T03:57:46.623074+00:00","user":"WebDrake","updated_on":null,"issue":335,"id":1327070},{"content":"This has been resolved upstream and will be merged in 2.064.","created_on":"2013-09-17T09:57:10.964032+00:00","user":"ibuclaw","updated_on":null,"issue":229,"id":6092329},{"content":"Issue #195 was marked as a duplicate of this issue.","created_on":"2011-09-10T20:35:09.440363+00:00","user":"venix1","updated_on":null,"issue":229,"id":645469},{"content":"The patch contains the changes necessary to separate 'main' from 'dmain2.d'.  It's based around what D1 already does.","created_on":"2011-09-12T02:57:28.620167+00:00","user":"venix1","updated_on":null,"issue":229,"id":646986},{"content":"Closing as works as gcc nrvo is intended.","created_on":"2013-09-17T09:56:01.723910+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":6092317},{"content":"Enabled rudimentary support for backend to perform NRV optimisation.\r\n\r\n<<changeset 740:cc2b3728269f>>\r\n\r\nStill doesn't work in the same way DMD does, ie:\r\n{{{\r\nimport core.stdc.stdio;\r\n\r\nstruct S {\r\n    this(this) {\r\n        assert(0);\r\n    }\r\n\r\n    ~this() {\r\n        printf(\"D'tor\\n\");\r\n    }\r\n}\r\n\r\nS *glob;\r\n\r\nS doIt() {\r\n    S s;\r\n    printf(\"s lives at %p in doIt.\\n\", &s);\r\n    glob = &s;\r\n    return s;\r\n}\r\n\r\nvoid main() {\r\n    auto s = doIt();\r\n    printf(\"s lives at %p in main.\\n\", &s);\r\n    assert(&s == glob);\r\n}\r\n}}}\r\n\r\n","created_on":"2012-01-03T01:23:37.229310+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":920999},{"content":"Issue #291 was marked as a duplicate of this issue.","created_on":"2011-12-19T00:57:49.262532+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":885209},{"content":"Bumping report, and raising priority.","created_on":"2011-12-19T00:59:01.132746+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":885212},{"content":"Issue #291 was marked as a duplicate of this issue.","created_on":"2011-12-19T00:53:11.362936+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":885199},{"content":null,"created_on":"2011-10-03T22:30:15.451277+00:00","user":"ibuclaw","updated_on":null,"issue":244,"id":683404},{"content":"https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/021dda8feaba282fec60600729ba8abc2c64cf81\n\n\n```\n#!D\n\n(gdb) p var_byte \n$1 = test.enum_byte.kE1\n(gdb) p var_ubyte \n$2 = test.enum_ubyte.kE1\n(gdb) p var_short \n$3 = test.enum_short.kE1\n(gdb) p var_ushort \n$4 = test.enum_ushort.kE1\n(gdb) p var_int    \n$5 = test.enum_int.kE1\n(gdb) p var_uint \n$6 = test.enum_uint.kE1\n(gdb) p var_long \n$7 = test.enum_long.kE1\n(gdb) p var_ulong \n$8 = test.enum_ulong.kE1\n\n```","created_on":"2013-09-17T09:42:38.463796+00:00","user":"ibuclaw","updated_on":null,"issue":341,"id":6092133},{"content":"How did I not get this report?  Probably just ignorance. ;)\r\n\r\nI did notice this the other day when running another application through the debugger that enum values are shown as {void} when you print them.   I'll fix this today.","created_on":"2012-06-27T11:34:07.976992+00:00","user":"ibuclaw","updated_on":null,"issue":341,"id":1598210},{"content":"Closing","created_on":"2013-09-17T08:57:54.172579+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":6091416},{"content":"I'm going to assume this is resolved.","created_on":"2013-09-17T08:57:23.354522+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":6091412},{"content":"I can assign this to venix and so he doesn't forget. But feel free to close it again. =)","created_on":"2012-07-01T08:24:16.341896+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":1612609},{"content":"Only short[8] and ushort[8] work with multiply.  Though this is probably a restriction put in place because of dmd's backend.","created_on":"2012-07-01T08:22:23.687169+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":1612603},{"content":null,"created_on":"2012-06-04T14:41:41.711139+00:00","user":"jkrempus","updated_on":null,"issue":346,"id":1504473},{"content":"How did I miss this report?  Probably because it has MinGW in the title. :)\r\n\r\nAssume that compiler errors happen for all platforms - so am removing MinGW from the title.\r\n\r\nAssigning to self to look into.","created_on":"2012-06-27T11:29:29.215039+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":1598184},{"content":null,"created_on":"2012-06-27T11:29:55.060246+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":1598188},{"content":"CNR in trunk.","created_on":"2012-06-27T19:45:04.132840+00:00","user":"ibuclaw","updated_on":null,"issue":346,"id":1600267},{"content":"Actually, float4 multiplication has always worked for me with vanilla GDC. I see now that multiplication of integral vectors doesn't, but I didn't notice that before because I wasn't using it. It seems that the reason for this behavior is that  MulExp::semantic only checks if the type is a vector type with size of element type different than 2 (and returns ErrorExp if it is) if the base type is not floating point. In venix1's fork on the other hand, MulExp always returns ErrorExp when the type is a vector. I don't know  if changing MulExp::semantic in MinGW GDC to not do that would cause other issues because I didn't manage to compile it. \r\n\r\nThis bug report was originally about the bug that is only present in MinGW GDC, not the similar bug that is also present in other versions. So should I rename this bug report back and change its status or open a new one? And should I assign bugs related to MinGW to venix1?","created_on":"2012-07-01T07:09:44.960456+00:00","user":"jkrempus","updated_on":null,"issue":346,"id":1612493},{"content":"Looks like Iain fixed the issue in GDC source some time ago [[https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/92da3d2472ac6a5d3d8a8eec9ab34c81dc93136a|92da3d2]]\n\nI'm pulling that patch and seeing if it resolves that issue.  But I'll have to spend some time getting caught up with head since 2.059 changes are there as well.","created_on":"2012-08-16T21:52:18.982519+00:00","user":"venix1","updated_on":null,"issue":346,"id":1822336},{"content":"This is the same as <<issue 22>>, it looks like the fix was removed while solving <<issue 70>>.  Changeset <<changeset f12bfe124807>> is where it was removed.\n\n{{{\n#!asm\n; Inline assembly\npush dword ptr FS:[0];\npush dword ptr FS:[4];\npush dword ptr FS:[8];\n}}}\n\n{{{\n#!asm\n; GDC output\npushl %fs:\npushl %fs:4\npushl %fs:8\n}}}\n","created_on":"2010-11-29T15:47:57.928599+00:00","user":"venix1","updated_on":"2010-11-29T15:57:40.599453+00:00","issue":100,"id":302365},{"content":"Somewhat indirectly related to <<issue 118>> which was also caused by that changeset.\r\nThis should be fixed now.\r\n\r\nRegards","created_on":"2010-11-30T14:34:47.281663+00:00","user":"ibuclaw","updated_on":null,"issue":100,"id":303289},{"content":"Thread.d compiles with <<changeset e2092db74028>>\n\nHowever there are a few minor issues and 1 major one preventing D2 from compiling.\n\n* dmd2\/speller.c: 'error: 'alloca' was not declared'\n\nSolved by including malloc.h.\n\n* dmd2\/root.c: Assertion failed: 0, file ..\/..\/..\/gcc-4.3.5\/gcc\/d\/dmd2\/root.c, line 1857\n\nExamining the #if statement shows that both Win32 and non-Win32 cases are handled making the #else clause irrelevant.  When compared to D1's root.c the #else clause does not exist.  Simply removing it solves the problem.\n\n* gc\/win32.d:  No rule to make target `gc\/win32.o', needed by `libgdruntime.a'.\n\nSolved by copying **phobos\/internal\/gc\/win32.d** to **druntime\/gc\/win32.d**.\n\n* std\/stdio.d:164: Error: static assert  \"unsupported C I\/O system\"\n\nSolved by using DIGITAL_MARS_STDIO.\n\nThe first 3 issues I feel are trivial and simply a result of D2 never being built on Windows.  The last one needs to be reviewed and tested.\n\n* **trivial.patch**: Contains the first 3 fixes.\n* **stdio.patch**: Contains the stdio fix.","created_on":"2010-11-30T18:14:38.915813+00:00","user":"venix1","updated_on":"2010-11-30T18:15:20.508989+00:00","issue":100,"id":303485},{"content":"# Fixed - include gdc_alloca.h\r\n# Removed assert\r\n# Shouldn't need to compile win32.o for gc to work. What it implements is already elsewhere (rt.memory). Likely just a leftover from before move to druntime.\r\n# Shouldn't it be version = GCC_IO ?\r\n\r\nRegards","created_on":"2010-11-30T21:20:20.656813+00:00","user":"ibuclaw","updated_on":null,"issue":100,"id":303645},{"content":"4. When I attempted to use GCC_IO or GENERIC_IO, I got undefined types and methods that are located in posix imports.  DIGITAL_MARS_STDIO has both DigitalMars and Windows conditions attached to it, which leads me to believe that it is more Windows oriented than either of the others. \n\nI'll look into it, at the time I was just concerned with getting it to compile.","created_on":"2010-11-30T22:46:00.276127+00:00","user":"venix1","updated_on":"2010-11-30T22:57:47.462576+00:00","issue":100,"id":303732},{"content":"Applied patches for first three in <<changeset 389>>. As for stdio, does DMD build + function OK in MinGW? If not, may be worth making a new MINGW_IO version block and submitting a patch upstream.\r\n\r\nRegards","created_on":"2010-12-01T23:00:00.437276+00:00","user":"ibuclaw","updated_on":null,"issue":100,"id":304726},{"content":"I think MINGW_IO is a good idea, since it isn't DIGITAL_MARS or GCC but a little of both.\r\n\r\nMinGW has no support for file locking, so custom functions will have to be written to get stdio working.\r\n\r\nA couple of side issues.\r\n# GDC needs a MinGW version identifier.\r\n# MinGW GDC doesn't allow the executables to be relocated.  I've looked into this and found the reason why, but I could use some help on coming up with a viable solution.  At the moment I can manually tweak some configuration files and make it relocatable but I  would like a solution that doesn't require that.","created_on":"2010-12-02T01:05:56.248022+00:00","user":"venix1","updated_on":null,"issue":100,"id":304829},{"content":"I should really add a hook to dump all version identifiers GDC emits to the frontend. Because there is no documentation on this (depends and varies largely on  the -mflags passed to compiler).\n\nKnowing that we add GCC builtin defines to the version pool, and having a look at the mingw headers in gcc\/config, we *should* already be emitting:\n\n* GNU_MSVCRT\n* GNU_MINGW32\n* GNU_MINGW64 (if 64bit)\n\nRegards\n","created_on":"2010-12-02T09:37:55.797254+00:00","user":"ibuclaw","updated_on":"2010-12-02T09:40:46.474476+00:00","issue":100,"id":305148},{"content":"I still think there should be a generic MinGW version.  It looks as though GNU_MINGW32 is defined on both 32 and 64 bit systems but that could be misleading in the future.\r\n\r\nI have gotten the druntime compiled and working along with stdio, but along the way I ran into a few minor issues.\r\n\r\n* Is **dgccmain2.d** being used by GDC anymore?\r\n* Windows requires std\/__fileinit.d to be compiled with phobos, it currently isn't.\r\n* GDC doesn't use **_minit** even for MinGW.\r\n* How does DMD initialize **_monitor_critsec**?  Looking at the source, the only way to initialize is by calling **_STI_monitor_staticctor** which **dmain2.d** calls only for posix.\r\n* **_iob** is being auto imported again.  Should be fixable with **GNU_set_attribute** but is having no effect on it.  \r\n\r\n\r\nI've reduce the **_iob** problem down to the following test case producing the following symbols.\r\n{{{\r\nextern (C)\r\n{\r\n\r\n\tpragma(GNU_set_attribute, FOO, __dllimport__);\r\n\tprivate extern shared int[5] FOO;\r\n\r\n\tshared int* a = &FOO[0];\r\n\r\n\textern (C) int printf(const char*, ...);\r\n}\r\n\r\nvoid main()\r\n{\r\nprintf(\"%d\", FOO[0]);\r\n}\r\n\r\n\/\/ Output\r\n main.o\r\n00000000 b .bss\r\n00000000 d .ctors\r\n00000000 d .data\r\n00000000 i .drectve\r\n00000000 r .rdata\r\n00000000 t .text\r\n         U _FOO\r\n00000004 D __D4main12__ModuleInfoZ\r\n0000003b t __D4main9__modinitFZv\r\n00000000 T __Dmain\r\n         U __Dmodule_ref\r\n         U ___main\r\n00000014 d ___mod_ref.750\r\n         U __imp__FOO\r\n00000000 D _a\r\n         U _printf\r\n}}}\r\n\r\n**FOO** has 2 symbol definitions.  One is created by the assignment operation and the other is created by the use with printf.  In addition, if you move the assignment into the function main, then the extra symbol goes away.\r\n\r\nI'll be submitting a patch with the changes I've made to the runtime  after I clean it up.\r\n","created_on":"2010-12-02T12:26:07.113501+00:00","user":"venix1","updated_on":null,"issue":100,"id":305258},{"content":"Added **mingw.patch** which modifies phobos to support MinGW.  As well as adds **MinGW** to the global versions.\n\nThere were no major changes, so reviewing the patch file is the best way to see what I've changed.","created_on":"2010-12-02T17:56:02.049012+00:00","user":"venix1","updated_on":"2010-12-02T17:56:42.766710+00:00","issue":100,"id":305566},{"content":"Applied std.stdio patch in <<changeset 477>>\r\n\r\nClosing","created_on":"2011-02-23T01:06:29.109524+00:00","user":"ibuclaw","updated_on":null,"issue":100,"id":381199},{"content":"Fixed in latest branch. \r\nThanks for the patch.","created_on":"2009-10-26T01:09:11.118090+00:00","user":"michaelp","updated_on":null,"issue":3,"id":68344},{"content":"<<changeset 796:f4b81c81e760>>","created_on":"2012-02-25T17:23:28.457145+00:00","user":"ibuclaw","updated_on":null,"issue":314,"id":1118068},{"content":null,"created_on":"2012-02-21T19:18:11.124506+00:00","user":"jpf","updated_on":null,"issue":314,"id":1104180},{"content":null,"created_on":"2012-02-21T19:23:36.427596+00:00","user":"jpf","updated_on":null,"issue":314,"id":1104191},{"content":null,"created_on":"2012-02-21T19:15:35.106700+00:00","user":"jpf","updated_on":null,"issue":314,"id":1104171},{"content":null,"created_on":"2010-05-24T06:24:06.069791+00:00","user":"venix1","updated_on":null,"issue":21,"id":182630},{"content":"The above fixes the link error, but causes segfaults when attempting to access stdin, stdout, stderr variables.  This is because of the way the variable needs to be accessed.  Solving the problem requires changing the way phobos is built.  I'm going to look into another solution, to make gdc use the dllimport attribute for extern export variables.\r\n\r\nAfter further investigating the problem, I found that gcc uses\r\n\r\n{{{extern __attribute__ ((__dllimport__)) FILE _iob[];}}}\r\n\r\nfor importing _iob.\r\n\r\nThis lead me to find\r\n\r\n{{{\/\/ BUG: if isExport(), shouldn't we make it dllimport?}}} @ dmd\/toobj.c:1212\r\n","created_on":"2010-05-25T12:32:50.016987+00:00","user":"venix1","updated_on":null,"issue":21,"id":183440},{"content":"Which exact gdc revision and gcc+mingw setup did you use to compile it?\n\nThe newest revision doesn't compile, now I tried 89:(556fba60aaaf) and still cc1d.exe crashes with 0x00000005\n\nEDIT: btw, gdc supports {{{__attribute__}}} with PragmaDeclarations, so I think it should be possible to fix this bug directly in the code section you mentioned.","created_on":"2010-07-21T14:51:40.030929+00:00","user":"trass3r","updated_on":"2010-07-21T14:50:20.382833+00:00","issue":21,"id":219209},{"content":"I used 87:(7bc112d78d4d) with GCC 4.3.1, built using msys and TDM GCC-4.4.1.  Also I noted a segfault when using the wrong mingw runtime, 3.16 is the one I had to use.\r\n\r\nI did successfully compile it but there was a template bug, preventing tango 0.99.8 from compiling, that prompted the effort to upgrade the frontend to a newer version. \r\n\r\n","created_on":"2010-07-24T19:22:14.802498+00:00","user":"venix1","updated_on":null,"issue":21,"id":220724},{"content":"I used msys + TDM 4.5.0 package to build gdc (tested tip and r89) with gcc 4.3.5 (D2!) using\n{{{..\/configure --enable-languages=d --disable-bootstrap --disable-nls --enable-checking --disable-multilib --disable-shared --prefix=\/mingw && make -j 2}}}\n\ngcc 4.3.4 made some problems, but 4.3.5 was just as good\/bad as 4.1.2.\n\n<<user ibuclaw>> also took his chance doing: http:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/MinGW \\\\\nbut got the same 0x00000005 error\n\nWhich runtime version didn't work?\\\\\nCould you test more configurations to narrow down our problem? D2, tip revision, newer TDM, other gcc version, whatever","created_on":"2010-07-25T00:32:18.781949+00:00","user":"trass3r","updated_on":"2010-07-25T00:33:34.326616+00:00","issue":21,"id":220999},{"content":"I get an 0xc0000005 error - which is apparently an Access Violation fault - and debugging the problem is out of the question as it seems to happen before the compiler (cc1d) calls the main function in the application. But that is besides the point. I think this may warrant needing to go into a separate issue. Feel free to triage the situation though.","created_on":"2010-07-25T01:06:49.779456+00:00","user":"ibuclaw","updated_on":null,"issue":21,"id":221009},{"content":"I posted the notes I made when compiling:  http:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/MinGWCompile\n\nI would compare the steps you took against them, I know the build scripts use a lot more options when configuring GCC.\n\nI remember getting an the access violation error and it occurred almost immediately.  Debugging it showed it was occurring in the mingw runtime.  That is why I suggested checking the runtime used.\n\nThe mingw runtime 3.17 caused the access violation, I think it was the newest at the time. \n\nAs for the appropriate runtime, it may need matching against the GCC version being compiled or the version of the compiler you used to create it.  \n\nI am currently compiling it again.  So I may have some information tomorrow.\n\n","created_on":"2010-07-25T01:44:04.342931+00:00","user":"venix1","updated_on":"2010-07-25T01:53:40.564647+00:00","issue":21,"id":221015},{"content":"After some digging, it appears GCC requires dllimport to be activated by using the macro DECL_DLLIMPORT_P.\r\n\r\nThe patch simply adds the macro to the approriate sections.\r\n","created_on":"2010-07-29T23:10:05.364562+00:00","user":"venix1","updated_on":null,"issue":21,"id":223399},{"content":"Applied both patches in <<changeset ea913c7eec42>>.\r\n\r\nNote that I didn't apply the patch to the druntime folder. This is because most things in there will most likely need to be changed anyways. Of course, when (or if) it is needed, this is still here.\r\n\r\nThanks for the patches, there are much appreciated. :)\r\n\r\nIssue resolved.","created_on":"2010-07-29T23:46:15.691621+00:00","user":"michaelp","updated_on":null,"issue":21,"id":223419},{"content":"For reference purposes: \r\n * **dllimport_fix.patch** activates dllimport attribute in GDC.\r\n\r\n * **iob_fix.patch** is unnecessary, and breaks things.","created_on":"2010-07-30T21:08:11.840606+00:00","user":"venix1","updated_on":null,"issue":21,"id":223792},{"content":"Fixed in commit 96.","created_on":"2010-06-21T18:37:08.940184+00:00","user":"michaelp","updated_on":null,"issue":18,"id":199963},{"content":"<<changeset 699:75a7b584473a>>","created_on":"2011-12-17T14:36:08.284086+00:00","user":"ibuclaw","updated_on":null,"issue":283,"id":882103},{"content":"D1? And are you using the latest hg tip? (Most recently updated 10 days ago.)","created_on":"2009-12-16T12:56:09.683455+00:00","user":"michaelp","updated_on":null,"issue":5,"id":93676},{"content":"Yes, the latest hg tip and D1. I uncommented a warning in d-builtins2.cc and that warning was being output. It was unable to make the functions.","created_on":"2009-12-16T14:00:56.903769+00:00","user":null,"updated_on":null,"issue":5,"id":93698},{"content":"I added a line that looks like this to the end of gcc_type_to_d_type: \r\n{{{\r\nwarning(1,\"Cannot create d type from gcc type: %d\",TREE_CODE(t));\r\n}}}\r\nEvery time this warning is printed, i get the number 14 every time. Looking through tree.def, that number corresponds to VECTOR_TYPE, which is not even handled by gcc_type_to_d_type. Is there some code missing?","created_on":"2009-12-19T18:21:21.370499+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":95394},{"content":"Could you try again with the latest tip? \r\n\r\nIt probably won't fix anything, but I just want to make sure that the error messages are still the same.","created_on":"2009-12-20T17:57:33.945441+00:00","user":"michaelp","updated_on":null,"issue":5,"id":95800},{"content":"I completely rebuilt gdc from a fresh source and with the latest tip and I got more bugs this time. I uncommented the warning on line 320 of d-builtins2.cc, though i had to modify it:\r\n{{{\r\nwarning(3,\"cannot create built in function type for %s\", name);\r\n}}}\r\nI'm attaching a file with the output and the last command of this most recent build","created_on":"2009-12-22T06:00:17.262777+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":96617},{"content":"I've uploaded a (possible) temporary fix. It's one small change in file.d.\r\n\r\nI think that the problem may be with OSX not being defined.","created_on":"2009-12-22T17:09:19.570552+00:00","user":"michaelp","updated_on":null,"issue":5,"id":96888},{"content":"That didn't seem to help.","created_on":"2009-12-22T20:47:58.319255+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":96979},{"content":"Alright, uploaded another thing. Try again.\n\nAlthough I thought the last one would work. :|\n\nDid you get the same errors? (The static assert?)","created_on":"2009-12-22T20:56:56.316840+00:00","user":"michaelp","updated_on":"2009-12-22T20:57:16.687406+00:00","issue":5,"id":96986},{"content":"Oh, no static assert. That wasn't what I was looking for before, but it isn't there anymore. I'm uploading a new set of errors from the same command, but it doesn't fix the issues with the builtins.","created_on":"2009-12-23T02:07:32.870534+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97142},{"content":"Oh. I was looking at error2.txt, and only saw the static assert error. Didn't look at the original thing you posted.(Which has many errors)\r\n\r\nSo, when you compile with the current hg, the only errors you get are the errors in error3.txt?\r\n\r\nGood to see OSX is defined now though. :)","created_on":"2009-12-23T02:15:44.034639+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97147},{"content":"No, the errors in error3.txt only replace the static assert. All of the other warnings about the builtins are the same as they were in Error2.txt","created_on":"2009-12-23T02:17:23.155493+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97148},{"content":"Alright, check again. Hope this time it works.","created_on":"2009-12-23T03:57:07.599143+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97165},{"content":"Nope.","created_on":"2009-12-23T04:04:14.447701+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97167},{"content":"Okay, another version is up.","created_on":"2009-12-23T14:36:13.603927+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97321},{"content":"Cool, file.d bugs fixed.\r\n\r\n{{{\r\n..\/..\/..\/libphobos\/std\/socket.d:131: Error: incompatible types for ((errs) == (0)): 'char*' and 'int'\r\n}}}\r\n\r\nIIRC, gdc was giving me some kind of error that was directly related to those warnings, but that was later in the build phase.","created_on":"2009-12-23T22:34:10.493839+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97466},{"content":"These are in addition to the builtins warnings.\r\n{{{\r\n..\/..\/..\/libphobos\/std\/file.d:1610: Error: no property 'st_atimespec' for type 'struct_stat'\r\n..\/..\/..\/libphobos\/std\/file.d:1610: Error: no property 'tv_sec' for type 'int'\r\n..\/..\/..\/libphobos\/std\/file.d:1610: Error: identifier '__time_t' is not defined\r\n..\/..\/..\/libphobos\/std\/file.d:1610: Error: __time_t is used as a type\r\n..\/..\/..\/libphobos\/std\/file.d:1610: Error: expression cast(void)1 is void and has no value\r\n..\/..\/..\/libphobos\/std\/file.d:1611: Error: no property 'st_mtimespec' for type 'struct_stat'\r\n..\/..\/..\/libphobos\/std\/file.d:1611: Error: no property 'tv_sec' for type 'int'\r\n..\/..\/..\/libphobos\/std\/file.d:1611: Error: identifier '__time_t' is not defined\r\n..\/..\/..\/libphobos\/std\/file.d:1611: Error: __time_t is used as a type\r\n..\/..\/..\/libphobos\/std\/file.d:1611: Error: expression cast(void)1 is void and has no value\r\n}}}","created_on":"2009-12-23T20:59:33.612541+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97429},{"content":"Aww. Same errors?\r\n\r\nNew version up.","created_on":"2009-12-24T02:37:18.187741+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97543},{"content":"Gah, silly mistake. Forgot on else in the version statements. \r\n\r\nThis should (hopefully) erase any errors in the file.d.\r\n\r\nWill look at the warning messages more later, but I just want to see that the thing compiles on OSX atm.","created_on":"2009-12-23T22:14:06.808897+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97456},{"content":"Okay.\r\n\r\nAnother version uploaded.","created_on":"2009-12-23T22:56:22.785514+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97472},{"content":"Cool, it looks like it is building now.","created_on":"2009-12-23T23:05:58.605942+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97474},{"content":"When building a hello world program I got these errors.\r\n{{{\r\nUndefined symbols:\r\n  \"__minfo_beg\", referenced from:\r\n      __minfo_beg$non_lazy_ptr in libgphobos.a(moduleinit.o)\r\n  \"__minfo_end\", referenced from:\r\n      __minfo_end$non_lazy_ptr in libgphobos.a(moduleinit.o)\r\nld: symbol(s) not found\r\ncollect2: ld returned 1 exit status\r\n}}}","created_on":"2009-12-24T00:01:46.771351+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97507},{"content":"Good to see it's compiling.\r\n\r\nUploaded another version to try out.","created_on":"2009-12-24T00:32:32.036695+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97521},{"content":"Ok, that compiled just fine, but it didn't seem to change anything.","created_on":"2009-12-24T01:02:37.393031+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97532},{"content":"Ok, cool! The linker error is gone now and Hello World works with writefln. My next step will be to try to build tango, so i'll tell you how that goes. I don't know if anything actually uses gcc.builtins, but the mass of warnings it gives me is getting annoying.","created_on":"2009-12-24T03:31:51.422572+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97556},{"content":"Great!\r\n\r\nFor the warnings, the warnings shown in error.txt, error2.txt, and error4.txt? \r\n\r\nWhen I enable that warning, I get some warnings as well, but not as many. Why don't you try commenting those warnings back out to avoid seeing the error messages?\r\n\r\nAlso, don't expect too much from Tango. I would be extremely surprised if it worked.","created_on":"2009-12-24T04:13:06.120291+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97562},{"content":"I'm getting two warnings, one that I added, and one that was already there. For now i'm using grep -v to remove those errors from the output, but it still doesn't seem right.\r\n\r\nAs for tango, Variant vararg support is not enabled automatically, but everything built just fine, except for one tiny bug which I think is fixed in a later frontend version. I'm going to try enabling variant vararg support just to see if it works.","created_on":"2009-12-24T04:41:28.043379+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97563},{"content":"Good to hear Tango still builds without much error.\n\nAnyways, when I uncomment some of the warnings, I get some of those warning as well.\n\n{{{\n\n\npi.d:0: warning: Cannot create d type from gcc type: 7\n\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_1\n\npi.d:0: warning: Cannot create d type from gcc type: 7\n\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_2\n\npi.d:0: warning: Cannot create d type from gcc type: 7\n\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_4\n\npi.d:0: warning: Cannot create d type from gcc type: 7\n\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_8\n\n}}}\n\nGCC type 7 is BOOLEAN_TYPE. (Also not handled in gcc_type_to_d_type)\n\nDon't know why that happens, but everything seems to work fine.\n\nI'll try with the version that was in the SVN for GDC, and see if I get the same warnings. If I do, then it's probably not a big deal. If not, then maybe I've changed something that made those come in.","created_on":"2009-12-24T14:55:17.758339+00:00","user":"michaelp","updated_on":"2009-12-24T15:05:21.220292+00:00","issue":5,"id":97894},{"content":"Well, I get the same warnings when in the SVN version of GDC as well: (4.3.1 branch)\r\nmichael@michael-laptop:~\/d\/projects$ \/opt\/gdcsvn\/bin\/gdc pi.d -o gdcsvn-pi\r\n{{{\r\n#!\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_1\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_2\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_4\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_8\r\n\r\nmichael@michael-laptop:~\/d\/projects$ \/opt\/gdc\/bin\/gdc pi.d -o gdc-pi\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_1\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_2\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_4\r\n\r\npi.d:0: warning: Cannot create d type from gcc type: 7\r\n\r\npi.d:0: warning: cannot create built in function type for __sync_bool_compare_and_swap_8\r\n\r\nmichael@michael-laptop:~\/d\/projects$ \r\n}}}\r\n\r\nJust to be sure, I will try with try it with the trunk as well.","created_on":"2009-12-24T15:51:14.447733+00:00","user":"michaelp","updated_on":null,"issue":5,"id":97906},{"content":"It was the same with the trunk.\n\nAlso, those warnings were with with GCC 4.1.2. When I uncommented the warnings in a GCC 4.3.1 build, I got the type warnings about 7, 9, and 0.\n\nAnyways, I don't think it's something you need to worry about.","created_on":"2009-12-24T16:43:34.313109+00:00","user":"michaelp","updated_on":"2009-12-24T16:43:44.762872+00:00","issue":5,"id":97914},{"content":"Ok, I guess I'll just comment out those warnings and ignore them. Thanks.","created_on":"2009-12-24T18:07:42.956523+00:00","user":"ricochet1k","updated_on":null,"issue":5,"id":97933},{"content":"Okay.\n\nIssue being marked as resolved then.","created_on":"2009-12-24T18:15:26.258801+00:00","user":"michaelp","updated_on":"2009-12-24T18:15:54.217744+00:00","issue":5,"id":97935},{"content":"Thank-you for taking the time to fill out this report.\r\n\r\nTo answer your question, 64 bit works just fine here (running Debian and using gcc-4.3.5).\r\n\r\nWhat OS are you using? and where did you get gcc from?\r\n\r\nRegards\r\nIain","created_on":"2010-04-04T23:58:18.483682+00:00","user":"ibuclaw","updated_on":null,"issue":15,"id":149570},{"content":"With the latest tip, I have not yet merged a fix for 4.3.x, excluding 4.3.1, so that may be a possibility. (If it did not build phobos correctly is usually when the error comes up)\r\n\r\nOtherwise, I think it should be fine.","created_on":"2010-04-05T02:39:03.763218+00:00","user":"michaelp","updated_on":null,"issue":15,"id":149584},{"content":"I also know someone using gdc on 64-bit.  It works fine as far as I know (and have played with his install).  If you try it out and find that it is broken in some way, submit a new bug with the details of the failure (such as details regarding these checksum errors you mentioned).  I'm going to go ahead and close this.","created_on":"2010-04-13T15:32:40.197187+00:00","user":"opticron","updated_on":null,"issue":15,"id":154704},{"content":"This will most likely be added in when the DMD front end version that introduced it is folded into GDC. I believe that it was in 1.045.","created_on":"2010-03-13T15:49:42.160015+00:00","user":"michaelp","updated_on":null,"issue":10,"id":138802},{"content":"Looking at the changelog, it appears the version that introduces this is actually 1.047, which happens to be next up in line to be merged.  I'm not sure if it is currently being worked on.","created_on":"2010-05-03T23:42:41.192159+00:00","user":"opticron","updated_on":null,"issue":10,"id":167675},{"content":"Since DMD 1.049 has been pushed, attaching patch to handle the switch -fdeps=. This has only been turned on for D1, as is not implemented in 2.015 (D2 should just ignore it).\n\nIf you can test it to ensure correct behaviour, would be appreciated.\n\nRegards","created_on":"2010-06-16T07:58:52.807421+00:00","user":"ibuclaw","updated_on":"2010-06-16T08:00:31.306703+00:00","issue":10,"id":196976},{"content":"Added -deps option in commit 94. Any issues with it, just shout. :)\r\n\r\nRegards","created_on":"2010-06-18T20:15:30.577749+00:00","user":"ibuclaw","updated_on":null,"issue":10,"id":198591},{"content":null,"created_on":"2010-02-16T02:15:43.623784+00:00","user":"venix1","updated_on":null,"issue":9,"id":124221},{"content":null,"created_on":"2010-02-16T02:16:01.543157+00:00","user":"venix1","updated_on":null,"issue":9,"id":124222},{"content":null,"created_on":"2010-02-16T02:21:19.019545+00:00","user":"venix1","updated_on":null,"issue":9,"id":124237},{"content":null,"created_on":"2010-02-16T02:21:31.229328+00:00","user":"venix1","updated_on":null,"issue":9,"id":124239},{"content":"Looking up the error code, I found it only appears in func.c.  A few lines above it one finds a method for handling unnamed function variables\r\n{{{\r\n arg->ident = id = Identifier::generateId(\"_param_\", i);\r\n}}}\r\n\r\nAfter looking up the method generateId in identifier.c you'll find.\r\n{{{\r\n     buf.printf(\"%zu\", i);\r\n}}}\r\n\r\n\r\nA little common sense gets you \r\n{{{\r\n_param_zu\r\n}}}\r\n\r\nApparently windows isn't handling the printf code %zu and instead is ignoring the %.\r\n\r\nLooking at the changesets, you'll see in the past it used to be %u.","created_on":"2010-02-23T23:22:27.222454+00:00","user":"venix1","updated_on":null,"issue":9,"id":128958},{"content":"dmd\/root.d:1658 is how dmd takes care of it for windows.  But it only detects it for Visual Studio.","created_on":"2010-02-24T04:28:00.410653+00:00","user":"venix1","updated_on":null,"issue":9,"id":129092},{"content":"Activates the code in root.c that replaces %z and %j with supported equivalents for windows. ","created_on":"2010-02-27T17:51:30.284893+00:00","user":"venix1","updated_on":null,"issue":9,"id":131288},{"content":"Fixed in commit 82.\r\n\r\nThanks for submitting the patch, it's very much appreciated.\r\n\r\nIssue resolved.","created_on":"2010-03-15T15:22:28.392601+00:00","user":"michaelp","updated_on":null,"issue":9,"id":139415},{"content":null,"created_on":"2010-01-28T14:17:52.148093+00:00","user":"michaelp","updated_on":null,"issue":6,"id":113647},{"content":null,"created_on":"2010-01-28T21:54:33.267986+00:00","user":"michaelp","updated_on":null,"issue":6,"id":113834},{"content":"The problem is that overloadResolve() returns m.anyf, which is not pointing to any particular referenced memory.\nThis doesn't seem to be affecting D2, and attached is the reason why, which fixes this issue.","created_on":"2010-02-28T04:13:35.020432+00:00","user":"ibuclaw","updated_on":"2010-02-28T04:20:06.315708+00:00","issue":6,"id":131467},{"content":"Fixed in commit 81.\r\n\r\nThanks for the patch.\r\n\r\nResolved.","created_on":"2010-03-15T15:14:44.672733+00:00","user":"michaelp","updated_on":null,"issue":6,"id":139408},{"content":"JSON support has been added in <<changeset 35f04cb2339c>>.\r\n\r\nTo use in GDC:\r\n\r\n{{{\r\ngdc hello.d -o hello -fXf=hellofile.json\r\n}}}\r\n\r\nTo use in gdmd: (Works the same as dmd)\r\n\r\n{{{\r\ngdmd hello.d -X \/\/defaults to hello.json\r\ngdmd hello.d -Xfhellofile.json\r\n}}}\r\n\r\nMarking as resolved.","created_on":"2010-08-09T22:04:55.348376+00:00","user":"michaelp","updated_on":null,"issue":52,"id":227959},{"content":"Added \"FreeBSD\" to the list of version identifiers, alongside \"freebsd\" in commit 79.","created_on":"2010-03-14T15:46:54.139332+00:00","user":"michaelp","updated_on":null,"issue":13,"id":139066},{"content":"Thanks Michael, but that comes with it's own set of problems too, as in several places, version (FreeBSD) imports deprecated modules that conflict with gcc\/config\/unix.d. Sorry, but I seem to have missed mentioning that in the original post.\n\nReferencing this output (built with revision 79):\n{{{\nmake[2]: Leaving directory `\/home\/iain\/gdc-1.043.4.3.4\/build\/x86_64-kfreebsd-gnu\/libphobos'\n\/home\/iain\/gdc-1.043.4.3.4\/build\/.\/gcc\/gdc -B\/home\/iain\/gdc-1.043.4.3.4\/build\/.\/gcc\/ -B\/usr\/x86_64-kfreebsd-gnu\/bin\/ -B\/usr\/x86_64-kfreebsd-gnu\/lib\/ -isystem \/usr\/x86_64-kfreebsd-gnu\/include -isystem \/usr\/x86_64-kfreebsd-gnu\/sys-include -o std\/socket.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_FreeBSD -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\n\t-I ..\/..\/..\/src\/libphobos -I ..\/..\/..\/src\/libphobos\/internal\/gc -I .\/x86_64-kfreebsd-gnu -c ..\/..\/..\/src\/libphobos\/std\/socket.d\n..\/..\/..\/src\/libphobos\/std\/socket.d:206: Error: std.c.freebsd.socket.AF_UNSPEC at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:20 conflicts with gcc.config.unix.AF_UNSPEC at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:454\n..\/..\/..\/src\/libphobos\/std\/socket.d:207: Error: std.c.freebsd.socket.AF_UNIX at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:21 conflicts with gcc.config.unix.AF_UNIX at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:474\n..\/..\/..\/src\/libphobos\/std\/socket.d:208: Error: std.c.freebsd.socket.AF_INET at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:22 conflicts with gcc.config.unix.AF_INET at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:460\n..\/..\/..\/src\/libphobos\/std\/socket.d:209: Error: std.c.freebsd.socket.AF_IPX at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:23 conflicts with gcc.config.unix.AF_IPX at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:478\n..\/..\/..\/src\/libphobos\/std\/socket.d:210: Error: std.c.freebsd.socket.AF_APPLETALK at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:24 conflicts with gcc.config.unix.AF_APPLETALK at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:447\n..\/..\/..\/src\/libphobos\/std\/socket.d:211: Error: std.c.freebsd.socket.AF_INET6 at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:25 conflicts with gcc.config.unix.AF_INET6 at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:453\n..\/..\/..\/src\/libphobos\/std\/socket.d:220: Error: std.c.freebsd.socket.SOCK_STREAM at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:266 conflicts with gcc.config.unix.SOCK_STREAM at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:423\n..\/..\/..\/src\/libphobos\/std\/socket.d:221: Error: std.c.freebsd.socket.SOCK_DGRAM at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:267 conflicts with gcc.config.unix.SOCK_DGRAM at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:422\n..\/..\/..\/src\/libphobos\/std\/socket.d:222: Error: std.c.freebsd.socket.SOCK_RAW at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:268 conflicts with gcc.config.unix.SOCK_RAW at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:419\n..\/..\/..\/src\/libphobos\/std\/socket.d:223: Error: std.c.freebsd.socket.SOCK_RDM at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:269 conflicts with gcc.config.unix.SOCK_RDM at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:420\n..\/..\/..\/src\/libphobos\/std\/socket.d:224: Error: std.c.freebsd.socket.SOCK_SEQPACKET at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:270 conflicts with gcc.config.unix.SOCK_SEQPACKET at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:421\n..\/..\/..\/src\/libphobos\/std\/socket.d:233: Error: std.c.freebsd.socket.IPPROTO_IP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:277 conflicts with gcc.config.unix.IPPROTO_IP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:543\n..\/..\/..\/src\/libphobos\/std\/socket.d:234: Error: std.c.freebsd.socket.IPPROTO_ICMP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:278 conflicts with gcc.config.unix.IPPROTO_ICMP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:549\n..\/..\/..\/src\/libphobos\/std\/socket.d:235: Error: std.c.freebsd.socket.IPPROTO_IGMP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:279 conflicts with gcc.config.unix.IPPROTO_IGMP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:555\n..\/..\/..\/src\/libphobos\/std\/socket.d:236: Error: std.c.freebsd.socket.IPPROTO_GGP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:280 conflicts with gcc.config.unix.IPPROTO_GGP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:550\n..\/..\/..\/src\/libphobos\/std\/socket.d:237: Error: std.c.freebsd.socket.IPPROTO_TCP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:281 conflicts with gcc.config.unix.IPPROTO_TCP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:538\n..\/..\/..\/src\/libphobos\/std\/socket.d:238: Error: std.c.freebsd.socket.IPPROTO_PUP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:282 conflicts with gcc.config.unix.IPPROTO_PUP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:535\n..\/..\/..\/src\/libphobos\/std\/socket.d:239: Error: std.c.freebsd.socket.IPPROTO_UDP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:283 conflicts with gcc.config.unix.IPPROTO_UDP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:546\n..\/..\/..\/src\/libphobos\/std\/socket.d:240: Error: std.c.freebsd.socket.IPPROTO_IDP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:284 conflicts with gcc.config.unix.IPPROTO_IDP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:536\n..\/..\/..\/src\/libphobos\/std\/socket.d:241: Error: std.c.freebsd.socket.IPPROTO_IPV6 at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:285 conflicts with gcc.config.unix.IPPROTO_IPV6 at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:539\n..\/..\/..\/src\/libphobos\/std\/socket.d:255: Error: std.c.freebsd.socket.protoent at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:201 conflicts with gcc.config.unix.protoent at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:668\n..\/..\/..\/src\/libphobos\/std\/socket.d:338: Error: std.c.freebsd.socket.servent at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:209 conflicts with gcc.config.unix.servent at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:676\n..\/..\/..\/src\/libphobos\/std\/socket.d:476: Error: std.c.freebsd.socket.hostent at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:378 conflicts with gcc.config.unix.hostent at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:685\n..\/..\/..\/src\/libphobos\/std\/socket.d:624: Error: std.c.freebsd.socket.sockaddr at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:116 conflicts with gcc.config.unix.sockaddr at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:652\n..\/..\/..\/src\/libphobos\/std\/socket.d:636: Error: std.c.freebsd.socket.sockaddr at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:116 conflicts with gcc.config.unix.sockaddr at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:652\n..\/..\/..\/src\/libphobos\/std\/socket.d:672: Error: std.c.freebsd.socket.sockaddr_in at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:127 conflicts with gcc.config.unix.sockaddr_in at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:659\n..\/..\/..\/src\/libphobos\/std\/socket.d:675: Error: std.c.freebsd.socket.sockaddr at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:116 conflicts with gcc.config.unix.sockaddr at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:652\n..\/..\/..\/src\/libphobos\/std\/socket.d:805: Error: std.c.freebsd.socket.SD_RECEIVE at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:109 conflicts with std.c.unix.unix.SD_RECEIVE at ..\/..\/..\/src\/libphobos\/std\/c\/unix\/unix.d:209\n..\/..\/..\/src\/libphobos\/std\/socket.d:806: Error: std.c.freebsd.socket.SD_SEND at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:110 conflicts with std.c.unix.unix.SD_SEND at ..\/..\/..\/src\/libphobos\/std\/c\/unix\/unix.d:210\n..\/..\/..\/src\/libphobos\/std\/socket.d:807: Error: std.c.freebsd.socket.SD_BOTH at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:111 conflicts with std.c.unix.unix.SD_BOTH at ..\/..\/..\/src\/libphobos\/std\/c\/unix\/unix.d:211\n..\/..\/..\/src\/libphobos\/std\/socket.d:816: Error: std.c.freebsd.socket.MSG_OOB at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:94 conflicts with gcc.config.unix.MSG_OOB at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:437\n..\/..\/..\/src\/libphobos\/std\/socket.d:817: Error: std.c.freebsd.socket.MSG_PEEK at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:95 conflicts with gcc.config.unix.MSG_PEEK at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:430\n..\/..\/..\/src\/libphobos\/std\/socket.d:818: Error: std.c.freebsd.socket.MSG_DONTROUTE at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:96 conflicts with gcc.config.unix.MSG_DONTROUTE at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:432\n..\/..\/..\/src\/libphobos\/std\/socket.d:819: Error: std.c.freebsd.socket.MSG_NOSIGNAL at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:97 conflicts with gcc.config.unix.MSG_NOSIGNAL at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:428\n..\/..\/..\/src\/libphobos\/std\/socket.d:985: Error: std.c.freebsd.socket.SOL_SOCKET at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:38 conflicts with gcc.config.unix.SOL_SOCKET at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:390\n..\/..\/..\/src\/libphobos\/std\/socket.d:1041: Error: std.c.freebsd.socket.SO_DEBUG at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:43 conflicts with gcc.config.unix.SO_DEBUG at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:410\n..\/..\/..\/src\/libphobos\/std\/socket.d:1042: Error: std.c.freebsd.socket.SO_BROADCAST at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:44 conflicts with gcc.config.unix.SO_BROADCAST at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:400\n..\/..\/..\/src\/libphobos\/std\/socket.d:1043: Error: std.c.freebsd.socket.SO_REUSEADDR at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:45 conflicts with gcc.config.unix.SO_REUSEADDR at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:396\n..\/..\/..\/src\/libphobos\/std\/socket.d:1044: Error: std.c.freebsd.socket.SO_LINGER at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:46 conflicts with gcc.config.unix.SO_LINGER at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:399\n..\/..\/..\/src\/libphobos\/std\/socket.d:1045: Error: std.c.freebsd.socket.SO_OOBINLINE at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:48 conflicts with gcc.config.unix.SO_OOBINLINE at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:406\n..\/..\/..\/src\/libphobos\/std\/socket.d:1046: Error: std.c.freebsd.socket.SO_SNDBUF at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:49 conflicts with gcc.config.unix.SO_SNDBUF at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:409\n..\/..\/..\/src\/libphobos\/std\/socket.d:1047: Error: std.c.freebsd.socket.SO_RCVBUF at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:50 conflicts with gcc.config.unix.SO_RCVBUF at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:411\n..\/..\/..\/src\/libphobos\/std\/socket.d:1048: Error: std.c.freebsd.socket.SO_DONTROUTE at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:52 conflicts with gcc.config.unix.SO_DONTROUTE at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:403\n..\/..\/..\/src\/libphobos\/std\/socket.d:1051: Error: std.c.freebsd.socket.TCP_NODELAY at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:56 conflicts with gcc.config.unix.TCP_NODELAY at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:643\n..\/..\/..\/src\/libphobos\/std\/socket.d:1054: Error: std.c.freebsd.socket.IPV6_UNICAST_HOPS at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:74 conflicts with gcc.config.unix.IPV6_UNICAST_HOPS at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:584\n..\/..\/..\/src\/libphobos\/std\/socket.d:1055: Error: std.c.freebsd.socket.IPV6_MULTICAST_IF at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:75 conflicts with gcc.config.unix.IPV6_MULTICAST_IF at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:593\n..\/..\/..\/src\/libphobos\/std\/socket.d:1056: Error: std.c.freebsd.socket.IPV6_MULTICAST_LOOP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:77 conflicts with gcc.config.unix.IPV6_MULTICAST_LOOP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:611\n..\/..\/..\/src\/libphobos\/std\/socket.d:1057: Error: std.c.freebsd.socket.IPV6_JOIN_GROUP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:78 conflicts with gcc.config.unix.IPV6_JOIN_GROUP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:605\n..\/..\/..\/src\/libphobos\/std\/socket.d:1058: Error: std.c.freebsd.socket.IPV6_LEAVE_GROUP at ..\/..\/..\/src\/libphobos\/std\/c\/freebsd\/socket.d:79 conflicts with gcc.config.unix.IPV6_LEAVE_GROUP at .\/x86_64-kfreebsd-gnu\/gcc\/config\/unix.d:565\nmake[1]: *** [std\/socket.o] Error 1\nmake[1]: Leaving directory `\/home\/iain\/gdc-1.043.4.3.4\/build\/x86_64-kfreebsd-gnu\/libphobos'\nmake: *** [all] Error 2\n}}}\n\nHence why I suggested that libphobos should be updated to a more recent revision that doesn't have this problem. (hint, one that does not have the std\/c\/freebsd, std\/c\/posix or std\/c\/solaris directories).\n\nRegards\nIain","created_on":"2010-03-14T21:04:06.303956+00:00","user":"ibuclaw","updated_on":"2010-03-14T21:05:27.750948+00:00","issue":13,"id":139163},{"content":"Removed FreeBSD identifier and added patch.\r\n\r\nAlso, what do you mean without std\/c\/freebsd, etc? I check dmd 1.057, and it still has those directories. Or are you talking about something else? (I assumed you mean a more recent dmd revision)","created_on":"2010-03-15T13:21:07.660058+00:00","user":"michaelp","updated_on":null,"issue":13,"id":139334},{"content":"Hmm... I've just checked again, and it is indeed there. I think I must have confused it with dmd2's library.\r\n\r\nSorry about that.\r\n\r\nRegards\r\nIain","created_on":"2010-03-15T13:57:40.810128+00:00","user":"ibuclaw","updated_on":null,"issue":13,"id":139363},{"content":"No problem.\r\n\r\n\r\nIssue resolved.","created_on":"2010-03-15T14:59:47.542911+00:00","user":"michaelp","updated_on":null,"issue":13,"id":139400},{"content":"Hi Michael, do you mind if I reopen this? As soon as I switched back to my Linux box, I came to realise what the *BSD system was doing that Linux wasn't.\n\nAttached is a revised patch - if you don't mind reviewing it. (see gdc-libphobos-kbsd2.patch)\n\nIn short, have undid commit 80 and readded what you did in commit 79. Then fixed freebsd\/freebsd.d of conflicts (making a backup of it in the process) - so it contains pretty much what linux\/linux.d contains - and commented out all imports of freebsd\/socket.d and freebsd\/pthreads.d where needed.\n\nIt should apply without fault to the most recent commit version, closing this once and for all. :-)\n\nRegards\nIain","created_on":"2010-03-15T23:43:00.346500+00:00","user":"ibuclaw","updated_on":"2010-03-15T23:53:07.000235+00:00","issue":13,"id":139716},{"content":"Added in commit 84. Hope it works with 1.046. :)","created_on":"2010-03-16T02:14:14.493611+00:00","user":"michaelp","updated_on":null,"issue":13,"id":139762},{"content":"I have my fingers, arms, legs and toes crossed, and am touching wood on that comment. ;)\r\n\r\nThanks,","created_on":"2010-03-16T07:49:54.986207+00:00","user":"ibuclaw","updated_on":null,"issue":13,"id":139852},{"content":"It does work, just not in the way you expected. (-Wno-unknown-pragma).\r\n\r\nAltering behaviour to consider -ignore before warning.","created_on":"2011-12-17T13:35:05.566653+00:00","user":"ibuclaw","updated_on":null,"issue":286,"id":882052},{"content":"<<changeset 698:f342fde254e2>>","created_on":"2011-12-17T14:16:07.029499+00:00","user":"ibuclaw","updated_on":null,"issue":286,"id":882088},{"content":"This is not a bug.\n\nGCC conditionally modifies\/removes registers depending on the TARGET_CPU system it is compiling for. By default it is set to generic, but additional features can be added via the -m flag.\n\nTo resolve your problem, compile your code with the compiler flags: -mmmx -msse\n\nRegards\nIain","created_on":"2010-02-28T15:28:57.481026+00:00","user":"ibuclaw","updated_on":"2010-02-28T15:30:43.301002+00:00","issue":7,"id":131660},{"content":"Need a little bit more mandating on marking functions inlinable I think.","created_on":"2011-02-20T18:49:41.795837+00:00","user":"ibuclaw","updated_on":null,"issue":155,"id":378014},{"content":"<<changeset 473>>","created_on":"2011-02-20T20:35:23.893354+00:00","user":"ibuclaw","updated_on":null,"issue":155,"id":378119},{"content":"Recompiled GDC with msys and it appears to be defined now.","created_on":"2010-02-17T10:33:48.811367+00:00","user":"venix1","updated_on":null,"issue":8,"id":124987},{"content":"So, this issue can be closed?","created_on":"2010-02-17T22:36:17.540588+00:00","user":"michaelp","updated_on":null,"issue":8,"id":125451},{"content":"Sure.  \r\n\r\nI don't know what caused it to be undefined, but having tried compiling with both Cygwin and Msys, I'd recommend staying away from Cygwin.  Msys got to libphobos before having issues, Cygwin required modifications to both the runtime and configuration files. ","created_on":"2010-02-18T00:08:04.089707+00:00","user":"venix1","updated_on":null,"issue":8,"id":125486},{"content":"GDC uses the files 'd-lang.cc' and 'target-ver-syms.sh' to determine compiler flags to set.  By default it sets version Win32 for Windows, but not version Windows.","created_on":"2010-02-24T23:52:09.315328+00:00","user":"venix1","updated_on":null,"issue":8,"id":129636},{"content":"Patch modifies 'd-lang.cc' to add the 'Windows' to the global version list.  One could also look into doing something similar to define 'Posix'.","created_on":"2010-02-27T17:48:40.936652+00:00","user":"venix1","updated_on":null,"issue":8,"id":131285},{"content":"The reason it became undefined is that GDC uses a file 'phobos-ver-syms' to define extra version types.   Apparently cygwin did not  properly set it to Windows, causing it to be undefined.\n\n","created_on":"2010-02-28T10:26:26.971578+00:00","user":"venix1","updated_on":"2010-02-28T10:26:50.880850+00:00","issue":8,"id":131542},{"content":"Added in commit 79.","created_on":"2010-03-14T15:47:38.904569+00:00","user":"michaelp","updated_on":null,"issue":8,"id":139067},{"content":null,"created_on":"2010-03-15T17:25:20.933467+00:00","user":"michaelp","updated_on":null,"issue":8,"id":139478},{"content":"Will look into it.\r\n\r\nTry adding STATIC_CHAIN_EXPR under a list of cases that, according to the GCC comment \"have no cost\", referring to number of instructions. This just brought up another ICE.\r\n\r\nAlso, how did you figure out it is STATIC_CHAIN_EXPR?","created_on":"2010-04-03T01:15:53.440704+00:00","user":"michaelp","updated_on":null,"issue":14,"id":148793},{"content":"Set a breakpoint in gdb on the line where the compiler asserts, (tree-inline.c:2494 on my system).\r\n\r\nIf you are running on gcc-4.3:\r\n\r\nprint x->base.code\r\n\r\nElse, any version prior, it should be:\r\n\r\nprint x->common.code\r\n\r\n\r\nHaving walked through the tree a bit, looks like this is a feature that has not been properly implemented by either glue or backend. Oh well, no biggie\/rush required - I don't think anyone uses structs in this way anyway... at least, not yet. :)","created_on":"2010-04-03T19:18:23.017247+00:00","user":"ibuclaw","updated_on":null,"issue":14,"id":149014},{"content":"Just found out this is directly related to http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1813","created_on":"2010-05-22T17:21:00.978978+00:00","user":"ibuclaw","updated_on":null,"issue":14,"id":181957},{"content":"Some insight into this issue:\r\n\r\nFrom what I can tell, the issue is due to a lack of error checking in the function \"tree IRState::getFrameForSymbol(Dsymbol * nested_sym)\" in d-codegen.cc. This function appears to be equivalent to the function \"elem *getEthis(Loc loc, IRState *irs, Dsymbol *fd)\" in toir.c in DMD. If you look at the errors produced by the two test cases for this, (the case posted here and the case on D's bugzilla), they are both produced by getEthis in DMD.\r\n\r\nIn DMD, this issue produces:\r\n\r\n{{{\r\ncase1.d(2): Error: function case1.main.A!(f).A.f cannot get frame pointer to f\r\n}}}\r\n\r\nThis error can be found in getEthis, lines 202-207:\r\n\r\n{{{\r\nif (!cd->isNested() || !cd->vthis)\r\n{\r\nLnoframe:\r\n    irs->getFunc()->error(loc, \"cannot get frame pointer to %s\", fd->toChars());\r\n    return el_long(TYnptr, 0);      \/\/ error recovery\r\n}\r\n}}}\r\n\r\nIn DMD, the issue in D's bugzilla produces:\r\n\r\n{{{\r\ncase2.d(11): Error: function case2.main.dcb is a nested function and cannot be accessed from thunk\r\n}}}\r\n\r\nThis error can be found in getEthis, lines 152-156:\r\n\r\n{{{\r\nif (!irs->sthis)                \/\/ if no frame pointer for this function\r\n{\r\n    fd->error(loc, \"is a nested function and cannot be accessed from %s\", irs->getFunc()->toChars());\r\n    ethis = el_long(TYnptr, 0); \/\/ error recovery\r\n}\r\n}}}\r\n\r\nAlso note that when this function is executed, the first if statement in d-codegen.cc: (lines 2533-2538)\r\n\r\n{{{\r\nif ( (nested_func = nested_sym->isFuncDeclaration()) )\r\n{\r\n    \/\/ gcc_assert(nested_func->isNested())\r\n    outer_func = nested_func->toParent2()->isFuncDeclaration();\r\n    gcc_assert(outer_func != NULL);\r\n}\r\n}}}\r\n\r\nThe code in here is always executed, rather than what is in the else part of the statement.\r\n\r\nThe function \"IRState::getFrameForSymbol\" is called by \"IRState::getFrameForFunction\" in both instances. Which leads me to believe the problem could be in \"tree IRState::call(Expression * expr, \/*TypeFunction * func_type, *\/ Array * arguments)\" (line 897, d-codegen.cc) becuase this is where getFrameForFunction is called from. The error checking code could be placed around here:\r\n\r\n{{{\r\n} else if (expr->op == TOKvar) {\r\n    FuncDeclaration * fd = ((VarExp *) expr)->var->isFuncDeclaration();\r\n    tf = (TypeFunction *) fd->type;\r\n    if (fd) {\r\n        if (fd->isNested()) {\r\n#if D_NO_TRAMPOLINES\r\n        object = getFrameForFunction(fd);\r\n#else\r\n        \/\/ Pass fake argument for nested functions\r\n        object = d_null_pointer;\r\n#endif\r\n        } else if (fd->needThis()) {\r\n            expr->error(\"need 'this' to access member %s\", fd->toChars());\r\n            object = d_null_pointer; \/\/ continue processing...\r\n        }\r\n    }\r\n}\r\n}}}\r\n\r\nLast place that the error checking code could also be placed in is \"IRState::getFrameForFunction\".","created_on":"2010-08-14T21:24:40.923180+00:00","user":"michaelp","updated_on":null,"issue":14,"id":229979},{"content":"Thanks for looking at it Michael. :-)\r\n\r\nWith your insight, Bugzilla 1813 is fixed in <<changeset 212>>. Will look into this issue later.","created_on":"2010-08-23T20:33:05.010755+00:00","user":"ibuclaw","updated_on":null,"issue":14,"id":233425},{"content":"Fixed in <<changeset 229>>","created_on":"2010-08-30T16:19:39.713267+00:00","user":"ibuclaw","updated_on":null,"issue":14,"id":236588},{"content":"Duplicate of <<issue 17>>\r\n\r\nIn the meantime, please apply https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100408\/17\/fix1.patch as a workaround.\r\n\r\nRegards\r\nIain\r\n\r\nDuplicate of #17.","created_on":"2010-04-18T16:44:57.826225+00:00","user":"ibuclaw","updated_on":null,"issue":20,"id":157890},{"content":"Okay, thanks.\r\nI'm assuming both of you are using GCC 4.3.4?","created_on":"2009-10-24T15:38:16.992806+00:00","user":"michaelp","updated_on":null,"issue":2,"id":67936},{"content":"Which version are you trying to build? d1 or d2?","created_on":"2009-10-23T23:38:23.705100+00:00","user":"goshawk","updated_on":null,"issue":2,"id":67737},{"content":"Ah sorry, you are right, it is –  of course – not included with the debug output. I am trying to build the D1 version by using --d-language-version=1 with setup-gcc.sh. ","created_on":"2009-10-23T23:44:15.137240+00:00","user":"klickverbot","updated_on":null,"issue":2,"id":67741},{"content":"Yup","created_on":"2009-10-24T15:50:29.526550+00:00","user":"goshawk","updated_on":null,"issue":2,"id":67938},{"content":"I need these command outputs:\r\ngo the d dir you cloned with hd and go **hg branch** and **hg tip**\r\nIn the meantime i'm trying to compile D1 trunk with ubuntu karmic.","created_on":"2009-10-24T09:19:36.554513+00:00","user":"goshawk","updated_on":null,"issue":2,"id":67819},{"content":"Exactly th same problem here on x86_64 when trying to build a d1 compiler.\r\n{{{\r\n[henning@cameron d]$ hg branch\r\ndefault\r\n[henning@cameron d]$ hg tip\r\nchangeset:   51:6991415c9d05\r\nbranch:      gcc-4.4.x\r\ntag:         tip\r\nuser:        Vincenzo Ampolo <vincenzo.ampolo@gmail.com>\r\ndate:        Thu Oct 22 16:54:50 2009 +0200\r\nsummary:     fixed error in the setup-gcc.sh file, to be checked later\r\n}}}","created_on":"2009-10-24T11:28:09.144164+00:00","user":null,"updated_on":null,"issue":2,"id":67862},{"content":"Here is another report by sokol\r\n{{{\r\n\r\n$ gdb .\/cc1d\r\nGNU gdb (GDB) 7.0-ubuntu\r\n                                                 \r\n...\r\n                                                     \r\n(gdb) r -isystem \/usr\/local\/i686-pc-linux-gnu\/include -isystem \/usr\/local\/i686-pc-linux-gnu\/sys-include -o file.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -fversion=Unix  \/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/gcc\/d\/phobos\/std\/file.d -I\/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/gcc\/d\/phobos -I\/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/objdir\/i686-pc-linux-gnu\/libphobos\/i686-pc-linux-gnu                                                                                           \r\nStarting program: \/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/objdir\/gcc\/cc1d -isystem \/usr\/local\/i686-pc-linux-gnu\/include -isystem \/usr\/local\/i686-pc-linux-gnu\/sys-include -o file.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -fversion=Unix  \/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/gcc\/d\/phobos\/std\/file.d -I\/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/gcc\/d\/phobos -I\/home\/sokol\/workspace1\/gdc\/dev\/gcc-4.3.4\/objdir\/i686-pc-linux-gnu\/libphobos\/i686-pc-linux-gnu                         \r\n _ctor _ctor _ctor read write append rename remove getSize getAttributes getTimes exists isfile isdir chdir mkdir rmdir getcwd init isdir isfile size creationTime lastAccessTime lastWriteTime doStat listdir listing listdir callback listdir callback listdir listing listdir                                                                                       \r\nProgram received signal SIGSEGV, Segmentation fault.                                                                                                                               \r\nis_gimple_min_invariant (t=0x0) at ..\/..\/gcc\/tree-gimple.c:181                                                                                                                     \r\n181       switch (TREE_CODE (t))                                                                                                                                                   \r\n(gdb)bt                                                                                                                                                                           \r\n#0  is_gimple_min_invariant (t=0x0) at ..\/..\/gcc\/tree-gimple.c:181                                                                                                                 \r\n#1  0x081e7e48 in gimplify_compound_lval (expr_p=0xb7e9eb5c, pre_p=0xbfffeaa4, post_p=0xbfffeaa0, gimple_test_f=0x82c84a0 <is_gimple_lvalue>, fallback=fb_lvalue)                   \r\n    at ..\/..\/gcc\/gimplify.c:1859                                                                                                                                                   \r\n#2  gimplify_expr (expr_p=0xb7e9eb5c, pre_p=0xbfffeaa4, post_p=0xbfffeaa0, gimple_test_f=0x82c84a0 <is_gimple_lvalue>, fallback=fb_lvalue) at ..\/..\/gcc\/gimplify.c:5681             \r\n#3  0x081e60a3 in gimplify_modify_expr (expr_p=0xbfffeaf0, pre_p=0xbfffeaa4, post_p=0xbfffeaa0, want_value=0 '\\000') at ..\/..\/gcc\/gimplify.c:3917                                   \r\n#4  0x081e6a9c in gimplify_expr (expr_p=0xbfffeaf0, pre_p=0xbfffeaa4, post_p=0xbfffeaa0, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none) at ..\/..\/gcc\/gimplify.c:5727   \r\n#5  0x081e9a7f in gimplify_stmt (stmt_p=0xbfffeaf0) at ..\/..\/gcc\/gimplify.c:4664                                                                                                   \r\n#6  0x081ea2df in gimplify_and_add (t=0xb7ea706c, list_p=0xbfffecc4) at ..\/..\/gcc\/gimplify.c:348                                                                                   \r\n#7  0x081ea493 in gimplify_init_ctor_eval (object=0xb7ea2a50, elts=0xb7e9f640, pre_p=0xbfffecc4, cleared=1 '\\001') at ..\/..\/gcc\/gimplify.c:3131                                     \r\n#8  0x081ec4c6 in gimplify_init_constructor (expr_p=0xb7e92944, pre_p=0xbfffecc4, post_p=0xbfffecc0, want_value=0 '\\000', notify_temp_creation=0 '\\000')\r\n    at ..\/..\/gcc\/gimplify.c:3349                                                                                                                                                   \r\n#9  0x081ecb87 in gimplify_modify_expr_rhs (expr_p=0xb7e92944, from_p=0xb7e93f08, to_p=0xb7e93f04, pre_p=0xbfffecc4, post_p=0xbfffecc0, want_value=<value optimised out>)           \r\n    at ..\/..\/gcc\/gimplify.c:3638                                                                                                                                                   \r\n#10 0x081e602a in gimplify_modify_expr (expr_p=0xb7e92944, pre_p=0xbfffecc4, post_p=0xbfffecc0, want_value=0 '\\000') at ..\/..\/gcc\/gimplify.c:3890                                   \r\n#11 0x081e6a9c in gimplify_expr (expr_p=0xb7e92944, pre_p=0xbfffecc4, post_p=0xbfffecc0, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none) at ..\/..\/gcc\/gimplify.c:5727   \r\n#12 0x081e9a7f in gimplify_stmt (stmt_p=0xb7e92944) at ..\/..\/gcc\/gimplify.c:4664                                                                                                   \r\n#13 0x081e7699 in gimplify_statement_list (expr_p=0xb7e9eb38, pre_p=0xbfffed74, post_p=0xbfffed70, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none)                     \r\n    at ..\/..\/gcc\/gimplify.c:4114                                                                                                                                                   \r\n#14 gimplify_expr (expr_p=0xb7e9eb38, pre_p=0xbfffed74, post_p=0xbfffed70, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none) at ..\/..\/gcc\/gimplify.c:5997                 \r\n#15 0x081e9a7f in gimplify_stmt (stmt_p=0xb7e9eb38) at ..\/..\/gcc\/gimplify.c:4664                                                                                                   \r\n#16 0x081ea287 in gimplify_to_stmt_list (stmt_p=0xb7e9eb38) at ..\/..\/gcc\/gimplify.c:4672                                                                                           \r\n#17 0x081e7f11 in gimplify_bind_expr (expr_p=0xb7e82918, pre_p=0xbfffee44, post_p=0xbfffee40, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none)                           \r\n    at ..\/..\/gcc\/gimplify.c:1112                                                                                                                                                   \r\n#18 gimplify_expr (expr_p=0xb7e82918, pre_p=0xbfffee44, post_p=0xbfffee40, gimple_test_f=0x82c8200 <is_gimple_stmt>, fallback=fb_none) at ..\/..\/gcc\/gimplify.c:5845                 \r\n#19 0x081e9a7f in gimplify_stmt (stmt_p=0xb7e82918) at ..\/..\/gcc\/gimplify.c:4664                                                                                                   \r\n#20 0x081e9e4b in gimplify_body (body_p=0xb7e82918, fndecl=0xb7e828c0, do_parms=1 '\\001') at ..\/..\/gcc\/gimplify.c:6508                                                             \r\n#21 0x081ea0ad in gimplify_function_tree (fndecl=0xb7e828c0) at ..\/..\/gcc\/gimplify.c:6588                                                                                           \r\n#22 0x080e7e26 in genericize_function (this=0x8811c98, multiobj=0) at ..\/..\/gcc\/d\/d-glue.cc:2377                                                                                   \r\n#23 FuncDeclaration::toObjFile (this=0x8811c98, multiobj=0) at ..\/..\/gcc\/d\/d-glue.cc:2837                                                                                           \r\n#24 0x080501f0 in AttribDeclaration::toObjFile (this=0x8811a80, multiobj=0) at ..\/..\/gcc\/d\/dmd\/attrib.c:170\r\n#25 0x080501f0 in AttribDeclaration::toObjFile (this=0x8816e58, multiobj=0) at ..\/..\/gcc\/d\/dmd\/attrib.c:170\r\n#26 0x080e44c0 in Module::genobjfile (this=0x87cc880, multiobj=0) at ..\/..\/gcc\/d\/d-glue.cc:2942\r\n#27 0x080d6dea in d_parse_file () at ..\/..\/gcc\/d\/d-lang.cc:1080\r\n#28 0x082a1dec in compile_file (argc=17, argv=0xbffff134) at ..\/..\/gcc\/toplev.c:1042\r\n#29 do_compile (argc=17, argv=0xbffff134) at ..\/..\/gcc\/toplev.c:2244\r\n#30 toplev_main (argc=17, argv=0xbffff134) at ..\/..\/gcc\/toplev.c:2276\r\n#31 0x08113e3f in main (argc=Cannot access memory at address 0x0\r\n) at ..\/..\/gcc\/main.c:35\r\n}}}\r\n","created_on":"2009-10-24T11:36:50.201162+00:00","user":"goshawk","updated_on":null,"issue":2,"id":67863},{"content":"I have almost got the front end + Phobos up to 1.040 working. \r\n\r\nI will upload that soon, and see if the problem persists.\r\n\r\nI'll make sure to test with GCC 4.3.4 as well, as right now, I am using 4.3.1. That could be a possible difference.\r\n\r\nAlso, what OS are you guys running?","created_on":"2009-10-24T14:58:32.262437+00:00","user":"michaelp","updated_on":null,"issue":2,"id":67910},{"content":"I've reproduced the bug on ubuntu karmic x86_64","created_on":"2009-10-24T15:14:52.997573+00:00","user":"goshawk","updated_on":null,"issue":2,"id":67927},{"content":"Here its ubuntu (jaunty\/karmic mix). (henning)","created_on":"2009-10-24T15:27:44.482074+00:00","user":null,"updated_on":null,"issue":2,"id":67932},{"content":"Okay.\r\n\r\nWhen I upload the new version, I may overwrite your last D1 changes. Do you mind, or should I upload it so that it includes that changes that you just made?\r\n\r\nThey don't seem too significant, so I'm not sure it would matter much.\r\n\r\nAfter I finish 1.040, I will test it again on GCC 4.3.1, just to make sure, and then test on GCC 4.3.4, to see if the GCC version is the issue.","created_on":"2009-10-24T19:03:37.498034+00:00","user":"michaelp","updated_on":null,"issue":2,"id":67991},{"content":"Sorry for my inaccurate report, it was late in the night when I submitted it…\r\n\r\nAs already mentioned on IRC, I get exactly the same backtrace as sokol. Please see the first post for information on the versions of the tools I am using; the operating system is Kubuntu Jaunty (this should not really matter though).","created_on":"2009-10-24T22:08:05.591416+00:00","user":"klickverbot","updated_on":null,"issue":2,"id":68022},{"content":"Michael, don't worry, just commit your working 1.040 version, i'll do a check and i'll redo my modifies if it's needed :)\r\n","created_on":"2009-10-25T03:41:17.810665+00:00","user":"goshawk","updated_on":null,"issue":2,"id":68049},{"content":"Okay, thanks.\r\n\r\nAlso, when I tested the latest branch with GCC 4.3.4, I got the file.d errors.\r\n\r\nBUT, when testing it with either GCC 4.3.1, or GCC 4.1.2, everything compiled just fine.\r\n\r\nSo this is not necessarily related to the front end or phobos, but possibly the files that are patched when running setup-gcc.sh.","created_on":"2009-10-25T14:03:11.155611+00:00","user":"michaelp","updated_on":null,"issue":2,"id":68146},{"content":"Has there been any progress on this issue?  I just bumped up against it on Debian.  I'll be poking around with it blindly at least for a short while.","created_on":"2010-01-03T06:03:26.895352+00:00","user":null,"updated_on":null,"issue":2,"id":102494},{"content":"No, unfortunately not.\r\n\r\nRight now, I am working on adding some other things to GDC.\r\n\r\nAfter I finish with these additions, I will look at this again.","created_on":"2010-01-03T15:10:02.694594+00:00","user":"michaelp","updated_on":null,"issue":2,"id":102595},{"content":"I've been looking into this and it seems the null deref comes from a null_TREE that is assigned during an integer division that results in a div by 0.  The 0 there comes from an offset alignment being 1 that gets divided by BITS_PER_UNIT (happens to be 8).  I'm not sure if this 1 is intentional or accidental, but it seems like it isn't handled properly since 1 in this context means that the type had an 'aligned' property as per gcc\/tree.h (look for uses of off_align).  I have not yet found where this 1 is being generated, but I'm headed down that path at the moment.  ibuclaw is headed down a different path by looking at diffs between 4.3.1 and 4.3.2 and differences in applied diffs between D1 and D2.  On a second front, I've been searching through the DMDFE\/GCC glue code to see what I can find there, but that hasn't proven fruitful yet.","created_on":"2010-02-18T18:05:33.867672+00:00","user":"opticron","updated_on":null,"issue":2,"id":125898},{"content":"For those of you who want to follow my progress:\r\n\r\nOk, so I've dug through the hell that is GCC's tree structure.\r\n\r\nHere is the process to get from the function declaration that's failing to the element that's causing the failure:\r\n\r\nStart in d_glue.cc in genericize_function, you should see that tree fndecl is passed into it.\r\n\r\nPop open gdb, set the breakpoint there, and hit continue until you get to the point just before the crash.\r\n\r\nFrom this point, you can traverse the crazy tree that is GCC's internals.\r\n\r\nprint fndecl->decl_non_common.saved_tree (this yields the location of the tree that holds the body statement list)\r\n\r\ncall debug_tree(the location you just got)\r\n\r\nfind the modify_expr address for the 3rd stmt inside the body statement_list\r\n\r\ncall debug_tree(the address you just grabbed)\r\n\r\nlook under arg 1, there should be a constructor tree object, grab its address\r\n\r\nprint ((tree)the address you snagged)->constructor.elts[0]->base->vec[0]->index\r\n\r\nsnag the address of the index element\r\n\r\ncall debug_tree(the address)\r\n\r\nTHIS IS THE ELEMENT THAT IS BREAKING THINGS\r\n\r\nTAKE NOTE OF: align 8 offset_align 1\r\n\r\noffset_align is what is heavily toasting the code later on\r\n","created_on":"2010-02-20T07:04:01.277613+00:00","user":"opticron","updated_on":null,"issue":2,"id":126824},{"content":"I've managed to work out the minimal code required to reproduce this bug:\r\n\r\n{{{\r\n#!D\r\nstruct foo {\r\n    int bar = 1;\r\n}\r\n\r\nvoid main() {\r\n    foo *f; \/\/ OK\r\n    foo f;  \/\/ Segfaults\r\n}\r\n}}}\r\nMay this be of use to anyone else looking into it.\r\n\r\nRegards\r\n\r\nIain","created_on":"2010-03-01T23:52:38.599519+00:00","user":"ibuclaw","updated_on":null,"issue":2,"id":132661},{"content":"OK, I''ve tracked this down to the bug and fix related to this.\r\n\r\nhttp:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=36688\r\n\r\nhttp:\/\/gcc.gnu.org\/viewcvs\/trunk\/gcc\/gimplify.c?r1=138809&r2=139004&pathrev=139004\r\n\r\nBecause of the change, the problem now reveals itself as TREE_READONLY ( T )  being left set as 1, when really it shouldn't when the D frontend creates the static initialisers for the struct\/classes.\r\n\r\nCommenting out the assignment in AggregateDeclaration::toInitializer() in d-decls.cc fixes this issue, but whether or not this is the solution, I'll post back on later.\r\n\r\nRegards\r\nIain","created_on":"2010-03-31T18:38:55.181207+00:00","user":"ibuclaw","updated_on":null,"issue":2,"id":147558},{"content":"Good luck figuring it out. :)\r\n\r\n-Michael","created_on":"2010-03-31T22:26:59.544511+00:00","user":"michaelp","updated_on":null,"issue":2,"id":147687},{"content":"I do believe that the attached diff is the correct behaviour you should see in that function. My logic being that static initialiser is of a constant type, *not* read-only. Though a second opinion would be appreciated. :)\n\nBtw, this should fix builds in 4.3.2 - 4.3.4 (on i386 to say the least), I'll test it on the most recent version on the main branch also, and if anyone wants to run it though dstress, be my guest (because it is far too late at night where I am).\n\nRegards\nIain","created_on":"2010-03-31T22:44:52.636850+00:00","user":"ibuclaw","updated_on":"2010-03-31T22:46:50.835535+00:00","issue":2,"id":147693},{"content":"Seemed to work on my computer.\r\n\r\nUpdated in commit 87.\r\n\r\nMarking as resolved.","created_on":"2010-04-06T02:03:35.918717+00:00","user":"michaelp","updated_on":null,"issue":2,"id":150119},{"content":"Upon reflection of raising this issue, optimistically marking as wontfix.","created_on":"2010-06-18T20:28:06.780229+00:00","user":"ibuclaw","updated_on":null,"issue":19,"id":198607},{"content":"Pushed upstream in <<changeset 210>>\r\n\r\nAny problems with this change, report a new issue.\r\n\r\nClosing","created_on":"2010-08-22T22:03:35.450738+00:00","user":"ibuclaw","updated_on":null,"issue":55,"id":232993},{"content":"Is this using D1 or D2?\r\n\r\nIf it is D1, then it may be invalid, as the latest DMD produces the same results.","created_on":"2010-04-06T21:50:13.559871+00:00","user":"michaelp","updated_on":null,"issue":16,"id":150770},{"content":"Not sure, is there a way to tell from the gdc executable? something like gdc -dversion ?\r\n\r\nI meant to use D2. I remember I did:\r\n{{{\r\n#!bash\r\n..\/configure --enable-languages=d --disable-multilib --disable-shared\r\n}}}\r\nbut without explicitly saying: --d-language-version=2\r\n\r\nI see in .\/setup-gcc.sh the following:\r\n{{{\r\n#!bash\r\n# D 2.0 is the defalt\r\nif test -d gcc\/d\/dmd2; then\r\n    d_lang_version=2\r\nelse\r\n    d_lang_version=1\r\nfi\r\n}}}\r\nbut if it the gdc executable can tell it would be the safest way to know. Thanks again, G ","created_on":"2010-04-06T22:42:51.252491+00:00","user":null,"updated_on":null,"issue":16,"id":150805},{"content":"Not sure, is there a way to tell from the gdc executable? something like gdc -dversion ?\r\n\r\nI meant to use D2. I remember I did:\r\n{{{\r\n#!bash\r\n..\/configure --enable-languages=d --disable-multilib --disable-shared\r\n}}}\r\nbut without explicitly saying: --d-language-version=2\r\n\r\nI see in .\/setup-gcc.sh the following:\r\n{{{\r\n#!bash\r\nif test -d gcc\/d\/dmd2; then\r\n    d_lang_version=2\r\nelse\r\n    d_lang_version=1\r\nfi\r\n}}}\r\nbut if it the gdc executable can tell it would be the safest way to know. Thanks again, G","created_on":"2010-04-06T22:48:30.965758+00:00","user":null,"updated_on":null,"issue":16,"id":150807},{"content":"**Bump!**","created_on":"2010-04-06T22:48:47.622596+00:00","user":null,"updated_on":null,"issue":16,"id":150808},{"content":"No need to bump so soon, I'm not always on!\r\n\r\nAnyways, if you did not explicitly state it when running setup-gcc.sh, it's probably D2.\r\n\r\nRunning 'gdc -v' or 'gdmd' should give output similar to this:\r\n\r\n{{{\r\nmichael@michael-laptop:~$ gdc -v\r\nUsing built-in specs.\r\nTarget: i686-pc-linux-gnu\r\nConfigured with: ..\/configure --prefix=\/opt\/gdc --enable-languages=d --disable-shared --disable-multilib\r\nThread model: posix\r\ngcc version 4.1.2 20070214 ( gdc hg, using dmd 1.046)\r\n}}}\r\n\r\n","created_on":"2010-04-07T01:48:49.004916+00:00","user":"michaelp","updated_on":null,"issue":16,"id":150867},{"content":"Sorry for the double post and the bump! Still getting used to this web software.\r\nWhat I get is,\r\n{{{\r\ngdc -v\r\nUsing built-in specs.\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --disable-multilib --disable-shared\r\nThread model: posix\r\ngcc version 4.3.4 (GCC)\r\n}}}\r\nSo, if I assume it's D2, then \"immutable\" and \"ref\" keywords would work, right? I'm trying to determine if it's a problem with my installation, or if gdc D2 does not yet implement these keywords.\r\nThanks again, G.\r\n","created_on":"2010-04-07T15:33:59.637774+00:00","user":null,"updated_on":null,"issue":16,"id":151325},{"content":"cd ~~\/software\/gdc\/d\n\nthen run:\ncat d-make-include\n\nyou should either see:\nD_LANGUAGE_VERSION=1\nor\nD_LANGUAGE_VERSION=2\n\nRegards","created_on":"2010-04-07T18:30:26.044000+00:00","user":"ibuclaw","updated_on":"2010-04-07T18:33:41.455810+00:00","issue":16,"id":151458},{"content":"Thanks. I did:\r\n{{{\r\ncd  ~\/software\/gdc\/d\r\ncat d-make-include\r\nD_LANGUAGE_VERSION=2\r\n}}}\r\nSo, I'm definitely using D2. \r\n\r\nAnyone with gdc D2 that can check if the \"immutable\" and \"ref\" keywords work? Thanks, G","created_on":"2010-04-07T19:06:44.032014+00:00","user":null,"updated_on":null,"issue":16,"id":151480},{"content":"OK, tried it, and I get the same message returned when trying to compile.\n\nSo, I had a look at the changelog, and found this: http:\/\/www.digitalmars.com\/d\/2.0\/changelog.html#new2_020\n\n'immutable' was implemented in D2.020, GDC is based off D2.015.\n\n\nI am not sure when 'ref' was implemented in the way you present it, but as far as I can tell, it's current implementation (again, as of 2.015) is as so:\n{{{\n#!d\nimport std.stdio;\nvoid test(const ref int a)\n{\n}\n\nvoid main()\n{\n    int b;\n    test(b);\n}\n}}}\n\nIt was probably much later on (ie: D2.038) that they started adding more use to the 'ref; keyword.\n\nAs all that needs doing is bumping the D version in gdc, marking as an enhancement, and not a bug.\n\nRegards\nIain","created_on":"2010-04-07T23:04:00.556440+00:00","user":"ibuclaw","updated_on":"2010-04-07T23:05:40.915802+00:00","issue":16,"id":151627},{"content":"OK, thanks for the clarification.\r\nYour example with \"ref\" qualifying the function argument works fine. My original example was from\r\nhttp:\/\/www.digitalmars.com\/d\/2.0\/function.html under \"Ref Functions\". ","created_on":"2010-04-08T13:37:40.723205+00:00","user":null,"updated_on":null,"issue":16,"id":151912},{"content":"Hi there, as of <<changeset 126>> ref and immutable are now implemented as per the frontend upgrade to 2.020. Your original two examples compile and run just fine as far as I can see, so I'll be closing this off then.\r\n\r\nRegards","created_on":"2010-07-19T20:09:50.810089+00:00","user":"ibuclaw","updated_on":null,"issue":16,"id":218278},{"content":"Issue #20 was marked as a duplicate of this issue.","created_on":"2010-04-18T16:44:57.835434+00:00","user":"ibuclaw","updated_on":null,"issue":17,"id":157889},{"content":"Fixed in commit 97.","created_on":"2010-06-22T19:18:43.381873+00:00","user":"michaelp","updated_on":null,"issue":17,"id":200620},{"content":"This is also seen in the Debian version - D1.046, so it has been around for quite some time.\r\nQuite strange really. It appears that arguments don't get passed to the _arraySlice*_f() functions properly when a unit value is used.\r\n\r\nie:\r\n{{{\r\na[] += b[]; \/\/ works\r\na[] += value; \/\/ doesn't work\r\na[] = b[] + c[]; \/\/ works\r\na[] = b[] + value; \/\/ asserts or segfaults\r\na[] -= b[]; \/\/ works\r\na[] -= value; \/\/ doesn't work\r\na[] = b[] - c[]; \/\/ works\r\na[] = b[] - value; \/\/ asserts or segfaults\r\n}}}\r\n\r\nCan't think of any reason why, as it is constructed no different than double or real data types - which fall under the same category of datatype.\r\n\r\nI'd imagine when D2.018 rolls around, we'll have the same issue there too.","created_on":"2010-07-07T16:24:55.628375+00:00","user":"ibuclaw","updated_on":null,"issue":31,"id":208880},{"content":"Possible problem: When array operations were implemented in 1.034, a function called \"binary\" was referred to in dmd\/arrayop.c. What this function does is do a binary search through the array \"*libArrayopFuncs[]\" to search for the function to see if it is implemented as a library function. If it is found in the array, then a FuncDeclaration::genCfunc is called based on the name of the library function that was found. Here is the comment preceding libArrayopFuncs[]:\r\n{{{\r\n\/* Some of the array op functions are written as library functions,\r\n * presumably to optimize them with special CPU vector instructions.\r\n * List those library functions here, in alpha order.\r\n *\/\r\n}}}\r\nIf it is not found, a function is generated instead.\r\n\r\nThis is what is supposed to happen. But at the time, the binary function was implemented in the back end (now in util.c), which the code was not available for, and I was not sure what it was supposed to do. I figured out now it was a search, so I tried implementing a linear search.\r\n{{{\r\n\/\/int i = binary(name, libArrayopFuncs, sizeof(libArrayopFuncs) \/ sizeof(char *)); \/\/commented out for gdc\r\nint i = -1;\r\nfor( int ii = 0; ii < sizeof(libArrayopFuncs) \/ sizeof(char *); ii++)\r\n{\r\n\tif( strcmp( libArrayopFuncs[ii], name ) == 0 )\r\n\t{\r\n\t\ti = 0;\r\n\t}\r\n}\r\n\r\nif (i == -1)\r\n{\r\n\/\/Create function\r\n}\r\nelse\r\n{\r\n\/\/Generate library function\r\n}\r\n}}}\r\nDoing some debugging, I figured out that it finds the name of the library function in the array, but for whatever reason, still does not work.\r\n\r\nAs a temporary fix, change line 246 (int i;) of dmd\/arrayop.c to int i = -1; should work.\r\n\r\nRemember that the code in util.c is under the DMD backend license, which is why I did not copy the code into GDC when it first appeared.","created_on":"2010-07-07T18:15:29.873307+00:00","user":"michaelp","updated_on":null,"issue":31,"id":208922},{"content":"Problem: The definition for FuncDeclaration::genCfunc is different in DMD and GDCs front end.\r\n\r\nDMD:\r\n{{{\r\nFuncDeclaration *FuncDeclaration::genCfunc(Type *treturn, char *name)\r\n}}}\r\nGDC:\r\n{{{\r\nFuncDeclaration *FuncDeclaration::genCfunc(Type *treturn, char *name, Type *t1, Type *t2, Type *t3)\r\n}}}\r\n\r\nIn dmd\/arrayop.c, line 310:\r\n{{{\r\nfd = FuncDeclaration::genCfunc(type, name);\r\n}}}\r\nneeds to be changed to:\r\n{{{\r\nfd = FuncDeclaration::genCfunc(type, name, type, type, type);\r\n}}}\r\nto account for the extra arguments.\r\n\r\nWith this and a search implemented, I believe it should work.","created_on":"2010-07-07T18:43:05.521482+00:00","user":"michaelp","updated_on":null,"issue":31,"id":208934},{"content":"I noticed that with real array operations when I tried the full array op unittest. It doesn't solve the problem with floats, however, it allows you to do more array operations, ie:\n{{{\nreal a[] = b[] + 1;\n}}}\n\nAt the cost of performance.\n\nI approve a linear search, rather than using the binary() function. Although, wouldn't it be *slightly* quicker to test strlen() first?\n\n{{{\nint i = -1;\nsize_t namelen = strlen(name);\nfor( int ii = 0; ii < sizeof(libArrayopFuncs) \/ sizeof(char *); ii++)\n{\n    if (strlen(libArrayopFuncs[ii]) == namelen &&\n\tstrcmp( libArrayopFuncs[ii], name ) == 0 )\n    {\n\ti = 0;\n    }\n}\n}}}\n\n\nUpdate:\n\nWow, good eyes there Michael. ;-)\n\nRegards","created_on":"2010-07-07T18:56:50.358854+00:00","user":"ibuclaw","updated_on":"2010-07-07T19:00:12.778673+00:00","issue":31,"id":208939},{"content":"Uploaded a change that implements the checking of the length of the string.\r\n\r\nThis seems to be fixed now, so I am marking it as resolved.","created_on":"2010-07-07T21:07:53.604225+00:00","user":"michaelp","updated_on":null,"issue":31,"id":209008},{"content":"A slight variant:\r\n\r\n{{{\r\n\r\nint outer (int a)\r\nout (result)\r\n{\r\n    void inner (int b)\r\n    {\r\n        while (1) {\r\n            inner (b);\r\n        }\r\n    }\r\n    inner (a);\r\n}\r\nbody\r\n{\r\n    return 0;\r\n}\r\n}}}\r\n\r\nIn this case, compiling with '-O2 -g -frelease' results in a successful build. Whereas '-O2 -g' or '-O2 -g -fno-release' results in an ICE.","created_on":"2010-07-11T19:30:19.501481+00:00","user":"ibuclaw","updated_on":null,"issue":39,"id":210754},{"content":"Duplicate of #38.","created_on":"2010-07-14T14:45:00.404532+00:00","user":"ibuclaw","updated_on":null,"issue":39,"id":214633},{"content":"Fixed in <<changeset 118>> :-)\n\nRegards","created_on":"2010-07-13T19:23:32.901798+00:00","user":"ibuclaw","updated_on":"2010-07-13T19:24:07.597389+00:00","issue":32,"id":211981},{"content":"Possible offending code:\r\n\r\n{{{\r\n#ifdef IN_GCC\r\n\t    Type * rt = e1->type;\r\n\t    if (rt->iscomplex())\r\n\t    {\r\n\t\tswitch (rt->toBasetype()->ty)\r\n\t\t{\r\n\t\tcase Tcomplex32: rt = Type::tfloat32; break;\r\n\t\tcase Tcomplex64: rt = Type::tfloat64; break;\r\n\t\tcase Tcomplex80: rt = Type::tfloat80; break;\r\n\t\tdefault: assert(0);\r\n\t\t}\r\n\t    }\r\n\t    d_int64 r = e1->toReal().toInt(rt, type);\r\n#else\r\n\t    real_t r = e1->toReal();\r\n#endif\r\n}}}\r\n\r\nconstfold.c, lines 1084-1099, function \"Expression *Cast(Type *type, Type *to, Expression *e1)\"\r\n\r\nThis code in #if IN_GCC was not originally in DMD. Using GDB, I can confirm the code passes through these lines of code.\r\n\r\nI also thought in may be somewhere in optimize.c, however I'm not sure where.\r\n\r\nOne more place to look would be in d-gcc-real.cc\/.h.","created_on":"2010-07-14T03:58:54.829180+00:00","user":"michaelp","updated_on":null,"issue":34,"id":212948},{"content":"In that location you specify, looks like floats get rounded off \/ loose precision during the fold operation:\r\n\r\n{{{\r\nr = e1->toReal().toInt(rt, type);\r\n}}}\r\n\r\nAssuming the above line only serves use for complex types, moving it into the if statement and adding:\r\n\r\n{{{\r\nelse\r\n    r = e1->toInteger();\r\n}}}\r\n\r\nShould fix it up.","created_on":"2010-07-14T13:59:51.371860+00:00","user":"ibuclaw","updated_on":null,"issue":34,"id":214580},{"content":"Fixed in <<changeset 119>> :-)","created_on":"2010-07-14T15:15:08.969972+00:00","user":"ibuclaw","updated_on":null,"issue":34,"id":214669},{"content":"Turns out that the alignment sizes of 64bit types are target system dependant, Darwin, Linux and BSD systems are rounded to 4 bytes, whilst Cygwin, Mingw and Windows targets are rounded to 8 bytes. The frontend distinguishes between the two via an \"#if TARGET_LINUX || ...\" macro in mtype.c at about line 1075.\r\n\r\nWanting to keep an independence between compiler host and target, to maintain cross compiling, what we could do is define the TARGET_* identifiers in d-confdefs.h (via the target-ver-syms.sh script) and include the header in the dmd\/* sources as and when needed.\r\n\r\nMichael, do you think the attached patch is reasonable?","created_on":"2010-07-08T19:01:12.287880+00:00","user":"ibuclaw","updated_on":null,"issue":35,"id":209474},{"content":"It looks reasonable. If you tested it and it works, I say apply it.","created_on":"2010-07-08T20:33:18.548026+00:00","user":"michaelp","updated_on":null,"issue":35,"id":209550},{"content":"Pushed into <<changeset 114>>.\r\n\r\nFollowing unit test compiles on D1.\r\n\r\n{{{\r\nstruct st {\r\n  double d;\r\n  int i;\r\n}\r\nvoid main() {\r\n  static assert (st.sizeof == (st.d.sizeof + st.i.sizeof));\r\n}\r\n}}}\r\n\r\nIt still fails on D2, but no worries, as will be fixed in a later DMD frontend update.\r\n\r\nMarking as resolved.\r\n\r\n","created_on":"2010-07-08T21:20:26.728540+00:00","user":"ibuclaw","updated_on":null,"issue":35,"id":209595},{"content":null,"created_on":"2010-07-08T07:40:55.344173+00:00","user":"ibuclaw","updated_on":null,"issue":37,"id":209179},{"content":"After conversation with cybershadow, have come to the conclusion that this is working to design.\r\n\r\nAs mentioned before, DMD and LDC can't actually build the above example (although they may have done in the past).\r\n\r\nThe correct example would be:\r\n{{{\r\nvoid main()\r\n{\r\n    int i = 2;\r\n    switch (3)\r\n    {\r\n        try { scope(exit) { i--; } }\r\n        finally {}\r\n        default:\r\n    }\r\n    if (i != 2)\r\n        assert (0);\r\n}\r\n}}}\r\n\r\nAnd all compilers produce the same behaviour (i == 2 at the end of runtime).\r\n\r\nThe fact that GDC accepts the first example as valid code may be up for debate, but I feel that it is fine as is.\r\n\r\nRegards","created_on":"2010-07-17T10:13:32.126431+00:00","user":"ibuclaw","updated_on":null,"issue":37,"id":217137},{"content":"Some more information. \r\n\r\n extern works as intended with GCC 4.3.1 and GDC <<changeset 2be9182fadc6>>.  From what I can tell GDC simply assigns an attribute tree to the function making GCC do all the work.  The only references to stdcall occur in d-decls.cc and d-glue.cc, which call IRSTATE::addDeclAttribute and IRSTATE::addTypeAttribute located in d-codegen.cc.\r\n\r\nAfter examing the assembly output it appears that GCC is setting up the function as stdcall but is not mangling the name.\r\n\r\nI think the issue may have something to do with how two functions are related.\r\n{{{\r\ni386_pe_mangle_decl_assembler_name\r\ndefault_mangle_decl_assembler_name\r\n}}}\r\nIt apperas that GCC uses macros to determine name mangling at the backend.  If those macros are not setup for GDC then it would default in using **default_mangle_decl_assembler_name** instead of the proper **i386_pe_mangle_decl_assembler_name**.\r\n\r\nSince my gdc is broken now, it will have to wait until tomorrow.  A simple test would be try to set a breakpoint at each of those functions.  I set one at the i386 earlier, and it never triggered so I'm sure that the default function is the one being used.  Once that is confirmed, then I will have to find the best way of integrating them.","created_on":"2010-07-27T03:52:31.325573+00:00","user":"venix1","updated_on":null,"issue":47,"id":221959},{"content":"Two questions:\r\n\r\n1. Do you know if after <<changeset 2be9182fadc6>>, it stopped working in revision 89, or is that just the last revision you know works?\r\n\r\n2. Have you tried using GCC 4.3.1 with the latest source, making sure that the problem is in GDC, and not something to do with switching GCC versions?","created_on":"2010-07-28T18:46:20.001119+00:00","user":"michaelp","updated_on":null,"issue":47,"id":222724},{"content":"1. That is just the last revision I know that worked.\r\n\r\n2. It seems likely it's related to switching GCC versions.  There were similar issues regarding the fortran frontend for this same version of GCC on windows. ","created_on":"2010-07-28T20:56:43.878641+00:00","user":"venix1","updated_on":null,"issue":47,"id":222787},{"content":"I think I've tracked it down.  GCC 4.3.1 works.  After comparing the i386 directories I found differences in winnt.c at i386_pe_encode_section_info.\r\n\r\n{{{\r\n4.3.1\r\n\t  \/* FIXME: In Ada, and perhaps other language frontends,\r\n\t     imported stdcall names may not yet have been modified.\r\n\t     Check and do it know.  *\/\r\n\r\n4.3.5\r\nFIXME:  Imported stdcall names are not modified by the Ada frontend.\r\n\t Check and decorate the RTL name now.  *\/\r\n\r\n}}}\r\n\r\nBased on the comments and the surrounding code, before GCC would mangle the names for you, but has changed to requiring the compiler to do it instead.\r\n\r\nA quick workaround would be to simply modify the if statement to include D.  A proper fix would require D to handle stdcall function mangling.","created_on":"2010-07-29T00:13:05.420606+00:00","user":"venix1","updated_on":null,"issue":47,"id":222880},{"content":"A small patch to create stdcall compatible names.  It is done within the function **uniqueName**.","created_on":"2010-07-31T18:41:56.402817+00:00","user":"venix1","updated_on":null,"issue":47,"id":224034},{"content":"That's kinda the conclusion I came to when implementing it in my personal tree too.\n\nOne question about the patch though, what happens when you replace all this sprintf and varargs code with:\n\n{{{\ntree id = targetm.mangle_decl_assembler_name (t, get_identifier(out_name));\nSET_DECL_ASSEMBLER_NAME(t, id); \/\/get_identifier(out_name));\n}}}\n\nI used 'lhd_set_decl_assembler_name()' in 'gcc\/langhooks.c' as my source of information. And I think that can be found also in cp\/mangle.c too...\n\nThough testing it is still being put on hold as I get a working mingw setup (oh the shame). =)","created_on":"2010-07-31T19:19:11.376733+00:00","user":"ibuclaw","updated_on":"2010-07-31T19:20:10.478130+00:00","issue":47,"id":224046},{"content":"I managed to test your suggestion, it appears to be working properly.  I'm going to have it do a complete rebuild to be sure.\r\n \r\n\r\n * ibluclaw_stdcall.patch : Uses GCC backend to mangle stdcall names.\r\n * stdcall_patch : Uses D frontend to mangle stdcall names.\r\n\r\n+1 for ibuclaw's method.","created_on":"2010-08-01T21:29:28.669521+00:00","user":"venix1","updated_on":null,"issue":47,"id":224406},{"content":"Excellent. :-)\n\nThat is a GCC-4.3 specific feature by the way, so I'll putting #ifdefs around it. I assume 4.1 mangles code just fine.\n\nOne last question from me before I push. Does (or **should**) it mangle all symbols, or just those marked with extern(FOO) ?\n\nIf you attach \/ paste a test program's output of: objdump -t (or whatever equivalent you have) would be appreciated.\n\nI also picked up upon your last message in <<issue 21>> - I understand that the _iob patch michael pushed should be reversed then?\n\nThanks.","created_on":"2010-08-01T22:53:22.099775+00:00","user":"ibuclaw","updated_on":"2010-08-01T22:55:37.708694+00:00","issue":47,"id":224454},{"content":"Michael has already taken care of the _iob patch issue. \r\n\r\nIt should only mangle names with stdcall linkage.  So to be on the safe side, you may want to wrap it in an if statement checking for **linkage == LINKwindows**.  However, the i386 mangle function will only do it if the attributes **stdcall** or **fastcall** have been applied.\r\n\r\nFrom the **dummy.d** file posted, foo is **extern(D)**, foo1 is **extern(Windows)**, foo2 is **extern(System)** and foo3 is **extern(C)**.\r\n\r\nOutput of **nm dummy.o** with patch.\r\n{{{\r\n00000000 b .bss\r\n00000000 d .data\r\n00000000 t .text\r\n00000000 T __D5dummy3fooFiZi\r\n00000024 T __Dmain\r\n         U ___main\r\n00000008 T _foo1@4\r\n00000012 T _foo2@4\r\n0000001c T _foo3\r\n         U __imp__test_dll_import@4\r\n         U __imp__test_dll_import2@4\r\n}}}\r\n\r\nOutput of **nm dummy.o** without patch.\r\n{{{\r\n00000000 b .bss\r\n00000000 d .data\r\n00000000 t .text\r\n00000000 T __D5dummy3fooFiZi\r\n00000024 T __Dmain\r\n         U ___main\r\n00000008 T _foo1\r\n00000012 T _foo2\r\n0000001c T _foo3\r\n         U __imp__test_dll_import\r\n         U __imp__test_dll_import2\r\n}}}\r\n\r\nThe mangling for **export extern(Windows)** is correct. It should do both the __imp modification as well as the @X modification.\r\n","created_on":"2010-08-02T03:53:02.440022+00:00","user":"venix1","updated_on":null,"issue":47,"id":224509},{"content":"Fixed in <<changeset 165>>","created_on":"2010-08-02T14:25:53.406926+00:00","user":"ibuclaw","updated_on":null,"issue":47,"id":224724},{"content":"Looks good.\r\n\r\nHowever, I think it would be ideal to have these ASM not have to be enabled by the user so that they can always receive the fastest performance. What I mean by that is not having to set any flags, such as setting \"DFLAGS = '-m...'\". I assume it would be possible to detect the processor that is being built on, and set appropriate ASM flags based on that. Again, not sure how plausible this is, and if it isn't better to have it set when the user knows the target processor.\r\n\r\nAlso, don't forget that ASM sections arrayfloat.d and arraydouble.d in phobos2 would also need to be updated\/uncommented.","created_on":"2010-07-06T22:18:38.755238+00:00","user":"michaelp","updated_on":null,"issue":30,"id":208493},{"content":"I'm actually having trouble testing 3dNow! opcodes (namely, pfadd and pfsub) in array operations. On the whole, they all seem to work OK, but not in array ops.\n\nActually... looks like various elements of array operations for floats are broken altogether.\nSimple build test from the phobos directory will assert.\n\n{{{\ngdc -funittest -fversion=Unittest unittest.d internal\/arrayfloat.d -o unittest && .\/unittest\n}}}\n\nLooks like a bad compiler bug here. Calling the function works just fine, ie:\n{{{\nfloat[] a = [1,1,1,1,1,1,1,1];\na = AddAssign(a, 6);\n}}}\n\nHowever, the conversion from it's overload operator is not, ie:\n{{{\nfloat[] a = [1,1,1,1,1,1,1,1];\na[] += 6;\n}}}\n\n","created_on":"2010-07-07T03:07:25.820465+00:00","user":"ibuclaw","updated_on":"2010-07-07T03:08:00.432443+00:00","issue":30,"id":208554},{"content":"I can confirm this as well.\n\nPerhaps this should be moved into a new issue.\n\nEven without array operations using asm, there are still problems. (I am using hg tip, which still has array operations not using asm)","created_on":"2010-07-07T14:54:10.657435+00:00","user":"michaelp","updated_on":"2010-07-07T14:55:32.089558+00:00","issue":30,"id":208828},{"content":"As <<issue 31>> is fixed, pushed AMD Opcodes into d-asm-include.h","created_on":"2010-07-07T21:53:03.315134+00:00","user":"ibuclaw","updated_on":null,"issue":30,"id":209022},{"content":"I think I've settled on tweaking the GCC backend to not remove the register names as the final nail in the coffin to resolving this.\r\n\r\nIn GCC-3.4, the backend removes registers using:\r\n{{{\r\nfixed_regs[i] = call_used_regs[i] = 1;\r\n}}}\r\n\r\nIn GCC-4.1 (4.0?) and later:\r\n{{{\r\nfixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\r\n}}}\r\n\r\nNote that setting the fixed_regs and call_used_regs values to '1' will mean that the GCC backend will never use them, whatever optimization you put on. So removing\/commenting out the blanking of reg_names will re-enable us to lookup the register name and optionally use it without \"unknown register\" errors. :-)","created_on":"2010-08-20T12:47:02.650680+00:00","user":"ibuclaw","updated_on":null,"issue":30,"id":232364},{"content":"Because of PR16888, perhaps it is not a good idea to undo it at the backend level. See http:\/\/www.mail-archive.com\/gcc-bugs@gcc.gnu.org\/msg110834.html\r\n\r\nIn any case, this doesn't seem to affect GDC, so committing a workaround for the problem, and defining the GNU_InlineAsm predicate, effectively closing this issue.\r\n\r\nRegards\r\n\r\n","created_on":"2010-08-20T17:43:35.125596+00:00","user":"ibuclaw","updated_on":null,"issue":30,"id":232486},{"content":"I recall there being an -f-all-sources, or a switch to that effect is named in the manpage, but is not a valid \/ recognised option.\r\n\r\nI'm sure there are other things the current frontends have support for, but we haven't hashed out to the glue yet.\r\nFor example, D1 should be able to output to JSON.","created_on":"2010-07-25T21:16:51.674236+00:00","user":"ibuclaw","updated_on":null,"issue":46,"id":221240},{"content":"I see what you mean by the JSON. I'll look into that.\r\n\r\nThe thing with those options is that passing them to gdmd won't produce an 'unrecognized argument' error. They are implemented on the lines shown, but when you execute gdmd or 'gdmd -help', you don't see them.","created_on":"2010-07-25T21:37:32.088896+00:00","user":"michaelp","updated_on":null,"issue":46,"id":221253},{"content":"In <<changeset 9269acda0b86>>, I added the 3 options I mentioned. I put the lack of JSON support into <<issue 52>> because it wasn't related to this. This was meant to be for options that were implemented in gdmd, but did not show up the usage.\r\n\r\nI'll leave this open in case someone else finds any more dmd options that need to be in gdmd. (Excluding JSON!) If none are found in a couple of days, I'll mark this as resolved.","created_on":"2010-08-05T20:18:01.401643+00:00","user":"michaelp","updated_on":null,"issue":46,"id":226437},{"content":"Couple of things:\r\n\r\n1. It appears the '-fall-sources' is for gdmd, not gdc. It does not appear in the gdmd usage though. But as you said, it does seem to appear in the gdc manual page. http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\r\n\r\n2. The -defaultlib and -debuglib options you added to gdc also appear to have been in gdmd already. As far as I can tell, they do the same thing. Should gdmd be changed so that it just pushes the arguments passed to those options to gdc?\r\n\r\n3. I found two more options that are implemented and not in the usage: -ignore and -framework.","created_on":"2010-08-06T18:24:33.535682+00:00","user":"michaelp","updated_on":null,"issue":46,"id":226883},{"content":"It seems I was wrong about #3! They were already in the usage, just not in alphabetical order, which threw me off a little. :P I will change that in the next commit for this issue.\r\n\r\nAnd about #2: I can't seem to figure how to pass the arguments -defaultlib and -debuglib to gdc from gdmd. Using this:\r\n\r\n{{{\r\ngdc test.d -o test -defaultlib gphobos\r\n}}}\r\n\r\ndoesn't work for me, and all I get are linker errors.\r\n\r\nThis is using D1 BTW.","created_on":"2010-08-09T03:27:26.808161+00:00","user":"michaelp","updated_on":null,"issue":46,"id":227572},{"content":"> 2. The -defaultlib and -debuglib options you added to gdc also appear to have been in gdmd already.\r\n\r\nOh, I was wondering where that came from. I just merged the patches from Debian's gdc, as I knew it would be useful for testing druntime. ( I'll be honest, I don't use gdmd all that often, so I didn't think to look. :)\r\n\r\n\r\n> And about #2: I can't seem to figure how to pass the arguments -defaultlib and -debuglib to gdc from gdmd. Using this:\r\n\r\nIf you use -defaultlib, you'll have to include -lpthread too (which is depended upon by the GC). As need_pthreads only gets turned on if phobos is on. The options -defaultlib, -debuglib, and (what is used in gdmd) -nophoboslib all turn phobos off.\r\n\r\n{{{\r\ngdmd hello.d -defaultlib=gphobos -L-lpthread\r\n\r\ngdc hello.d -defaultlib gphobos  -lpthread\r\n}}}\r\n\r\nHaving a look at the --verbose output will reveal this:\r\n\r\nStandard included libraries:\r\n{{{\r\n-lgphobos -lz -lm -lgcc_s -lgcc -lpthread -lc \r\n}}}\r\nWith -nophoboslib:\r\n{{{\r\n-lm -lgcc_s -lgcc -lc \r\n}}}\r\nRegards","created_on":"2010-08-09T07:29:04.120053+00:00","user":"ibuclaw","updated_on":null,"issue":46,"id":227636},{"content":"Thanks, I've got gdmd to push the -defaultlib and -debuglib switches to gdc now, rather than handle them itself.\r\n\r\nAlso changed the position of where -framework and -ignore are so that they are in appear in alphabetical order.\r\n\r\nThis issue is now being marked as resolved with the commit of <<changeset 181e89b3d8d6>>.","created_on":"2010-08-09T15:16:59.809066+00:00","user":"michaelp","updated_on":null,"issue":46,"id":227797},{"content":"Whoops, forgot to add -defaultlib and -debuglib into the usage!\r\n\r\nAdded in <<changeset e34a68f9c427>>.","created_on":"2010-08-09T19:14:56.566517+00:00","user":"michaelp","updated_on":null,"issue":46,"id":227884},{"content":"You could perhaps use 'default library to use instead of phobos' and 'debug library to use instead of phobos' as the descriptions.\r\n\r\nJust a thought. :)","created_on":"2010-08-09T21:10:02.194052+00:00","user":"ibuclaw","updated_on":null,"issue":46,"id":227932},{"content":"Yes, that sounds better. :)\r\n\r\nChanged in <<changeset 35f04cb2339c>>.","created_on":"2010-08-09T22:02:35.641871+00:00","user":"michaelp","updated_on":null,"issue":46,"id":227956},{"content":"OK, so I think the best approach to update phobos is in a few incremental blocks. Sweeping through each section, and checking it off bit by bit.\r\n\r\nStarting off with zlib frontend updates. As the backend has been v1.2.3 for quite some time now - for both D1 and D2.\r\n\r\nAny feedback is welcomed. :-)","created_on":"2010-06-27T12:08:07.501707+00:00","user":"ibuclaw","updated_on":null,"issue":27,"id":203312},{"content":"Sifted through the previous phobos patch with a fine tooth comb, and managed to shrink it down to a quarter of it's original size.\r\n\r\nAttaching libphobos update for testing.\r\n\r\nRegards\r\n\r\n","created_on":"2010-06-29T21:27:05.929538+00:00","user":"ibuclaw","updated_on":null,"issue":27,"id":204861},{"content":"And pushed all uncommitted libphobos updates in commit <<changeset 103>> \r\n\r\nClosing issue.","created_on":"2010-07-02T07:38:50.237077+00:00","user":"ibuclaw","updated_on":null,"issue":27,"id":206244},{"content":"Why on earth would rdmd include gcc.builtins in the compile?\r\n\r\nThat's a better question to ask, but thanks, I'll try that.","created_on":"2011-12-01T17:49:29.173766+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":830576},{"content":"Why not? It's no standard package.","created_on":"2011-12-01T17:58:25.205611+00:00","user":"trass3r","updated_on":null,"issue":254,"id":830596},{"content":"It's a pseudo package. :-)","created_on":"2011-12-01T19:53:14.508472+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":830919},{"content":"Well it just searches for everything that gets imported via -v switch.\r\nThen it excludes core.* and std.* I guess.","created_on":"2011-12-01T21:01:19.930279+00:00","user":"trass3r","updated_on":null,"issue":254,"id":831142},{"content":"I can't reproduce the ICE on current tip:\n\n{{{\ngdmd -release -O -w opencl\/*.d vectorAdd.d -m64\n}}}\n","created_on":"2011-11-30T20:16:32.896448+00:00","user":"ibuclaw","updated_on":"2011-11-30T20:18:48.127677+00:00","issue":254,"id":827515},{"content":"Scratch that error, it compiles successfully.","created_on":"2011-11-30T20:19:05.589252+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":827521},{"content":"Still happens for me. I'm running it through DustMite again.\r\nYou may also try the original code: https:\/\/bitbucket.org\/trass3r\/cl4d\/src\/","created_on":"2011-11-30T20:33:15.581807+00:00","user":"trass3r","updated_on":null,"issue":254,"id":827556},{"content":"So I run the above and get an internal error, so I make a breakpoint and see on what the internal error occurs:\r\n{{{\r\n__builtin_ms_va_start\r\n}}}\r\n\r\nOK, where is that memory?  Let's set a watchpoint on that address and see what changes it...\r\n{{{\r\n-> ggc_internal_alloc_stat\r\n-> ggc_internal_cleared_alloc_stat \r\n-> make_node_stat\r\n-> add_builtin_function_common\r\n-> poison_pages\r\n-> ggc_internal_alloc_stat\r\n-> ggc_internal_cleared_alloc_stat\r\n}}}\r\n\r\nYep, it is garbage collected alright...  Apparently not even builtins can escape the wrath.  Which is a real ball ache as I really shouldn't need adding these onto the d_keep list.","created_on":"2011-12-01T22:14:16.862184+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":831328},{"content":"Wait, your command reduces to\n{{{\ngdc -frelease -O3 -m64 -c opencl\/device.d opencl\/host.d opencl\/platform.d opencl\/wrapper.d vectorAdd.d -o device.o\n}}}\nwhich indeed doesn't ICE.\nMy call to rdmd reduces to\n{{{\ngdc -frelease -O3 -c vectorAdd.d opencl\/device.d opencl\/platform.d opencl\/wrapper.d opencl\/host.d \/opt\/gdc\/include\/d2\/4.6.2\/gcc\/builtins.d -o vectorAdd.o\n}}}\nwhich ICEs. If I remove builtins.d it works. If I put vectorAdd.d at the end of the file list, it works.\n\nEdit: Seems like it only crashes when builtins comes after vectorAdd in general.","created_on":"2011-12-01T13:20:21.475376+00:00","user":"trass3r","updated_on":"2011-12-01T13:24:26.722624+00:00","issue":254,"id":829836},{"content":"I guess adding an exclude option to rdmd could be a workaround.","created_on":"2011-12-01T22:50:41.644282+00:00","user":"trass3r","updated_on":null,"issue":254,"id":831439},{"content":"As of <<changeset fc5e3bddbf94>> the gimplification (and thus, garbage collection) of functions is no longer done in the frontend in gcc 4.5+.\r\n\r\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/fc5e3bddbf94#chg_d\/d-glue.cc_newline2856","created_on":"2011-12-27T22:48:29.532499+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":909268},{"content":"https:\/\/github.com\/D-Programming-Language\/tools\/pull\/17","created_on":"2011-12-20T00:18:28.015219+00:00","user":"trass3r","updated_on":null,"issue":254,"id":888627},{"content":"Interestingly, if you remove\r\n\r\n{{{\r\n#!d\r\n\tpackage @property auto ptr() \t{\r\n\t}\r\n}}}\r\n\r\nin opencl\/wrapper.d it turns into 'opencl\/device.d:1:0: internal compiler error: Segmentation fault'","created_on":"2011-10-30T20:01:11.899915+00:00","user":"trass3r","updated_on":null,"issue":254,"id":748808},{"content":"Does the same happen with -m32 \/ -m64 ?","created_on":"2011-10-30T20:38:09.247728+00:00","user":"ibuclaw","updated_on":null,"issue":254,"id":748860},{"content":"Seems like it only happens with -m64 but not with -m32.","created_on":"2011-10-30T21:00:05.162588+00:00","user":"trass3r","updated_on":null,"issue":254,"id":748890},{"content":"I forgot to mention that you have to configure with --enable-checking=yes","created_on":"2011-10-30T21:42:14.794735+00:00","user":"trass3r","updated_on":null,"issue":254,"id":748950},{"content":"Fixed in <<changeset 213>>","created_on":"2010-08-24T11:37:51.324541+00:00","user":"ibuclaw","updated_on":null,"issue":58,"id":233645},{"content":null,"created_on":"2010-07-27T00:34:35.216992+00:00","user":"ibuclaw","updated_on":null,"issue":36,"id":221908},{"content":"Fixed in <<changeset 143>>. Closing","created_on":"2010-07-27T19:59:50.630869+00:00","user":"ibuclaw","updated_on":null,"issue":36,"id":222269},{"content":"Fixed in <<changeset ae817bd07dbf>>. Thanks for the patch. :)\r\n\r\nMarking as resolved.\r\n\r\nHave you thought about posting this to the issue in D's bugzilla?","created_on":"2010-08-19T13:30:43.704550+00:00","user":"michaelp","updated_on":null,"issue":57,"id":231892},{"content":"Does this exist in D2 too?","created_on":"2010-08-19T16:23:16.627232+00:00","user":"ibuclaw","updated_on":null,"issue":57,"id":231955},{"content":"It doesn't appear to be in DMD 2.048, and that piece of code hasn't changed. I didn't check GDC though. Also didn't check DMD 2.020 because it needed stdc++.","created_on":"2010-08-19T16:35:47.734573+00:00","user":"michaelp","updated_on":null,"issue":57,"id":231963},{"content":"Fixed in <<changeset 149>>","created_on":"2010-07-28T19:07:41.689920+00:00","user":"ibuclaw","updated_on":null,"issue":48,"id":222734},{"content":null,"created_on":"2010-06-21T20:28:46.342761+00:00","user":"michaelp","updated_on":null,"issue":26,"id":200044},{"content":"+1 D1 as default","created_on":"2010-06-22T10:28:55.840172+00:00","user":"goshawk","updated_on":null,"issue":26,"id":200365},{"content":"I'd +1 D1 as default also. D2 is not ready yet.","created_on":"2010-06-22T15:05:36.988143+00:00","user":"ibuclaw","updated_on":null,"issue":26,"id":200478},{"content":"What is the state of D2 in GDC ? DMD has impoved a lot, does gdc follow them ? ","created_on":"2010-06-24T19:23:56.196118+00:00","user":null,"updated_on":null,"issue":26,"id":202024},{"content":"The GDC D2 Frontend is still at 2.015. A fairly early stage in the DMD2 development. But, for the most part it is working fine in gcc-4.1 and earlier. There are still one or two quirks that pop up every so often in gcc-4.3. Commit <<changeset 93>> saw a fix in foreach range statements that I just so happened to stumble upon whilst testing a quick application I wrote the previous year.\r\n\r\n\r\nI think I recall reading somewhere goshawk was looking into seeing if forcing the latest D2 version was a possible option. I have not heard any advancements on that proposal, probably better to ask him instead on the matter.","created_on":"2010-06-26T21:49:59.274513+00:00","user":"ibuclaw","updated_on":null,"issue":26,"id":203109},{"content":"Fixed in commit 100.","created_on":"2010-06-28T20:06:59.338097+00:00","user":"michaelp","updated_on":null,"issue":26,"id":204067},{"content":null,"created_on":"2010-05-26T04:43:17.321463+00:00","user":"venix1","updated_on":null,"issue":22,"id":183915},{"content":null,"created_on":"2010-05-26T04:43:54.224687+00:00","user":"venix1","updated_on":null,"issue":22,"id":183916},{"content":null,"created_on":"2010-06-03T22:39:36.609602+00:00","user":"goshawk","updated_on":null,"issue":22,"id":189242},{"content":"Looking at the dump, I see:\r\n\r\n{{{\r\nutmp.length = iftmp.0 + 0x0ffffffff;\r\nutmp.ptr = &tmp + iftmp.1;\r\n}}}\r\n\r\nProbably a bad calculation using an unsigned value...","created_on":"2010-09-22T11:45:41.917655+00:00","user":"ibuclaw","updated_on":null,"issue":66,"id":252424},{"content":null,"created_on":"2010-09-22T11:47:38.263543+00:00","user":"venix1","updated_on":null,"issue":66,"id":252425},{"content":"It looks like the calculation is in **do_array_set** in d-glue.cc.  Since it's a run time calculation, it would need to be modified to throw the exception if the minus operation would go negative.","created_on":"2010-09-22T11:55:01.041781+00:00","user":"venix1","updated_on":null,"issue":66,"id":252431},{"content":"The problem is in **SliceExp::toElem** following the logic there are 2 comparison expressions.  First it compares the index to the array size and then the new length to the array size.  A third is needed to make sure the new length is greater than the index.\r\n\r\nThis patch fixes the issue with basic test cases.  I am unsure what to do with the ArrayScope usage, so I pushed the check directly with doExp.","created_on":"2010-09-22T13:07:17.367210+00:00","user":"venix1","updated_on":null,"issue":66,"id":252449},{"content":"You can use maybeCompound to attach two statements together. :-)\r\n\r\ncheck upr < lwr... got it. Will push that check.\r\n\r\nThanks.","created_on":"2010-09-22T18:02:38.558620+00:00","user":"ibuclaw","updated_on":null,"issue":66,"id":252629},{"content":"Fixed in <<changeset 260>>","created_on":"2010-09-23T09:59:50.689713+00:00","user":"ibuclaw","updated_on":null,"issue":66,"id":254248},{"content":"Well, we are going to have to get GCC to be able to build more than one library. (libgphobos and druntime. Should it be called dgruntime, to indicate it is GDC, as with lib**g**phobos?) Not sure if that is difficult.\r\n\r\nWe will need a separate Makefile in the druntime directory to build it. The Phobos makefile will also need significant changes.\r\n\r\nATM, there is a druntime folder in the source, which will need to be changed to the 2.020 version, rather than what I think is the 2.032 version which is there now.\r\n\r\nAlso: GCC top level patches will need updating. Currently, they only add libgphobos into the configure and makefile scripts. If it is D2, they will need to add druntime as well.\r\n\r\nOther than that, it is mostly getting druntime D code to work with GDC, keep it cross platform, etc. However, I may be overlooking something other than what I have mentioned.","created_on":"2010-07-16T04:12:49.745847+00:00","user":"michaelp","updated_on":null,"issue":40,"id":216541},{"content":"Duplicate post.","created_on":"2010-07-16T04:13:02.842771+00:00","user":"michaelp","updated_on":"2010-07-16T04:13:54.823419+00:00","issue":40,"id":216542},{"content":"Duplicate post.","created_on":"2010-07-16T04:13:09.911331+00:00","user":"michaelp","updated_on":"2010-07-16T04:14:11.275468+00:00","issue":40,"id":216543},{"content":"Duplicate post.\n\nSorry about all those, my internet was acting funny. :|","created_on":"2010-07-16T04:13:10.297923+00:00","user":"michaelp","updated_on":"2010-07-16T04:14:34.592326+00:00","issue":40,"id":216544},{"content":"Imho gdruntime reads better.\r\n\r\nAnyways, the LDC2 druntime patch might give some hints which kind of changes are required.\r\nhttp:\/\/d.puremagic.com\/issues\/attachment.cgi?id=417&action=diff","created_on":"2010-07-17T00:48:22.094889+00:00","user":"trass3r","updated_on":null,"issue":40,"id":216989},{"content":"Attaching DMD 2.020 frontend updates for testing - no phobos\/druntime changes yet.\n\nCurrent known showstoppers:\n\n1. Following code should output: \"[aaa:1,bbb:2,ccc:3]\" followed by 3 addresses. However, when running the program, the first two are shown as NULL addresses, for as of yet not known reasons. D1 builds and runs just fine. See also http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=2332\n\n{{{\nimport std.stdio;\nvoid main()\n{\n    int[string] foo = [\"aaa\":1, \"bbb\":2];\n    foo[\"ccc\"] = 3;\n    writefln(foo);\n    writefln(\"aaa\" in foo);\n    writefln(\"bbb\" in foo);\n    writefln(\"ccc\" in foo);\n}\n}}}\n\n2. Following code ICEs the compiler in d-glue.cc: CommaExp::toElem(), because this->type is NULL, and is tried to be accessed in the function. Definitely something we are doing wrong here, as 'type' should be already assigned the value of e2->type before the function is called. See also - which illustrates another issue that may affect us too - http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=2341\n\n{{{\nstruct A\n{\n    int id;\n    this(int x) { id = x; }\n}\nvoid main()\n{\n    auto a = A(45);\n}\n}}}\n\nRegards","created_on":"2010-07-18T00:41:15.707230+00:00","user":"ibuclaw","updated_on":"2010-07-18T00:38:58.232254+00:00","issue":40,"id":217432},{"content":"Fixed the above two issues. Anyone object to me pushing the code?","created_on":"2010-07-19T13:27:08.572837+00:00","user":"ibuclaw","updated_on":"2010-07-19T13:27:30.993456+00:00","issue":40,"id":218072},{"content":"Have you done phobos and druntime yet?\r\n\r\nI would say don't push the code, unless the 2.020 front end works with the 2.019 phobos. Then I think it's fine.\r\n\r\nI guess someone could always just use the last working revision though if they wanted D2.","created_on":"2010-07-19T14:56:36.457765+00:00","user":"michaelp","updated_on":null,"issue":40,"id":218108},{"content":"Yep, it's still working with 2.019 phobos. I haven't changed any part of the glue code which would affect building (yet); ie: the inclusion of \"-lgdruntime\" in the specs file.","created_on":"2010-07-19T15:22:11.050205+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":218118},{"content":"OK, pushed. And I've discovered there is still one problem though.\r\n\r\nFrom bug 2341 in one of the links I provided above:\r\n\r\n{{{\r\nimport std.stdio;\r\n\r\nstruct A\r\n{\r\n    int id;\r\n    this(int x) { id = x; writeln(\"Created object from scratch: \", x); }\r\n    this(this) { writeln(\"Copying object: \", id); }\r\n    ~this() { writeln(\"Destroying object: \", id); }\r\n}\r\n\r\nstruct B\r\n{\r\n    A member;\r\n}\r\n\r\nB foo()\r\n{\r\n    A a = A(45);\r\n    return B(a);\r\n}\r\n\r\nvoid main()\r\n{\r\n    auto b = foo;\r\n}\r\n}}}\r\n\r\n\r\nThis should output:\r\n\r\n{{{\r\nCreated object from scratch: 45\r\nCopying object: 45\r\nDestroying object: 45\r\nDestroying object: 45\r\n}}}\r\n\r\nBut the current implementation doesn't generate the function call for \"Copying object:\" yet. This will mean will have to create a function call for the postblit in the \"B(a)\" expression in StructLiteralExp::toElem(). And to be honest, I have no clue how to do this. >:)\r\n","created_on":"2010-07-19T20:01:54.023548+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":218261},{"content":"The glue change broke D1. Line 2202, d\/d-glue.cc:\r\n\r\n{{{\r\nType * a_type = type->toBasetype()->mutableOf();\r\n}}}\r\n\r\nThere is no mutableOf() function for Type in D1. Taking off the '->mutableOf();' fixes it for D1, but I'm not sure if it still works in D2.\r\n\r\nAnd I'm sure we'll figure how to do it - eventually. :)","created_on":"2010-07-20T01:28:05.730153+00:00","user":"michaelp","updated_on":null,"issue":40,"id":218354},{"content":"I was thinking that, but was far too tired to check at the time. :-)\r\n\r\nIt still works in D2 without mutableOf(), but I thought probably best to leave it, just incase... It's only a temporary stopgap anyway. Eventually the druntime will have all getHash() routines to use the same toHash() function, rather than each having their own bespoke way of generating a hash.\r\n\r\nOh, and I started off that postblit function for you in <<changeset 127>> - all I think you need is something along the lines of:\r\n\r\n{{{\r\ntree args[3] = {\r\n    irs->typeinfoReference(t);     \/\/ typeinfo\r\n    irs->toDarray(e->toElem(irs)); \/\/ from elem[]\r\n    irs->toDarray(\/*?*\/);          \/\/ new empty to elem[]\r\n}\r\nresult = irs->maybeCompound(result,\r\n    irs->libCall(LIBCALL_ARRAYCTOR, 3, args);\r\nce.cons (fld->csym->Stree, result);\r\n}}}\r\n\r\nRegards\r\n","created_on":"2010-07-20T06:34:56.066430+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":218404},{"content":"With <<changeset 138>> - the code example in comment # 10 now runs as expected. However, I have no clue how to trigger the code I've noted as \"not implemented yet\". If anyone does, I'd love to hear from you. :)","created_on":"2010-07-24T20:22:54.386364+00:00","user":"ibuclaw","updated_on":"2010-07-24T20:19:47.684196+00:00","issue":40,"id":220743},{"content":"OK, quick update from me as for what is going on in the D2 camp.\n\n* Postblits are now working as of <<changeset 140>>\n\n* Druntime has been added for testing purposes as of <<changeset 159>>\n\nIt is currently standalone, but requires some extra work in order to build it.\nMost notably, you'll need to:\n# Copy phobos-ver-syms from \/usr\/include\/d2\/<version>\/<host> into druntime\/\n# Copy the config directory from \/usr\/include\/d\/<version>\/<host>\/gcc\/config into druntime\/compiler\/gdc\/gcc\n# Copy config.h from <build directory>\/<host>\/libphobos into druntime\/\n\nAnd the main gotcha is that you'll probably need to edit the Makefile too if you're not running on a x86* system, so that the correct sources are included for the GCC_OBJS.\n\nThe above will be solved once it is integrated into the configure system.\n\nTo build the library, run:\n{{{\nmake && make test\n}}}\n\nInstalling is not supported, thus left to the discretion of yourself.\n\n* You can test druntime ( currently named libgdrt - though am willing to debate naming schemes :) using either -defaultlib or -debuglib switches, as added in <<changeset 160>>. This will allow you to select another library, instead of libphobos, as the main\/standard one when building.\n\n\nWhat I'd like to see getting done before finishing druntime is <<issue 30>>. Though nothing will happen unless we arrange to hold a meeting to discuss the future direction of gdc.\n\nRegards,\nIain","created_on":"2010-07-30T17:09:30.341579+00:00","user":"ibuclaw","updated_on":"2010-07-30T17:23:34.455137+00:00","issue":40,"id":223713},{"content":"As of <<changeset a74ceca3c239>>, I updated two of the toplevel patches to include future building for libdruntime: 3.4.x and 4.0.x. I can do all of the GCC versions, but I just want to see if anyone has any objections to what I did, or suggestions.\r\n\r\nI thought about having it be named \"libgdrt\", but I realized phobos is named libphobos in the previous configure scripts and Makefiles, so it should be okay to be \"libdruntime\"","created_on":"2010-08-19T21:36:16.778387+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232141},{"content":"Nothing wrong with naming the directory libdruntime. The resultant library name is probably going to be libgdruntime too. libgdrt was just a shorthand form of the name for testing really.","created_on":"2010-08-19T22:17:11.370779+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":232152},{"content":"Okay, good.\r\n\r\nWill continue with 4.1, 4.2, and 4.3 then.","created_on":"2010-08-19T22:26:51.811572+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232155},{"content":"Okay, so as of <<changeset 6e7640bc2b3c>>, I have done 2 things:\r\n\r\n# Adding support for libdruntime in the GCC 4.1, 4.2, and 4.3 top level patches.\r\n\r\n# In setup-gcc.sh, I added some code that creates the directory \"libdruntime\" in the top level gcc directory and fills it in with symlinks to gcc\/d\/druntime, like it does with Phobos. The code that is supposed to add libdruntime to the list of target_libs in config-lang.in may not work. I'm not actually sure if doing += to add on to target_libs works, as when I tried building D2, I was getting a lot of seg faults when building Phobos.\r\n\r\nAlso, someone please fix the mess of code I made to add the line \"target_libs += \"target-libdruntime\"\" to config-lang.in. I'm sure there is a better way, but I couldn't figure it out!\r\n\r\nAnyways, if I get D2 working, I'll report what happens.","created_on":"2010-08-20T01:03:10.340354+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232186},{"content":"Simple test case for the current problem with D2:\r\n\r\n{{{\r\nwhile(1)\r\n{\r\n    continue;\r\n}\r\n}}}\r\n\r\nTake out the continue, it's okay.","created_on":"2010-08-20T03:42:49.280709+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232217},{"content":"@ <<changeset 203>> - you should be able to use shell commands to fork out the D version in config-lang.in\n\nSomething like:\n{{{\nd_version=$(cut -f2 -d= \\$(srcdir)\/d\/d-make-include)\n\nif [ ${d_version} -eq 2 ]; then\n   target_libs=\"target-libdruntime \\\n                target-libphobos\"\nelse\n   target_libs=\"target-libphobos\"\nfi\n}}}\n\nRegards","created_on":"2010-08-20T11:04:01.778843+00:00","user":"ibuclaw","updated_on":"2010-08-20T11:05:53.764949+00:00","issue":40,"id":232336},{"content":"I'll try that.\r\n\r\nAnd I've found the problem commit: <<changeset fbce9c0580d3>>, the autovectorization patch.\r\n\r\nIn IRBase::doLabel, d-irstate.cc:\r\n\r\n{{{\r\nvoid\r\nIRBase::doLabel(tree t_label)\r\n{\r\n        \/* Don't write out label unless it is marked as used by the frontend.\r\n       This makes auto-vectorization possible in conditional loops.\r\n       The only excemption to this is in LabelStatement::toIR, in which\r\n       all computed labels are marked regardless.  *\/\r\n\r\n    if(TREE_USED(t_label)) \/\/ <-- This is the problem\r\n\taddExp(build1(LABEL_EXPR, void_type_node, t_label));\r\n}\r\n}}}\r\n\r\nTaking out the if statement fixes the problem. (Leaving the addExp function call)","created_on":"2010-08-20T18:45:31.815809+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232506},{"content":"D2 still uses WhileStatement::toIR, right? (D1 converts 'while' into 'for' loops)\n\nTry moving\n\n{{{\nvoid\nWhileStatement::toIR(IRState* irs)\n{\n    irs->doLineNote(loc); \/\/ store for next statement...\n    irs->startLoop(this);\n    irs->continueHere(); \/\/ <--- THIS LINE\n    irs->exitIfFalse(condition, 1); \/\/ 1 == is topcond .. good as deprecated..\n    if (body)\n        body->toIR( irs );\n    irs->endLoop();\n}\n}}}\n\n\n{{{\nvoid\nWhileStatement::toIR(IRState* irs)\n{\n    irs->doLineNote(loc); \/\/ store for next statement...\n    irs->startLoop(this);\n    irs->exitIfFalse(condition, 1); \/\/ 1 == is topcond .. good as deprecated..\n    if (body)\n        body->toIR( irs );\n    irs->continueHere(); \/\/ <--- HERE\n    irs->endLoop();\n}\n}}}\n\nThat should fix it up.\n\nRegards","created_on":"2010-08-20T19:06:03.568696+00:00","user":"ibuclaw","updated_on":"2010-08-20T19:08:21.371171+00:00","issue":40,"id":232511},{"content":"Yeah, that worked. Added in <<changeset 511f3176ec0d>>.\r\n\r\nHowever, I couldn't manage to get the code you posted in config-lang.in working.","created_on":"2010-08-20T20:41:32.087691+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232549},{"content":"> However, I couldn't manage to get the code you posted in config-lang.in working.\r\n\r\nWas just a pseudo example - didn't intend for it to work. :-)\r\n\r\nAnyhow, it looks like config-lang.in is called from both the toplevel and gcc directory, so will need to test for that. And it should be ${srcdir} in the cut command.\r\n\r\n{{{\r\n\r\nif [ -e ${srcdir}\/d\/d-make-include ]; then\r\n    d_version=$(cut -f2 -d= ${srcdir}\/d\/d-make-include)\r\nelse\r\n    d_version=$(cut -f2 -d= ${srcdir}\/gcc\/d\/d-make-include)\r\nfi\r\n\r\nif [ ${d_version} -eq 2 ]; then\r\n   target_libs=\"target-libdruntime \\\r\n                target-libphobos\"\r\nelse\r\n   target_libs=\"target-libphobos\"\r\nfi\r\n\r\n}}}\r\n\r\nShould be the proper way to do it. (note, you'll have to regenerate the Makefiles first).","created_on":"2010-08-20T23:25:11.317116+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":232584},{"content":"I tried a couple of different things with it, but I just couldn't get. I obviously need to work on my terminal fu. :P What you posted there worked.\r\n\r\nAnyways, I patched Phobos to get up to date to 2.020 (including removing some of the files that went to druntime, such as the internal folder). However, it doesn't working, but I was thinking I might as well just upload it since no one can really use the current version for much anyways, since it is so old. Can also begin to decide what files we need to migrate to the druntime folder.\r\n\r\nI also began updating Makefile.am, and regenerated Makefile.in from that. All I did was take out some files which are no longer there.","created_on":"2010-08-21T00:09:11.413753+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232592},{"content":"I think a little more needs to be done apart from removing the files that are no longer there in phobos - I can't remember whether or not I merged over the GDC modifications too (ie: druntime's core.thread module)\r\n\r\nSome files in druntime are still needed in phobos - that is understandable. You could probably figure out a way to include the druntime directory when building phobos for that.","created_on":"2010-08-21T07:11:18.543919+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":232640},{"content":"I suppose one option could be that we make libdruntime a subdirectory of libphobos.\r\n\r\n{{{\r\nmkdir libphobos && \\\r\n    cd libphobos && \\\r\n    ..\/symlink-tree ..\/gcc\/d\/phobos$d_subdir_sfx > \/dev\/null && \\\r\n    cd \"$top\" || exit 1\r\n\r\nif test \"$d_lang_version\" = 2; then\r\n    cd libphobos && \\\r\n    mkdir libdruntime && \\\r\n    cd libdruntime && \\\r\n    ..\/..\/symlink-tree ..\/..\/gcc\/d\/druntime > \/dev\/null && \\\r\n    cd \"$top\" || exit 1\r\nfi\r\n}}}\r\n\r\nThen have libdruntime marked as a subdirectory in the phobos2 Makefile.","created_on":"2010-08-21T10:27:46.177881+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":232658},{"content":"Being a little nit picky here, but wouldn't it make more sense for libphobos to be a subdirectory of druntime since phobos requires druntime, but not vice versa? At least, I'm pretty sure that's how it works. And we may wish to move the config\/x3 files to druntime as well. I know a bit more needs to be done than just the removal of files, but its a start. Lots of configuration files may need to be moved and need to be created for druntime.","created_on":"2010-08-21T21:56:24.199654+00:00","user":"michaelp","updated_on":null,"issue":40,"id":232787},{"content":"You can now consider Druntime to be unofficially part of D2 now.\r\n\r\nI've implemented it as per conversation with michaelp on IRC. Which is joining the two together in the GCC build directory. Sometime later, it is my hope to eventually split them completely. Probably have one as a subdirectory of the other.\r\n\r\nCurrent TODOs on the list are:\r\n* Fix GC - it is likely broken for all platforms except Linux.\r\n* Check for any outstanding merges from the previous GDC D2 internals.","created_on":"2010-08-27T12:52:43.925440+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":235420},{"content":"Well druntime being a subfolder of phobos isn't that good I think.\r\nWhat if Tango eventually gets ported to D2 and druntime.","created_on":"2010-08-27T13:53:02.365027+00:00","user":"trass3r","updated_on":null,"issue":40,"id":235451},{"content":"I'm not sure I quite follow you. Could you elaborate on your reasoning?","created_on":"2010-08-27T15:30:46.987920+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":235490},{"content":"Well I thought druntime is a library on its own. If Tango was ported to D2 it would use the same druntime as phobos, wouldn't it?","created_on":"2010-08-27T18:45:08.118638+00:00","user":"trass3r","updated_on":null,"issue":40,"id":235552},{"content":"I think that would only be on issue if we wanted to use Tango rather than Phobos in a default GDC installation.\r\n\r\nAnd great job ibuclaw!","created_on":"2010-08-27T19:03:37.437583+00:00","user":"michaelp","updated_on":null,"issue":40,"id":235555},{"content":"> Well I thought druntime is a library on its own. If Tango was ported to D2 it would use the same druntime as phobos, wouldn't it?\n\nDruntime is on its own. The build creates 2 static libraries. libgphobos2.a and libgdruntime.a\n\nlibgdruntime.a = druntime + gcc + config.\n\nlibgphobos2.a = phobos\n\nThe main problem is the build dependencies that both libraries require to build successfully (both need to have access to gcc + config, but only one needs to include the objects with it). When I say one to be a subdirectory of another, I am referring to the *build* method \/ order \/ structure.\n\nCurrently everything is packed into one Makefile, but it would be better instead if phobos and druntime (and possibly gcc + config) had their own separate Makefiles though - think something similar to how libstdc++ is setup.\n\nThis is, however, something that can be worked on as we progress...","created_on":"2010-08-28T15:24:54.108438+00:00","user":"ibuclaw","updated_on":"2010-08-28T15:26:15.583647+00:00","issue":40,"id":235796},{"content":"Just thinking out loud, but I think now is probably the best time to consider creating a release branch for fixes and documentation updates only.","created_on":"2010-08-28T20:36:53.551346+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":235858},{"content":"You mean for a 0.25 update, right?\r\n\r\nIf you do, that sounds like a good idea to me. More discussion for this could go into another issue though.","created_on":"2010-08-29T00:34:09.249414+00:00","user":"michaelp","updated_on":null,"issue":40,"id":235876},{"content":"I think D1 is ready for a release branch.  Even with an esoteric OS like Windows, I've managed to get Tango-0.99.9 and GDC running with no apparent runtime issues.","created_on":"2010-08-29T01:12:29.721806+00:00","user":"venix1","updated_on":null,"issue":40,"id":235884},{"content":"Since you said the GC is probably broken on everything other than Linux, perhaps we should post something on D.gnu or digitalmars.D.announce and ask people to help test? (I can only test on Linux and Windows)","created_on":"2010-09-07T02:15:12.757985+00:00","user":"michaelp","updated_on":null,"issue":40,"id":239990},{"content":"I should have no problem testing x86 OS's - FreeBSD, Solaris, etc. As I can install them in a VM.\r\n\r\nWindows is a problem for me as I am still to successfully build gdc under MinGW ( I know, terrible :)","created_on":"2010-09-07T19:10:27.632901+00:00","user":"ibuclaw","updated_on":null,"issue":40,"id":241130},{"content":"The merge for 2.021 has succeeded 2.020, so any bugs should be reported against the new version.\n\nMaking a duplicate of the new open issue so we don't loose track of conversation.\n\nDuplicate of #67.","created_on":"2010-09-27T21:54:52.242253+00:00","user":"ibuclaw","updated_on":"2010-09-27T21:55:10.069494+00:00","issue":40,"id":256220},{"content":"Is there actually a guideline on whether or not to use LF or CR-LF line terminators in the source code?\n\nWould probably be a better idea to go one or the other across the board for consistency sake. Although it could mean a little more effort for those who are working to bump the DMD version (using 'tofrodos' to convert upstream code it one way or the other before making a diff), but if it could help the patch merge process in the long-run, am all for it.\n\nBeing a Unix-head, I'm all for converting all files to LF terminated files using dos2unix. =)\n\nRegards","created_on":"2010-06-03T17:17:57.417290+00:00","user":"ibuclaw","updated_on":"2010-06-03T17:19:34.136031+00:00","issue":23,"id":189058},{"content":"It really does help the patch merge process, I attempted it manually once and it took over 4 hours to copy and merge one revision.  After converting everything to LF, it took about 15 minutes and that was just to apply the few merges that failed.  With about half being from previous merges that failed to remove the + from the comments.\r\n\r\nConverting an entire directory and all subdirectories is actually real easy using the find command.\r\n{{{\r\nfind . -exec fromdos {} +\r\n}}}\r\n\r\nAlthough it will not convert mac CR endings and those will need to be done manually or with another script.\r\n\r\nAlso I'm in favor of LF, since there are tools with windows for dealing with those kind of repositories and I imagine the majority of the development will be with Linux.  It is possible to block merges which contain CR\/CRLF endings.","created_on":"2010-06-03T19:50:15.825577+00:00","user":"venix1","updated_on":null,"issue":23,"id":189134},{"content":"Hi,\r\n\r\nFirst of all thanks ibuclaw and Daniel Green for using and submit feedbacks to the gdc project.\r\nIt's ok for me to convert all the sources to LF terminators if this helps during the merging process.\r\n\r\nDaniel, since you said that you merged a revision, can you please attach a patch so i can patch the source tree?","created_on":"2010-06-03T22:33:48.040396+00:00","user":"goshawk","updated_on":null,"issue":23,"id":189240},{"content":"Source tree patched.\r\n\r\nClosing.","created_on":"2010-06-12T17:24:24.293116+00:00","user":"ibuclaw","updated_on":null,"issue":23,"id":194865},{"content":null,"created_on":"2010-07-08T03:34:02.215238+00:00","user":"michaelp","updated_on":null,"issue":33,"id":209131},{"content":"Taking a look into this issue, I have discovered a couple of things:\n\n1. It does not appear to segfault on the line \"bar = new float[][](2, 3);\" Because if you run this:\n\n{{{\nvoid main()\n{\n    float[][] bar;\n    bar = new float[][](2, 3);\n    printf(\"Hello\\n\");\n}\n}}}\n\nYou will see that \"Hello\" is printed.\n\nSo what actually seems to happen is that it segfaults when main() ends.\n\n2. Going through the glue code, it appears the code for this is mainly handled in NewExp::toElem in d-glue.cc. It goes under the case \"Tarray\":\n\nThe code will handle the allocation depending on how many arguments\/array dimensions there are.\n\n{{{\nif (arguments->dim == 1)\n{\n ...\n}\nelse\n{\n ...\n}\n\nreturn irs->convertTo(result, base_type, type);\n}}}\n\nSince the code:\n\n{{{\nvoid main()\n{\n    float[] bar;\n    bar = new float[](2);\n}\n}}}\n\nworks just fine, I assume that there is a problem when there are multiple arguments to handle for a NewExp with the type Tarray.\n\nThere are also calls made to functions in phobos, depending on whether on how the type is initialized.\n\n{{{\nlib_call = elem_init_type->isZeroInit() ?\n\t\t    LIBCALL_NEWARRAYMTP : LIBCALL_NEWARRAYMITP;\n}}}\n\nThese can be found in phobos\/internal\/gc.d. They have been changed from dmd to gdc, so it is possible there could be a problem in those internal phobos library functions.\n\nAlso, here is a backtrace from line 2046 of d-glue.cc:\n\n{{{\nBreakpoint 1, NewExp::toElem (this=0x860ffa0, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:2046\n2046\t\t    return irs->convertTo(result, base_type, type);\n(gdb) bt\n#0  NewExp::toElem (this=0x860ffa0, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:2046\n#1  0x080e6c5f in IRState::convertForAssignment (this=0x8620958, \n    exp=0x860ffa0, target_type=0x860fe50) at ..\/..\/gcc\/d\/d-codegen.cc:575\n#2  0x080e6e88 in IRState::assignValue (this=0x0, e=0x861ffd0, v=0x860fff0)\n    at ..\/..\/gcc\/d\/d-codegen.cc:2076\n#3  0x080e7051 in IRState::emitLocalVar (this=0x8620958, v=0x860fff0, \n    no_init=0 '\\000') at ..\/..\/gcc\/d\/d-codegen.cc:82\n#4  0x080eb352 in d_gcc_emit_local_variable (v=0x860fff0)\n    at ..\/..\/gcc\/d\/d-glue.cc:1641\n#5  0x080ece70 in DeclarationExp::toElem (this=0x8610088, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:1625\n#6  0x080eb136 in ExpStatement::toIR (this=0x8610070, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:4365\n#7  0x080eaf36 in CompoundStatement::toIR (this=0x8620720, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:4333\n#8  0x080eaf36 in CompoundStatement::toIR (this=0x8620778, irs=0x8620958)\n    at ..\/..\/gcc\/d\/d-glue.cc:4333\n#9  0x080efa9b in FuncDeclaration::toObjFile (this=0x860fd00, multiobj=0)\n    at ..\/..\/gcc\/d\/d-glue.cc:2810\n#10 0x080ecd30 in Module::genobjfile (this=0x860f9e8, multiobj=0)\n    at ..\/..\/gcc\/d\/d-glue.cc:3023\n#11 0x080df6e5 in d_parse_file () at ..\/..\/gcc\/d\/d-lang.cc:1202\n}}}","created_on":"2010-08-10T17:37:32.510576+00:00","user":"michaelp","updated_on":"2010-08-10T17:49:56.439710+00:00","issue":33,"id":228323},{"content":"When I looked at it when you raised the issue some time ago, it seemed to me that the library call wasn't being returned properly. A 'sub' with no 'leave', or something like that.\r\n\r\nOh, and thought I might note that this is *not* a bug using GCC-3.4.6.\r\n\r\nI'll attach both generated objects for analysis, if that helps you in any way.\r\n\r\nRegards","created_on":"2010-08-10T20:14:11.309352+00:00","user":"ibuclaw","updated_on":null,"issue":33,"id":228371},{"content":"Not that I know assembly much, but it does seem there is a 'sub' with no 'leave' in the generated asm.\r\n\r\n3.4:\r\n\r\n{{{\r\n_Dmain:\r\n\t\tpush\tEBP\r\n\t\tmov\tEBP,ESP\r\n\t\tsub\tESP,028h ; Here is the sub\r\n\t\tmov\tdword ptr -8[EBP],0\r\n\t\tmov\tdword ptr -4[EBP],0\r\n\t\tmov\tdword ptr -010h[EBP],2\r\n\t\tmov\tdword ptr -0Ch[EBP],3\r\n\t\tlea\tEAX,-8[EBP]\r\n\t\tlea\tEDX,-010h[EBP]\r\n\t\tmov\t0Ch[ESP],EDX\r\n\t\tmov\tdword ptr 8[ESP],2\r\n\t\tmov\tdword ptr 4[ESP],offset FLAT:_D12TypeInfo_AAf6__initZ@SYM32\r\n\t\tmov\t[ESP],EAX\r\n\t\tcall\tnear ptr _d_newarraymiTp@PC32\r\n\t\tmov\tEAX,0\r\n\t\tleave ; Here is the leave\r\n\t\tret\r\n\r\n}}}\r\n\r\n4.1:\r\n\r\n{{{\r\n_Dmain:\r\n\t\tlea\tECX,4[ESP]\r\n\t\tand\tESP,0FFFFFFF0h\r\n\t\tpush\tdword ptr -4[ECX]\r\n\t\tpush\tEBP\r\n\t\tmov\tEBP,ESP\r\n\t\tpush\tECX\r\n\t\tsub\tESP,034h ; Here is the sub\r\n\t\tmov\tdword ptr -018h[EBP],0\r\n\t\tmov\tdword ptr -014h[EBP],0\r\n\t\tmov\tdword ptr -010h[EBP],2\r\n\t\tmov\tdword ptr -0Ch[EBP],3\r\n\t\tlea\tEDX,-020h[EBP]\r\n\t\tlea\tEAX,-010h[EBP]\r\n\t\tmov\t0Ch[ESP],EAX\r\n\t\tmov\tdword ptr 8[ESP],2\r\n\t\tmov\tdword ptr 4[ESP],offset FLAT:_D12TypeInfo_AAf6__initZ@SYM32\r\n\t\tmov\t[ESP],EDX\r\n\t\tcall\tnear ptr _d_newarraymiTp@PC32\r\n\t\tmov\tEAX,-020h[EBP]\r\n\t\tmov\tEDX,-01Ch[EBP]\r\n\t\tmov\t-018h[EBP],EAX\r\n\t\tmov\t-014h[EBP],EDX\r\n\t\tmov\tEAX,0\r\n\t\tadd\tESP,034h\r\n\t\tpop\tECX\r\n\t\tpop\tEBP\r\n\t\tlea\tESP,-4[ECX]\r\n\t\tret ; There is no leave anywhere\r\n}}}\r\n\r\nIt also confirms that the library function called is \"_d_newarraymiTp\" in phobos\/internal\/gc.d, starting on line 408. Note that this function also calls \"_d_newarrayiT\".","created_on":"2010-08-10T21:47:16.503352+00:00","user":"michaelp","updated_on":null,"issue":33,"id":228399},{"content":"> Not that I know assembly much, but it does seem there is a 'sub' with no 'leave' in the generated asm.\n\n'enter' and 'leave', sorry. I'm not too great with asm either. ;)\n\nYou can think of:\n{{{\n\t\tpush\tEBP\n\t\tmov\tEBP,ESP\n\t\tsub\tESP,028h\n}}}\nAs the start of the function call, and\n{{{\n\t\tleave\n}}}\nAs the end.\n\n\nHaving a quick look at the glue, the initial thing I can see as different between gcc3.4 and later is the binding() function.\n\nNot sure how it affects codegen yet though...","created_on":"2010-08-10T22:05:43.017763+00:00","user":"ibuclaw","updated_on":"2010-08-10T22:10:04.766426+00:00","issue":33,"id":228403},{"content":"I think I've got it.\r\n\r\nd-codegen.cc, lines 1206-1220, function IRState::getLibCallDecl:\r\n{{{\r\ncase LIBCALL_NEWARRAYT:\r\ncase LIBCALL_NEWARRAYIT:\r\n    arg_types.push( Type::typeinfo->type );\r\n    arg_types.push( Type::tsize_t );\r\n    return_type = Type::tvoid->arrayOf();\r\nbreak;\r\ncase LIBCALL_NEWARRAYMTP:\r\ncase LIBCALL_NEWARRAYMITP:\r\n    arg_types.push( Type::tsize_t );\r\n    arg_types.push( Type::tint32 ); \/\/ Currently 'int', even if 64-bit\r\n    arg_types.push( Type::typeinfo->type );\r\n    if (lib_call == LIBCALL_NEWARRAYMITP)\r\n        arg_types.push( Type::tsize_t );\r\nbreak;\r\n}}}\r\n\r\nThe first two case statements are used for 1 dimensional arrays, and work just fine. The next two are the problem.\r\n\r\nFirst of all, it seems like the arguments are pushed in the wrong order. The function signatures for those two functions are this:\r\n\r\n{{{\r\nvoid[] _d_newarraymTp(TypeInfo ti, int ndims, size_t* pdim)\r\nvoid[] _d_newarraymiTp(TypeInfo ti, int ndims, size_t* pdim)\r\n}}}\r\n\r\nBut the arguments are pushed in the order: size_t, int, TypeInfo, and if it is miTp, it pushes another size_t argument.\r\n\r\nFor the one dimensional arrays, it seems okay:\r\n\r\n{{{\r\nArray _d_newarrayT(TypeInfo ti, size_t length)\r\nArray _d_newarrayiT(TypeInfo ti, size_t length)\r\n}}}\r\n\r\nArguments are pushed in the order Typeinfo, size_t. Which makes sense, based on the function signatures.\r\n\r\nHere is the part that seems to back up that 'enter without leave' code. In the lib calls for one dimensional arrays, return_type is set. But for multidimensional arrays, it isn't.\r\n\r\nSo, changing the code to this:\r\n\r\n{{{\r\ncase LIBCALL_NEWARRAYMTP:\r\ncase LIBCALL_NEWARRAYMITP:\r\n    arg_types.push( Type::typeinfo->type );\r\n    arg_types.push( Type::tint32 ); \/\/ Currently 'int', even if 64-bit\r\n    arg_types.push( Type::tsize_t );\r\n    return_type = Type::tvoid->arrayOf();\r\n    break;\r\n}}}\r\n\r\nseems to work.","created_on":"2010-08-10T22:39:35.698869+00:00","user":"michaelp","updated_on":null,"issue":33,"id":228414},{"content":"Marking as resolved as of <<changeset be805cb4fb58>>.","created_on":"2010-08-10T22:47:55.522875+00:00","user":"michaelp","updated_on":null,"issue":33,"id":228418},{"content":"Setting the return type did the trick.\r\n\r\nI'll close this bug report too. http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1689\r\n\r\nRegards","created_on":"2010-08-10T23:23:20.951582+00:00","user":"ibuclaw","updated_on":null,"issue":33,"id":228427},{"content":"What do you mean for \"no executables have been generated\/ran\" ? Did you try and you failed or.... you didn't try to make an executable at all?","created_on":"2010-06-05T08:53:31.821347+00:00","user":"goshawk","updated_on":null,"issue":24,"id":190237},{"content":"Sorry for not being clear.   I simply meant that I haven't tested the compiler outside of building phobos.\n\nAlthough there is a bug with foreach statements when using ref\/inout attributes.\n\nThe following code will cause a segfault in the compiler.\n{{{\nforeach(ref entry; internalUnicodeData) \n    unicodeData[entry.code] = &entry; \n}}}\n\nand \n\n{{{\nforeach(ref value; array)\n    printf(\"%d\\n\", value);\n}}}\n\nwill cause a segfault in when attempting to print value.","created_on":"2010-06-05T15:18:32.983536+00:00","user":"venix1","updated_on":"2010-06-05T15:30:59.757734+00:00","issue":24,"id":190366},{"content":"The following bit of code will print out the the value of the array as the address of var.\n\n{{{\nint array[] = [0,1,2,3,4,5,6,7,8,9];\nforeach(ref var; array)\n    printf(\"%d\\n\", &var);\n}}}","created_on":"2010-06-05T15:47:01.274673+00:00","user":"venix1","updated_on":"2010-06-05T15:48:54.322787+00:00","issue":24,"id":190371},{"content":"Hi Daniel, just want to say thank-you for your effort. =)\n\nHad a look at your \/\/ \/* needs review code *\/ \/\/, and attaching what I believe to be correct for this instance.\n\nJust building now ... be ready to test in an hour or so.\n\nRegards\nIain","created_on":"2010-06-05T18:50:21.990347+00:00","user":"ibuclaw","updated_on":"2010-06-05T18:51:34.597335+00:00","issue":24,"id":190494},{"content":"About the ref bug I mentioned earlier, what I believe the problem to be is that GDC will not correctly generate the address of a ref variable in a foreach statement. \r\n\r\nI think the best way to explain it is with some D code.\r\n{{{\r\n\/\/ This is what it does.\r\nint array[] = [0,1,2,3];\r\nint* var = array[i];\r\n}}}\r\n\r\n{{{\r\n\/\/ This is what is should do.\r\nint array[] = [0,1,2,3];\r\nint* var = &array[i];\r\n}}}\r\n\r\nI spent some time on that conclusion and tried to trace down the code path used by GDC to generate a foreach statement.  If I knew when this bug appeared, I would like to try to trace down why it happens but that might just be a side effect of the new front end turning foreach into for.\r\n\r\nIn statement.d around line 1508 you'll see how it assigns values to foreach arguments.  Later on the ExpInitializer is used in d-codegen.cc:78 to initialize a value to be stored inside a variable.  I will attach a simple patch that fixes the issue, but I doubt is the best way to go about it but it successfully solved the issue.  I will do a full recompile to see if it breaks anything.  \r\n\r\nHere is a list of my ideas as to why this issue occurs.  Since I do not know much about the internals of GDC this list are my best guesses based the work I did today.\r\n* GDC does not mark reference types.  typeof(ref int) == typeof(int).\r\n* It's also possible that the front end will not correctly change a ref into a pointer to make GDC notice that it is a reference type, but such a change should be noticeable when comparing to DMD code as I believe type setting is all done in the frontend.\r\n\r\nPS, I'd like to look into some form of continuous integration system so that GDC changes can be verified automatically and was wondering if anyone else had ideas on that.","created_on":"2010-06-05T23:43:30.543009+00:00","user":"venix1","updated_on":null,"issue":24,"id":190617},{"content":"{{{\n#!d\n\nclass PrefData\n{\n  GradeData[] gradeData;\n\n  public this() {\n    gradeData = new GradeData[1];\n    foreach (inout GradeData gd; gradeData)\n      gd = new GradeData;  \/\/ segfault happens here.\n  }\n}\n\nclass GradeData {}\n\nvoid main()\n{\n    PrefData p = new PrefData();\n}\n\n}}}\n\nI'm going to rest now, but can you test this code too once you have recompiled.\n\nThis is another regression that has cropped up, another segfault during runtime.\n\nRegards","created_on":"2010-06-06T00:56:39.601279+00:00","user":"ibuclaw","updated_on":"2010-06-06T00:57:40.941151+00:00","issue":24,"id":190639},{"content":"OK, managed to have a look, and the cause is in statement.c, around line 1475.\r\n\r\nIf the comments aren't obvious enough, what the frontend now does is convert foreach statements into for statements, so when the GDC glue calls ::toIR to generate the tree, it is infact calling ForStatement::toIR, not ForeachStatement::toIR.\r\n\r\nThe fix you've got doesn't look too wrong to me. I might be picky and say that you should instead use:\r\n{{{\r\nif (init_val && v->isRef() || v->isOut())\r\n}}}\r\nas the condition.\r\n\r\nWhat could be a better idea though is to hash out a boolean value to tell the GDC backend that the ForStatement it is compiling infact is a remixed ForeachStatement.\r\n\r\nRegards","created_on":"2010-06-07T01:42:07.791221+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191094},{"content":"Picky is good, I only used the variable directly because I wasn't sure on the method calls.  Although I think you forgot a set of parentheses.\r\n{{{\r\nif (init_val && (v->isRef() || v->isOut()))\r\n}}}\r\n\r\nI worked under the assumption that I didn't want to deviate the frontend from DMD and since GDC and DMD did the same thing I tried to see what GDC was doing and why it was failing to work.  The conclusion I came to was that GDC only identifies a ref or out type by it's methods isRef() and isOut() and not on the type but as part of the declaration.  I do not know if at some point GDC diverged from DMD on that point, I couldn't find any indication of such.  \r\n\r\nThat is the path that lead me to the fix I implemented.  When GDC's backend initializes a variable of \"TYPE\" but the destination is \"ref TYPE\" since there is no indication within the type variable that it is a ref type GDC will not return a reference.  Hence my check after the value to determine if it is a reference we should be dealing with and return that instead.\r\n\r\nNow my opinion is fairly naive when dealing with GDC but I felt that this particular issue was a backend issue and that if a statement that assigns a value to a ref came into the backend that it was legitimate and should be dealt with as such.  The only question that remains for me is did GDC diverge from DMD on handling type references or does DMD do a similar thing in it's backend.\r\n\r\n","created_on":"2010-06-07T04:56:44.315596+00:00","user":"venix1","updated_on":null,"issue":24,"id":191165},{"content":"OK, I have a strong reason to believe this should sort it out.\r\n\r\nHave no time to test it at the moment. Will ping back in 3-4 hours.\r\n\r\nRegards","created_on":"2010-06-07T12:25:05.433828+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191418},{"content":"Whoops, forgot to check for whitespace issues on that patch. :-)\r\n\r\nWhile I'm at it, also did some more source file cleaning. Removing all diff '+' and '!' marks that could pose as problematic when applying patches.\r\n\r\n\r\nRegards","created_on":"2010-06-07T12:32:23.903813+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191421},{"content":"Awesome, thanks for looking into that.  Definitely looks like a better place for it.  Also a test I did get tango-0.99.9 to compile.  The only issue I came across was related to templates and implicit casting of arguments which I think is likely to be a front end issue that is fixed in a later DMD. \r\n\r\nOnce all this is added to the repository, do you think it would be safe to tag it as 1.047 and move on to 1.048?","created_on":"2010-06-07T15:18:39.277302+00:00","user":"venix1","updated_on":null,"issue":24,"id":191556},{"content":"For your patch, do you think it would also be good to include a test of STCout.  inout could also be used instead of ref and I\"m not sure if the front end treats it the same as ref or seperately.","created_on":"2010-06-07T15:51:52.717914+00:00","user":"venix1","updated_on":null,"issue":24,"id":191589},{"content":"Just got back to test my patch, and looks like that did not go as well as I imagined it. Oh well, your way is as good as it can get then Daniel. Attaching a working revision of my patch that should be made for inclusion.\r\n\r\n\r\nAnd it looks like the front end treats inout as a ref to me. (Using my code example).\r\n{{{\r\n(gdb) p s->ident.string \r\n$1 = 0x81c70cc \"gd\"\r\n(gdb) p s->storage_class & STCref\r\n$2 = 2097152\r\n(gdb) p s->storage_class & STCout\r\n$3 = 0\r\n}}}\r\nOh, and discovered that there is a STCforeach afterall... Learn something new every day. :-)\r\n{{{\r\n(gdb) p s->storage_class & STCforeach \r\n$4 = 16384\r\n}}}\r\n\r\n\r\nAs for moving onto 1.048, I'd like to test building several projects first (there are quite a number of D games I help look after), try a few libraries (ie: gtkD), and perhaps run dstress on the compiler too to check for any other regressions that may have cropped up.\r\n\r\nAlso, it looks like there are only 7 changesets between 1.047 and 1.049, just my 2 cents, but it might be worth just jumping there. http:\/\/www.dsource.org\/projects\/dmd\/log\/?action=stop_on_copy&rev=203&stop_rev=196\r\n\r\nBut, don't listen to me, I just maintain the GDC package in Debian\/Ubuntu, do what you want, and thanks for your contribution. :-)\r\n\r\n@Michael, can you remove patches from bug reports in bitbucket? Or should you be OK with sorting through these attachments.","created_on":"2010-06-07T19:14:46.143836+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191753},{"content":"OK, gtkD does not compile (it doesn't work with DMD-1.047 either).\r\n\r\nTried 5 random games, and all compiled and ran OK. Good-good. :-)\r\n\r\nDstress will take a while...\r\n\r\nOh, and noticed an ICE bug when compiling this:\r\n{{{\r\nvoid main()\r\n{\r\n    const int[] a = [1,2,3,4,5];\r\n    int[]b = a;\r\n}\r\n}}}\r\n\r\nNot sure if the upgrade to 1.047 has anything to do with it...","created_on":"2010-06-07T20:15:10.715016+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191794},{"content":"Actually, having a look this issue <<issue 2>> back in a different form, will open a new bug report. :-)","created_on":"2010-06-07T20:20:10.081418+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":191798},{"content":"Pushed patches into gdc.\r\n\r\nClosing.","created_on":"2010-06-12T17:27:17.646312+00:00","user":"ibuclaw","updated_on":null,"issue":24,"id":194867},{"content":"Fixed in patch-gcc-4.3.x, attaching diff.\r\n\r\nThough I will note that this change in the gcc-4.3 patch depends on gcc-4.3.5, or at the very least, a source tree with this patch applied.\r\nhttp:\/\/gcc.gnu.org\/viewcvs\/branches\/gcc-4_3-branch\/gcc\/gimplify.c?r1=156407&r2=156416\r\n\r\n\r\nRegards\r\nIain","created_on":"2010-06-07T23:36:58.137755+00:00","user":"ibuclaw","updated_on":null,"issue":25,"id":191902},{"content":"OK, so I sat on the problem, and did some looking into just what the internals are doing.\r\n\r\n- All VAR_DECLs in gdc are initialised at runtime.\r\n\r\n- All VAR_DECLs in gdc are set as TREE_READONLY.\r\n\r\n- In MODIFY_EXPRs, the middle-end checks if the RHS assignment is read-only and has an initialiser in DECL_INITIAL. If true, it is assumed that the VAR_DECL does not need runtime initialisation, so it attempts to perform the assignment directly from the CONSTRUCTOR - which is where gdc-4.3 currently ICEs - as opposed to a per-field assignment.\r\n\r\nWith that said, issue has been fixed in commit 95, where:\r\n\r\n- Set aggregate TREE_TYPE as read-only, instead of the DECL.\r\n\r\n- RHS DECLs with an initialiser in DECL_INITIAL not be marked as read-only.\r\n\r\n\r\n\r\nRegards","created_on":"2010-06-19T17:18:59.284429+00:00","user":"ibuclaw","updated_on":null,"issue":25,"id":198949},{"content":"Ok, after some digging.  I've found some things which help to identity the issue.  GDC treats nested try\/catch statements as a single try\/catch.  This occurs in both Windows and Linux and can be verified by looking at the assembly output.  On Windows it is obvious, on Linux they are labeled as a series of fall through statements.  However, that is how DMD treats them. \r\n\r\nThe problem is how GDC handles landing pads when calling an exception.  Since it is proper to treat nested try\/catch as a single try\/catch.  GDC will build a table of exception handlers.  Which are to be indexed using the call_site variable of the exception context.  The value generated for the call_site variable should be -1 and N, never 0.  -1 means to unwind the stack frame, N is the index into the exception table. and 0 throws an error.  \r\n\r\nBy changing the if statement in deh.d to treat 0 as -1, the runtime error will stop and gdc will properly unwind the stack frame.  Every function with a try\/catch block counts as a different frame.  This doesn't fix the call_site index which is used to determine which exception handler to use.  Since a series of try\/catch blocks are treated as one.  The exception table contains all the catch blocks.\r\n\r\nI can not figure out when or where call_site is set.  Which may provide a solution.  \r\n\r\nI think it's also worth mentioning that GDC's exception code is taken from libstdc++ and there appears to be no inconsistency with how it functions. ","created_on":"2010-08-01T15:43:37.954428+00:00","user":"venix1","updated_on":null,"issue":50,"id":224291},{"content":"In Debian, we have a patch which fixes building on ARM (which may use SjLj exceptions, I honestly don't know). In deh.d, you should see the word \"landing_pad\" commented out in one of the structs. Simply uncomment it, and see if that fixes you up. :-)\n\nI'll attach the dpatch for reference.","created_on":"2010-08-02T00:15:54.720735+00:00","user":"ibuclaw","updated_on":"2010-08-02T00:16:32.666182+00:00","issue":50,"id":224484},{"content":"Since GDC doesn't properly set -1 on the IP to unwind the fucntion context.  We modify the if statement to do it for us.  This only affects SjLj exception code.\n\n== **zero_ip.patch** == \nSjLj exceptions are supposed to have a -1 IP when the function context needs unwinding.  Since I have yet to be able to find where this is done within the compiler, a simple solution is to unwind it on 0, which is what GDC gives instead of -1.\n\n**THIS IS NOT A FIX AND SHOULD NOT BE COMMITTED TO THE REPOSITORY.  It is simply a workaround for those who need exceptions to not kill the program.**\n\nIn other news, conditional exceptions do work.  But SjLj exceptions can only throw one exception per function context.  I am still looking for how the LSDA header is created or possibly the ability to mark each catch block as a new function context.  Which seems to be what c++ does when generating exception code.\n\n","created_on":"2010-08-02T00:07:02.639543+00:00","user":"venix1","updated_on":"2010-08-02T00:23:16.837725+00:00","issue":50,"id":224480},{"content":"**landing_pad** appears to be unused within the code.  But I went ahead and tried it anyway, nothing changed.  I did figure out I was inspecting pre4.0 code for generating try\/catch blocks.  So I may actually be able to make some progress now.\n\nI think windows is about the only thing still using SjLj exceptions, but it's still a fallback if Dwarf2 exceptions don't work or wish to not be used.","created_on":"2010-08-02T01:40:03.330763+00:00","user":"venix1","updated_on":"2010-08-02T01:43:02.664263+00:00","issue":50,"id":224493},{"content":"GCC has little documentation about using Exceptions, but I think I've figured out how SjLj should work.   The landing_pad\/call_site\/IP is set at compile time.  GCC will collect all the catch blocks and set up the function context.  **deh.d** is responsible for filtering the catch blocks.  Landing pad information is emitted in try blocks.  If you do a series of try\/catch and move the throw statement from various try blocks it will properly adjust, skipping the nested blocks.\r\n\r\nThis leaves one problem.  When entering a catch block, the landing pad needs updating.  If there are no catch blocks in this function context, then set to -1.  Otherwise set to the next catch block.\r\n\r\nI did manage to modify **deh.d** to do that, instead of making the compiler do it.  It only affects SjLj exceptions and needs some tweaking.  I based it around what I was able to decipher from how GCC handles exception generation.  I'll see if I can't clean it up some and add it to the other patch as a temporary solution.\r\n\r\nI still don't understand why the landing pad is being set to 0 instead of -1.  It's possible, since the exception code was taken from C++, that the C++ frontend does stuff which the D frontend doesn't.  If you look at the C code for exception handling it treats 0 & -1 as the same, which is what I had to do with D to stop the runtime from aborting and to make it properly unwind.","created_on":"2010-08-02T06:44:07.477681+00:00","user":"venix1","updated_on":null,"issue":50,"id":224536},{"content":"**Confirmed**.\n\nGDC is not setting the launchpad table properly.  Here is a diff of what I had to change in the assembly output in order for it to work correctly.\n\n{{{\n#!diff\n--- C:\/Users\/venix\/dummy.s\tMon Aug 02 10:09:55 2010\n+++ C:\/Users\/venix\/lp_correct.s\tMon Aug 02 10:08:31 2010\n@@ -77,7 +77,7 @@\n \tmovl\t(%eax), %eax\n \tmovl\t$__D9Exception7__ClassZ, 4(%esp)\n \tmovl\t%eax, (%esp)\n-\tmovl\t$0, -80(%ebp)\n+\tmovl\t$2, -80(%ebp)\n \tcall\t__d_dynamic_cast\n \tmovl\t%eax, -24(%ebp)\n \tmovl\t$LC3, (%esp)\n@@ -99,7 +99,7 @@\n \tmovl\t(%eax), %eax\n \tmovl\t$__D9Exception7__ClassZ, 4(%esp)\n \tmovl\t%eax, (%esp)\n-\tmovl\t$0, -80(%ebp)\n+\tmovl\t$-1, -80(%ebp)\n \tcall\t__d_dynamic_cast\n \tmovl\t%eax, -20(%ebp)\n \tmovl\t$LC4, (%esp)\n}}}\n\nAs for how to make GDC fix it, I got no idea.  Since GCC handles most of the exception generation, I wonder if there is a flag someplace that needs setting, or some other semantic thing that isn't being done.","created_on":"2010-08-02T14:15:54.342540+00:00","user":"venix1","updated_on":"2010-08-02T14:18:17.941331+00:00","issue":50,"id":224718},{"content":"FYI, this is in gcc\/unwind-c.c, at around line 170\r\n\r\n{{{\r\n\r\n#ifdef __USING_SJLJ_EXCEPTIONS__\r\n  \/* The given \"IP\" is an index into the call-site table, with two\r\n     exceptions -- -1 means no-action, and 0 means terminate.  But\r\n     since we're using uleb128 values, we've not got random access\r\n     to the array.  *\/\r\n  if ((int) ip <= 0)\r\n    return _URC_CONTINUE_UNWIND;\r\n  else\r\n    {\r\n      _uleb128_t cs_lp, cs_action;\r\n      do\r\n        {\r\n          p = read_uleb128 (p, &cs_lp);\r\n          p = read_uleb128 (p, &cs_action);\r\n        }\r\n      while (--ip);\r\n\r\n      \/* Can never have null landing pad for sjlj -- that would have\r\n         been indicated by a -1 call site index.  *\/\r\n      landing_pad = (_Unwind_Ptr)cs_lp + 1;\r\n      if (cs_action)\r\n        action_record = info.action_table + cs_action - 1;\r\n      goto found_something;\r\n    }\r\n#else\r\n\r\n}}}\r\n\r\nWhich seems to suggest that the check for ip should be **less than or equal to** zero, not less than.\r\n\r\nI'll have a look at the GCC commit logs for any changes. If I understand the unwind code + comments correctly, they should mirror what is found in the gcc\/unwind-*.h and gcc\/unwind-*.c files.\r\n\r\nRegards","created_on":"2010-08-02T15:31:15.961544+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":224784},{"content":"Actually, see this commit: http:\/\/gcc.gnu.org\/viewcvs\/branches\/gcc-4_3-branch\/gcc\/unwind-c.c?r1=107091&r2=111488","created_on":"2010-08-02T15:41:20.507702+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":224788},{"content":"On second look, ignore my previous comment, as it does nothing for SjLj Exceptions.\n\nSo back on topic to what I mentioned in comment 7, I'd be happy to stand by this patch (based off your original) on the grounds that it's what GCC does.\n\nRegards","created_on":"2010-08-02T17:19:15.243530+00:00","user":"ibuclaw","updated_on":"2010-08-02T17:20:47.372556+00:00","issue":50,"id":224828},{"content":"That will only solve part of the problem and may be irrelevant or incorrect once the real issue is solved.  If you look at libstdc++ exception handling, it has the same if statement D uses, as D uses as D is based off of it.\n\nHere is a reduced version of what D and C++ generate for exceptions.\n\n{{{\n\/\/ D psuedo code based on assembly output\n; -80(%ebp) is call_site index\ntry\n  movl\t$2, -80(%ebp)\n  try\n    movl\t$1, -80(%ebp)\n    call\t__d_throw\n  catch ; $1 index\n    movl\t$0, -80(%ebp)\n    call\t__d_throw  \ncatch ; $2 index\n  movl\t$0, -80(%ebp)\n  call\t__d_throw  \n\n\n; C++ psuedo code based on assembly output.\n; 48(%esp) is the call_site index.\ntry\n  movl\t$2, 48(%esp)\n  try\n    movl\t$1, 48(%esp) ; \n    call\t___cxa_throw\n  catch ; $1 index\n    movl\t$2, 48(%esp)\n    call\t___cxa_throw\ncatch ; $2 index\n  nop ;\n}}}\n\nGDC is setting up the exception handlers properly, but not the call_site index.  There are many ways to verify the exception handlers are setup.  The easiest is to inline an asm statement **asm{ mov int ptr [EBP]-80, X; }** replacing X with the position of the catch block.\n\n{{{\n#!d\n        catch(Exception_B e)\n        {\n            asm{ mov int ptr [EBP]-80, 2; }\n            printf(\"Catch 2\\n\");\n            throw e;\n        }\n}}}\n\nManually setting that, will allow D exceptions to be handled properly and mimic what DMD does.\n\nI have been tracing GCC code related to emitting\/building sjlj exceptions to try to figure out what is going on, but haven't had any luck.\n\nI think the relevant functions are in **except.c** with **sjlj** prefixes.  Since c++ doesn't have this issue, I believe GDC isn't doing something GCC wants related to marking Catch blocks.","created_on":"2010-08-02T18:02:47.965372+00:00","user":"venix1","updated_on":"2010-08-02T18:07:50.816406+00:00","issue":50,"id":224848},{"content":"The logic for generating those labels reside in **except.c** at **sjlj_mark_call_sites** and **sjlj_assign_call_site_values**\n\nRight now, I\"m thinking that the issue is related to regions.  **struct sjlj_lp_info** is used to contain the information used for each call_site, and only one per region can exist.  If **try** and **catch** shared the same region, GCC would be unable to give it a unique **sjlj_lp_info** to the catch forcing it to use the try region.  GCC blocks using the same **call_site_index** causing the loop to go around again, and move to a different region, one that has not been properly setup and so has a **call_site_index** of 0.  Producing what we see happening in the assembly files generated by GDC.","created_on":"2010-08-02T20:05:25.444993+00:00","user":"venix1","updated_on":"2010-08-02T20:12:51.371187+00:00","issue":50,"id":224898},{"content":"==  **What C++ does** ==\r\nShortly after my previous post, I found that the functionality exhibited by GCC is intended.  I then preceded to step through g++ and see how it' looks.  They use region **ERT_CLEANUP** to set the call_site_index.  A unique **ERT_CLEANUP** preceding a catch block will likely solve the issue, looking at how GCC builds the **TRY_CATCH_EXPR** tree.\r\n{{{\r\n#!c\r\n    case TRY_CATCH_EXPR:\r\n      i = tsi_start (TREE_OPERAND (t, 1));\r\n      switch (TREE_CODE (tsi_stmt (i)))\r\n\t{\r\n\tcase CATCH_EXPR:\r\n\t  lower_catch (state, tp);\r\n\t  break;\r\n\t  \r\n\tcase EH_FILTER_EXPR:\r\n\t  lower_eh_filter (state, tp);\r\n\t  break;\r\n\tdefault:\r\n\t  lower_cleanup (state, tp);\r\n\t  break;\r\n\t}\r\n}}}\r\nNotice that the default action for anything other than a **CATCH_EXPR** or **EH_FILTER_EXPR** is a call to **lower_cleanup** which generates a **ERT_CLEANUP** region.  I will see if rewriting **IRState::endCatch**  to include the extra statement will solve the issue.","created_on":"2010-08-02T23:02:50.905857+00:00","user":"venix1","updated_on":null,"issue":50,"id":224972},{"content":"The above solution is the best I can come up with and seems to be the only reliable one, after all it's the one c++ uses.  If clarification is needed, just PM me or post here and I\"ll do my best.","created_on":"2010-08-04T01:10:26.464435+00:00","user":"venix1","updated_on":"2010-08-04T01:13:58.817859+00:00","issue":50,"id":225450},{"content":"C++ embeds a  **TRY_FINALLY_EXPR** inside  the **CATCH_EXPR** to contain the catch body.  Looking at the **lower_eh_constructs_1** loop.  It appears to iterate through the statement list.  So any code that precedes the **CATCH_EXPR** to become a cleanup fails. \r\n\r\nThe included patch corrected the exception handling.  It may be possible to hav e TRY_FINALLY without a cleanup, but for me it only worked using a null asm statement.  **TRY_FINALLY_EXPR** appears to add about 20 lines of assembly code.  I want to look over that to see if it does anything crazy.  Also I want to test it on a system using dwarf2 exceptions and examine that output to see if anything changes.","created_on":"2010-08-03T22:05:01.838944+00:00","user":"venix1","updated_on":null,"issue":50,"id":225432},{"content":"Oh my.\r\n\r\nDoesn't a NOP expression work, rather than a dummy asm statement?\r\n\r\n{{{\r\n    \/\/ GDC requires multiple statements to make a list.\r\n    tree t_finl = d_void_zero_node;\r\n    t_body = build2(TRY_FINALLY_EXPR, void_type_node, t_body, t_finl);\r\n\r\n    doExp(build2(CATCH_EXPR, void_type_node,\r\n              currentFlow()->catchType, t_body));\r\n}}}\r\n\r\nI'd probably feel more inclined to use that instead.\r\n\r\nRegards.","created_on":"2010-08-04T23:55:41.476228+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":225943},{"content":"A NOP expression gets discarded and then the whole TRY_FINALLY_EXPR is reduced to a simple block statement, negating why we had to use it in the first place.  If you know of a way to prevent that from happening then it should work.\n\nAlso I would definitely wrap whatever is done with **{{{#ifdef __USING_SJLJ_EXCEPTIONS__}}}** to ensure that only SJLJ exceptions are affected.","created_on":"2010-08-05T00:36:55.688409+00:00","user":"venix1","updated_on":"2010-08-05T00:42:19.743633+00:00","issue":50,"id":225954},{"content":"A fake label?\r\n\r\n{{{\r\n\/\/ GDC requires multiple statements to make a list.\r\nt_finl = build1(LABEL_EXPR, void_type_node, create_artificial_label());\r\nt_body = build2(TRY_FINALLY_EXPR, void_type_node, t_body, t_finl);\r\n\r\ndoExp(build2(CATCH_EXPR, void_type_node,\r\n          currentFlow()->catchType, t_body));\r\n}}}\r\n\r\nSeems to generate the finally statement for me. Though may be more ugly...\r\n\r\n","created_on":"2010-08-05T01:15:47.326643+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":225965},{"content":"The fake label works, produces identical code to the dummy asm statement.\n\nI think there may be a better way.  If we used a **TRY_CATCH_EXPR** with a dummy catch using an uncatchable type.  The problem I had was the callback to **d_eh_type_type** required turning the type I passed into a runtime type.  Doing that would avoid the runtime overhead required to execute the finally block.  Even if it's a dummy, it still is called.","created_on":"2010-08-05T01:41:12.203889+00:00","user":"venix1","updated_on":"2010-08-05T01:41:34.243327+00:00","issue":50,"id":225971},{"content":"I feel that the actual cause and solution to this problem lies inside GCC.  GCC omits **ERT_CATCH** regions from the landing pad structure and then don't handle that case when marking call sites.  That is why the **movl 0, -80(%ebp)** occurs.  Plus I managed to modify **sjlj_mark_call_sites** so that the issue goes away.  \r\n\r\nSo there are two working solutions.  One is to encase GDC's constructs in a **TRY_FINALLY_EXPR** and the other is to patch **except.c** to fix the issues when using **TRY_CATCH_EXPR**.  I'm in favor of changing GCC, because it removes all the excess code generation that isn't needed and it can be enclosed with \r\n{{{\r\n      if  (strcmp (lang_hooks.name, \"GNU D\") == 0)\r\n}}}\r\nto ensure it is only applied to GDC.\r\n\r\nNow I'm satisfied.","created_on":"2010-08-05T21:51:27.644546+00:00","user":"venix1","updated_on":null,"issue":50,"id":226487},{"content":"I'd be interested in playing with DMD, to see if I can figure out how their codegen looks like first. But can't see anything that I'd object to in that patch.\r\n\r\n\r\nFYI, this is what C++ does different (and why finally{} doesn't get discarded).\r\n\r\nSimplified version of D's gimple code:\r\n{{{\r\ntry\r\n{\r\n   try\r\n   {\r\n      _d_throw(\"An Exception\");\r\n   }\r\n   catch\r\n   {\r\n      try\r\n      {\r\n         catch (struct Exception &)\r\n         {\r\n            printf(\"Caught Exception\");\r\n         }\r\n      }\r\n      finally\r\n      {\r\n      }\r\n   }\r\n}\r\nfinally\r\n{\r\n}\r\n}}}\r\n\r\n\r\nSimplified version of C++'s gimple code:\r\n{{{\r\ntry\r\n{\r\n   _cxa_throw(\"An Exception\");\r\n}\r\ncatch\r\n{\r\n   catch (struct Exception)\r\n   {\r\n      struct Exception D.2283;\r\n      try\r\n      {\r\n         __cxa_begin_catch(<<<exception object>>>);\r\n         printf(\"Caught Exception\");\r\n      }\r\n      finally\r\n      {\r\n         __comp_dtor(D.2283);\r\n      }\r\n   }\r\n   finally\r\n   {\r\n      __cxa_end_catch();\r\n   }\r\n}\r\n}}}\r\n\r\nRegards","created_on":"2010-08-05T22:35:55.127794+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":226495},{"content":"Merged patch into <<changeset 231>>","created_on":"2010-09-01T17:24:16.222294+00:00","user":"ibuclaw","updated_on":null,"issue":50,"id":237706},{"content":null,"created_on":"2010-07-17T20:13:50.346269+00:00","user":"ibuclaw","updated_on":null,"issue":42,"id":217359},{"content":"Note that this behaviour appears to be consistent with dmd though - when building with \"dmd warn.d -w\", a binary is not built.","created_on":"2010-07-17T21:07:22.906590+00:00","user":"michaelp","updated_on":null,"issue":42,"id":217382},{"content":"Then it should be that way in gdmd then. :)","created_on":"2010-07-18T17:38:46.342724+00:00","user":"ibuclaw","updated_on":null,"issue":42,"id":217707},{"content":"Then dmd-script needs to be changed to push -Werror to gdc when -w is passed to gdmd.\r\n\r\nCurrently, it only pushes -Wall.","created_on":"2010-07-18T22:13:59.707407+00:00","user":"michaelp","updated_on":null,"issue":42,"id":217819},{"content":"Could you check to see if everything is okay with this in <<changeset b4fb93e94c29>>?\r\n\r\n-wi was implemented in 1.057 (informational warnings). I added it into gdmd and gdc as well, with what should be the behaviour as you mentioned above.\r\n\r\nIn gdc, -Wall gives warnings, but builds. -Werror gives warnings, but doesn't build.\r\n\r\nSame goes for gdmd, respectively with -wi and -w.","created_on":"2010-07-28T02:51:25.712888+00:00","user":"michaelp","updated_on":null,"issue":42,"id":222418},{"content":"Excellent job. I'll mark this as resolved then. :-)","created_on":"2010-07-28T14:18:32.923233+00:00","user":"ibuclaw","updated_on":null,"issue":42,"id":222619},{"content":"Yep, completely backend-related:\r\nhttp:\/\/www.dsource.org\/projects\/dmd\/changeset\/266","created_on":"2010-07-20T22:08:48.180269+00:00","user":"trass3r","updated_on":null,"issue":43,"id":218728},{"content":"Test cases for this issue:\n\n{{{\nlong bar() {\n    return -1L;\n}\n\nvoid main()\n{\n   long[1] b = void;\n   b[0]= bar();\n\n   assert((b[0]>>>2) == 0x3FFFFFFFFFFFFFFFL);\n   assert((b[0]>>2) == 0xFFFFFFFFFFFFFFFFL);\n\n   b[0] = -1L;\n   assert((b[0]>>>2) == 0x3FFFFFFFFFFFFFFFL); \/\/asserts\n   assert((b[0]>>2) == 0xFFFFFFFFFFFFFFFFL);\n\n   b[0] = -1L;\n   b[0] >>>= 2;\n   assert( (b[0]) == 0x3FFFFFFFFFFFFFFFL); \/\/asserts\n   b[0] = -1L;\n   b[0] >>= 2;\n   assert( (b[0]) == 0xFFFFFFFFFFFFFFFFL);\n}\n}}}\n\n---------------------------------------------\n\n{{{\nvoid main()\n{\n  long[1] b = void;\n  b[0] = -1L;\n  b[0] >>>= 2;\n  assert( (b[0]) == 0x3FFFFFFFFFFFFFFFL); \/\/asserts\n}}}\n\n--------------------------------------------\n\n{{{\nimport std.stdio;\nint main(string[] args)\n{\n  long   a = -1;\n  long[] b = [ -1 ];\n  writefln(\"a   (%X) >>> 1 = %X\", a   , (a    >>> 1));\n  writefln(\"b[0](%X) >>> 1 = %X\", b[0], (b[0] >>> 1));\n  \/\/Output:\n  \/\/a   (FFFFFFFFFFFFFFFF) >>> 1 = FFFFFFFFFFFFFFFF\n  \/\/b[0](FFFFFFFFFFFFFFFF) >>> 1 = 7FFFFFFFFFFFFFFF\n\n  \/\/Expected output:\n  \/\/a   (FFFFFFFFFFFFFFFF) >>> 1 =7FFFFFFFFFFFFFFFF\n  \/\/b[0](FFFFFFFFFFFFFFFF) >>> 1 = 7FFFFFFFFFFFFFFF\n  return 0;\n}\n}}}\n\n------------------------------------\n\nAll of these cases require optimization to be turned ON.\n\nWhen compiling with gdmd test.d, everything is fine, output is correct, no asserts. With gdmd test.d -O, 2 asserts in the first piece of code assert, the assert in second piece of code asserts, and the output shown in the comments in third piece of code is shown. (Rather than the expected output, which is the correct output.)\n\nAlso, in the changeset trass3r posted, it appears that more changes than just what is in dmd-1.x\/e2ir.c need to be made.\n\nChanging ShrAssignExp to:\n\n{{{\nelem *\nShrAssignExp::toElem(IRState * irs)\n{\n    Type *t1 = e1->type; \n    if (e1->op == TOKcast) \n    {   \/* Use the type before it was integrally promoted to int \n\t *\/ \n\tCastExp *ce = (CastExp *)e1; \n\tt1 = ce->e1->type; \n    }\n    \n    if( e1->type->isunsigned() )\n\top = TOKushrass;\n    else\n\top = TOKshrass;\n    return make_assign_math_op(this, irs);\n}\n}}}\n\nand ShrExp to:\n\n{{{\nelem *\nShrExp::toElem(IRState * irs)\n{\n    if( e1->type->isunsigned() )\n\top = TOKushr;\n    else\n\top = TOKshr;\n    return make_math_op(this, irs); \n}\n}}}\n\ndoes not appear to fix anything.\n\nHowever, changing these line of d-glue.cc(523-524):\n\n{{{\nbool is_unsigned = e1_type->isunsigned() || e2_type->isunsigned()\n\t|| op == TOKushr;\n}}}\n\nto:\n\n{{{\nbool is_unsigned = e1_type->isunsigned() || e2_type->isunsigned();\n\t\/\/|| op == TOKushr;\n}}}\n\nFixes the output in the third test case, but causes on assert on line 10 of the first test.(First assert in that test case)\n\nSo I think some code may need to be changed in make_math_op() in d-glue.cc to get this working.","created_on":"2010-08-03T16:02:04.946357+00:00","user":"michaelp","updated_on":"2010-08-03T16:04:10.782740+00:00","issue":43,"id":225344},{"content":"Could you confirm that with this patch applied, gdc generates the correct code in all unittests? And if not, say which ones.\n\nRegards.","created_on":"2010-08-04T14:12:44.047466+00:00","user":"ibuclaw","updated_on":"2010-08-04T14:16:09.262434+00:00","issue":43,"id":225695},{"content":"OK, you can probably ignore that last statement, I got round to testing it and it only fixes one case, but only out of luck.\r\n\r\nThis gets weird here:\r\n\r\n{{{\r\nimport std.stdio;\r\nint main(string[] args)\r\n{\r\n  long   a = -1;\r\n  long[] b = [ -1 ];\r\n  writefln(\"%X\", (a    >>> 1)); \/\/ Output with -O2 is FFFFFFFFFFFFFFFF\r\n  writefln(\"%X\", (b[0] >>> 1)); \/\/ Output with -O2 is 7FFFFFFFFFFFFFFF\r\n}\r\n}}}\r\n\r\nSwapping the two print statements around gives us:\r\n{{{\r\nimport std.stdio;\r\nint main(string[] args)\r\n{\r\n  long   a = -1;\r\n  long[] b = [ -1 ];\r\n  writefln(\"%X\", (b[0] >>> 1)); \/\/ Output with -O2 is FFFFFFFFFFFFFFFF\r\n  writefln(\"%X\", (a    >>> 1)); \/\/ Output with -O2 is FFFFFFFFFFFFFFFF\r\n}\r\n}}}\r\n","created_on":"2010-08-04T15:41:08.576549+00:00","user":"ibuclaw","updated_on":null,"issue":43,"id":225769},{"content":"OK, fixed issue (for real this time). Simple, and all bases are covered. :-)\n\nNow, if someone can test to confirm, I'll push and have a good night.\n\nRegards","created_on":"2010-08-04T22:15:34.245884+00:00","user":"ibuclaw","updated_on":"2010-08-04T22:17:43.115627+00:00","issue":43,"id":225924},{"content":"Looks good from here.\r\n\r\nGreat job! :)\r\n\r\nWill leave as on hold until you push the change.","created_on":"2010-08-05T00:00:28.558030+00:00","user":"michaelp","updated_on":null,"issue":43,"id":225945},{"content":"Pushed.\r\n\r\nAnd I'll push the arrayops tweak also, while I'm here too.\r\n\r\nRegards","created_on":"2010-08-05T00:31:53.957154+00:00","user":"ibuclaw","updated_on":null,"issue":43,"id":225953},{"content":"I put it in make_assign_math_op() because in e2ir.c, toElemBin() is called by all of the xxxExp::toElem and xxxAssignExp::toElem, whereas in gdc, it seems to be handled separately with xxxExp::toElem is handled by make_math_op() and xxxAssignExp::toElem is handled by make_assign_math_op().\r\n\r\nHowever, I'm not really sure if it is necessary.\r\n\r\nAnd your testcase: Is there a problem with gdc regrading it? It seems work the same as dmd.","created_on":"2010-07-31T17:59:15.349075+00:00","user":"michaelp","updated_on":null,"issue":51,"id":224020},{"content":"As good timing goes, moments after you posted this, I've just done a quick merge of 1.062 myself, and the problem has gone. Thanks for looking into it anyway. :-)\n\nThere are one or two other issues that you haven't mentioned that may need addressing too.\n\nOnly thing that comes immediately to mind are some slight changes to the glue code regarding your array operations commit. I think binary operations (&, ^ and |) are still silently allowed, whereas in dmd they aren't. Moving it to the make_math_op() function should suffice, and will cut down all the duplicate code.\n\n\n**Update:**\n\nAh, serves me right for not reading the commit first. I see you have already dealt with it.\n\nOne question though, is make_assign_math_op() really necessary? I thought D handled all array opAssign symbols  already in the frontend (see arrayops.c).","created_on":"2010-07-31T16:53:06.779216+00:00","user":"ibuclaw","updated_on":"2010-07-31T17:04:24.534808+00:00","issue":51,"id":224000},{"content":"OK, I found a test case to answer my question.\r\n\r\n{{{\r\nint[] a = [1,2,3];\r\nint[] b = [1,2,3];\r\nb += a[];\r\n}}}\r\n\r\nAll's good then. I'll just have a quick sift through and clean up any areas. :-)\r\n\r\nRegards","created_on":"2010-07-31T17:40:44.871367+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224013},{"content":"> And your testcase: Is there a problem with gdc regrading it? It seems work the same as dmd.\r\n\r\nIt is an example of what sort of unsupported code can pass through make_assign_math_op(). So putting the test for array types there is justified.\r\n\r\nAnyhow... I've made some amendments to the glue. <<changeset 162>>\r\n\r\nThe small update in d-codegen is included in the update for DMD 1.062 frontend, so I merged that in too.\r\n\r\nI removed the test for TOKequal, as the math ops function should *never* get that type of operation.\r\n\r\nAnd the #if macros in binfo_for() looked like a nightmare, so I attempted to make it a little more sane for the reader.","created_on":"2010-07-31T18:19:41.187691+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224024},{"content":"I thought that piece of code in d-codegen.cc would be needed somewhere. I think I looked in d-glue.cc, but didn't see it, and left it. Good find.\r\n\r\nAnd good call on the macros. Looks much cleaner now. :)\r\n\r\nOne more thing: There was also a change that looked like this in e2ir.c:\r\n\r\n{{{\r\n@@ -2565,7 +2560,7 @@\r\n         }\r\n\r\n     }\r\n\r\n #endif\r\n\r\n-    if (t1b->ty == Tstruct)\r\n\r\n+    if (t1b->ty == Tstruct || t1b->ty == Tsarray)\r\n\r\n     {\r\n\r\n         if (e2->op == TOKint64)\r\n\r\n         {   \/* Implement:\r\n}}}\r\n\r\nDoes this need to be implemented anywhere?\r\n\r\nIt is in the function AssignExp::toElem in e2ir.c.\r\n\r\nI can't find it anywhere in d-glue.cc or d-codegen.cc, but I just want to make sure you saw this change as well.","created_on":"2010-07-31T18:40:15.679583+00:00","user":"michaelp","updated_on":null,"issue":51,"id":224033},{"content":"> I thought that piece of code in d-codegen.cc would be needed somewhere. I think I looked in d-glue.cc, but didn't see it, and left it. Good find.\n\nIt was hardly a find. ;)\nThe truth is more like I implemented it in my first commit (updated to 1.047), so recognised it when I saw it.\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/afcd0d2aa1b8#chg-d\/d-codegen.cc\n\n\n> One more thing: There was also a change that looked like this in e2ir.c:\n\nI did notice that, not sure if it affects us, or what bug report it fixes in DMD. Will go through the bugzilla reports later, so ensure everything is running as it should.\n\n\nOh, and as for Issue #1 in your list, this needs going somewhere:\n\n{{{\ncase Tvoid:\n    error(loc, \"void does not have a default initializer\");\n    return new ErrorExp();\n}}}\n\nNow is probably a good time to note (since we are on the subject of void[]'s) - that this ICEs GDC.\n\n{{{\nvoid[1] a;\nvoid main()\n{\n}\n}}}\n\nYou get the right error message, but GDC seems to continue on processing the erroneous code. So it's probably a good idea to hit both birds with one stone.\n\nRegards","created_on":"2010-07-31T19:08:48.040168+00:00","user":"ibuclaw","updated_on":"2010-07-31T19:09:44.305888+00:00","issue":51,"id":224038},{"content":"Fixed issue 1 in <<changeset 164>>","created_on":"2010-07-31T22:30:08.326511+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224061},{"content":"D2 with <<changeset 164>> builds and runs OK. So is not a problem with any changes we've made to the glue code.\r\n\r\nI'll ping back later once I've done a bisect of the 1.061 and 1.062 patches.\r\n\r\nRegards","created_on":"2010-08-01T21:29:30.154631+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224407},{"content":"And a new issue to add to the list. Somewhere between the merges from 1.060 -> 1.062 we have lost 64bit support too.","created_on":"2010-08-01T20:55:26.893436+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224399},{"content":"Attaching a quick hack to allow 64bit archs to build again - it's not the solution, but is there if anyone requires it temporarily.\r\n\r\nI don't have time currently, but will need to look into all exit points for the new TypeError handlers in 1.062, and see just how they affect the codegen, as we seem to be taking quite a bad hit because of it.","created_on":"2010-08-02T00:07:03.208844+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":224481},{"content":"There is an issue with templates and types.  The compiler throws an error instead of casting as DMD appears to do.  I know this bug existed as far back as <<changeset 89>>.\r\n\r\n{{{\r\n#!d\r\nvoid test(T : int)(T integer)\r\n{}\r\n\r\nvoid main()\r\n{\r\n\tuint a;\r\n\tint  b;\r\n\t\r\n\ttest(a);\r\n\ttest(b);\r\n}\r\n}}}\r\n{{{\r\ntemplate.d:9: Error: template template.test(T : int) does not match any function template declaration\r\ntemplate.d:9: Error: template template.test(T : int) cannot deduce template function from argument types !()(int)\r\n}}}","created_on":"2010-08-12T22:23:56.620848+00:00","user":"venix1","updated_on":null,"issue":51,"id":229346},{"content":"Could you post this in a separate bug report?\r\n\r\nI can confirm that this a bug as well.\r\n\r\nAlso, the loss of 64 bit support is related to this patch right? Otherwise, it could also be moved into a different issue.","created_on":"2010-08-13T23:57:11.220094+00:00","user":"michaelp","updated_on":null,"issue":51,"id":229747},{"content":"Okay, easy fix it seems. For some reason, in GDC, when the parameters did not match, the function deduceType would goto Lnomatch, instead of the implicit converting the types like in dmd.\n\nChanging the lines 1620-1626 from:\n\n{{{\nelse\n    return implicitConvTo(tparam);\n    \/\/goto Lnomatch;\n}\n\nif (ty != tparam->ty)\n    goto Lnomatch;\n\n}}}\n\nto:\n\n{{{\nelse\n    \/\/return implicitConvTo(tparam);\n    goto Lnomatch;\n}\n\nif (ty != tparam->ty)\n    return implicitConvTo(tparam);\n    \/\/goto Lnomatch;\n}}}\n\nedit: See <<changeset 888e3cc8a31d>>.\nseems to fix it.","created_on":"2010-08-14T00:48:37.165755+00:00","user":"michaelp","updated_on":"2010-08-14T00:49:48.634232+00:00","issue":51,"id":229759},{"content":"The above was probably a bad patch\/merge. (Have been slowly loosing my trust in just how reliable patch really is. ;)\r\n\r\nAnyhow, testing against 1.063, and 64bit now builds\/works again. So closing the issue.\r\n\r\nThanks.","created_on":"2010-08-22T12:32:53.574266+00:00","user":"ibuclaw","updated_on":null,"issue":51,"id":232911},{"content":"Well that's odd. Maybe it had something to do with a glue change? (But if it didn't affect D2, maybe not)\r\n\r\nAnyways, it's fixed now. :)","created_on":"2010-08-22T16:20:11.666569+00:00","user":"michaelp","updated_on":null,"issue":51,"id":232947},{"content":"Well that's odd. Maybe it had something to do with a glue change? (But if it didn't affect D2, maybe not)\r\n\r\nAnyways, it's fixed now. :)","created_on":"2010-08-22T16:20:12.296452+00:00","user":"michaelp","updated_on":null,"issue":51,"id":232948},{"content":"It may be worth discussing this in a few weeks. I plan to update D1 to 1.062 before the end of the month, given we don't hit a major regression, or something...","created_on":"2010-07-04T15:35:07.654710+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":207289},{"content":"I think that most of the files that are unused are replaced in functionality by GDC glue files.\r\nWhen the front end is more up to date, we can determine if the files are used.\r\nHowever, if they have not been needed in GDC until now, I think it is okay to remove them.","created_on":"2010-07-04T22:03:42.944832+00:00","user":"michaelp","updated_on":null,"issue":29,"id":207416},{"content":"Just to quickly add an item to your list, I noticed that we include d\/async.c in the Makefile. However, is not used in d-lang.cc, or in any other part of the project. Should this be considered also for removal, or should a merge be done from d\/mars.c?","created_on":"2010-07-13T15:19:35.278033+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":211839},{"content":"It appears it isn't needed. I just built GDC without async.c\/.h in Make-lang.in, and without the files in the dmd directory.\r\n\r\nIt is included in mars.c though, even though it doesn't seem to be used at all.","created_on":"2010-07-13T20:39:14.422665+00:00","user":"michaelp","updated_on":null,"issue":29,"id":212819},{"content":"It's used as part of the main() routine in mars.c, which isn't used at all by gdc. Instead, this main routine is\/can be merged into d-lang.cc - the d_parse_file() function.\r\n\r\nI guess a better question would be - given that all it does is add the capability to read input files asynchronously, is it really needed?","created_on":"2010-07-13T21:02:27.898533+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":212832},{"content":"I see.\r\n\r\nI suppose we could try to merge it's capabilities into d-lang.cc. After all, if it would help the input be a bit faster, it would be good, since GDC is a bit slower at compiling than DMD is.\r\n\r\nThe code didn't look too complicated either.","created_on":"2010-07-14T03:49:47.016227+00:00","user":"michaelp","updated_on":null,"issue":29,"id":212947},{"content":"After a small shuffle, OK, there is up to half a second speed boost when compiling 8 files at once.\r\n\r\nTo be honest though, it doesn't help the input as much as it should, because the gdc driver will still only pass one file at a time to to the cc1d compiler. And most the slowness, IMO, comes from enabling backend optimisations more than anything else.\r\n\r\nBut I'll push it anyway.","created_on":"2010-07-14T14:28:42.121806+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":214617},{"content":"If you are considering structural changes, please also consider moving all those \"glue\" files into a separate folder (just like dmd has its backend folder).\r\n\r\nThe main gdc folder is cluttered with changelog, readme, license, scripts, etc.","created_on":"2010-07-20T23:50:37.192026+00:00","user":"trass3r","updated_on":null,"issue":29,"id":218782},{"content":"That should work. Of course, the Makefiles would need to be changed to show that the glue files are now in a folder called \"glue\". (or whatever its name would be)\r\n\r\nThe Readme, changelog, license, etc, could probably go into a documentation folder without code changes.\r\n\r\nSome files would still need to stay put, because GCC expects them to be in \/\/gcc\/language name\/\/.\r\n\r\nThat could probably go into another issue.","created_on":"2010-07-21T15:18:39.365730+00:00","user":"michaelp","updated_on":null,"issue":29,"id":219224},{"content":"I've gone ahead and removed the unused files, along with one or two Make-lang.in touch-ups. (See <<changeset 144>>)\n\nIMO, I agree with you Michael here, if we have not needed them in GDC until now, it is okay to remove them. Should we - for whatever reason - depend on them some time in the future. It would be better just to pull in only what we need. No more or less.\n\nAs for the mentioning of \"the main gdc folder is cluttered with changelog, readme, license, scripts, etc.\" - perhaps move them up to the top directory of the tree? So they are outside the main d\/ directory...\n\nRegards","created_on":"2010-07-27T21:18:55.059151+00:00","user":"ibuclaw","updated_on":"2010-07-27T21:15:56.223221+00:00","issue":29,"id":222306},{"content":"It looks good, you managed to get rid of a lot of files.\r\n\r\nOne file that may also be able to be removed is machobj.c. This file seems to be for Mac object files, but I think that GCC would take care of this, since GDC with Macs before dmd did. Also, I am pretty sure that GDC still builds without it in the Makefile. However, I have never tested it on a Mac before, nor do I have one to test on.\r\n\r\nFor the d\/ files: I don't think moving them to the gcc directories would work well, since we are not very well integrated with gcc. I think all that is needed is a reorganization of the files.","created_on":"2010-07-28T02:56:12.382766+00:00","user":"michaelp","updated_on":null,"issue":29,"id":222420},{"content":"I meant moving the \"not-essential-for-building-gdc\" files here https:\/\/bitbucket.org\/goshawk\/gdc\/src\r\n\r\nJust a random thought though...","created_on":"2010-07-28T19:34:51.601985+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":222746},{"content":"Removed unused D2 files. Effectively fulfilling the original intent of this issue.\r\n\r\nAnyone object to me closing this report?","created_on":"2010-08-08T12:35:57.938467+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":227385},{"content":"I'm fine with it being closed.","created_on":"2010-08-08T21:04:55.154498+00:00","user":"michaelp","updated_on":null,"issue":29,"id":227522},{"content":null,"created_on":"2010-08-09T17:20:50.110197+00:00","user":"ibuclaw","updated_on":null,"issue":29,"id":227846},{"content":"Good question. Firstly, DMD2 does not use dinteger_t yet in our frontend (though that update will come soon I believe).\r\n\r\nSecondly, I'll have to get back to you on that one. Currently, gdc does prevent you from being able to compile:\r\n\r\n{{{\r\nasm {\r\n   align 3;\r\n}\r\n}}}\r\n\r\nBut whether this is interrupted in d-asm or the backend, will have to check later. (ideally, it should be done in d-asm).","created_on":"2010-07-21T07:41:56.943043+00:00","user":"ibuclaw","updated_on":null,"issue":44,"id":218943},{"content":"Never mind, I forgot that dmd1 is way ahead of V2 in the gdc code.","created_on":"2010-07-21T15:56:32.906217+00:00","user":"trass3r","updated_on":null,"issue":44,"id":219233},{"content":"How come dmd1 uses an improvement dmd2 doesn't anyway?","created_on":"2010-07-21T12:47:50.752825+00:00","user":"trass3r","updated_on":null,"issue":44,"id":219125},{"content":"The front end began using dinteger_t in 1.042. <<changeset dc2636cbaa3e>>. D2 has not made this change in the front end yet, so we need to check to see if it is V1 or V2 when using integer_t\/dinteger_t.","created_on":"2010-07-21T14:50:15.944391+00:00","user":"michaelp","updated_on":null,"issue":44,"id":219207},{"content":"OK, two updates from me.\n\n1) The correct format symbol for uint64_t types is '%llu', this probably warrants a cast to unsigned, which is of a smaller size.\n\n2) The if statement is doubly senseless because as well as check if an unsigned is less than 0 (which will never happen), it doesn't even check whether the number is a power of 2 correctly either.\n\nWhat it should be doing is:\n\n{{{\nif ((align & -align) == align) {\n    \/\/ OK\n}\nelse {\n    \/\/ Error, not a power of 2.\n}\n}}}","created_on":"2010-07-21T16:24:34.914872+00:00","user":"ibuclaw","updated_on":"2010-07-21T16:22:13.142486+00:00","issue":44,"id":219241},{"content":"Another small issue, some senseless casts to char* even though OutBuffer expects const char*:\r\n\r\n{{{\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'void AsmProcessor::addOperand(const char*, AsmArgType, Expression*, AsmCode*, AsmArgMode)':\r\n..\/..\/gcc\/d\/d-asm-i386.h:1428:36: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'void AsmProcessor::writeReg(Reg)':\r\n..\/..\/gcc\/d\/d-asm-i386.h:1508:36: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'unsigned char AsmProcessor::formatInstruction(int, AsmCode*)':\r\n..\/..\/gcc\/d\/d-asm-i386.h:1650:41: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h:1668:41: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h:1700:40: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h:1755:37: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'void AsmProcessor::doAlign()':\r\n..\/..\/gcc\/d\/d-asm-i386.h:2562:15: warning: comparison of unsigned expression >= 0 is always true\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'void AsmProcessor::doEven()':\r\n..\/..\/gcc\/d\/d-asm-i386.h:2579:37: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n..\/..\/gcc\/d\/d-asm-i386.h: In member function 'void AsmProcessor::doData()':\r\n..\/..\/gcc\/d\/d-asm-i386.h:2597:57: warning: cast from type 'const char*' to type 'char*' casts away qualifiers\r\n}}}","created_on":"2010-07-21T17:41:02.422044+00:00","user":"trass3r","updated_on":null,"issue":44,"id":219279},{"content":"Good point. I suspect the expected argument wasn't const when d-asm-i386.h was originally written. But no harm in updating it anyway.\r\n\r\nWith <<changeset 133>> pushed, is there anything else bothering you about d-asm-i386.h? :)","created_on":"2010-07-21T19:02:36.990211+00:00","user":"ibuclaw","updated_on":null,"issue":44,"id":219315},{"content":"* No, but there's a similar case in d-lang.cc.\r\n* And in d-lang.cc there's this:\r\n\r\n{{{\r\n# define preprocessing_asm_p() (cpp_get_options (pfile)->lang == CLK_ASM)\r\n# define preprocessing_trad_p() (cpp_get_options (pfile)->traditional)\r\n# define preprocessing_asm_p() (0)\r\n# define preprocessing_trad_p() (0)\r\n}}}\r\nIt wasn't noticable cause that macro isn't used, nevertheless it's strange.","created_on":"2010-07-21T20:31:57.703559+00:00","user":"trass3r","updated_on":null,"issue":44,"id":219373},{"content":"Pushed <<changeset 141>>. Closing issue.","created_on":"2010-07-27T00:40:07.162696+00:00","user":"ibuclaw","updated_on":null,"issue":44,"id":221915},{"content":null,"created_on":"2010-07-11T19:12:34.580655+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":210750},{"content":"Oh, and forgot to note that for both this and <<issue 39>>, adding '-fno-inline' to the compiler arguments causing trouble results in a successful build also.","created_on":"2010-07-12T07:18:59.188011+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":210955},{"content":"Looks like the catalyst to this bug (and #39) is the function cgraph_default_inline_p()  in ipa-inline.c.\nPrior to gcc-4.3, it used to adhere to the DECL_INLINE() flag of the function tree. Now it also adheres to the flag_inline_small_functions optimization parameter also. Which is turned on when -O2, -O3 or -Os is used.\n\nThe fastest workaround I can make is to turn off flag_inline_small_functions when '-g' is used. It makes sense from a debugging point of view, but still will only mask the real problem.","created_on":"2010-07-13T16:17:24.591189+00:00","user":"ibuclaw","updated_on":"2010-07-13T16:17:36.974337+00:00","issue":38,"id":211862},{"content":"Issue #39 was marked as a duplicate of this issue.","created_on":"2010-07-14T14:45:00.338790+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":214632},{"content":null,"created_on":"2010-07-27T00:34:01.361002+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":221907},{"content":"Just going to add that this seems to be fine with GCC 4.4.4.","created_on":"2010-08-31T18:56:45.284916+00:00","user":"michaelp","updated_on":null,"issue":38,"id":237272},{"content":"> Just going to add that this seems to be fine with GCC 4.4.4.\r\n\r\nSee <<changeset 230>> - I made a note of the code that makes it fine. Problem is still there though...","created_on":"2010-09-01T11:41:25.580679+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":237532},{"content":"Actually, this does indeed seem to be fine with GCC 4.4.x (I just removed the workaround).\r\n\r\nIt may be worth seeing if I can (scavenge) find out just when it started working again and why. Then could backport the change to 4.3.x via the gcc patches.\r\n\r\nRegards","created_on":"2010-10-11T22:01:12.545914+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":265185},{"content":"No longer reproducible.","created_on":"2011-08-08T22:29:09.796587+00:00","user":"ibuclaw","updated_on":null,"issue":38,"id":594043},{"content":"Fixed in <<changeset 233>>","created_on":"2010-09-03T10:10:35.955321+00:00","user":"ibuclaw","updated_on":null,"issue":60,"id":238635},{"content":"Fixed in <<changeset 233>>","created_on":"2010-09-03T10:10:59.129012+00:00","user":"ibuclaw","updated_on":null,"issue":59,"id":238637},{"content":"Better yet, can fix <<issue 54>> instead.","created_on":"2010-09-03T22:48:43.368908+00:00","user":"ibuclaw","updated_on":null,"issue":59,"id":238887},{"content":"I'm getting errors when building phobos with -O0 -g flags.\n\n{{{\nstd\/string.d: In function 'toStringz':\nstd\/string.d:257: error: undefined label __returnLabel\nstd\/string.d: In function 'find':\nstd\/string.d:555: error: undefined label __returnLabel\nstd\/string.d: In function 'ifind':\nstd\/string.d:640: error: undefined label __returnLabel\nstd\/string.d: In function 'rfind':\nstd\/string.d:721: error: undefined label __returnLabel\nstd\/string.d: In function 'irfind':\nstd\/string.d:787: error: undefined label __returnLabel\nstd\/string.d: In function 'soundex':\nstd\/string.d:3697: error: undefined label __returnLabel\nmake[3]: *** [std\/string.o] Error 1\n}}}\n\nLooks like it may be related to the code you updated in LabelStatement::toIR.\n\nRegards","created_on":"2010-08-15T21:38:51.770236+00:00","user":"ibuclaw","updated_on":"2010-08-15T21:39:13.180820+00:00","issue":54,"id":230302},{"content":"Huh. Phobos seems to build fine for me with the latest commit, but when I try to compile std\/string.d on its own, I get the errors you get. It actually looks like there are problems with lots of files in Phobos, all with the same error.\r\n\r\nIt appears the problem is in some code changes that were not made in s2ir.c. I'll fix this ASAP.","created_on":"2010-08-16T00:39:30.367672+00:00","user":"michaelp","updated_on":null,"issue":54,"id":230332},{"content":"Okay, so it was supposed to be a fix for this bug:\r\n\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=4339\r\n\r\nHere is the changeset:\r\n\r\nhttp:\/\/www.dsource.org\/projects\/dmd\/changeset\/567\r\n\r\nI'll do my best to bring the changes into the glue ASAP.","created_on":"2010-08-16T02:18:18.395015+00:00","user":"michaelp","updated_on":null,"issue":54,"id":230353},{"content":"The current workaround I'm using is\r\n\r\n{{{\r\ntree t = label->statement ? irs->getLabelTree(label) : lblock;\r\n}}}\r\n\r\nGood luck on merging the changes. :-)","created_on":"2010-08-16T08:43:10.044461+00:00","user":"ibuclaw","updated_on":null,"issue":54,"id":230436},{"content":"This has been temporarily been changed back to what it was before in <<changeset d89d1a46125d>>.","created_on":"2010-08-16T20:48:59.308392+00:00","user":"michaelp","updated_on":null,"issue":54,"id":230758},{"content":"Revert back changes, and started on fixing <<issue 56>>.\r\n\r\nSee <<changeset 235>>\r\n","created_on":"2010-09-03T23:27:09.869079+00:00","user":"ibuclaw","updated_on":null,"issue":54,"id":238902},{"content":"Knock yourself out. :-)","created_on":"2010-09-04T17:39:43.278040+00:00","user":"ibuclaw","updated_on":null,"issue":61,"id":239103},{"content":"Okay, removed gcc-mars.cc in <<changeset e4b1e3753bf5>>.\r\n\r\nChanged Make-lang.in in <<changeset db7d6aae8ceb>>.\r\n\r\n(Forgot to do it in the same commit. :P)\r\n\r\nMarking as resolved.","created_on":"2010-09-04T18:53:04.492523+00:00","user":"michaelp","updated_on":null,"issue":61,"id":239113},{"content":"Just gonna note that this is also a problem in dmd, expect it shows 6.1 instead of that odd decimal number.","created_on":"2010-10-26T01:52:41.833140+00:00","user":"michaelp","updated_on":null,"issue":79,"id":275205},{"content":"I didn't say that code was supposed to be compliable. But it was just a way of triggering the wrong value bug. :~)\r\n\r\nLook again, the 'error can't implicitly convert int to short' is correct behaviour.","created_on":"2010-10-26T09:53:38.756462+00:00","user":"ibuclaw","updated_on":null,"issue":79,"id":275372},{"content":"Is a bug in d-gcc-real.cc - When converting from real back to string, it tells the backend to emit 0 digits, so it always assumes the maximum size for the mode type.\r\n\r\nWhat we should perhaps do is make a note of the size before the initial conversion from string to real, that way we don't go in blind.","created_on":"2010-10-26T19:57:24.852584+00:00","user":"ibuclaw","updated_on":null,"issue":79,"id":275750},{"content":"I think I'm missing what this issue is about - is it the fact the 6.099... shows up instead of 6.1, or that it shows \"non constant expression\" instead of something like \"cannot implicitly convert expression\". Or both?\r\n\r\nI was just saying that in dmd, the only difference is the number shown, not the rest of the error message.","created_on":"2010-10-27T02:01:16.670801+00:00","user":"michaelp","updated_on":null,"issue":79,"id":275924},{"content":"It shows \"6.099\" instead of \"6.1\".\n\nAfter toying about with the number of significant digits to emit, 18 seems to be that sweet spot between accurate long decimal numbers (more accurate than dmd, at least) and not loosing precision of short decimal numbers.\n\n**Test 1**\n{{{\nubyte b = 6;\nshort c5 = cast(int)(b + 6.1);\n}}}\n\ngdc:\n{{{\nError: cannot implicitly convert expression (cast(int)(cast(double)cast(int)b + 6.1e+0)) of type int to short\n}}}\ndmd:\n{{{\nError: cannot implicitly convert expression (cast(int)(cast(double)cast(int)b + 6.1)) of type int to short\n}}}\n\n**Test 2**\n{{{\nubyte b = 6;\nshort c5 = cast(int)(b + 6.12345678901);\n}}}\n\ngdc:\n{{{\nError: cannot implicitly convert expression (cast(int)(cast(double)cast(int)b + 6.12345678901e+0)) of type int to short\n}}}\ndmd:\n{{{\nError: cannot implicitly convert expression (cast(int)(cast(double)cast(int)b + 0xc.3f35ba6e88c43e4p-1)) of type int to short\n}}}\n\nI feel content with that.\n\nRegards","created_on":"2010-10-27T11:58:08.672779+00:00","user":"ibuclaw","updated_on":"2010-10-27T12:03:25.568958+00:00","issue":79,"id":276232},{"content":null,"created_on":"2010-10-27T12:08:53.121618+00:00","user":"ibuclaw","updated_on":null,"issue":79,"id":276236},{"content":"I've pushed the patch in <<changeset 333>>","created_on":"2010-11-02T12:54:36.791574+00:00","user":"ibuclaw","updated_on":null,"issue":79,"id":280587},{"content":"Fixed in <<changeset 321>>","created_on":"2010-10-28T00:10:04.907506+00:00","user":"ibuclaw","updated_on":null,"issue":80,"id":276972},{"content":null,"created_on":"2010-11-20T10:29:48.265408+00:00","user":"itecgo","updated_on":null,"issue":107,"id":294879},{"content":"Seen this sort of thing before (see IRState::convertTo where we get and check the implementation of the associative array, rather than the array type itself).\r\n\r\nIn this instance, there is little benefit from having the assertion there other than as a warning guard. Perhaps is best to turn it on only when built with --enable-checking.","created_on":"2010-11-20T12:18:45.849539+00:00","user":"ibuclaw","updated_on":null,"issue":107,"id":294916},{"content":"Changeset <<changeset 374>>","created_on":"2010-11-21T02:13:36.788066+00:00","user":"ibuclaw","updated_on":null,"issue":107,"id":295633},{"content":"Similar issue:\r\n\r\n{{{\r\nvoid main()\r\n{\r\n    goto L1;\r\n    try { }\r\n    finally\r\n    {\r\n    \tL1:\r\n    \tint j;\r\n    }\r\n}\r\n}}}\r\n\r\nShould give:\r\n\r\n{{{\r\ntest.d(3): Error: cannot goto forward out of or into finally block\r\n}}}\r\n\r\nAgain, in GDC, this gives nothing. Also can be solved in GoToStatement::toIR in d-glue.cc.","created_on":"2010-08-17T03:30:21.043702+00:00","user":"michaelp","updated_on":null,"issue":56,"id":230842},{"content":"Fixed goto into or out of a finally block in <<changeset 22792e6a6253>>.","created_on":"2010-08-17T16:17:15.271931+00:00","user":"michaelp","updated_on":null,"issue":56,"id":231058},{"content":"What is perhaps more worrying is that D seems to allow goto into or out of catch blocks. Which seems wholly inconstant when compared to the restrictions on try \/ finally blocks in place.\n\nIn gdc, depending on how complete the blocks are, can cause an ICE in the backend because of labels being optimised out completely.\n\neg:\n\n{{{\nint i = 3;\n\ntry {\n    goto L1;\n}\ncatch (Exception e) {\n    throw e;\n L1:\n    i--;\n}\n\nassert (i == 2);\n}}}\n\nThis is apparently legal in DMD, but the GCC backend discards the catch block completely as useless code.\n\nI'll raise a bug in D about this, as I feel that it is a bug in the frontend implementation, and it should be illegal to goto into a catch block...\n\nOut of a catch block on the other hand seems perfectly reasonable.","created_on":"2010-09-04T17:32:54.034556+00:00","user":"ibuclaw","updated_on":"2010-09-04T17:33:48.509275+00:00","issue":56,"id":239102},{"content":"Could the bug you just posted in D's bugzilla (4811) be the same as the one I posted about a similar issue?\r\n\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=4655","created_on":"2010-09-04T18:55:14.128492+00:00","user":"michaelp","updated_on":null,"issue":56,"id":239114},{"content":"I should really improve my bug searches, as I did not see that when I had a look for one. :o\r\n\r\nAm still not sure that goto into catch blocks should be legal. It just doesn't seem right...","created_on":"2010-09-05T03:10:06.407706+00:00","user":"ibuclaw","updated_on":null,"issue":56,"id":239196},{"content":"Attaching current work with forward references (not tested on gcc-3.x.x).\r\n\r\nThis should catch all types of goto's into forward referenced jumps, because in short, scope now knows what kind of block it is!\r\n\r\nie:\r\n{{{\r\ngoto label;\r\ntry {\r\n   label: { }\r\n}\r\n}}}\r\n\r\n\r\nBut currently not jumps to labels already referenced.\r\n\r\nie:\r\n{{{\r\ntry {\r\n  label: { }\r\n}\r\ngoto label;\r\n}}}\r\n\r\nFor the latter case, it might be feasible to have all labels for the current function pushed into an array with their try\/catch block level.\r\n\r\nMichael, could you review this? Make sure it's OK, and let me know if you think I'm doing it all wrong. ","created_on":"2010-09-10T14:38:03.925694+00:00","user":"ibuclaw","updated_on":null,"issue":56,"id":242757},{"content":"And I'm finished with it.\r\n\r\nMichaelp, can you make sure everything is OK with the patch?\r\n\r\nCompared to DMD, it's quite a bit stricter, but for good reasons. And it also errors on the line where the jump is, rather than the label ( how useful! :)\r\n\r\nIf you need any clarification on what it does \/ why (incase my comments are too vague), just ask!\r\n\r\nThanks.","created_on":"2010-09-11T22:46:17.438569+00:00","user":"ibuclaw","updated_on":null,"issue":56,"id":243216},{"content":"One problem, taken from the issue you reported to D's bugzilla (4811):\r\n\r\n{{{\r\nvoid main()\r\n{\r\n   goto L1;\r\n   try { }\r\n   catch { L1: { } }\r\n}\r\n}}}\r\n\r\nproduces:\r\n\r\n{{{\r\nmichael@michael-laptop:~\/temp$ gdc patch.d\r\nIn file included from <builtin>:1:\r\npatch.d: In function ‘main’:\r\npatch.d:3: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n\r\nIn dmd 1.063, it compiles, but seg faults during runtime.\r\n\r\nAnd this was using GCC 4.4.4. I'm going to see if it's the same thing on 4.1.2 as well.","created_on":"2010-09-12T16:52:27.933914+00:00","user":"michaelp","updated_on":null,"issue":56,"id":243462},{"content":"Included updates to previous patch - and I've added #ifndef tags around the code that causes the problem you state above (it's not us, it's DMD ;)","created_on":"2010-09-12T17:24:29.911004+00:00","user":"ibuclaw","updated_on":null,"issue":56,"id":243471},{"content":"This patch works for me now!","created_on":"2010-09-12T17:54:06.722581+00:00","user":"michaelp","updated_on":null,"issue":56,"id":243488},{"content":"I take it there are no objections then on the patch?\r\n\r\nPushed into <<changeset 249>>\r\n\r\n","created_on":"2010-09-15T00:16:15.290240+00:00","user":"ibuclaw","updated_on":null,"issue":56,"id":244798},{"content":"I do believe I've seen that occur on development releases of GCC too, where --enable-checking is defaulted.\r\nIIRC, in d_init_builtins() the macros need a helper function to correctly handle the special case of when any of the types involved are error_mark_node.","created_on":"2010-06-29T11:52:32.362173+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":204486},{"content":"Now I've had some time to sit down and look at it, apparently not... one big sigh and resolved issue in <<changeset 101>>\r\n\r\nRegards\r\n","created_on":"2010-06-29T16:11:36.446875+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":204612},{"content":"I'm re-opening this, don't know why I thought it fixed in the first place. Just tried building with 4.3.5 this morning and ran into it.","created_on":"2010-07-27T14:01:23.156945+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":222112},{"content":"<<changeset 142>> resolves the initial problem and allows gdc-4.3 to be able to now successfully compile files with --enable-checking. However there is still a problem scenario that prevents D1 and D2 from building phobos.\r\n\r\nLooks to happen in the finalising stages of the build (just before it gets pushed to the object file).\r\n\r\nFor now, all I can recommend is that you omit tree checking, or use --enable-checking=release when you build gdc.\r\n\r\nRegards.","created_on":"2010-07-27T16:38:28.721142+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":222196},{"content":"Updating this issue to announce that this has been fixed. :-)\r\n\r\nCurrently working out a GCC backend generic solution, and will push later today.","created_on":"2010-09-16T18:31:19.962324+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":245793},{"content":"Fixed in <<changeset 252>>","created_on":"2010-09-16T18:57:07.148018+00:00","user":"ibuclaw","updated_on":null,"issue":28,"id":245803},{"content":"Fixed in <<changeset 322>>","created_on":"2010-10-28T07:22:42.354745+00:00","user":"ibuclaw","updated_on":null,"issue":81,"id":277094},{"content":"Merged in <<changeset 270>>","created_on":"2010-09-27T20:54:45.933034+00:00","user":"ibuclaw","updated_on":null,"issue":63,"id":256190},{"content":"Fixed in <<changeset 254>>","created_on":"2010-09-17T17:53:11.486383+00:00","user":"ibuclaw","updated_on":null,"issue":64,"id":246419},{"content":"> which is correct, the directory 'objdir\/x86_64-unknown-linux-gnu\/libphobos\/common\/core' is empty.\r\n\r\nDon't you mean the directory 'srcdir\/libphobos\/common\/core\/' ?","created_on":"2010-09-10T07:52:49.879794+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":242603},{"content":"Actually, I can see the problem with your build - automake isn't installed on your system, so the correct 'new' Makefile isn't being generated from Makefile.am.\r\n\r\n--> be right back after re-generating them myself.","created_on":"2010-09-10T08:21:58.481820+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":242609},{"content":"Do let us know if <<changeset 245>> works for you. If not, chances am you need to remove and re-link the libphobos directory.\r\n\r\nRegards","created_on":"2010-09-10T09:04:36.476219+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":242626},{"content":"FYI: automake is installed. In fact, a plethora of automakes are installed: \r\n\r\nautomake17-1.7.9-13.fc13.1.noarch automake14-1.4p6-20.fc13.noarch automake15-1.5-29.fc13.1.noarch automake16-1.6.3-18.fc13.1.noarch automake-1.11.1-1.fc13.noarch\r\n\r\nwith this last one (automake 1.11.1) being in my PATH.\r\n\r\nI updated to the latest changeset (<<changeset 245:224029a0567d>>) and I'm rebuilding from scratch. I'll report results as soon as I know. (It'll be a couple of hours. My CPU is a single core Athlon 64 running at 1.2GHz with 2GB of memory.)\r\n","created_on":"2010-09-10T17:20:56.282158+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":242803},{"content":"The GCC build seems to expect automake-1.9 to exist... I'm not sure why it would choose that over other versions.","created_on":"2010-09-10T17:51:50.312256+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":242814},{"content":"I've downgraded to the circa 2006 automake 1.9, and I'm building afresh.\r\n\r\nAs an aside, it would be nice if the installation instructions and the setup-gcc.sh script had\r\nfail-safe versions of mkdir and ln, i.e. 'mkdir -p' and 'ln -sf'. Here is the script (lightly tested)\r\nthat I use:\r\n\r\n<code>\r\n#!\/bin\/sh -v\r\n\r\nSRCDIR=\/src\r\nDOWNLOADDIR=\/downloads\r\n\r\ncd \"${SRCDIR}\"\r\nif [ -d gdc ]; then\r\n    cd gdc\r\n    hg pull --update\r\nelse\r\n    hg clone https:\/\/goshawk@bitbucket.org\/goshawk\/gdc\r\nfi\r\n\r\ncd \"${DOWNLOADDIR}\"\r\nif [ ! -e gcc-4.4.4.tar.bz2 ]; then\r\n    wget http:\/\/mirrors.kernel.org\/gnu\/gcc\/gcc-4.4.4\/gcc-4.4.4.tar.bz2\r\nfi\r\n\r\nmkdir \"${SRCDIR}\"\/gdc\/dev\r\ncd \"${SRCDIR}\"\/gdc\/dev\r\ntar -xjvf \"${DOWNLOADDIR}\"\/gcc-4.4.4.tar.bz2\r\n\r\ncd \"${SRCDIR}\"\/gdc\r\nhg pull --update\r\n\r\ncd \"${SRCDIR}\"\/gdc\/dev\/gcc-4.4.4\r\nln -sf ..\/..\/..\/d gcc\/d\r\n\r\necho \"If setup-gcc.sh has alread been run, patch will ask if you wish to reverse apply the\"\r\necho \"patches to configure, configure.ac, Makefile.def and Makefile.in. Answer 'no' to all questions.\"\r\n\r\n.\/gcc\/d\/setup-gcc.sh --d-language-version=2\r\nmkdir -p objdir\r\n\r\ncd objdir \r\n..\/configure --enable-languages=d --disable-multilib --disable-shared\r\n\r\nmake && sudo make install\r\n<\/code>\r\n\r\n","created_on":"2010-09-10T22:53:48.144250+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":242910},{"content":"You use a script ... to do a real man's job? :o)\r\n\r\nThe automation of downloading gcc, updating of cloned branch, and setting up the directories is generally a bad idea from the start, and should be avoided.\r\n\r\nAdding a switch to rebuild the libphobos directory seems fair enough. Oh, and you can use the '-v1' and '-v2' switches to select the language version.\r\n\r\n{{{\r\n.\/gcc\/d\/setup-gcc.sh -v2\r\n}}}\r\n\r\nMakes life a little less verbose...\r\n\r\n\r\nRegards","created_on":"2010-09-10T23:11:00.648024+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":242916},{"content":"Harrumph. I use a script because it beats thinking ;-) (Most of the script came from your\r\ninstallation instructions.)\r\n\r\nI'm still compiling 'libdecnumber' which seems to take ages...\r\n","created_on":"2010-09-11T01:35:39.926188+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":242957},{"content":"I can't believe it takes so long. I have an Intel 1.8 GHz single core processor, with 2GB of RAM and a hard drive of around 60GB, and it takes me around 25min to compile GDC with GCC 4.4.","created_on":"2010-09-11T01:42:15.318279+00:00","user":"michaelp","updated_on":null,"issue":62,"id":242960},{"content":"\t-I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/compiler\/gdc\/invariant_.d\r\n\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/gdc -B\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o compiler\/gdc\/lifetime.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/libphobos\/compiler\/gdc -I ..\/..\/..\/libphobos\/gc\/basic -I ..\/..\/..\/libphobos\/import -nostdinc -pipe   \\\r\n\t-I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/compiler\/gdc\/lifetime.d\r\n\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/gdc -B\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o compiler\/gdc\/llmath.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/libphobos\/compiler\/gdc -I ..\/..\/..\/libphobos\/gc\/basic -I ..\/..\/..\/libphobos\/import -nostdinc -pipe   \\\r\n\t-I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d: Assembler messages:\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:31: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:74: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:81: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:137: Warning: indirect call without `*'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:144: Warning: indirect call without `*'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:161: Warning: indirect call without `*'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:168: Warning: indirect jmp without `*'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:186: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:192: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:196: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:212: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:213: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:231: Warning: indirect call without `*'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:234: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:235: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:249: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:250: Error: suffix or operands invalid for `push'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:263: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:264: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:271: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:272: Error: suffix or operands invalid for `pop'\r\n..\/..\/..\/libphobos\/compiler\/gdc\/llmath.d:291: Error: suffix or operands invalid for `pop'\r\nmake[3]: *** [compiler\/gdc\/llmath.o] Error 1\r\nmake[3]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir'\r\nmake: *** [all] Error 2\r\n","created_on":"2010-09-11T04:21:56.621822+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":242994},{"content":"Sorry, but I don't know how to preserve formatting.","created_on":"2010-09-11T04:28:01.230996+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":242995},{"content":"Vgivanovic, Just put it around code blocks to preserve formatting.\n\n\nMichaelp, do we have any need for llmath being in the library? Looks to be 32bit specific, and to meet a dependency of an internal compiler call (one that is DMD specific by the looks of it).","created_on":"2010-09-11T08:16:26.510335+00:00","user":"ibuclaw","updated_on":"2010-09-11T08:19:10.919441+00:00","issue":62,"id":243029},{"content":"I'm not sure, because it says it gives us support for 64-bit longs in a 32-bit environment. If we removed the file, wouldn't we lose that?\r\n\r\nOr would we just implement the library calls in the compiler?","created_on":"2010-09-11T15:23:53.004010+00:00","user":"michaelp","updated_on":null,"issue":62,"id":243079},{"content":"I think we would need to implement the library calls into the compiler to make it useful...\r\n\r\n{{{\r\n[iain@maverick gdc]$ grep \"ULDIV\" d\/ -lR\r\nd\/phobos\/internal\/llmath.d\r\nd\/druntime\/compiler\/gdc\/llmath.d\r\n\r\n[iain@maverick gdc]$ grep \"llmath\" d\/ -lR\r\nd\/ChangeLog\r\nd\/phobos\/internal\/llmath.d\r\nd\/druntime\/compiler\/gdc\/llmath.d\r\nd\/phobos2\/Makefile.am\r\nd\/phobos2\/Makefile.in\r\n}}}\r\n\r\nNope, we don't need it. Must've slipped in during some blind copying of the druntime Makefile into GDC... :-)\r\n\r\nI'll remove it from the Makefile...","created_on":"2010-09-11T17:26:00.523065+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":243111},{"content":"With\r\n{{{\r\n$ hg summary --verbose\r\nparent: 246:6b7397510e33 tip\r\n Remove llmath.d from D2\r\nbranch: default\r\ncommit: 2 modified, 1 unknown\r\nupdate: (current)\r\nmq:     (empty queue)\r\nchopin gdc $ hg status\r\nM d\/phobos2\/configure\r\nM d\/setup-gcc.sh\r\n}}}\r\n[The changes to configure & setup.gcc.sh are just 'mkdir -> mkdir -p' and 'ln -s -> ln -sf'.]\r\n\r\nI get:\r\n\r\n{{{\r\n\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/gdc -B\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o compiler\/gdc\/memory.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/libphobos\/compiler\/gdc -I ..\/..\/..\/libphobos\/gc\/basic -I ..\/..\/..\/libphobos\/import -nostdinc -pipe   \\\r\n\t-I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/compiler\/gdc\/memory.d\r\n..\/..\/..\/libphobos\/compiler\/gdc\/memory.d:100: static assert  \"Architecture not supported.\"\r\nmake[3]: *** [compiler\/gdc\/memory.o] Error 1\r\nmake[3]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/usr\/local\/src\/gdc\/dev\/gcc-4.4.4\/objdir'\r\nmake: *** [all] Error 2\r\n}}}\r\n","created_on":"2010-09-13T22:36:44.025949+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":244172},{"content":null,"created_on":"2010-09-14T07:08:47.498402+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":244364},{"content":"Something changed, and the build now succeeds. Unfortunately, I don't know what...","created_on":"2010-09-18T02:09:12.708526+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":246627},{"content":"See any of:\r\n<<changeset 246>>,\r\n<<changeset 247>>,\r\n <<changeset 248>>, \r\n<<changeset 251>>,\r\n <<changeset 255>>\r\n\r\nHave been removing all the DMD-only code, and fixing up the 32bit-specific bits as well. Have a report that ARM now builds as well. Although there seems to be a codegen bug when optimisations are turned on...\r\n\r\nRegards\r\n","created_on":"2010-09-18T07:31:19.457080+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":246687},{"content":"Running 'make check' yields:\r\n{{{\r\n# of expected passes\t\t57820\r\n# of unexpected failures\t11\r\n# of expected failures\t\t192\r\n# of unresolved testcases\t2\r\n# of unsupported tests\t\t740\r\n}}}\r\nI've attached the full log file.\r\n\r\nAre there any other tests I should run?","created_on":"2010-09-18T15:54:20.554459+00:00","user":"vgivanovic","updated_on":null,"issue":62,"id":246824},{"content":"make check runs GCC-specific tests.\r\n\r\nYou can run\r\n{{{\r\nmake check-target-libphobos\r\n}}}\r\nto build a debug library with unittests enabled + run all unittests. But that is not at a working state yet...\r\n","created_on":"2010-09-18T19:52:56.147929+00:00","user":"ibuclaw","updated_on":null,"issue":62,"id":246912},{"content":"Attaching proposed patch.","created_on":"2010-09-18T12:16:32.426264+00:00","user":"ibuclaw","updated_on":null,"issue":65,"id":246737},{"content":null,"created_on":"2010-09-18T12:16:39.897309+00:00","user":"ibuclaw","updated_on":null,"issue":65,"id":246738},{"content":"Only possible problem I could see if zlib gets updated, and since D1 and D2's Phobos versions are so far apart, the zlib of D1 might be higher than in D2, and would be different than how it is in the corresponding D2 version.\r\n\r\nThen again, maybe this wouldn't make much of a difference.","created_on":"2010-09-18T19:51:13.917681+00:00","user":"michaelp","updated_on":null,"issue":65,"id":246911},{"content":"> Only possible problem I could see if zlib gets updated, and since D1 and D2's Phobos versions are so far apart, the zlib of D1 might be higher than in D2, and would be different than how it is in the corresponding D2 version.\n\nIf you look at the difference between etc\/c\/zlib.d in both phobos directories, D2's just adds 'const' to a few char arrays\/pointers to satisfy the differences in it's type system. So even *if* D1's zlib gets updated, shouldn't be nothing more than trivial to update D2's zlib wrapper too...\n\nZlib is under very stable development. The version maintained in D Phobos is 1.2.3.0, and has been there for well over 2 years. The upstream version of Zlib is currently at 1.2.3.4.","created_on":"2010-09-18T21:20:49.320887+00:00","user":"ibuclaw","updated_on":"2010-09-18T21:21:52.040412+00:00","issue":65,"id":246973},{"content":"Let's do it then. :)","created_on":"2010-09-19T02:00:42.207292+00:00","user":"michaelp","updated_on":null,"issue":65,"id":247067},{"content":"Implemented in <<changeset 269>>","created_on":"2010-09-27T20:55:53.966325+00:00","user":"ibuclaw","updated_on":null,"issue":65,"id":256193},{"content":null,"created_on":"2010-09-28T20:12:30.210835+00:00","user":"ibuclaw","updated_on":null,"issue":68,"id":256722},{"content":"Fixed in <<changeset 275>>","created_on":"2010-09-29T10:18:33.993364+00:00","user":"ibuclaw","updated_on":null,"issue":68,"id":257035},{"content":"What architecture are you using?","created_on":"2010-10-03T19:03:51.202703+00:00","user":"ibuclaw","updated_on":null,"issue":69,"id":259597},{"content":"I believe <<changeset 284>> should have it fixed.\r\n\r\nRegards","created_on":"2010-10-03T19:51:19.625619+00:00","user":"ibuclaw","updated_on":null,"issue":69,"id":259627},{"content":"I'm using amd64 and the change solved the reported problem:\r\ngdc test.d -o test_gdc && .\/test_gdc\r\n[0 1 2 3]\r\ndmd test.d -oftest_gdc && .\/test_gdc\r\n[0, 1, 2, 3]\r\nThanks.\r\nBut the original not-too-simplified problem still remains:\r\n{{{\r\n#!d\r\n\r\nimport std.encoding;\r\nimport std.stdio;\r\nvoid main(){\r\n    Latin1Char[] arr     = [0x22, 0x31, 0x31, 0x22];\r\n    Latin1Char[] padding = [0x30, 0x30];\r\n    arr = arr[0] ~ padding ~ arr[1..$];\r\n    writeln(arr);\r\n}\r\n\r\n}}}\r\n{{{\r\n#!sh\r\n\r\ngdc test.d\r\nIn file included from <builtin>:2:\r\ntest.d: In function 'main':\r\ntest.d:6: internal compiler error: in toDArray, at d\/d-codegen.cc:656\r\n\r\n}}}\r\n","created_on":"2010-10-04T21:41:42.948501+00:00","user":null,"updated_on":null,"issue":69,"id":260410},{"content":"Seems to occur when the array is a typedef...\r\n\r\nMinimal testcase that is reproducible on D1 too.\r\n{{{\r\ntypedef ubyte MyChar;\r\nvoid main(){\r\n   MyChar[] arr = [0x22];\r\n   arr = arr[0] ~ arr[0 .. $];\r\n}\r\n}}}","created_on":"2010-10-04T22:31:43.172673+00:00","user":"ibuclaw","updated_on":null,"issue":69,"id":260433},{"content":"** * ** patch ** * **\r\n\r\nNeeds some rugged testing first though.\r\n\r\nRegards\r\n","created_on":"2010-10-04T22:52:32.754200+00:00","user":"ibuclaw","updated_on":null,"issue":69,"id":260450},{"content":"<<changeset 285>>","created_on":"2010-10-05T13:17:33.956785+00:00","user":"ibuclaw","updated_on":null,"issue":69,"id":260804},{"content":"It worked in my case.\r\nThanks.\r\n(I was the anonymous submitter)","created_on":"2010-10-04T23:20:55.134179+00:00","user":null,"updated_on":null,"issue":69,"id":260464},{"content":null,"created_on":"2010-11-20T10:07:21.786164+00:00","user":"itecgo","updated_on":null,"issue":106,"id":294868},{"content":null,"created_on":"2010-11-20T10:07:39.476761+00:00","user":"itecgo","updated_on":null,"issue":106,"id":294870},{"content":null,"created_on":"2010-11-20T10:09:14.751607+00:00","user":"itecgo","updated_on":null,"issue":106,"id":294871},{"content":null,"created_on":"2010-11-20T10:10:22.096749+00:00","user":"itecgo","updated_on":null,"issue":106,"id":294874},{"content":"Has nothing to do with std.xml.\r\n\r\nReduced testcase:\r\n{{{\r\nimport std.array;\r\n\r\nvoid main()\r\n{\r\n}\r\n\r\nclass Tag\r\n{\r\n    string[string] attr;\r\n    const void _foreach()\r\n    {\r\n        foreach(key,val;attr)\r\n        {\r\n        }\r\n    }\r\n}\r\n}}}","created_on":"2010-11-20T14:16:11.310394+00:00","user":"ibuclaw","updated_on":null,"issue":106,"id":294988},{"content":"However if I remove the line \"import std.array;\" in the previous reduced testcase code, it compiles ok. So what's the magic? I'm not familiar with gdc code.\r\n\r\nReduced testcase (Modified):\r\n\r\n{{{\r\nvoid main()\r\n{\r\n}\r\n\r\nclass Tag\r\n{\r\n    string[string] attr;\r\n    const void _foreach()\r\n    {\r\n        foreach(key,val;attr)\r\n        {\r\n        }\r\n    }\r\n}\r\n}}}\r\n\r\n","created_on":"2010-11-20T15:16:36.579527+00:00","user":"itecgo","updated_on":null,"issue":106,"id":295167},{"content":"Testcase with no library imports - affects DMD too.\n\na.d\n{{{\nmodule a;\n\nclass A {\n    int[][int] n;\n    int[][int] foo() {\n        return n;\n    }\n}\n}}}\n\nb.d\n{{{\nimport a;\n\nint main() {\n    auto a = new A();\n    foreach (key, value; a.foo()) {\n    }\n    return 0;\n}\n}}}\n\nReason the original example passes with DMD is because all sources in phobos library are compiled at once, whereas if you tweak the makefile to build all sources separately (such as the gdc build process does), you hit the same linker problem.","created_on":"2010-11-20T19:14:42.591939+00:00","user":"ibuclaw","updated_on":"2010-11-20T19:15:38.158462+00:00","issue":106,"id":295505},{"content":"Adding -femit-templates to force template generation when building libphobos.\r\n\r\nAfter this update, you'll need to rebuild libphobos, this is done using:\r\n{{{\r\nmake clean-target-libphobos && make\r\n}}}\r\n\r\nFixed in <<changeset 373>>","created_on":"2010-11-21T00:16:07.174051+00:00","user":"ibuclaw","updated_on":null,"issue":106,"id":295614},{"content":null,"created_on":"2010-09-27T21:47:01.538897+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":256215},{"content":"Issue #40 was marked as a duplicate of this issue.","created_on":"2010-09-27T21:54:52.251939+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":256219},{"content":"I might have fixed the \"handling 'this' as a reference type\" problem...","created_on":"2010-09-28T09:46:35.374761+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":256396},{"content":"OK, it is **almost** working.\r\n\r\nThis should show you why:\r\n\r\n{{{\r\nextern (C) int printf(in char* fmt, ...);\r\nstruct Foo\r\n{\r\n    int bar;\r\n    void nest1()\r\n    {\r\n        assert(bar == 0); \/\/ PASS\r\n        nest2();\r\n    }\r\n\r\n    void nest2()\r\n    {\r\n        assert(bar == 0); \/\/ FAIL\r\n    }\r\n}\r\n\r\nvoid main()\r\n{\r\n    Foo f;\r\n    f.nest1();\r\n}\r\n}}}\r\nThe address of 'this' gets incorrectly passed when nest1 calls nest2(&this);\r\n\r\n\r\nRegards","created_on":"2010-09-28T11:00:38.099957+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":256422},{"content":"<<changeset 273>>  >:-)","created_on":"2010-09-28T14:49:12.620614+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":256566},{"content":"Added -safe switch in <<changeset 276>> and updated driver in <<changeset 277>>\r\n\r\nClosing.","created_on":"2010-10-05T13:21:15.060158+00:00","user":"ibuclaw","updated_on":null,"issue":67,"id":260807},{"content":"Rewriting the insnTemplate from:\n{{{\n\"movl %%ebx, %0+%a1\"\n}}}\n\nto instead generate:\n{{{\n\"movl %%ebx, %a1+%0\"\n}}}\n\ndoes the trick. :-)","created_on":"2010-10-07T17:49:31.410535+00:00","user":"ibuclaw","updated_on":"2010-10-07T17:51:17.748178+00:00","issue":70,"id":262915},{"content":"<<changeset 292>>","created_on":"2010-10-07T20:45:57.457054+00:00","user":"ibuclaw","updated_on":null,"issue":70,"id":263038},{"content":"Apparently we still need the removed code for an operation like this:\r\n\r\n{{{\r\nchar[64] dst\r\nasm\r\n{\r\n    mov EAX, dst.ptr            ;\r\n    mov [EAX], EBX              ;\r\n    mov [EAX+4], EDX            ;\r\n    mov [EAX+8], ECX            ;\r\n}\r\n}}}\r\n\r\nWhere after the fix, GDC now ignores the constant displacement.","created_on":"2010-10-14T07:04:28.447416+00:00","user":"ibuclaw","updated_on":null,"issue":70,"id":266858},{"content":"<<changeset 301>>","created_on":"2010-10-14T07:10:00.830034+00:00","user":"ibuclaw","updated_on":null,"issue":70,"id":266861},{"content":"I can't seem to reproduce this, how did you compile gdc?\r\nAnd what version are you using? D1 or D2?","created_on":"2010-03-14T11:21:19.602676+00:00","user":"ibuclaw","updated_on":null,"issue":12,"id":139023},{"content":"Sorry, I forgot to mention these details.\r\n\r\nI used gcc-core-4.3.1 with --d-language-version=1.","created_on":"2010-03-14T11:26:57.970784+00:00","user":"cybershadow","updated_on":null,"issue":12,"id":139024},{"content":"I just retested this with 4.3 branch using the latest GDC on Debian x64 and It seems to compile and run properly.  Can you still reproduce this?","created_on":"2010-10-28T15:30:29.023527+00:00","user":"opticron","updated_on":null,"issue":12,"id":277398},{"content":"Sorry, I no longer have the environment required to reproduce this.","created_on":"2010-10-28T15:42:32.355224+00:00","user":"cybershadow","updated_on":null,"issue":12,"id":277432},{"content":"I personally think this bug is so old, it's just not valid any more.","created_on":"2010-10-28T16:31:28.863422+00:00","user":"ibuclaw","updated_on":null,"issue":12,"id":277472},{"content":"I'll agree with that.  Issue closed due to extreme staleness and inability to reproduce.","created_on":"2010-10-29T00:12:45.118651+00:00","user":"opticron","updated_on":null,"issue":12,"id":277876},{"content":"So GDC creates two lots of GCC config source files for you?\r\n\r\n{{{\r\nobjdir\/x86_64-unknown-linux-gnu\/libphobos\/x86_64-unknown-linux-gnu\/gcc\/config\r\nobjdir\/x86_64-unknown-linux-gnu\/32\/libphobos\/x86_64-unknown-linux-gnu\/gcc\/config\r\n}}}\r\n\r\nIf so, could have a look around the Makefiles and see if there is a way to detect 32bit (and use the -m32 option when building x3 for the 32bit library.)","created_on":"2010-10-12T16:12:31.288329+00:00","user":"ibuclaw","updated_on":null,"issue":71,"id":265755},{"content":"Yep.  Two different sets.  I'll see what I can do in the makefile to tweak things.","created_on":"2010-10-12T16:37:07.967386+00:00","user":"opticron","updated_on":null,"issue":71,"id":265773},{"content":"What a coincidence.  I found some time.  The diff to fix it for D1 and D2 is attached.  Anyone see a problem with it?  Also, I wasn't sure what to do about Makefile.am vs Makefile.in, so I modified both.","created_on":"2010-10-12T19:36:44.297834+00:00","user":"opticron","updated_on":null,"issue":71,"id":265883},{"content":"I have nothing to say; looks fine to me. Thanks!","created_on":"2010-10-12T23:00:29.268611+00:00","user":"ibuclaw","updated_on":null,"issue":71,"id":266033},{"content":"Committed.","created_on":"2010-10-13T01:11:06.915518+00:00","user":"opticron","updated_on":null,"issue":71,"id":266061},{"content":"<<changeset 304>>","created_on":"2010-10-16T12:23:01.989123+00:00","user":"ibuclaw","updated_on":null,"issue":72,"id":268211},{"content":"Note: This should not fail either.\r\n\r\n{{{\r\nimport std.stdio;\r\nenum : string A { a = \"hello\" }\r\nvoid main() { writeln(A.a); }\r\n}}}\r\n\r\nRegards","created_on":"2010-10-13T17:17:51.221629+00:00","user":"ibuclaw","updated_on":null,"issue":73,"id":266479},{"content":"<<changeset 307>>\n\nNote however, we cannot auto assign real\/float\/double enums for whatever reason:\n\nie:\n{{{\nenum A : real\n{\n    test = 4.2\n}\n\nauto val1 = A.test; \/\/ ICEs\nreal val2 = A.test; \/\/ OK\n}}}\n\nMight be worth opening a new ticket for that though.\n\nRegards","created_on":"2010-10-19T11:56:16.700286+00:00","user":"ibuclaw","updated_on":"2010-10-19T11:56:33.514710+00:00","issue":73,"id":269955},{"content":"Not a bug.\r\n\r\nSupport for GCC-4.5 isn't being worked on as far as I am aware, and will likely not show up until sometime next year. Unless of course someone wants to make a head start.","created_on":"2010-10-16T18:06:24.750068+00:00","user":"ibuclaw","updated_on":null,"issue":75,"id":268351},{"content":"Actually, I'll link this request in with <<issue 53>>\r\n\r\nDuplicate of #53.","created_on":"2010-10-16T18:24:18.664755+00:00","user":"ibuclaw","updated_on":null,"issue":75,"id":268358},{"content":"Do you have a patch you could post for the change from Phobos 2.028-2.029?","created_on":"2010-10-14T00:08:50.505536+00:00","user":"michaelp","updated_on":null,"issue":74,"id":266709},{"content":"Slow question, but the change for DMD? Or the change for GDC?","created_on":"2010-10-14T06:15:00.595345+00:00","user":"ibuclaw","updated_on":"2010-10-14T06:15:25.910157+00:00","issue":74,"id":266835},{"content":"Patch against current tip. With minimal changes to be usable with 32bit and 64bit Linux. TODO: work on getting unittests to compile \/ pass.","created_on":"2010-10-14T13:44:08.880754+00:00","user":"ibuclaw","updated_on":"2010-10-14T13:44:48.478331+00:00","issue":74,"id":267021},{"content":"I was thinking about the patch for DMD. Either would have been fine though.\r\n\r\nIs that one you just posted for the Phobos in GDC?","created_on":"2010-10-15T01:36:54.739066+00:00","user":"michaelp","updated_on":null,"issue":74,"id":267409},{"content":"> Is that one you just posted for the Phobos in GDC?\r\n\r\nYes. For D2","created_on":"2010-10-15T19:51:23.670561+00:00","user":"ibuclaw","updated_on":null,"issue":74,"id":267943},{"content":"Any word back on this yet?\r\n\r\nThanks.","created_on":"2010-10-21T21:46:11.790430+00:00","user":"ibuclaw","updated_on":null,"issue":74,"id":272612},{"content":"Sure, may as well try it.\r\n\r\nSome questions though: \r\n\r\n1. Would we redo all of D2, or just Phobos\/Druntime? \r\n\r\n2. Would we re-implement the GDC specific changes already in D2\/Phobos, but in a cleaner way, or would you try to make D2\/Phobos work from scratch?\r\n\r\n3. Are you sure you're ready for this? ;)","created_on":"2010-10-22T13:50:24.780632+00:00","user":"michaelp","updated_on":null,"issue":74,"id":273042},{"content":"1) Just redo Phobos. Basically it's doing what I did with Druntime, slot it in and fixing it when and where I find necessary (and I still find the odd issue every so often <<changeset 308>>)\n\n2) The obvious changes will be put in. The Varargs hacks in std.stdarg and std.format; the 'version (GNU_Need_function)' bits that are dotted around the place; implement our own functions for those we don't have in std.intrinsic. As for everything\/anything else, it really is just as I find it. No promises that it will be cleaner, but I'll make sure that all changes are at least marked clearly in version(GNU) brackets. So to avoid getting confused with what's what and who did which bit of code.\n\n3) No, I'm not. Although, it has been WIP over the past week, and I've just gotten writefln(\"%s\", str); working again with -O2. :-)","created_on":"2010-10-22T14:23:11.375943+00:00","user":"ibuclaw","updated_on":"2010-10-22T14:23:37.912576+00:00","issue":74,"id":273059},{"content":"OK, I've unleashed the beast.\r\n\r\n*Updated to 2.030: <<changeset 310>>\r\n*Updated to 2.031: <<changeset 311>>\r\n*Updated to 2.032: <<changeset 312>>\r\n*Rebased D2 Phobos: <<changeset 313>>\r\n\r\nTime to put it to the test. =)\r\n\r\nNo reason to keep this open now?","created_on":"2010-10-22T16:32:08.212394+00:00","user":"ibuclaw","updated_on":null,"issue":74,"id":273135},{"content":"Great job!\r\n\r\nMarking as resolved.","created_on":"2010-10-22T17:07:15.122738+00:00","user":"michaelp","updated_on":null,"issue":74,"id":273164},{"content":"I'm knackered, can someone review and push for me? Thanks.","created_on":"2010-10-25T00:06:56.248980+00:00","user":"ibuclaw","updated_on":null,"issue":77,"id":274369},{"content":"Built fine for me, so committed in <<issue cf5f02e03fda>>.\r\n\r\nMarking as resolved.","created_on":"2010-10-25T01:23:05.982655+00:00","user":"michaelp","updated_on":null,"issue":77,"id":274380},{"content":null,"created_on":"2010-10-24T23:31:24.542343+00:00","user":"michaelp","updated_on":null,"issue":76,"id":274360},{"content":"d-codegen.cc, around line 360. See the comment that says 'else error?'. Perhaps you should put one there?\r\n","created_on":"2010-10-25T00:05:18.462586+00:00","user":"ibuclaw","updated_on":null,"issue":76,"id":274367},{"content":"Looks like the right place. Putting this in:\r\n\r\n{{{\r\nelse\r\n{\r\n    ::error(\"cannot cast %s of type %s to type %s\", exp, exp_type->toChars(), target_type->toChars());\r\n    return error_mark_node;\r\n}\r\n}}}\r\n\r\ngives this:\r\n\r\n{{{\r\nIn file included from <builtin>:1:\r\nstringtocharcast.d: In function ‘main’:\r\nstringtocharcast.d:3: error: cannot cast \u001c of type char[1u] to type char\r\n}}}\r\n\r\nexp has a type of tree, and I didn't know how to the value of that and print it. Also not sure why the \"In file included from <builtin>:1:\" thing still shows up. But that does look like the right place.\r\n","created_on":"2010-10-25T01:35:41.528419+00:00","user":"michaelp","updated_on":null,"issue":76,"id":274389},{"content":"{{{\nIn file included from <builtin>:1:\nstringtocharcast.d: In function ‘main’:\n}}}\n\nI notice that sort of message dotted around the place from time to time. It happens because you call error() from within IRState. It could be that it's a bug with the way we tell the GCC backend what file\/line location we are at.\n\n\nI tend to try and go for:\n{{{\nexp->error();\n}}}\n\nBut the lack of an Expression var to use hampers progress. =)\nMaybe someday could look into possibly shuffling about the convertTo functions, but until then, I'd perhaps settle for a simple:\n\n{{{\n::error(\"can't convert an array expression to %s\", target_type->toChars());\n}}}\n\nor\n\n{{{\n::error(\"can't convert an array of type %s to %s\", exp_type->toChars(), target_type->toChars());\n}}}\n\nRegards.","created_on":"2010-10-25T10:41:20.828451+00:00","user":"ibuclaw","updated_on":"2010-10-25T10:47:12.664620+00:00","issue":76,"id":274646},{"content":"Commit in <<changeset 323>> removes the 'In file included in <builtin>' message from the error.\r\n\r\nRegards","created_on":"2010-10-28T16:20:40.196587+00:00","user":"ibuclaw","updated_on":null,"issue":76,"id":277464},{"content":"Fixed in <<changeset 0c78536565d6>>.\r\n\r\nMarking as resolved.","created_on":"2010-11-01T19:38:40.569340+00:00","user":"michaelp","updated_on":null,"issue":76,"id":280092},{"content":"Fixed align in <<changeset 335>>","created_on":"2010-11-02T23:30:31.703067+00:00","user":"ibuclaw","updated_on":null,"issue":83,"id":281052},{"content":null,"created_on":"2010-11-02T10:29:33.343665+00:00","user":"ibuclaw","updated_on":null,"issue":84,"id":280513},{"content":"I don't use them. I can't imagine people wanting to use D would be using versions this old either.","created_on":"2010-11-07T02:45:04.023035+00:00","user":"michaelp","updated_on":null,"issue":84,"id":283927},{"content":"OK. I'll keep the patches in the tree for the time being. However, I'll disregard updating them.","created_on":"2010-11-07T12:09:29.143156+00:00","user":"ibuclaw","updated_on":null,"issue":84,"id":284080},{"content":"Perhaps no longer having \"official\" support for 3.4 and 4.0 should be mentioned on the Home wiki page?","created_on":"2010-11-13T03:05:38.616043+00:00","user":"michaelp","updated_on":null,"issue":84,"id":288711},{"content":null,"created_on":"2011-01-28T14:57:54.842832+00:00","user":"ibuclaw","updated_on":null,"issue":84,"id":353580},{"content":"Oh I see what you mean, I can understand the assumption in that.\r\n\r\nAfterall:\r\n\r\n{{{\r\nint fun1(int x) {\r\n\treturn x + 1;\r\n}\r\n\r\nT fun2(T)(T x) {\r\n\treturn x + 1;\r\n}\r\n\r\nint fun3(T)(int x) {\r\n\treturn x + 1;\r\n}\r\n}}}\r\n\r\nAll generate the same code:\r\n\r\n{{{\r\n;; Function fun1 (_D8template4fun1FiZi)\r\n\r\nfun1 (int x)\r\n{\r\n  int D.1596;\r\n\r\n<bb 2>:\r\n  D.1596 = x + 1;\r\n  return D.1596;\r\n\r\n}\r\n\r\n;; Function fun2 (_D8template11__T4fun2TiZ4fun2FiZi)\r\n\r\nfun2 (int x)\r\n{\r\n  int D.1626;\r\n\r\n<bb 2>:\r\n  D.1626 = x + 1;\r\n  return D.1626;\r\n\r\n}\r\n\r\n;; Function fun3 (_D8template11__T4fun3TdZ4fun3FiZi)\r\n\r\nfun3 (int x)\r\n{\r\n  int D.1629;\r\n\r\n<bb 2>:\r\n  D.1629 = x + 1;\r\n  return D.1629;\r\n\r\n}\r\n}}}\r\n\r\nAnd yet only fun1 seems to be considered by the backend:\r\n\r\n{{{\r\n;; Function main (_Dmain)\r\n\r\nConsidering inline candidate fun1.\r\n Inlining fun1 into main.\r\nMerging blocks 2 and 3\r\nMerging blocks 2 and 4\r\n}}}\r\n\r\nI could have a poke around some time later to see why that is.\r\n\r\nRegards","created_on":"2010-11-02T17:56:21.822470+00:00","user":"ibuclaw","updated_on":null,"issue":85,"id":280850},{"content":"I think this only affects GCC-4.4.\n\nIn GCC-4.3, you could use the DECL_INLINE attribute to set functions up for the backend to consider inlining, this is not the case in 4.4.x as that is no longer available.\n\nI'll have a prune round to see if there was something that replaced it. :-)\n\nRegards","created_on":"2010-11-02T18:52:34.658658+00:00","user":"ibuclaw","updated_on":"2010-11-02T18:53:56.671298+00:00","issue":85,"id":280883},{"content":"Yeah... there is simply no good way to do this in GCC-4.4 since the old code has been removed. Though optimistically closing this report after <<changeset 403>>\r\n\r\nRegards","created_on":"2010-12-13T13:27:21.324376+00:00","user":"ibuclaw","updated_on":null,"issue":85,"id":314995},{"content":"Ordering is undefined here, and specific to each backend (I tried GCC\/DMC, and both varied in the same way too).","created_on":"2011-04-20T09:01:25.037289+00:00","user":"ibuclaw","updated_on":null,"issue":197,"id":448362},{"content":"This can be closed.\r\nWorks in 1.067.","created_on":"2011-02-20T08:26:11.707657+00:00","user":null,"updated_on":null,"issue":152,"id":377544},{"content":null,"created_on":"2011-02-20T11:31:01.312779+00:00","user":"ibuclaw","updated_on":null,"issue":152,"id":377636},{"content":null,"created_on":"2010-11-06T21:49:11.973487+00:00","user":"ibuclaw","updated_on":null,"issue":86,"id":283848},{"content":"I think matching DMD's space only whitespace convention would be good. I dislike the 4 spaces for 1 indentation level, and an 8 space tab stop for another.","created_on":"2010-11-07T02:44:12.019049+00:00","user":"michaelp","updated_on":null,"issue":86,"id":283926},{"content":"<<changeset 347>>","created_on":"2010-11-07T12:21:59.700368+00:00","user":"ibuclaw","updated_on":null,"issue":86,"id":284084},{"content":null,"created_on":"2010-11-18T21:31:36.022917+00:00","user":"ibuclaw","updated_on":null,"issue":105,"id":293668},{"content":"Fixed in <<changeset 426>>","created_on":"2011-01-02T19:31:50.595129+00:00","user":"ibuclaw","updated_on":null,"issue":105,"id":329307},{"content":null,"created_on":"2010-11-14T02:01:00.164417+00:00","user":"jordirovira","updated_on":null,"issue":88,"id":289307},{"content":null,"created_on":"2010-11-14T02:01:16.034339+00:00","user":"jordirovira","updated_on":null,"issue":88,"id":289308},{"content":"It seems to have been fixed with the latest update.","created_on":"2010-11-14T03:21:36.513622+00:00","user":"jordirovira","updated_on":null,"issue":88,"id":289320},{"content":null,"created_on":"2010-11-11T19:18:54.448767+00:00","user":"ibuclaw","updated_on":null,"issue":89,"id":287596},{"content":null,"created_on":"2010-11-11T19:24:35.116074+00:00","user":"ibuclaw","updated_on":null,"issue":89,"id":287605},{"content":"Another related example:\r\n\r\n{{{\r\nstruct Foo\r\n{\r\n    int[5] x = 3;\r\n}\r\n\r\nvoid Bar()\r\n{\r\n    Foo f = Foo();\r\n}\r\n}}}\r\n","created_on":"2010-11-17T18:16:41.059639+00:00","user":"ibuclaw","updated_on":null,"issue":89,"id":292568},{"content":"Fixed in <<changeset 365>>","created_on":"2010-11-18T09:37:38.681390+00:00","user":"ibuclaw","updated_on":null,"issue":89,"id":293036},{"content":"Patch:\n\n{{{\n--- a\/d\/d-lang.cc\tMon Nov 08 16:47:35 2010 +0000\n+++ b\/d\/d-lang.cc\tTue Nov 09 17:26:24 2010 +0000\n@@ -274,6 +274,10 @@\n static int\n d_cpp_forall_callback(cpp_reader *, cpp_hashnode * hn, void *)\n {\n+    \/\/ Filter out unneeded builtin defines.\n+    if (hn->type != NT_MACRO)\n+        return 1;\n+\n     const char * str = (const char *) hn->ident.str;\n     unsigned int len = hn->ident.len;\n     char * d_ident = new char[4 + len + 1];\n@@ -295,7 +299,20 @@\n extern \"C\" void\n builtin_define_std (const char *macro)\n {\n-    \/\/ Do nothing.  No need for these (yet).\n+    assert(macro);\n+    const char * str = macro;\n+    unsigned int len = strlen(macro);\n+    char * d_ident = new char[4 + len + 1];\n+    if (len > 4 && str[0] == '_' && str[1] == '_' &&\n+        str[len - 1] == '_' && str[len - 2] == '_')\n+    {\n+        str += 2;\n+        len -= 4;\n+    }\n+    strcpy(d_ident, \"GNU_\");\n+    strncpy(d_ident + 4, str, len);\n+    d_ident[len + 4] = '\\0';\n+    VersionCondition::addPredefinedGlobalIdent(d_ident);\n }\n \n static bool\n}}}\n\nNow only emits (from the original list):\n\nGNU, GNU_InlineAsm, GNU_i386, GNU_unix, GNU_ELF, GNU_linux, GNU_gnu_linux.\n\nWill push in the next FE merge.\n\nRegards","created_on":"2010-11-09T17:33:15.044932+00:00","user":"ibuclaw","updated_on":"2010-11-09T17:33:49.151937+00:00","issue":87,"id":285777},{"content":"Fixed in <<changeset 350>>","created_on":"2010-11-12T18:35:05.460033+00:00","user":"ibuclaw","updated_on":null,"issue":87,"id":288441},{"content":null,"created_on":"2010-11-18T22:42:33.496805+00:00","user":"ibuclaw","updated_on":null,"issue":103,"id":293757},{"content":null,"created_on":"2010-11-18T22:48:10.776459+00:00","user":"ibuclaw","updated_on":null,"issue":103,"id":293765},{"content":"Only applies to D2 and structs.","created_on":"2010-11-18T22:48:29.821124+00:00","user":"ibuclaw","updated_on":null,"issue":103,"id":293767},{"content":"Fixed in <<changeset 367>>","created_on":"2010-11-19T01:25:25.466374+00:00","user":"ibuclaw","updated_on":null,"issue":103,"id":293851},{"content":"Raised bug against druntime: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5209","created_on":"2010-11-13T14:21:16.953074+00:00","user":"ibuclaw","updated_on":null,"issue":90,"id":288960},{"content":null,"created_on":"2010-11-13T13:31:29.653715+00:00","user":"jmb","updated_on":null,"issue":90,"id":288938},{"content":"Fixed in <<changeset 352>>","created_on":"2010-11-13T14:24:39.993353+00:00","user":"ibuclaw","updated_on":null,"issue":90,"id":288965},{"content":"Similar issues happen in {{{rt\/gcbits.d}}}:\r\n{{{\r\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/x86_64-unknown-linux-gnu\/sys-include -o gc\/gcbits.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc -nostdinc -pipe  -fdeprecated \\\r\n\t-I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:90: Error: function gcc.bitmanip.bt (in const(uint*) p, uint bit) is not callable using argument types (ulong*,ulong)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:90: Error: cannot implicitly convert expression (this.data + 8L) of type ulong* to const(uint*)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:90: Error: cannot implicitly convert expression (i) of type ulong to uint\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:129: Error: function gcc.bitmanip.btr (in const(uint*) p, uint bit) is not callable using argument types (ulong*,ulong)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:129: Error: cannot implicitly convert expression (this.data + 8L) of type ulong* to const(uint*)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:129: Error: cannot implicitly convert expression (i) of type ulong to uint\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:164: Error: function gcc.bitmanip.bts (in const(uint*) p, uint bit) is not callable using argument types (ulong*,ulong)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:164: Error: cannot implicitly convert expression (this.data + 8L) of type ulong* to const(uint*)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc\/gcbits.d:164: Error: cannot implicitly convert expression (i) of type ulong to uint\r\n}}}\r\n\r\nI'm posting this as a comment here instead of a new bug report because I believe the actual issue is in {{{gcc.bitmanip}}} in both cases.","created_on":"2010-11-13T13:58:24.649982+00:00","user":"jmb","updated_on":null,"issue":91,"id":288950},{"content":"I half expected this to happen. Should be resolved in the next frontend merge, where the parameters of the said functions change from (uint*, uint) to (uint*, size_t).\r\n\r\nI'll leave open for the time being anyway.","created_on":"2010-11-13T14:30:11.905183+00:00","user":"ibuclaw","updated_on":null,"issue":91,"id":288968},{"content":"Fixed in <<changeset 354>>","created_on":"2010-11-13T18:01:47.391310+00:00","user":"ibuclaw","updated_on":null,"issue":91,"id":289081},{"content":"Note, readCapacity has been removed in the next Frontend merge. So problem should be already resolved.","created_on":"2010-11-13T14:33:25.838914+00:00","user":"ibuclaw","updated_on":null,"issue":92,"id":288972},{"content":"Fixed in <<changeset 354>>","created_on":"2010-11-13T18:02:02.276815+00:00","user":"ibuclaw","updated_on":null,"issue":92,"id":289082},{"content":"In general I think these issues should be ignored until the last few merges are finished.  Most of them were addressed recently in preparation for DMD supporting 64-bit.  The SVN version of Phobos passes semantic checking with DMD -m64.","created_on":"2010-11-13T14:16:05.757624+00:00","user":null,"updated_on":null,"issue":93,"id":288957},{"content":"Note: This will be fixed in the next frontend merge.","created_on":"2010-11-13T14:37:03.113012+00:00","user":"ibuclaw","updated_on":null,"issue":93,"id":288976},{"content":"OK, I'll wait before reporting any more 64 bits issues.","created_on":"2010-11-13T14:37:55.500774+00:00","user":"jmb","updated_on":null,"issue":93,"id":288978},{"content":"Gah, why did my last comment change the status back to new?","created_on":"2010-11-13T15:00:23.700311+00:00","user":"jmb","updated_on":null,"issue":93,"id":288992},{"content":"Fixed in <<changeset 354>>","created_on":"2010-11-13T18:02:18.022103+00:00","user":"ibuclaw","updated_on":null,"issue":93,"id":289083},{"content":"Then build with --enable-multilib\n\nMake sure you install the right libraries first though! On a clean Ubuntu\/Debian install, the packages would be:\n{{{\ng++-multilib libc6-dev-i386 libmpfr-dev libgmp3-dev\n}}}\n\nI'd expect the naming conventions to be similar on Fedora\/Suse.","created_on":"2010-11-13T20:06:03.646421+00:00","user":"ibuclaw","updated_on":"2010-11-13T20:06:20.151199+00:00","issue":94,"id":289139},{"content":"Removed references to --disable-multilib from the main page, as is no longer required.\r\n\r\nI'll probably make a page dedicated to compiler switches, hints and tricks at a later date, that will include notes about the -m32 and -m64 switches, and how to enable them for your compiler.\r\n\r\nClosing as this is report is a non-bug.\r\n\r\nRegards","created_on":"2010-11-13T22:28:41.304927+00:00","user":"ibuclaw","updated_on":null,"issue":94,"id":289183},{"content":"\"Hello World\" working again in <<changeset 355>>","created_on":"2010-11-14T17:58:25.698489+00:00","user":"ibuclaw","updated_on":null,"issue":95,"id":289643},{"content":"Fixed in <<changeset 363>>","created_on":"2010-11-16T19:18:34.991652+00:00","user":"ibuclaw","updated_on":null,"issue":98,"id":291583},{"content":"Fixed in <<changeset 364>>","created_on":"2010-11-17T02:33:40.510734+00:00","user":"ibuclaw","updated_on":null,"issue":102,"id":291861},{"content":"I don't get a crash when I try to build it (building on i386), however, the time to compile is horrendously, and should probably have something done about that.","created_on":"2010-11-21T11:47:12.221472+00:00","user":"ibuclaw","updated_on":null,"issue":108,"id":295781},{"content":"OK, increased the array and now I get it. Looks like what happens is that because the number of elements is very large, the backend ends up blowing up the stack in the tree walking code.\r\n\r\nTo prevent such a large array from being initted in the first place, see: optimize.c - expandVar()\r\n\r\nIt is in this function that immutable\/const arrays are expanded. So I'd be inclined to put a limit on just how big we allow arrays to be expanded until we instead just pass the variable\/pointer.\r\n\r\nWould only allowing array.length < 255 seem reasonable? Can always tweak it for compiler performance later...\r\n\r\nAttaching patch and here are my runtimes:\r\n\r\nBefore:\r\n{{{\r\nreal\t0m30.652s\r\nuser\t0m23.937s\r\nsys\t0m0.932s\r\n}}}\r\n\r\nAfter:\r\n{{{\r\nreal\t0m2.440s\r\nuser\t0m1.632s\r\nsys\t0m0.252s\r\n}}}\r\nRegards.","created_on":"2010-11-21T17:14:31.179678+00:00","user":"ibuclaw","updated_on":null,"issue":108,"id":296005},{"content":"After words with Eldar about implementation, have decided to go with what's referenced in <<changeset 376>> and the segfaults no longer occur ( and compile time sped up drastically as per above :)\r\n\r\nLeaving this report open though as a reminder to fix the ArrayLiteralExp implementation to call _d_arrayliteralT instead of _d_newarrayT.\r\n\r\nRegards","created_on":"2010-11-22T01:19:47.292549+00:00","user":"ibuclaw","updated_on":null,"issue":108,"id":296221},{"content":"Fixed in <<changeset 377>>","created_on":"2010-11-22T20:39:55.195406+00:00","user":"ibuclaw","updated_on":null,"issue":108,"id":296974},{"content":"Fixed in <<changeset 329>>","created_on":"2010-11-01T14:02:10.656771+00:00","user":"ibuclaw","updated_on":null,"issue":82,"id":279863},{"content":"Patch to apply to your source directory.","created_on":"2010-11-01T13:59:43.131151+00:00","user":"ibuclaw","updated_on":"2010-11-01T14:03:17.786062+00:00","issue":82,"id":279860},{"content":"Hello Iian,\r\n\r\ni get the same message and i checked today out the sources.\r\n\r\ngdc -v\r\nZiel: i686-pc-linux-gnu\r\nKonfiguriert mit: ..\/configure --enable-languages=d --disable-multilib --disable-shared\r\nThread-Modell: posix\r\ngcc-Version 4.3.5 20100522 (gdc hg, using dmd 2.037) (GCC)","created_on":"2010-11-23T10:16:42.247235+00:00","user":null,"updated_on":null,"issue":82,"id":297614},{"content":"Hello Iain,\r\n\r\nit worked now fine.\r\nVery good work. \r\nThank you.","created_on":"2010-12-23T08:41:10.291816+00:00","user":null,"updated_on":null,"issue":82,"id":323573},{"content":"Not a bug. Chances am you don't have patch installed on your system, so the gcc patches didn't apply when you ran .\/gcc\/d\/setup-gcc.sh","created_on":"2010-11-24T08:39:39.582225+00:00","user":"ibuclaw","updated_on":null,"issue":111,"id":298413},{"content":"Well, I discovered what happened.  running twice the script (I copy-pasted instruction even with newline), so I re ran the script with d2 and choose to replace everything. I did a clean install and all went fine. I think a warning massage would be useful before messing up all.","created_on":"2010-12-07T20:14:03.282617+00:00","user":null,"updated_on":null,"issue":111,"id":309667},{"content":"IMO, the prerequisites are made pretty clear. http:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/Home#prerequesites\r\n\r\nRegards","created_on":"2010-12-07T20:21:51.521299+00:00","user":"ibuclaw","updated_on":null,"issue":111,"id":309669},{"content":"Actually, I'd imagine this bug was present even before the 2.050 merge.\r\n\r\nBefore, I'd have GCC written functions marked as pure if DMD marked them as pure and nothrow. Now, I'm marking them as pure if DMD has them as PUREstrong and nothrow.\r\n\r\nThe latter is exactly the case in this instance, and the GCC backend optimises the call away after determining that it *appears* to be dead code (nothing uses its return value).","created_on":"2010-11-24T11:56:21.666419+00:00","user":"ibuclaw","updated_on":null,"issue":110,"id":298571},{"content":"I've had a thought about it, and have decided to raise a bug against DMD because the member function should really be marked as PUREweak by the frontend.\r\n\r\nLink here:\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5277\r\n\r\nRegards","created_on":"2010-11-26T17:19:38.468081+00:00","user":"ibuclaw","updated_on":null,"issue":110,"id":300420},{"content":"Possibly a duplicate: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5191","created_on":"2010-11-26T22:18:34.532238+00:00","user":"ibuclaw","updated_on":null,"issue":110,"id":300594},{"content":"Merged in Don's patch from the above link (turns out we were doing the same thing).\r\n\r\nFixed in <<changeset 385>>","created_on":"2010-11-26T22:32:30.731252+00:00","user":"ibuclaw","updated_on":null,"issue":110,"id":300599},{"content":"hmm... patch is way off. (Trace handler gets called twice). Problem is due to a difference between _d_throw implementations, fixed in next commit. Thanks!","created_on":"2010-11-24T13:00:07.229671+00:00","user":"ibuclaw","updated_on":null,"issue":112,"id":298630},{"content":"trace handler is also beeing called twice in dmd reference implementation so I though it is intentional.","created_on":"2010-11-24T16:26:37.879321+00:00","user":"Ingrater","updated_on":null,"issue":112,"id":298786},{"content":"> trace handler is also beeing called twice in dmd reference implementation so I though it is intentional.\r\n\r\nThat is a bug, and those two lines you uncommented were rightfully commented **out** in 2.050.","created_on":"2010-11-24T17:55:16.560204+00:00","user":"ibuclaw","updated_on":null,"issue":112,"id":298860},{"content":"For clarification.","created_on":"2010-11-24T17:59:51.040227+00:00","user":"ibuclaw","updated_on":null,"issue":112,"id":298864},{"content":"Fixed in <<changeset 381>>","created_on":"2010-11-25T01:45:46.199936+00:00","user":"ibuclaw","updated_on":null,"issue":112,"id":299133},{"content":null,"created_on":"2010-11-16T15:21:33.749631+00:00","user":"ibuclaw","updated_on":null,"issue":101,"id":291378},{"content":"It works if you change the assert to:\r\n\r\n{{{\r\nassert(this.outer.w == 3);\r\n}}}","created_on":"2010-11-25T20:25:10.613861+00:00","user":"ibuclaw","updated_on":null,"issue":101,"id":299744},{"content":"Fixed in <<changeset 382>>","created_on":"2010-11-26T01:09:31.399963+00:00","user":"ibuclaw","updated_on":null,"issue":101,"id":299867},{"content":null,"created_on":"2010-11-28T01:07:41.307848+00:00","user":"dsimcha","updated_on":null,"issue":116,"id":301162},{"content":"This is the same bug as <<issue 115>>\r\n\r\nDuplicate of #115.","created_on":"2010-11-28T20:23:13.141163+00:00","user":"ibuclaw","updated_on":null,"issue":116,"id":301712},{"content":"It's usually easier to wait for release and meld the two versions together using the diff against the two DMD-2.xxx versions.\r\n\r\nI'm all open to a patch on specific minor issues though.","created_on":"2010-11-29T20:46:09.536148+00:00","user":"ibuclaw","updated_on":null,"issue":117,"id":302566},{"content":"I'm not going to file separate bug reports for every single one because there's a huge number and they're already fixed upstream, but the relevant changesets (which can be easily merged into the GDC tree since diff files are available on Trac) are:\r\n\r\nhttp:\/\/dsource.org\/projects\/phobos\/changeset\/2145\r\n\r\nhttp:\/\/dsource.org\/projects\/phobos\/changeset\/2151\r\n\r\nhttp:\/\/www.dsource.org\/projects\/druntime\/changeset\/430\r\n","created_on":"2010-11-30T02:05:33.653555+00:00","user":"dsimcha","updated_on":null,"issue":117,"id":302802},{"content":"Issue #126 was marked as a duplicate of this issue.","created_on":"2010-12-15T19:45:32.508439+00:00","user":"ibuclaw","updated_on":null,"issue":117,"id":317814},{"content":"Closing as 2.051 has been merged.","created_on":"2010-12-22T01:02:56.870747+00:00","user":"ibuclaw","updated_on":null,"issue":117,"id":322447},{"content":"It's a regression with constDisplacement symbols (the way they are written). Fixed and cleaned up d-asm-i386.h. :~)","created_on":"2010-11-30T13:55:08.537621+00:00","user":"ibuclaw","updated_on":"2010-11-30T13:55:35.802275+00:00","issue":118,"id":303259},{"content":"Fixed in <<changeset 388>>","created_on":"2010-11-30T14:13:36.946369+00:00","user":"ibuclaw","updated_on":null,"issue":118,"id":303276},{"content":null,"created_on":"2010-11-28T00:41:00.432951+00:00","user":"dsimcha","updated_on":null,"issue":115,"id":301150},{"content":null,"created_on":"2010-11-28T00:41:25.605705+00:00","user":"dsimcha","updated_on":null,"issue":115,"id":301152},{"content":"A similar thing I've noticed is that in some cases, changes to the way virtual memory is allocated can have drastic effects on whether runtime succeeds or not (think setarch -L vs setarch -R). This issue is also the reason why half of the currently failing testcases in the DMD testsuite fail.\r\n\r\nIf you have some time, I would be interested to know how many tests the 64bit compiler fails to pass (check out DMD revision 737 and tweak the Makefile to use gdmd).\r\n\r\nRegards","created_on":"2010-11-28T01:13:38.301660+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":301166},{"content":"OK - the problem is that the reference gets garbage collected. Ugh... :~)\r\n\r\nBefore new'ing the arrays:\r\n{{{\r\n(struct C &) @0xb7ee9e40: {\r\n    <> = {\r\n        _vptr$ = 0x808ea9c,\r\n        _monitor = 0x0\r\n    },\r\n    num = 31415\r\n}\r\n}}}\r\n\r\nAfter:\r\n{{{\r\n(struct C &) @0xb7ee9e40: {\r\n    <> = {\r\n        vptr$ = 0xb7ee9e30,\r\n        _monitor = 0x0\r\n    },\r\n    num = 0\r\n}\r\n}}}\r\n\r\nAny ideas welcome.","created_on":"2010-11-28T15:52:27.502527+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":301508},{"content":"Do you have any idea how long it would take to fix that issue? As I'm heavily relying on a correctly working GC (well, who isn't?^^), I'd like to help wherever possible.\r\n\r\nregards,\r\nNiklas\r\n","created_on":"2010-11-28T17:36:03.542251+00:00","user":"nischu7","updated_on":null,"issue":115,"id":301574},{"content":"I do know that I found a similar issue in DMD 2 years ago (http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=2491), but this seems a little more complicated in that the test case I used in that bug report can't reproduce this.  In the DMD bug, the issue was that TLS data wasn't getting scanned at all.  I've posted on the main D forum asking for any leads gained from fixing the DMD version of the bug.  See http:\/\/www.digitalmars.com\/pnews\/read.php?server=news.digitalmars.com&group=digitalmars.D&artnum=123089 .","created_on":"2010-11-28T17:50:47.714294+00:00","user":"dsimcha","updated_on":null,"issue":115,"id":301579},{"content":"Issue #116 was marked as a duplicate of this issue.","created_on":"2010-11-28T20:23:13.153454+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":301711},{"content":"In core.thread, wrapped around version(DigitalMars) are the definitions for _tlsstart and _tlsend, DMD's implementation of the area which marks the start and end of the thread-local data section respectively.\r\n\r\nIn the else block are just stub variables:\r\n{{{\r\nelse\r\n{\r\n    __gshared int   _tlsstart;\r\n    alias _tlsstart _tlsend;\r\n}\r\n}}}\r\n\r\nSo no thread-local data gets scanned\/marked by the GC when collection times comes, meaning any or all thread-local data can and will be freed without warning during runtime.\r\n\r\nLooking into the possibility of a platform independent solution...","created_on":"2010-11-29T15:49:13.658354+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":302367},{"content":"Ok, I'm confused, is your workaround just slightly conservative, or is the potential for things to be collected before they should be still there?","created_on":"2010-11-29T21:11:57.118822+00:00","user":"dsimcha","updated_on":null,"issue":115,"id":302595},{"content":"Pushed a workaround in <<changeset 386>>. It's not a true fix though, here's why:\r\n\r\n{{{\r\n[iain@maverick test]$ gdc issue115.d -o issue115\r\n[iain@maverick test]$ objdump -t issue115 | grep tdata | sort\r\n00000000  w      .tdata\t00000008              _D3std6format19__T10FormatSpecTyaZ10FormatSpec9seqBeforeAya\r\n00000008  w      .tdata\t00000008              _D3std6format19__T10FormatSpecTyaZ10FormatSpec8seqAfterAya\r\n00000010  w      .tdata\t00000008              _D3std6format19__T10FormatSpecTyaZ10FormatSpec12seqSeparatorAya\r\n000009e4 g       .tdata\t00000050              _D3std6random4randFZk7xormix1G20k\r\n00000a34 g       .tdata\t00000050              _D3std6random4randFZk7xormix2G20k\r\n00000a84 g       .tdata\t00000008              _D3std6regexp5emailAya\r\n00000a8c g       .tdata\t00000008              _D3std6regexp3urlAya\r\n***        00000a94 g       .tdata\t00000004              _tlsstart        ***\r\n080b2124 l    d  .tdata\t00000000              .tdata\r\n[iain@maverick test]$ objdump -t issue115 | grep tbss | sort\r\n00000a98 g       .tbss\t00000004              _D8issue1151cC8issue1151C\r\n00000aa0 g       .tbss\t00000008              _D3std7process6getenvFxAaZAya10lastResultAya\r\n00000aa8 g       .tbss\t00000008              _D3std7process11Environment7getImplFAyaJAyaZb10lastResultAya\r\n00000ab0 g       .tbss\t00000001              _D3std6random17unpredictableSeedFZk6seededb\r\n00000ab4 g       .tbss\t00000004              _D3std6random4seedk\r\n00000ab8 g       .tbss\t00000004              _D3std6random5indexk\r\n00000abc g       .tbss\t00000008              _D6object20_moduleinfo_tlsdtorsAPS6object10ModuleInfo\r\n00000ac4 g       .tbss\t00000004              _D6object22_moduleinfo_tlsdtors_ik\r\n00000ac8 g       .tbss\t00000060              _D2rt8lifetime10__blkcacheG8S2rt8lifetime7BlkInfo\r\n00000b28 g       .tbss\t00000004              _D2rt8lifetime12__nextBlkIdxi\r\n00000b2c g       .tbss\t00000001              _D2rt8lifetime12_d_newarrayTUC8TypeInfokZAv1xa\r\n00000b2d g       .tbss\t00000001              _D2rt8lifetime13_d_newarrayiTUC8TypeInfokZAv1xa\r\n00000b2e g       .tbss\t00000001              _D2rt8lifetime18_d_arraysetlengthTUC8TypeInfokPS2rt8lifetime5ArrayZAg1xa\r\n00000b2f g       .tbss\t00000001              _D2rt8lifetime19_d_arraysetlengthiTUC8TypeInfokPS2rt8lifetime5ArrayZAg1xa\r\n00000b30 g       .tbss\t00000004              gc_atomic\r\n***        00000b34 g       .tbss\t00000004              _tlsend        ***\r\n00000b38 g       .tbss\t00000004              _D2rt6dmain212_d_unhandledC6object9Throwable\r\n080b2bbc l    d  .tbss\t00000000              .tbss\r\n080b2bbc l       .tbss\t00000000              __init_array_end\r\n080b2bbc l       .tbss\t00000000              __init_array_start\r\n\r\n}}}\r\n\r\nCompiling the failed case in the original post, we see that _tlsstart is definitely not at the start of the tdata section, and _tlsend is not quite at the end. It is, however, sufficient enough for thread-local storage that don't have a default initialiser to **not** be garbage collected so the original problem is mostly gone.\r\n\r\nWhat will probably do is make _tlsstart and _tlsend compiler generated variable, that way should be able to ensure that they get written at the start and end respectively. ( Using some new gcc_magic_module function :)\r\n\r\nRegards","created_on":"2010-11-29T21:00:19.212380+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":302589},{"content":"I suspect that anything in the list above before _tlsstart and after _tlsend could still be potentially collected before they should. So anything inbetween the two are in the clear, hence it's a temp workaround.\r\n\r\nIf that isn't clear enough. _tlsstart is at the address 00000a94 when it should be written at 00000000.  _tlsend is at the address 00000b34 when it should be written at 00000b38.\r\n\r\nRegards","created_on":"2010-11-29T21:37:31.097700+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":302612},{"content":"Testing out:\r\n\r\n{{{\r\nmodule tls;\r\n\r\nextern (C)\r\n{\r\n    pragma(GNU_attribute, section(\".tdata\"))\r\n        __thread int _tlsstart = 3;\r\n    pragma(GNU_attribute, section(\".tcommon\"))\r\n        __thread int _tlsend;\r\n}\r\n}}}\r\n\r\nAs a generic stub. Will report back results once I have the time. :)\r\n\r\nRegards","created_on":"2010-12-01T08:14:56.186808+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":303993},{"content":"In the file **tls.S**, DMD explicitly declares **_tlsstart** and **tlsend** to be at the start and end of the tls segment.\n\nFor Windows, the MinGW linker already defines tls symbols **[[__tls_start__]]** and **[[__tls_end__]]**.  So supporting tls on windows should require aliasing the symbols.\n","created_on":"2010-12-02T16:23:10.608713+00:00","user":"venix1","updated_on":"2010-12-02T16:24:44.153940+00:00","issue":115,"id":305471},{"content":"Yes, but there is no way you can guarantee that _tlsstart will be written at the start of the segment at link-time (needs compiler intervention). The only sane way I can think around it is to pass two new files to the linker, tlsstart.o and tlsend.o, very much similar to the way crtbegin.o and crtend.o is passed on some systems.\n\nEdit: it may appear that DMD does something similiar internally too, as it does not seem that tls.S is compiled during the creation of druntime\/phobos in their program.","created_on":"2010-12-02T18:41:52.141110+00:00","user":"ibuclaw","updated_on":"2010-12-02T18:45:35.671543+00:00","issue":115,"id":305591},{"content":"You may want to see core\/rt\/compiler\/gdc\/memory.d from tango.","created_on":"2010-12-02T20:32:51.869254+00:00","user":"prokhin_alexey","updated_on":"2010-12-02T20:45:59.477882+00:00","issue":115,"id":305676},{"content":"Aye, that is the same code GDC1 uses. I'd rather stick to DMD convention in this instance though.","created_on":"2010-12-05T02:12:00.633778+00:00","user":"ibuclaw","updated_on":"2010-12-05T02:12:26.371242+00:00","issue":115,"id":307255},{"content":"I'm not sure whether my problem refers to this bug, but...\n\n{{{\n#!d\n\nimport core.memory;\nimport std.stdio;\n\nclass abc\n{\n\tvoid test()\n\t{\n\t\twritefln(\"abc.test called\");\n\t}\n}\n\nclass def\n{\n\tabc x;\n\n\tthis()\n\t{\n\t\twritefln(\"def constructor called\");\n\t\tx = new abc();\n                \/\/GC.addRoot(cast(void*)x); \/\/ would bypass the problem\n\t}\n}\n\nvoid main()\n{\n\tauto obj = new def();\n\tGC.collect(); \/\/ call the GC explicitly\n\tobj.x.test();\n}\n\n}}}\n\nWhen calling the method \"test\" in the last line, the program crashes (Segfault). 32 bit builds, however, run fine (using the -m32 flag).","created_on":"2010-12-19T16:09:04.616694+00:00","user":"nischu7","updated_on":"2010-12-19T16:22:02.707267+00:00","issue":115,"id":320472},{"content":"New workaround in <<changeset 432>>. Call addRoot\/removeRoot for each call to malloc\/free in the GC (stole idea from nischu7). Ensures that the two case above don't segfault during runtime. Infact, I'd go as far as saying that these sort of TLS-related issues shouldn't happen anymore.\n\nHave also removed the dummy _tls variables, as they are mostly useless.\n\nRegards","created_on":"2011-01-03T19:49:13.877383+00:00","user":"ibuclaw","updated_on":"2011-01-03T19:53:13.223693+00:00","issue":115,"id":330039},{"content":"As Walter Bright's recent tweet shows (\"Hah! Finally figured out what was going wrong with the 64 bit gc. 4 bugs in all.\"), he had problems with the GC when developing 64 bit DMD as well.\r\n\r\nMaybe Walter comes up with an more elegant approach?\r\nYour code, Iain, however, works like a charm!\r\nThanks!\r\n\r\nNiklas.","created_on":"2011-01-08T18:39:54.255639+00:00","user":"nischu7","updated_on":null,"issue":115,"id":334870},{"content":"Using the druntime-trunk, and it may appear that most obvious GC-related issues are indeed gone for 64bit.","created_on":"2011-01-28T19:45:01.161061+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":353840},{"content":"Backported fixes in <<changeset 456>>","created_on":"2011-01-29T20:44:40.824670+00:00","user":"ibuclaw","updated_on":null,"issue":115,"id":354527},{"content":"Can you be more specific?\r\n\r\n* GCC used for compiling?\r\n* GCC being compiled?\r\n* Are your cross compiling?\r\n* Build environment?\r\n* D1 or D2?","created_on":"2010-12-02T12:34:45.071275+00:00","user":"venix1","updated_on":null,"issue":119,"id":305271},{"content":"Fixed in <<changeset 467>>","created_on":"2011-02-19T12:12:30.474303+00:00","user":"ibuclaw","updated_on":null,"issue":119,"id":376968},{"content":null,"created_on":"2010-11-27T23:26:24.243396+00:00","user":"dsimcha","updated_on":null,"issue":113,"id":301116},{"content":null,"created_on":"2010-11-28T02:23:00.360018+00:00","user":"dsimcha","updated_on":null,"issue":113,"id":301184},{"content":"Fixed in <<changeset 396>>","created_on":"2010-12-07T19:32:21.368274+00:00","user":"ibuclaw","updated_on":null,"issue":113,"id":309623},{"content":"No testcase, no D version specified, no build instructions. Can you give more info please? :)","created_on":"2010-12-07T21:42:41.237717+00:00","user":"ibuclaw","updated_on":null,"issue":121,"id":309721},{"content":"Eh, so I found the source, and worked out what you meant by the vague instructions given.\n\nMinimal testcase:\n\n{{{\nint[4] key;\nint[] get_key()\n{\n    volatile return key;\n}\n}}}\n\nPossibly a regression from GCC-4.3\n\nRegards","created_on":"2010-12-07T22:32:18.668951+00:00","user":"ibuclaw","updated_on":"2010-12-07T22:35:06.775809+00:00","issue":121,"id":309779},{"content":"Minimal testcase 2:\r\n\r\n{{{\r\nint buffer[0];\r\nint index = 0;\r\n\r\nint get_value()\r\n{\r\n    volatile\r\n    {\r\n        int ret = buffer[index];\r\n        return ret;\r\n    }\r\n}\r\n}}}\r\n\r\nCommon factors here:\r\n\r\n# Statements must be volatile\r\n# Data handled must be static arrays.","created_on":"2010-12-08T13:39:11.834435+00:00","user":"ibuclaw","updated_on":null,"issue":121,"id":310368},{"content":"Fixed in <<changeset 398>>","created_on":"2010-12-09T00:16:28.812596+00:00","user":"ibuclaw","updated_on":null,"issue":121,"id":310826},{"content":"Sorry, I forgot to log in. That was posted by me.","created_on":"2011-03-02T03:06:59.364620+00:00","user":"ricochet1k","updated_on":null,"issue":157,"id":389119},{"content":"http:\/\/www.digitalmars.com\/d\/2.0\/phobos\/std_thread.html\r\n\r\nIt was replaced by core.thread quite some time ago.\r\n\r\nBye.","created_on":"2011-03-02T13:48:38.697589+00:00","user":"ibuclaw","updated_on":null,"issue":157,"id":389633},{"content":"I cannot reproduce this. Probably a druntime bug fixed in 2.051.","created_on":"2010-12-27T18:40:18.345073+00:00","user":"ibuclaw","updated_on":null,"issue":122,"id":325692},{"content":"More likely a druntime bug (is reproducible using DMD too), I suggest raising a bug on the dmd site instead:\r\nhttp:\/\/d.puremagic.com\/issues\/enter_bug.cgi\r\n\r\nRegards","created_on":"2010-12-11T11:22:49.295701+00:00","user":"ibuclaw","updated_on":null,"issue":123,"id":313567},{"content":"Same behaviour is in dmd. Likely points towards a problem in the frontend.","created_on":"2011-02-06T13:40:12.309331+00:00","user":"ibuclaw","updated_on":null,"issue":150,"id":362708},{"content":"struct+struct, where the structs are the same type, and class+class are errors.\r\n\r\nThis is working to design.\r\n\r\nBye.","created_on":"2011-02-06T13:58:26.950952+00:00","user":"ibuclaw","updated_on":null,"issue":150,"id":362721},{"content":"You can do struct + struct with the same type. If you change the declaration from\n\ntypeof(this) opBinary(string op : \"+\")(typeof(this) other)\n\nto\n\ntypeof(this) opBinary(string op : \"+\")(Test other)\n\nthe file compiles just fine and the assert passes. Operator overloading in general wouldn't be very useful without struct + struct or class + class. How else would you make higher level math structures?\n\nIf it's an issue with the frontend, then I'll post this bug on dmd's bug tracker as well, and hopefully any fixes to the frontend will propagate down.\n\nEdit: here's the issue I opened for dmd: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5532","created_on":"2011-02-06T18:51:27.177526+00:00","user":"akb825","updated_on":"2011-02-06T19:00:18.388219+00:00","issue":150,"id":362929},{"content":"It looks like this bug is a part of the larger issue that typeof(this) doesn't work in the signature of templated functions. http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=4413","created_on":"2011-02-06T20:18:55.403557+00:00","user":"akb825","updated_on":null,"issue":150,"id":362987},{"content":"On both the atomicLoad and cas functions, the backend inserts an 'xor EAX EAX' instruction which overwrites the expected return value with 0, et voila we see this deadlock.","created_on":"2011-04-26T05:23:36.212978+00:00","user":"ibuclaw","updated_on":null,"issue":200,"id":454718},{"content":"<<changeset 555>>","created_on":"2011-04-26T06:12:24.984333+00:00","user":"ibuclaw","updated_on":null,"issue":200,"id":454758},{"content":"Small correction:\r\n\r\n**Command**\r\n\r\ngdmd -O -inline\r\n\r\n-inline is important here. Without it, the dmd-scipt wrapper passes -fno-inline-functions, which doesn't trigger the ICE.\r\n\r\nAlso, this only happens on -O3 optimisations (-O1, -O2 and -Os are all fine).\r\n\r\nRegards","created_on":"2010-11-17T01:18:18.976041+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":291824},{"content":"Problem is related to STATIC_CHAIN_DECLs, comment out the code which emits them and the program compiles + runs without problems. Which really starts making me question why it is there in the first place (possibly redundant code for GCC-4.0 support).\r\n\r\nI'd have to be cautious here, and test it thoroughly first though.\r\n\r\nRegards","created_on":"2010-11-17T02:22:01.439362+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":291857},{"content":"Found the oops, and fixed in <<changeset 404>>","created_on":"2010-12-13T15:52:15.873453+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":315154},{"content":"Hi, this still happens for me (Ubuntu 10.04, 64-bit) in the current gdc version:\r\n\r\n{{{\r\n& gdc --version\r\ngdc (GCC) 4.4.5 20101001 (gdc hg, using dmd 2.051)\r\nCopyright © 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n$ gdmd -O -inline bugi.d\r\nbugi.d: In function ‘iterate’:\r\nbugi.d:2: internal compiler error: in initialize_inlined_parameters, at tree-inline.c:2213\r\n}}}","created_on":"2011-01-11T15:38:07.415024+00:00","user":null,"updated_on":null,"issue":104,"id":337177},{"content":"Took me a while to figure out why you were still seeing it. Did you configure with --enable-checking=release ?","created_on":"2011-01-12T16:43:16.386816+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":338385},{"content":"See update to patches in <<changeset 442>>\r\n\r\nRegards","created_on":"2011-01-12T17:18:47.019310+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":338403},{"content":"\/\/Did you configure with --enable-checking=release ?\/\/\r\n\r\nNo, unless it is included in one of these:\r\n--enable-languages=d --disable-shared --disable-bootstrap\r\n\r\nUpdated to commit 443 and nothing changed (the  bug is still there).\r\n\r\n-- tniinim","created_on":"2011-01-13T07:58:15.596247+00:00","user":null,"updated_on":null,"issue":104,"id":338964},{"content":"Now I tried with --enable-checking=release and the error disappeared. Is this intentional?\r\n\r\n-- tniinim","created_on":"2011-01-13T08:31:17.699303+00:00","user":null,"updated_on":null,"issue":104,"id":338983},{"content":"The problem is to do with the order that the GCC backend processes the functions. In one order it's fine, in another it isn't (because the function it's looking at has already been dealt with and collected). Again, look at the update to the GCC patches in the commit. It ensures that the one bit of information we need gets preserved. https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/1e4da57f4be4\r\n\r\nYou'll need to ensure that you update the GCC directory to match.","created_on":"2011-01-13T11:32:13.052383+00:00","user":"ibuclaw","updated_on":null,"issue":104,"id":339100},{"content":"Sorry, I did not understand that setup-gcc.sh did not reapply the patch. The problem is gone now.","created_on":"2011-01-13T12:35:27.868821+00:00","user":null,"updated_on":null,"issue":104,"id":339131},{"content":"This should not be a problem with the current tip...","created_on":"2010-12-14T00:57:32.044092+00:00","user":"ibuclaw","updated_on":null,"issue":125,"id":315689},{"content":"So it will be fixed when 2.051 gets rolled out then...","created_on":"2010-12-15T19:44:50.747583+00:00","user":"ibuclaw","updated_on":null,"issue":126,"id":317813},{"content":"Duplicate of #117.","created_on":"2010-12-15T19:45:32.538861+00:00","user":"ibuclaw","updated_on":null,"issue":126,"id":317815},{"content":"I wasn't aware it had even been released (was it today?)","created_on":"2010-12-21T15:50:39.555144+00:00","user":"ibuclaw","updated_on":null,"issue":127,"id":322046},{"content":"Yes.  Just in the last few hours.","created_on":"2010-12-21T16:04:59.928354+00:00","user":"dsimcha","updated_on":null,"issue":127,"id":322059},{"content":"Merged 2.051 in <<changeset 414>>, I expect there'd be at least one or two outstanding things left to do for 64bit, but do let us know how it goes.\r\n\r\nRegards","created_on":"2010-12-22T01:04:57.717699+00:00","user":"ibuclaw","updated_on":null,"issue":127,"id":322449},{"content":"No point keeping this open.","created_on":"2010-12-27T18:37:24.098556+00:00","user":"ibuclaw","updated_on":null,"issue":127,"id":325691},{"content":"Without import:\r\n\r\n{{{\r\nclass Element {\r\n  string toString() {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nvoid enforce(lazy string s) {}\r\n\r\nclass C {\r\n  int[] a;\r\n  void M() {\r\n     auto dg = (E e)\r\n        {\r\n           enforce(e.toString);\r\n           a ~= 1;\r\n        };\r\n  }\r\n}\r\n}}}","created_on":"2011-12-28T22:49:32.662500+00:00","user":"ibuclaw","updated_on":null,"issue":302,"id":911964},{"content":"<<changeset 726:786acc44a0ff>>","created_on":"2011-12-29T00:12:38.691245+00:00","user":"ibuclaw","updated_on":null,"issue":302,"id":912123},{"content":"This happens when you don't clean libphobos before rebuilding. =)\r\n\r\nThe .di files haven't been removed from the previous build, so the compiler uses the old ones in place.\r\n\r\n{{{\r\nmake clean-target-libphobos && make\r\n}}}\r\n\r\nProbably should force generating the headers *before* the actual compilation process begins though....","created_on":"2010-12-23T01:12:19.177515+00:00","user":"ibuclaw","updated_on":null,"issue":128,"id":323438},{"content":"Shouldn't be an issue now... <<changeset 417>>","created_on":"2010-12-23T13:45:38.450864+00:00","user":"ibuclaw","updated_on":null,"issue":128,"id":323825},{"content":"<<changeset 416>>","created_on":"2010-12-23T12:57:14.879740+00:00","user":"ibuclaw","updated_on":null,"issue":129,"id":323729},{"content":"There is no documentation of this behaviour being allowed.\r\n\r\nRegards","created_on":"2011-03-01T23:50:28.878756+00:00","user":"ibuclaw","updated_on":null,"issue":130,"id":388959},{"content":"Yes, it's version(GNU) {}\r\n\r\nBye,","created_on":"2011-01-03T14:20:21.421047+00:00","user":"ibuclaw","updated_on":null,"issue":131,"id":329801},{"content":"(Articulating just for reference) Looks like something racy to me. Initial impression is that it's somewhat related to TypedefDeclaration::toInitializer and later on ObjectFile::giveDeclUniqueName gives two unique names to the same declaration (afaics), one (possibly) being a forward reference of another.\r\n\r\nRegards","created_on":"2011-01-03T16:30:03.189019+00:00","user":"ibuclaw","updated_on":null,"issue":132,"id":329888},{"content":"Objdump from DMD compile\r\n{{{\r\nRELOCATION RECORDS FOR [.data._D30TypeInfo_T3std6socket8socket_t6__initZ]:\r\nOFFSET   TYPE              VALUE \r\n00000000 R_386_32          _D16TypeInfo_Typedef6__vtblZ\r\n00000008 R_386_32          _D10TypeInfo_i6__initZ\r\n00000010 R_386_32          .rodata\r\n00000018 R_386_32          _D3std6socket8socket_t6__initZ\r\n}}}\r\n\r\nObjdump from GDC compile\r\n{{{\r\nRELOCATION RECORDS FOR [.gnu.linkonce.d._D30TypeInfo_T3std6socket8socket_t6__initZ]:\r\nOFFSET   TYPE              VALUE \r\n00000000 R_386_32          _D16TypeInfo_Typedef6__vtblZ\r\n00000008 R_386_32          _D10TypeInfo_i6__initZ\r\n00000010 R_386_32          .rodata\r\n00000018 R_386_32          ___s.976\r\n}}}\r\n","created_on":"2011-01-03T17:12:37.124668+00:00","user":"ibuclaw","updated_on":null,"issue":132,"id":329927},{"content":"Fixed in <<changeset 430>>\r\n\r\nOnly requires a rebuild of libphobos\r\n{{{\r\nmake clean-target-libphobos\r\nmake\r\n}}}\r\n\r\nRegards","created_on":"2011-01-03T18:03:02.112810+00:00","user":"ibuclaw","updated_on":null,"issue":132,"id":329961},{"content":"Only happens on 64bit.\r\n\r\nFirst thing that strikes to me is this:\r\n\r\nImplementation of aligntsize() in aaA.d\r\n{{{\r\nsize_t aligntsize(size_t tsize)\r\n{\r\n    version (X86_64)\r\n        \/\/ Size of key needed to align value on 16 bytes\r\n        return (tsize + 15) & ~(15);\r\n    else\r\n        return (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\r\n}\r\n}}}\r\n\r\nImplementation of aligntsize() in object.d\/di\r\n{{{\r\nsize_t aligntsize(size_t tsize)\r\n{\r\n    \/\/ Is pointer alignment on the x64 4 bytes or 8?\r\n    return (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\r\n}\r\n}}}\r\n\r\nJust going to test what happens if they both match...\r\n\r\nRegards","created_on":"2011-01-04T04:48:17.991116+00:00","user":"ibuclaw","updated_on":null,"issue":133,"id":330394},{"content":"double post... bitbucket is appalling today, eh? :~)","created_on":"2011-01-04T04:53:44.794911+00:00","user":"ibuclaw","updated_on":"2011-01-04T04:54:52.935553+00:00","issue":133,"id":330396},{"content":"Yeah... this neither happens on -m32, or -m64 with either 4.4.5 or 4.5.2 for me now. :)\n\nThis could do with being applied upstream in druntime.\n\n{{{\ndiff -r c2b8a3f7c35b d\/druntime\/object.di\n--- a\/d\/druntime\/object.di\tMon Jan 03 18:17:58 2011 +0000\n+++ b\/d\/druntime\/object.di\tTue Jan 04 04:51:05 2011 +0000\n@@ -354,8 +354,11 @@\n \n     size_t aligntsize(size_t tsize)\n     {\n-\t\/\/ Is pointer alignment on the x64 4 bytes or 8?\n-\treturn (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\n+        version (X86_64)\n+            \/\/ Size of key needed to align value on 16 bytes\n+            return (tsize + 15) & ~(15);\n+        else\n+            return (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\n     }\n \n     size_t length() @property { return _aaLen(p); }\ndiff -r c2b8a3f7c35b d\/druntime\/object_.d\n--- a\/d\/druntime\/object_.d\tMon Jan 03 18:17:58 2011 +0000\n+++ b\/d\/druntime\/object_.d\tTue Jan 04 04:51:05 2011 +0000\n@@ -2440,8 +2440,11 @@\n \n     size_t aligntsize(size_t tsize)\n     {\n-\t\/\/ Is pointer alignment on the x64 4 bytes or 8?\n-\treturn (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\n+        version (X86_64)\n+            \/\/ Size of key needed to align value on 16 bytes\n+            return (tsize + 15) & ~(15);\n+        else\n+\t    return (tsize + size_t.sizeof - 1) & ~(size_t.sizeof - 1);\n     }\n \n     size_t length() @property { return _aaLen(p); }\n\n}}}\n\n\nRegards\nIain","created_on":"2011-01-04T04:53:30.321970+00:00","user":"ibuclaw","updated_on":"2011-01-04T04:55:29.146385+00:00","issue":133,"id":330395},{"content":"Fixed in <<changeset 433>>","created_on":"2011-01-04T05:28:08.063108+00:00","user":"ibuclaw","updated_on":null,"issue":133,"id":330404},{"content":"Raised bug in druntime: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5407\r\n\r\nBye.","created_on":"2011-01-04T05:40:53.077559+00:00","user":"ibuclaw","updated_on":null,"issue":133,"id":330408},{"content":"I can't reproduce this at all using the dmd2.051 frontend.","created_on":"2011-01-09T17:53:30.088752+00:00","user":"ibuclaw","updated_on":null,"issue":134,"id":335525},{"content":"Oh wait, you meant that in the C program the size is padded to 16. Okies, I'll raise a bug in DMD, as the bug will likely be caused from their end. :)","created_on":"2011-01-09T18:09:00.108950+00:00","user":"ibuclaw","updated_on":null,"issue":134,"id":335532},{"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5439","created_on":"2011-01-09T19:07:35.952919+00:00","user":"ibuclaw","updated_on":null,"issue":134,"id":335552},{"content":"<<changeset 441>>","created_on":"2011-01-09T19:40:53.874380+00:00","user":"ibuclaw","updated_on":null,"issue":134,"id":335572},{"content":"Not a bug, your system compiler isn't GCC-4.5, that is all.\r\n\r\nTo workaround, simply uncomment from gcc-4.5.2\/config\/bootstrap-debug.mk","created_on":"2011-01-05T03:35:54.041485+00:00","user":"ibuclaw","updated_on":null,"issue":136,"id":331443},{"content":"Issue #149 was marked as a duplicate of this issue.","created_on":"2011-01-26T15:53:16.829810+00:00","user":"ibuclaw","updated_on":null,"issue":136,"id":351326},{"content":"Umm, how is that not a bug?  GCC doesn't build out of the box with the D frontend, whereas without the D frontend, it does.  There's a misconfig going on.  It may not be high priority, but it's still a build failure.\r\n\r\nCan this become a request to automatically patch the appropriate file?\r\n\r\nBTW, I assume your workaround means uncomment the -gtoggle flag?\r\n\r\nThanks\r\n","created_on":"2011-01-26T18:04:49.292722+00:00","user":"jlquinn","updated_on":null,"issue":136,"id":351556},{"content":"I'll second that.  It's not a high priority because GDC is still in alpha, so ease of use isn't that important.  At the end of the day, though, it should be possible to build GDC without having to know such arcane details of the build process.","created_on":"2011-01-26T18:30:03.123591+00:00","user":"dsimcha","updated_on":null,"issue":136,"id":351574},{"content":"GCC-4.5 seems to offer a new CXXFLAGS variable...\r\n\r\n\r\n<<changeset 452>>","created_on":"2011-01-27T00:38:43.344352+00:00","user":"ibuclaw","updated_on":null,"issue":136,"id":351923},{"content":"Closing this because I found the root cause (which I'll file momentarily) and it's arguably a much more general, easier to reproduce bug in GDC, arguably a bug in std.mathspecial.","created_on":"2011-02-16T04:17:54.513963+00:00","user":"dsimcha","updated_on":null,"issue":140,"id":372941},{"content":"Again, can't reproduce ... maybe it's got something to do with running 32bit inline assembly on your 64bit platform?","created_on":"2011-01-06T15:16:27.600017+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":333240},{"content":"Oh I see, the flag needed to reproduce is -fomit-frame-pointer, nothing else.","created_on":"2011-01-06T19:40:06.733151+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":333478},{"content":"Yeah ... the inline asm in exp2() in std.math assumes that frame pointer is mandated. This isn't wrong code, it's just wrong implementation. ;)","created_on":"2011-01-06T19:54:28.220293+00:00","user":"ibuclaw","updated_on":"2011-01-06T19:54:50.817174+00:00","issue":141,"id":333489},{"content":"OK, looked again, it is wrong codegen... AND it's in the patches applied to GCC. ;-)\r\n\r\nRather than skipping the return address if(naked), should be telling the backend that the frame pointer is not need at all!\r\n\r\nWill fix this for 4.4\/4.5.","created_on":"2011-01-06T22:15:43.073969+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":333596},{"content":"Or not... I'm feeling slightly confused now. :~)\r\n\r\nI think I was definitely right the first time. The implementation assumes that EBP is always setup unless the function is naked. And because it isn't, that breaks DMD's convention for inline asm.\r\n\r\nI'll update the patches anyway, been wanting to remove a certain bit of it regardless. But the bottom line is, you shouldn't be mixing -fno-omit-frame-pointer with D Inline Asm. ;)\r\n\r\nWould removing the option being emitted from gdmd help?","created_on":"2011-01-07T00:43:37.247345+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":333705},{"content":"> Would removing the option being emitted from gdmd help?\r\n\r\nYes, IMHO this is a no-brainer.  IMHO if a given piece of code works with dmd -someswitch, then it should work with gdmd -someswitch, since the whole point of gdmd is to be a drop-in replacement for dmd.  If someone wants access to the extra goodies that the GDC platform provides, they can simply use the gdc command line.","created_on":"2011-01-07T01:05:52.641169+00:00","user":"dsimcha","updated_on":null,"issue":141,"id":333709},{"content":"> Yes, IMHO this is a no-brainer. IMHO if a given piece of code works with dmd -someswitch, then it should work with gdmd -someswitch, since the whole point of gdmd is to be a drop-in replacement for dmd.\r\n\r\nNot really no... the whole point of gdmd is to offer dmd-like switches for gdc. I wouldn't go as far as saying a 'drop-in replacement'. That is a bit too much :o)","created_on":"2011-01-07T23:18:03.915164+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":334488},{"content":"<<changeset 440>>","created_on":"2011-01-09T19:42:11.624649+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":335573},{"content":"FYI, when GCC-4.6 rolls around, the default setting (when not optimizing for size) for 32-bit GNU\/Linux and Darwin x86 targets has been changed to -fomit-frame-pointer. \r\n\r\nJust bare that in mind if you think of this setting as an \"extra goodie\".","created_on":"2011-01-12T00:06:11.019288+00:00","user":"ibuclaw","updated_on":null,"issue":141,"id":337675},{"content":"How is this a bug?\r\n\r\n-isystem \/ -iprefix \/ -isysroot:  are all GCC preprocessor options that don't get passed to the D compiler from the driver.\r\n\r\nThe only reason to really add -isystem would to support the -B option, which searches for 'include' directories and passes them to the compiler via -isystem if one is found. But, that doesn't really sound very useful.","created_on":"2011-01-06T01:06:51.055185+00:00","user":"ibuclaw","updated_on":null,"issue":142,"id":332760},{"content":"Well, it looks like -iprefix is working sometimes, as it is using my object.d.\r\n\r\nAlso, the segfault goes away when I define Object (even an empty class) and bitches about TypeInfo not found (which is what I expect).  I suspect a trivial fix, if not, few people are going to run into this issue anyway.","created_on":"2011-01-06T04:55:51.576965+00:00","user":"tbone","updated_on":null,"issue":144,"id":332839},{"content":"See lang-specs.h for iprefix. There's an age old comment questioning the use of a d_options spec variable to pass the options to compiler. It is yet unimplemented.\r\n\r\nAs for the segfault, it became an error in <<changeset 438>> and special cased in <<changeset 439>>\r\n\r\nBye.","created_on":"2011-01-06T13:52:16.549037+00:00","user":"ibuclaw","updated_on":null,"issue":144,"id":333184},{"content":null,"created_on":"2011-01-12T17:42:12.359632+00:00","user":"tbolsh","updated_on":null,"issue":147,"id":338417},{"content":null,"created_on":"2011-01-12T17:43:29.178464+00:00","user":"tbolsh","updated_on":null,"issue":147,"id":338418},{"content":null,"created_on":"2011-01-12T17:46:40.589673+00:00","user":"tbolsh","updated_on":null,"issue":147,"id":338422},{"content":"<<changeset 443>>","created_on":"2011-01-12T19:18:14.644925+00:00","user":"ibuclaw","updated_on":null,"issue":147,"id":338482},{"content":"dmd doesn't have a --main option either.","created_on":"2011-01-12T18:38:11.410246+00:00","user":"ibuclaw","updated_on":null,"issue":148,"id":338462},{"content":"Sorry, rdmd have such an option ...\r\nI do not know where it should (if should) go to the gdmd.\r\nIt is convenient with -unittest","created_on":"2011-01-12T19:16:04.665857+00:00","user":null,"updated_on":null,"issue":148,"id":338480},{"content":"Not a bug.\r\n\r\nDuplicate of #136.","created_on":"2011-01-26T15:53:16.819852+00:00","user":"ibuclaw","updated_on":null,"issue":149,"id":351327},{"content":"I can't seem to reproduce this on my 32bit system. Then again there are some changes to my copy that I have not yet folded in.","created_on":"2010-11-24T11:07:06.901243+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":298509},{"content":"Pushed <<changeset 381>>. Would be interested to know if problems persist for you (they certainly don't for me).\r\n\r\nRegards","created_on":"2010-11-25T01:47:46.647672+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":299134},{"content":"Still happens, in case it matters I'm using GDC 4.4.5.  Also, I've created a better (i.e. further reduced) test case:\r\n\r\n{{{\r\nstring aString() {\r\n    char[] ret = new char[5];\r\n    ret[] = 'a';\r\n    return cast(immutable) ret;\r\n}\r\n\r\nvoid main() {\r\n    auto foo = aString() ~ aString() ~ aString() ~ aString();\r\n}\r\n\r\n}}}\r\n\r\nIt seems like you need to concatenate at least 4 aString() to make it happen.  In case there' something non-deterministic about it, you could try concatenating even more.","created_on":"2010-11-25T04:00:55.783476+00:00","user":"dsimcha","updated_on":null,"issue":109,"id":299169},{"content":"Hmm... I'm willing to accept something may have changed between 4.4.4 and 4.4.5, I still can't reproduce whether it is 5 or 500 concatenations..","created_on":"2010-11-25T11:30:43.933584+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":299375},{"content":"A few other things that might be relevant:\r\n\r\nI'm running Ubuntu 10.10 64-bit on an AMD Athlon 64 X2 CPU.  I mention these because the segfault is in memcpy() and therefore could be C runtime related, and because the C runtime could have CPU-specific optimizations.","created_on":"2010-11-26T04:15:28.743201+00:00","user":null,"updated_on":null,"issue":109,"id":299928},{"content":"Sorry, the last post was written by me but I forgot to log in.","created_on":"2010-11-26T04:16:34.045413+00:00","user":"dsimcha","updated_on":null,"issue":109,"id":299929},{"content":"I can no longer reproduce this one either with the latest revision.  (You said a few days ago you had some code in your tree that you hadn't checked in yet.)  Something in there must have inadvertently fixed it.","created_on":"2010-11-27T23:30:01.391094+00:00","user":"dsimcha","updated_on":null,"issue":109,"id":301118},{"content":"Reopening.  I'm not sure if I forgot to test this on -m64 or if one of the latest changesets re-broke it only on -m64, but now this bug appears only on -m64 builds but not -m32.  It also seems to occur only on builds without -O.","created_on":"2010-12-01T01:34:48.714173+00:00","user":"dsimcha","updated_on":null,"issue":109,"id":303809},{"content":"This might be vararg related, but I'm not sure how.\r\n\r\nFrom the arraycatnT function:\r\n{{{\r\nva_start!(typeof(n))(va, n);\r\n\r\nfor (i = 0; i < n; i++)\r\n{\r\n    b = va_arg!(typeof(b))(va);\r\n    length += b.length;\r\n}\r\nif (!length)\r\n    return null;\r\n\r\n\/\/ malloc a[] array\r\n\r\nva_start!(typeof(n))(va, n);\r\n\r\nuint j = 0;\r\nfor (i = 0; i < n; i++)\r\n{\r\n    b = va_arg!(typeof(b))(va); \/\/ Oops, b.ptr is now garbage.\r\n    if (b.length)\r\n    {\r\n        memcpy(a + j, b.ptr, b.length * size);\r\n        j += b.length * size;\r\n    }\r\n}\r\n}}}\r\n\r\nThe only difference between D1 and D2 is how the array is malloc'd, which raises some causes of concern...\r\n\r\nWould you be able to test this on 64bit GDC1 compiler?\r\n{{{\r\nvoid main()\r\n{\r\n    auto a = \"Hello\";\r\n    auto b = a ~ a ~ a ~ a ~ a;\r\n}\r\n}}}\r\n\r\nRegards","created_on":"2010-12-12T17:02:05.651092+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":314130},{"content":"OK, bisected repository and the bad commit is somewhere in <<changeset 349>>\r\n\r\nSoldiering on.","created_on":"2010-12-26T23:31:45.100541+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":325230},{"content":"Fixed in <<changeset 418>>","created_on":"2010-12-27T18:18:01.289284+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":325679},{"content":"Fix undone, need to rethink just exactly what's going on here.","created_on":"2011-01-12T19:12:13.059364+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":338478},{"content":"I'm getting this too, another testcase:\r\n\r\n{{{\r\n#!D\r\nimport std.stdio;\r\n\r\nvoid func(char[] s){\r\n\twritefln(s);\r\n}\r\n\r\nvoid main(string[] args){\r\n\tchar[] mversion = \"1.0\".dup;\r\n\tfunc(\"version=\\\"\"~mversion~\"\\\" foo\");\r\n}\r\n}}}\r\n\r\nOutput is:\r\nversion=\"1.01.0\r\nshould be:\r\nversion=\"1.0\" foo","created_on":"2011-01-13T16:44:17.991532+00:00","user":null,"updated_on":null,"issue":109,"id":339399},{"content":"Fixed in <<changeset 456>>","created_on":"2011-01-29T20:46:39.652108+00:00","user":"ibuclaw","updated_on":null,"issue":109,"id":354528},{"content":"Pretty certain this is fixed in <<changeset 456>>","created_on":"2011-01-29T20:55:43.376275+00:00","user":"ibuclaw","updated_on":null,"issue":137,"id":354532},{"content":"Nope, it's not.  I'm still able to reproduce it with the latest build.  Furthermore, I'm sure the build was built properly because I'm noticing the effects of your other fixes.  Also, the commit you mention was for 64-specific issues.  This one occurs on both 32- and 64-bit builds.","created_on":"2011-01-30T00:06:20.931735+00:00","user":"dsimcha","updated_on":"2011-01-30T00:10:12.621696+00:00","issue":137,"id":354619},{"content":"Well please do enlighten me on what code\/flags you are using then, as I certainly can't reproduce the \"Aborted\" runtime.","created_on":"2011-01-30T10:47:37.206686+00:00","user":"ibuclaw","updated_on":null,"issue":137,"id":354811},{"content":"Closing.","created_on":"2011-02-02T10:48:46.898012+00:00","user":"ibuclaw","updated_on":null,"issue":137,"id":358707},{"content":"I have no idea what changed between now and a few weeks ago, but I can't reproduce this one anymore either.  Maybe I forgot to recompile something.","created_on":"2011-02-16T04:52:32.236914+00:00","user":"dsimcha","updated_on":null,"issue":137,"id":372962},{"content":"Using powl() would probably be a good enough, if slow, temporary fix.  The following code gives the right answer:\n{{{\nimport core.stdc.math, std.stdio;\n\nenum E = 2.7182818284590L;\n\nvoid main() {\n    writeln(core.stdc.math.powl(E, 950.0L));\n}\n}}}","created_on":"2011-03-19T02:48:48.033139+00:00","user":"dsimcha","updated_on":"2011-03-19T02:50:54.025932+00:00","issue":153,"id":408564},{"content":"powl in core.stdc.math is an alias to a GCC builtin, so that example you give would have been evaluated at compile time to simply call 'writeln (3.799...etc)'","created_on":"2011-03-19T21:23:45.439888+00:00","user":"ibuclaw","updated_on":null,"issue":153,"id":409188},{"content":"OK, to walk through the first post:\n\nPrints in 32-bit mode:\n{{{\n3.79977e+412  \/\/ Correct, uses D_InlineAsm_X86 implementation to get answer.\n-nan          \/\/ Wrong. The value of 'x' goes corrupt after exiting from first call.\n}}}\n\nPrints in 64-bit mode:\n{{{\ninf           \/\/ Wrong. As neither D_InlineAsm_X86 or X86_64 is defined, calls the libm function\ninf           \/\/ 'exp' which only has 64bit precision (should be calling 'expl' instead.)\n}}}\n\nIn the second instance, can file a phobos bug and patch to replace all calls to stdc.math.xxx for stdc.math.xxxl\n\nRegards\n","created_on":"2011-03-20T15:51:34.372627+00:00","user":"ibuclaw","updated_on":"2011-03-20T15:52:28.437686+00:00","issue":153,"id":409666},{"content":"Phobos bug: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=5757\r\n\r\nWill ping Andrei later for pushing it. :)","created_on":"2011-03-20T16:16:54.311062+00:00","user":"ibuclaw","updated_on":null,"issue":153,"id":409691},{"content":"As for returning 'nan' - the D Naked Asm implementation of exp2 pops stack (see ret PARAMSIZE; in std.math) and expects the caller to clean it off. As the calling convention for GDC is whatever convention for the target platform (on Linux i386, this is cdecl), the stack isn't cleaned up, so things go sour soon afterwards.\n\nIn <<changeset 500>> I've updated the gcc patches to handle this case (and be just that little more compliant with the D ABI). If you uncomment the \"D_DMD_CALLING_CONVENTIONS\" line in Make-lang.in and rebuild, it should now work as expected.\n\nReason why it's still uncommented is that there are a few extra things I wanted to implement first before I enable it. Other than that, there's no side effects from using it here. :)\n\nRegards","created_on":"2011-03-21T20:48:27.024549+00:00","user":"ibuclaw","updated_on":"2011-03-21T20:51:54.943103+00:00","issue":153,"id":411292},{"content":"Folded in the calls to the correct mathlib functions.","created_on":"2011-03-27T17:56:25.217816+00:00","user":"ibuclaw","updated_on":null,"issue":153,"id":417661},{"content":"Fixed in <<changeset 467>>","created_on":"2011-02-19T12:11:57.093522+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":376967},{"content":"Thanks, I just want to report that It's the addtional msformat-c.o leaded this bug. It seems not need to do that.\r\n\r\nI just got rid of msformat-c.o, I finished the compiling successfully. However, I can't get the gdc.exe and gdmd. When running\r\n{{{\r\n$ make DESTDIR=\"\/build\/Mingw32\" install\r\n}}}\r\nI got this error message:\r\n{{{\r\nrm -f \/build\/Mingw32\/mingw\/bin\/gdc.exe\r\nrm -f \/build\/Mingw32\/mingw\/bin\/gdmd\r\n\/bin\/install -c gdc.exe \/build\/Mingw32\/mingw\/bin\/gdc.exe\r\n\/bin\/install: cannot stat `gdc.exe': No such file or directory\r\nmake[2]: *** [d.install-common] Error 1\r\nmake[2]: Leaving directory `\/home\/Administrator\/build\/gcc\/gcc'\r\nmake[1]: *** [install-gcc] Error 2\r\n}}}\r\n\r\nI'am using Mingw-GCC 4.5.2 + msys. I'll come back again after trying your new patch.","created_on":"2011-02-20T02:35:57.176113+00:00","user":null,"updated_on":null,"issue":151,"id":377429},{"content":"I can't get the gdc.exe yet after updating the sources to the newest. \r\nAll the building is OK. Here is my building step:\r\n{{{\r\ncd ~\/gcc-4.5.2\/\r\n.\/gcc\/d\/setup-gcc.sh -v2\r\nmkdir -p ..\/build\/gcc\r\ncd ..\/build\/gcc\r\n..\/..\/gcc-4.5.2\/configure --prefix=\"\/mingw\" \\\r\n    --enable-languages=d \\\r\n    --enable-sjlj-exceptions \\\r\n    --with-dwarf2\t\\\r\n    --disable-symvers \\\r\n    --disable-werror \\\r\n    --disable-win32-registry \\\r\n    --disable-nls \\\r\n    --enable-threads \\\r\n    --enable-version-specific-runtime-libs \\\r\n    --with-pkgversion=\"GDC r471:5e733844f91f  DMD 2.052\"\\\r\n    --with-bugurl=\"http:\/\/bitbucket.org\/goshawk\/gdc\/issues\" \\\r\n    --disable-bootstrap\r\n\r\nmake STAGE1_CFLAGS=\"-g3 -O0\" 2>&1 | tee build.log\r\nmake DESTDIR=\"\/build\/Mingw32\" install\r\n}}}\r\n\r\nThanks for helps.","created_on":"2011-02-20T04:00:52.024780+00:00","user":"heromyth","updated_on":null,"issue":151,"id":377478},{"content":"Would you have the build.log available for attaching?","created_on":"2011-02-20T11:27:31.203338+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":377635},{"content":"Sorry for my report. It's my mistake. I didn't set the '\/mingw' correctly. My Mingw is installed at E:\\MingW, so I should run \n{{{\nmount E:\\MingW \/mingw\n}}}\nto map the \/mingw to the real MingW directory.\n\nNow, I can continue to compile. Here my newst error log:\n\n{{{\n\/home\/Administrator\/build\/gcc\/.\/gcc\/gdc -B\/home\/Administrator\/build\/gcc\/.\/gcc\/ -L\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/winsup\/mingw -L\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/home\/Administrator\/gcc-4.5.2\/winsup\/mingw\/include -isystem \/home\/Administrator\/gcc-4.5.2\/winsup\/w32api\/include -B\/mingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/mingw\/i686-pc-mingw32\/include -isystem \/mingw\/i686-pc-mingw32\/sys-include -Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/gcc-4.5.2\/libphobos -I .\/i686-pc-mingw32  -fintfc-file=import\/core\/sys\/posix\/sys\/uio.di -fsyntax-only ..\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/sys\/posix\/sys\/uio.d\n\/home\/Administrator\/build\/gcc\/.\/gcc\/gdc -B\/home\/Administrator\/build\/gcc\/.\/gcc\/ -L\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/winsup\/mingw -L\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/home\/Administrator\/gcc-4.5.2\/winsup\/mingw\/include -isystem \/home\/Administrator\/gcc-4.5.2\/winsup\/w32api\/include -B\/mingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/mingw\/i686-pc-mingw32\/include -isystem \/mingw\/i686-pc-mingw32\/sys-include -Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/gcc-4.5.2\/libphobos -I .\/i686-pc-mingw32  -fintfc-file=import\/core\/sys\/posix\/sys\/un.di -fsyntax-only ..\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/sys\/posix\/sys\/un.d\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: import sa_family_t not found\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: alias core.sys.posix.sys.un.sa_family_t recursive alias declaration\nmake[3]: *** [import\/core\/sys\/posix\/sys\/un.di] Error 1\nmake[3]: Leaving directory `\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/libphobos'\nmake[2]: *** [all] Error 2\nmake[2]: Leaving directory `\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/libphobos'\nmake[1]: *** [all-target-libphobos] Error 2\nmake[1]: Leaving directory `\/home\/Administrator\/build\/gcc'\nmake: *** [all] Error 2\n\n}}}\n\nIt seems I should not compile the module for Posix(I'm on Windows).","created_on":"2011-02-22T05:59:49.106770+00:00","user":"heromyth","updated_on":"2011-02-22T06:00:58.520390+00:00","issue":151,"id":379944},{"content":"All interface files are generated regardless of platform. Saying that, Druntime have removed un.d in the 2.052 release, so I've synced and pushed in <<changeset 476>>\r\n\r\nRegards","created_on":"2011-02-22T22:07:31.730891+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":381027},{"content":"Right, I've managed to get a cross-compiler setup and working (will add to the existing wiki later). There's still a few hairy issues left that need sorting in Phobos.\r\n\r\nRegards","created_on":"2011-02-22T23:05:14.167448+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":381105},{"content":"For reference: <<issue 100>>","created_on":"2011-02-22T23:18:28.357902+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":381116},{"content":"Should now be fixed in <<changeset 477>>.\r\n\r\nRegards","created_on":"2011-02-23T01:05:52.084580+00:00","user":"ibuclaw","updated_on":null,"issue":151,"id":381198},{"content":"Thanks, Iain Buclaw.\r\nAll the building now is OK.","created_on":"2011-02-23T07:19:14.740376+00:00","user":"heromyth","updated_on":null,"issue":151,"id":381391},{"content":"Small teething issue that I was aware of. Evidently didn't get round to pushing all updates quick enough. :)\r\n\r\nSee <<changeset 470>>\r\n\r\nI've only tested D1, can you confirm D2 has been updated successfully too?\r\n\r\nRegards","created_on":"2011-02-19T17:53:02.567385+00:00","user":"ibuclaw","updated_on":null,"issue":154,"id":377143},{"content":null,"created_on":"2011-02-19T23:56:42.078785+00:00","user":"dsimcha","updated_on":null,"issue":154,"id":377355},{"content":"Yep, it works.","created_on":"2011-02-19T23:56:34.923560+00:00","user":"dsimcha","updated_on":null,"issue":154,"id":377354},{"content":"The D2 runtime uses the ANSI declaration and D1 uses the msvcrt version.  MinGW supports the msvcrt signature.\r\n\r\nI don't see any reason why {{{alias _vsnwprintf vswprintf}}} wouldn't work.  I'll look how MinGW supports msvcrt.  Microsoft has multiple msvcrt Dll's depending on the version of the runtime\/OS?  I imagine MinGW supports the base version for the best compatibility among platforms.  If that's the case, I see no reason to force GDC to use a newer platform.\r\n\r\n","created_on":"2011-04-22T22:05:04.894910+00:00","user":"venix1","updated_on":null,"issue":196,"id":451710},{"content":"OK, I'll word it straight: when I call vswprintf with ANSI signature as declared in wchar_.d, I get access violation.","created_on":"2011-04-24T21:37:54.769373+00:00","user":null,"updated_on":null,"issue":196,"id":453385},{"content":"That is because MinGW chose to use the MS signature for libmsvcrt.a, which is the default library linked.  Since this was a decision by MinGW, I feel the most appropriate solution is to alias _vsnwprintf to vswprintf.\r\n\r\nYou can try linking to an updated msvcrt library.  As of Visual Studio 2005, msvcrt supports the ANSI signature.\r\n\r\n{{{\r\nlibmsvcrt.a  <- Prior to VS2003.\r\nlibmsvcrtd.a\r\nlibmsvcr70.a   <- VS2003\r\nlibmsvcr70d.a  \r\nlibmsvcr71.a   \r\nlibmsvcr71d.a  \r\nlibmsvcr80.a   <- This is VS2005.\r\nlibmsvcr80d.a  \r\nlibmsvcr90.a  <- VS2008\r\nlibmsvcr90d.a\r\n}}}\r\n","created_on":"2011-04-25T00:29:25.759032+00:00","user":"venix1","updated_on":null,"issue":196,"id":453442},{"content":"This patch should make GDC match DMD usage of the functions.   It's currently untested.  After I test it, I'll apply it to the repository and close the issue unless there are objections.","created_on":"2011-04-27T02:57:23.212897+00:00","user":"venix1","updated_on":null,"issue":196,"id":456027},{"content":"Merged in <<changeset 556>>.\r\n\r\nTested against the following code.  Produced identical results to DMD.\r\n{{{\r\nimport core.stdc.wchar_;\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n\twchar[256] buf;\r\n\tauto c = vswprintf(buf.ptr, 256, \"Hello World!\", null);\r\n\tassert(c != -1);\r\n\twriteln(buf[0..c]);\r\n}\r\n}}}","created_on":"2011-04-29T01:52:10.426868+00:00","user":"venix1","updated_on":null,"issue":196,"id":458975},{"content":"There may be an simpler way with 4.5.2.  If you apply **pathfix.patch** and **make-rel-pref.patch** from the tdm-gcc sources.  Only two lines of code need modifying to allow relocatable gdc.  The initial test works for me, I want to try recompiling everything to be sure.\n\nGDC does support relocation, which may be broken with 4.5.2.  The method it uses is to compare **GCC_INCLUDE_DIR** with **D_PHOBOS_DIR**.  The reason I say it may be broken is because, on windows, **GCC_INCLUDE_DIR** is not defined when compiling **d-lang.cc**.\n\nThe issue with mingw is that **GCC_INCLUDE_DIR** contains **C:\/MinGW** for a root and **D_PHOBOS_DIR** contains **\/mingw**.  GDC uses a length comparison so on windows the length is always different and fails the test.  In previous versions I would edit **d-confdefs.h** and change the **\/mingw** to **c:\/mingw** and it would work.","created_on":"2011-03-03T18:36:04.966619+00:00","user":"venix1","updated_on":"2011-03-03T18:36:50.206421+00:00","issue":158,"id":391271},{"content":"My patch not only fixes the relocatation of GDC but also does these:\r\n{{{\r\n1) reorganize the codes for adding import path\r\n2) try to remove the repeated path\r\n3) try to slim a path like \r\n   \/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5.2 \r\ninto \r\n   \/mingw\/include\/d2\/4.5.2\r\n4) try to add some standard import dir which are relative to the executable file of gdc like \r\n    \"..\/include\/d2\/4.5.2\" and \"..\/include\/d2\/4.5.2\/i686-pc-mingw32\"\r\n}}}\r\n\r\nIt can't be assured that the comparison in the function of **prefixed_path** is always true, even if you change the **D_PHOBOS_DIR** from \/mingw to c:\/mingw in d-confdefs.h. For example, the Mingw with GDC has been installed into some sub-directory like **C:\/dirA\/dirB\/mingw**. \r\n","created_on":"2011-03-04T11:45:52.092398+00:00","user":"heromyth","updated_on":null,"issue":158,"id":391950},{"content":"I can't comment directly on any of the additional things your patch does.  However, I am curious if 4 would affect local relative imports such as \"..\/mymodule\".  Also couldn't 3 and 2 be done using GDC's current implementation and what is your rationale behind 1.  Looking at the patch you are replacing 40 lines of code with about 300.\n\nI based my response on the title of your post since I had some experience in that area and attempted to the same thing until I took a closer look at how GDC does it and why it worked on linux.\n\nIt can be assured that the comparison in the function is always true since both **D_PHOBOS_DIR** and **GCC_INCLUDE_DIR** are defined based upon configuration option **--prefix**.  I used **\/mingw** as an example since that is generally what I set it as.  **prefixed_path** compares the length of those two strings based upon that fact, which is why it is necessary to change **\/mingw** to **c:\/mingw**.  If the comparison is true, it will concat **iprefix** to the unique portion of **D_PHOBOS_DIR**.  **iprefix** is set to the directory that gdc executed from at runtime.\n\n**GCC_INCLUDE_DIR**\n{{{ \/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/include}}}\n\n**D_PHOBOS_DIR**\n{{{\/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d\/4.5.2}}}\n\n**iprefix**\n{{{c:\\crossdev\\mingw32\\mingw\\bin\\..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/}}}\n\nPath after prefixed_path is called.\n\n{{{c:\\crossdev\\mingw32\\mingw\\bin\\..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d\/4.5.2}}}\n\nReduced\n{{{c:\\crossdev\\mingw32\\mingw\\include\/d\/4.5.2}}}\n\nGCC_INCLUDE_DIR lacks the **C:\/** I mentioned in my previous post because TDM-GCC released a patch for the 4.5 series that changed that behavior. \n\n","created_on":"2011-03-04T16:56:33.643245+00:00","user":"venix1","updated_on":"2011-03-04T16:57:27.112763+00:00","issue":158,"id":392263},{"content":"To clarify even more, the comparison is **strncmp**.  Using the length of **GCC_INCLUDE_DIR** - 8.  The minus 8 gives us the root, by removing **\/include**, that GDC can use to get the actual include path.","created_on":"2011-03-04T17:13:54.155589+00:00","user":"venix1","updated_on":null,"issue":158,"id":392284},{"content":"The rationale behind 1 is that the import path should be added by various way like standard relative path, environment path, predefined path such as D_PHOBOS_DIR.\n\nOn Win32 I commented the prefixed_path, because I can't find a better way to assure the comparison is always true. You are right, if GCC_INCLUDE_DIR is predefined. By the way, can D_PHOBOS_DIR  be directly defined as relative path.\n\nAs for handling the relative path in make_absolute in my patch,  I return NULL to indicate that I can't handle it (It seems not necessary to do a duplication.). Hope the slimmed path could speed up the path search a little. I'm not sure if the GDC can do this.\n\nHere are some examples the make_absolute can handle:\n{{{\nchar* str = \"\/abc\/..\/gcc-4.5.2\/libphobos\";        \/\/ ok\nchar* str = \"\/abc\/..\/..\/gcc-4.5.2\/libphobos\";     \/\/ error\nchar* str = \"\/..\/gcc-4.5.2\/libphobos\";            \/\/ error\nchar* str = \"D:\/..\/gcc-4.5.2\/libphobos\";          \/\/ error\nchar* str = \"D:\/D\/..\/gcc-4.5.2\/libphobos\";        \/\/ ok\nchar* str = \"A\/..\/gcc-4.5.2\/libphobos\";           \/\/ ok\nchar* str = \"aa\/bb\/cc\/..\/..\/gcc-4.5.2\/libphobos\"; \/\/ ok\n}}}\n\nThanks for your watching my patch.","created_on":"2011-03-05T02:58:16.676216+00:00","user":"heromyth","updated_on":"2011-03-05T03:07:43.713604+00:00","issue":158,"id":392670},{"content":"Where did you get the TDM-GCC patch files for 4.5.2? The latest ones I can find are for 4.5.1: http:\/\/sourceforge.net\/projects\/tdm-gcc\/files\/Sources\/TDM%20Sources\/","created_on":"2011-03-05T22:03:35.600965+00:00","user":"Andrej08","updated_on":null,"issue":158,"id":393280},{"content":"I used the 4.5.1 patch files.  I've only applied the two I mentioned.  However they applied without issues.","created_on":"2011-03-05T22:28:38.585103+00:00","user":"venix1","updated_on":"2011-03-05T22:30:34.914968+00:00","issue":158,"id":393295},{"content":"I'd like to get a clarification on what you mean with standard relative path.  To me, I've always thought that to be relative to where the compiler was executed.  You state relative to the location of the binary file.  I'm not sure those can be differentiated using the -I option.\n\nEnvironment paths would be nice but I've only ever seen it used with makefiles which manually handle them.  Still should be trivial to implement so I see no reason to oppose this.\n\nAs for slimming paths,  I get the impression that GCC uses lots of unslimmed paths.  Just create a dummy file with a main function and do **gcc main.c -v** and see how many paths contain dots.  However it should be fairly trivial to add that feature after loading all the imports.  Just iterate through them all and try to convert.  Whether or not that could speed of path searching is something you would have to benchmark.  I've heard an argument similar to that when dealing with WAF and my first thought was the actual compiling of code would make any sort of gains or penalties insignificant.  Another thing about the way D imports work, is that the last one inputted is the first one searched. So **-I myimports\/** is searched before the default import path.\n\nHaving **D_PHOBOS_DIR** be directly defined as a relative path, I imagine that could be done.  I have no idea what would break in the process or even how it's determined.  I do know it's current form is required by **prefixed_path** to convert **GCC_INCLUDE_DIR** into a base path to **gcc**.  **GCC_INCLUDE_DIR** actually refers to **${prefix}\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/include**.\n\nIt's good to see more people take an interest in GDC especially on Windows.\n\nIf you want to try adapting some of your changes to use what GDC already has in place that would be great.  I can't see a reason to replace a system that works, even if it's not well documented as to why it works(that can always be fixed).  It would also be useful if you could separate your features into different patches.","created_on":"2011-03-05T22:29:42.038134+00:00","user":"venix1","updated_on":"2011-03-05T22:31:32.611886+00:00","issue":158,"id":393297},{"content":"These operations:\r\n{{{\r\nstatic void register_imports_chains ();\r\nstatic void add_import_path (const char *, bool verbose=false);\r\nstatic void add_env_var_paths (const char *, bool verbose=false);\r\nstatic void add_standard_paths (bool verbose=false);\r\nstatic void free_path (char *path, int reason, bool verbose=false);\r\n}}}\r\nare based on those in GCC' incpath.c, however, has been simplied for GDC.\r\n\r\nThe make_absolute is my own, and can be commented out safely.","created_on":"2011-03-06T14:06:33.272473+00:00","user":"heromyth","updated_on":null,"issue":158,"id":393758},{"content":"Iain recently updated the prefixed_path code.  So I've tweaked your patch for that revision(<<changeset 486>>) and to use gdc's method of path prefixing.  This allows the removal of all the {{{#ifdef WIN32}}}'s.\n\nFor reference purposes, a handy way to disable the changes would be to disable the checks in add_import_path.","created_on":"2011-03-12T06:49:50.833582+00:00","user":"venix1","updated_on":"2011-03-12T06:56:53.038807+00:00","issue":158,"id":400804},{"content":"Applied to <<changeset 533>>","created_on":"2011-04-11T21:17:24.530529+00:00","user":"venix1","updated_on":null,"issue":158,"id":436517},{"content":"I can't build with --enable-languages=c++ because of some configure bug in libstdc++\r\n\r\nWith --enable-languages=c,d - libphobos won't build because \"C compiler cannot create executables\".\r\n\r\nI'll see if I can get gdb (or some other debugger) installed to see what's going on.","created_on":"2010-07-30T14:27:21.527726+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":223632},{"content":"Oh that is nice, found the problem. Bad linker apparently:\r\n\r\n{{{\r\n\"c:\\mingw32\\mingw32\\bin\\ld.exe: crt2.o: No such file: No such file or directory\"\r\n}}}\r\n\r\nI'll look into it... other than that, there is no access violation errors when trying to run gdc\/cc1d. So I'll give you a +1 to this guide on that note. :-)","created_on":"2010-07-30T15:15:34.547820+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":223659},{"content":"{{{\r\n\"c:\\mingw32\\mingw32\\bin\\ld.exe: crt2.o: No such file: No such file or directory\"\r\n}}}\r\n\r\nApplying the patches from [[http:\/\/sourceforge.net\/downloads\/tdm-gcc\/Sources\/TDM%20Sources\/Previous\/4.3.3-tdm-1\/gcc-4.3.3-tdm-1-srcbase.zip\/|TDM-GCC 4.3.3 sources]]. will fix the linking issue and the buildsys.patch may likely fix the libstdc++ issue.\r\n * [buildsys.patch] Minor build system hacks for Cygwin and mSYS\r\n * [ehstatic.patch] Allow exceptions from DLLs without shared GCC libraries\r\n * [headerpath.patch] Correctly detect backslashes as path separators in include\r\n     paths\r\n * [make-rel-pref.patch] A patch to fix make_relative_prefix() semantics and a\r\n     little-encountered relocation bug\r\n * [make-temp-file.patch] A patch to fix make_temp_file() semantics and a\r\n     little-encountered environment bug\r\n\r\nHowever I haven't tried it with c++ yet, I'll do that now and see what happens.","created_on":"2010-07-30T20:57:06.664640+00:00","user":"venix1","updated_on":null,"issue":49,"id":223788},{"content":"Oh, OK. I only applied the pex-win32 patch.\r\n\r\nAs for the C++ issue, it's fairly common as far as I know, and here is a fairly descriptive summary of it, taken from a mailing list:\r\n\r\n{{{\r\n\r\nTarget libraries like libstdc++ need to know a lot of details about the\r\nsystem they are being configured for -- what C library functions and\r\ncapabilities are present, and so on.  The library can get this\r\ninformation either by performing configure tests that link test\r\nprograms, or by having the needed answers somehow supplied in another\r\nform.\r\n\r\nThe problem is that with embedded bare-metal newlib targets (i.e.\r\n*-elf), the amount of functionality that the target has depends\r\nsignificantly on the board support package (BSP) which typically\r\nconsists of things like startup code (crt*.o), linker scripts, and low\r\nlevel syscall implementations (or stubs thereof.)  Since these are\r\nthings outside the scope of gcc and newlib, it means without some\r\nexternal source (be it from the hardware vendor or using generic stubs\r\nfrom libgloss) that a bare metal gcc target cannot link.  And that is\r\nwhat the GCC_NO_EXECUTABLES error means: some configure script is trying\r\nto do a link test but linking was earlier determined to be impossible\r\ndue to no linker script (or crt*.o or whatever) being present.\r\n\r\n}}}\r\n\r\nIn other words, it is all probably linked together to be the same issue. :-)\r\n\r\nRegards,\r\nIain","created_on":"2010-07-30T23:44:24.777518+00:00","user":null,"updated_on":null,"issue":49,"id":223820},{"content":"Even with those 5 extra patches, still no cigar. I think it's just my mSYS\/TDM environment that's broken. I'll try a vanilla mSYS\/MinGW later, see if that rectifies it.","created_on":"2010-07-31T09:15:09.156412+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":223901},{"content":"Make sure that **\/mingw** in msys points to **C:\\mingw**.  It allow windows based programs to resolve path names given by msys.  The mapping will be defined in **\/etc\/fstab** inside the msys folder.\n\nI thought one of the patches fixed it, but apparently I didn't clean up my system well enough and it only appeared fixed.  Without that mapping I run into the crt2.o link error.  Perhaps a **-with-sysroot=** when configuring would fix it without the identity mount.","created_on":"2010-08-01T05:42:21.598596+00:00","user":"venix1","updated_on":"2010-08-01T05:48:14.174159+00:00","issue":49,"id":224175},{"content":"Just for clarification, all I've got to do is change\r\n\r\n{{{\r\n\/mingw   c:\/mingw\r\n}}}\r\n\r\nfor\r\n\r\n{{{\r\n\/mingw   c:\\mingw\r\n}}}\r\n\r\n\r\nRight?","created_on":"2010-08-01T08:50:30.093816+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":224193},{"content":"**\/** or **\\** doesn't matter.  Although order is important.\r\n\r\nThis is how my fstab looks.  \r\n{{{\r\nc:\/MinGW \/mingw\r\n}}}\r\n\r\nThis is what causes some problems.\r\n{{{\r\nc:\/MinGW32 \/mingw\r\n}}}\r\n","created_on":"2010-08-01T14:59:59.670802+00:00","user":"venix1","updated_on":null,"issue":49,"id":224286},{"content":"Hi, I tried to follow the build instructions and I found a few problems:\r\nI tried to compile a D1 compiler with gdc rev 164 and gcc 4.3.5.\r\n\r\nI wanted to do a in gcc-tree build of gmp and mpfr, because I thought it would be easier. But a bug in older gccs prevents this with recent versions of mpfr, see http:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=44455\r\nmaybe that information should be added to the wiki. \r\n\r\nIn libphobos\/thread.d:521 '**T**hread_attach' should be '**t**hread_attach'\r\n\r\ngdc then built fine.\r\n\r\nI also could not find w32api 3.15 and binutils 2.20.54 on the mentioned page.\r\nThe latest version of w32api I saw on that page was 3.14, the latest version of binutils binutils-2.20.51 .\r\n\r\nWhen I tried to compile a simple hello world with gdc, I faced lots of linker errors. \r\nAll errors were undefined references to \"_imp__(name)\", for example \"_imp__VirtualAlloc\"\r\nI used a different DESTDIR in the \"make install\" command for gdc, maybe it could be caused by that. I'll try compiling gdc with exactly the directory layout of the wiki page some time later this week.","created_on":"2010-08-01T18:59:04.838208+00:00","user":null,"updated_on":null,"issue":49,"id":224359},{"content":"Wiki has been updated with your suggestions.\r\n\r\nThe _imp references may be related to <<issue 47>> where GDC isn't mangling stdcall symbols.  I recommend using ibuclaw's solution.\r\n\r\nI'll look into the libphobos\/thread.d problem.  That may have been brought about by a more recent changeset.","created_on":"2010-08-01T21:30:37.063872+00:00","user":"venix1","updated_on":null,"issue":49,"id":224408},{"content":"It's working with <<changeset 167>> D2.020.","created_on":"2010-08-03T23:51:04.904755+00:00","user":"trass3r","updated_on":null,"issue":49,"id":225440},{"content":"Got Tango-0.99.9 compiled using <<changeset r170>>.  I'll update the wiki shortly, also included is the patch of the changes made.  Some of the changes are required due to a template bug where GDC will not implicitly cast template function argument types.","created_on":"2010-08-12T22:30:21.923368+00:00","user":"venix1","updated_on":null,"issue":49,"id":229350},{"content":"I think that patch might be better submitted to Tango, since we can't really change this in our source. (Except for fixing the template bug.)","created_on":"2010-08-14T00:33:26.711586+00:00","user":"michaelp","updated_on":null,"issue":49,"id":229754},{"content":"Okay, the template bug is fixed. See <<changeset 888e3cc8a31d>>.","created_on":"2010-08-14T00:51:25.287680+00:00","user":"michaelp","updated_on":null,"issue":49,"id":229760},{"content":"OK it took a little longer than a week, but I finally recompiled gdc (I made the anonymous post above).\r\nThis time I compiled r185, gcc 4.3.5 with D1 1.062 and linking now works. I've only tested a simple hello world, but that works fine now.\r\n\r\nThe libphobos\/thread.d:521 'Thread_attach' vs 'thread_attach' case issue is still there (and it looks like it's also present in the current tip)\r\n\r\nOne thing I noticed is that cc1d and cc1 in libexec are ~ 40MB big. I think this is because of debugging info, after running strip over these files they're now only ~7MB. Are those files intentionally not stripped?\r\n\r\nIf anyone is interested in the binaries:\r\nhttp:\/\/omploader.org\/vNThsOQ\/gdc-1.062_r185_349f85192e52_4.3.5_full.7z\r\n(already contains binutils 2.20.51, mingw-runtime 3.18 and w32api 3.14)\r\n\r\nBTW in the future it might be good to release binaries for windows.","created_on":"2010-08-14T13:00:56.775766+00:00","user":"jpf","updated_on":null,"issue":49,"id":229842},{"content":"new link: http:\/\/www.mediafire.com\/file\/6s321ltg57r3e58\/gdc-1.062_r185_349f85192e52_4.3.5_full.7z\r\n\r\nbecause:\r\n\"Currently Omploader's bank balance is $-1251.36, which means Omploader will be going dark on August 15, 2010, unless some of this cost is recovered.\"","created_on":"2010-08-14T13:30:37.902344+00:00","user":"jpf","updated_on":null,"issue":49,"id":229845},{"content":"Fixed the thread_attach problem in <<changeset de30c34ef79d>>.\r\n\r\nAnd the large binaries are probably due to the debug info. If they were stripped of this, we would not be able to debug problems with gdb using the binaries.\r\n\r\nWhen there is an official release, binaries for Windows and hopefully Mac will be made.","created_on":"2010-08-14T16:58:12.945762+00:00","user":"michaelp","updated_on":null,"issue":49,"id":229905},{"content":"w32api 3.15 is out.","created_on":"2010-08-29T04:21:15.875685+00:00","user":null,"updated_on":null,"issue":49,"id":235917},{"content":"Nice work!","created_on":"2010-10-02T14:14:52.028072+00:00","user":null,"updated_on":null,"issue":49,"id":259043},{"content":"GDC r477:978bb5bc82cf can be build successfully with MingW 4.5.2 + MSYS.","created_on":"2011-02-23T08:02:13.081225+00:00","user":"heromyth","updated_on":null,"issue":49,"id":381424},{"content":"GDC r477 can't link the HelloWorld.d. Here are my error logs (more detail in the attachment):\r\n{{{\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x71): undefined reference to `_fputc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x103): undefined reference to `_fputc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x156): undefined reference to `_fputwc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x180): undefined reference to `_fputwc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x1a0): undefined reference to `_fputwc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x5e): undefined reference to `_fputc_nlock'\r\nZ:\\TEMP\\ccc4x2Lm.o:test.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x76): undefined reference to `_fputwc_nlock'\r\nd:\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(object_.o): In function `d_monitorenter':\r\nE:\\msys\\home\\Administrator\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libphobos\/object_.d:2370: undefined reference to `_d_monitor_create'\r\nd:\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(object_.o): In function `D6object12setSameMutexFOC6ObjectOC6ObjectZv':\r\nE:\\msys\\home\\Administrator\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libphobos\/object_.d:2312: undefined reference to `_d_monitor_create'\r\nd:\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(object_.o): In function `d_monitordelete':\r\n\r\n}}}","created_on":"2011-02-23T12:01:30.942703+00:00","user":"heromyth","updated_on":null,"issue":49,"id":381637},{"content":"i have the save problem","created_on":"2011-02-26T12:55:20.735644+00:00","user":null,"updated_on":null,"issue":49,"id":385024},{"content":"GCC 4.5.2 and GDC(D1) 483:4a268e8f2389 successfully built and a simple test program was compiled.  Instructions were followed with minor changes to versions and the inclusion of mpc-0.9.\r\n\r\nSee <<issue 158>> for tips on making it relocatable.\r\n{{{\r\n..\/..\/gmp-5.0.1\/configure --prefix=\"\/crossdev\/gmp-5.0.1\" --build=mingw32 --enable-fat --enable-static  CFLAGS=\"-O2 -mtune=generic\"\r\n\r\n\r\n..\/..\/mpfr-3.0.0\/configure --prefix=\"\/crossdev\/mpfr-3.0.0\" --build=mingw32 --with-gmp=\"\/crossdev\/gmp-5.0.1\" CFLAGS=\"-O2 -mtune=generic\"\r\n\r\n\r\n..\/..\/mpc-0.9\/configure --prefix=\"\/crossdev\/mpc-0.9\" --with-gmp=\"\/crossdev\/gmp-5.0.1\" --with-mpfr=\"\/crossdev\/mpfr-3.0.0\" --build=mingw32 CFLAGS=\"-O2 -m32\" LDFLAGS=\"-m32 -s\"\r\n\r\n\r\n..\/..\/gcc-4.5.2\/configure --prefix=\"\/mingw\" \\\r\n    --enable-languages=d \\\r\n    --enable-sjlj-exceptions \\\r\n    --disable-symvers \\\r\n    --disable-werror \\\r\n    --disable-win32-registry \\\r\n    --disable-nls \\\r\n    --enable-threads \\\r\n    --enable-version-specific-runtime-libs \\\r\n    --with-gmp=\"\/crossdev\/gmp-5.0.1\" --with-mpfr=\"\/crossdev\/mpfr-3.0.0\" \\\r\n    --with-mpc=\"\/crossdev\/mpc-0.9\" \\\r\n    --with-pkgversion=\"GDC 483:4a268e8f2389  DMD 1.067\"\\\r\n    --with-bugurl=\"http:\/\/bitbucket.org\/goshawk\/gdc\/issues\" \\\r\n    --disable-bootstrap\r\n    \r\n    \r\nmake STAGE1_CFLAGS=\"-g3 -O0\" 2>&1 | tee build.log\r\n\r\n\r\nmake DESTDIR=\"\/crossdev\/Mingw32\" install\r\n}}}\r\n\r\n","created_on":"2011-03-03T18:50:25.804893+00:00","user":"venix1","updated_on":null,"issue":49,"id":391292},{"content":"Am I missing some important step? I keep getting this error when compiling a simple module:\r\n\r\n* object.d: Error: module object is in file 'object.d' which cannot be read\r\n\r\n* import path[0] = \/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5\r\n.2\/i686-pc-mingw32\r\n\r\n* import path[1] = \/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5\r\n.2\r\n\r\nMy \/mingw is mounted as:\r\n**C:\\MinGW\\msys\\1.0\\crossdev\\Mingw32\\mingw on \/mingw type user (binmode)**\r\n\r\nAnd there's **object.di** in exactly that import directory: **\/mingw\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5.2**\r\n\r\nShouldn't it be looking for the .di files, not .d files for Phobos? Am I missing an important post-build step?","created_on":"2011-03-05T21:07:30.794729+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393238},{"content":"Edit: Odd, if I add the include manually, then it finds object.di:\r\n* gdc test.d -I\/mingw\/include\/d2\/4.5.2\r\n\r\nHowever now I get a stackfull of errors:\r\n\r\n$ gdc test.d -I\/mingw\/include\/d2\/4.5.2\r\n\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(object_.o): In function `d_monitorenter':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/object_.d:2370: undefined reference to `_d_monitor_create'\r\n\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(object_.o): In function `D6object12setSameMutexFOC6ObjectOC6ObjectZv':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/object_.d:2312: undefined reference to `_d_monitor_create'\r\n\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(object_.o): In function `d_monitordelete':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/object_.d:2348: undefined reference to `_d_monitor_destroy'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(object_.o): In function `d_monitorenter':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/object_.d:2378: undefined reference to `_d_monitor_lock'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(object_.o): In function `d_monitorexit':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/object_.d:2391: undefined reference to `_d_monitor_unlock'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(dmain2.o): In function `D2rt6dmain215_d_criticalInitFZv':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/rt\/dmain2.d:291: undefined reference to `_STI_monitor_staticctor'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(dmain2.o): In function `d_run_main':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/rt\/dmain2.d:427: undefined reference to `_STI_monitor_staticctor'\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/rt\/dmain2.d:565: undefined reference to `_STD_monitor_staticdtor'\r\n\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/lib\r\ngphobos2.a(dmain2.o): In function `D2rt6dmain215_d_criticalTermFZv':\r\n\r\nC:\\MinGW\\msys\\1.0\\gdcbuild\\build\\gcc\\i686-pc-mingw32\\libphobos\/..\/..\/..\/..\/gcc-4.5.2\/libph\r\nobos\/rt\/dmain2.d:338: undefined reference to `_STD_monitor_staticdtor'\r\n\r\nAlso, bitbucket's insistence on eating newlines sucks. :)","created_on":"2011-03-05T21:10:37.767227+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393240},{"content":"Well I've exported all symbol names from libgphobos.a (using **objconv -ds libgphobos2.a > libgphobos2_symbols.txt**, btw), and those symbols do seem to be missing. \n\nThere are symbols like  __d_monitordelete, __d_monitorenter, __d_monitorexit, but there's no **_d_monitor_create** or any other similarly named symbol. So I'm guessing it's not an error on my side?","created_on":"2011-03-05T21:26:06.090774+00:00","user":"Andrej08","updated_on":"2011-03-05T21:27:01.735234+00:00","issue":49,"id":393250},{"content":"Everything you've described are symptoms of a non relocatable GDC.  GDC has a default place to look for imports and libraries based on **--prefix** during configuration.  See my comment on issue #158 for a solution.\r\n\r\nI haven't tried D2, all my code is D1 and I use tango, so I'm not sure about the link errors.  A previous post had the same problems.  \r\n\r\nI use the code tag to avoid issues with eating newlines.  Also makes the errors easier to read.\r\n\r\nAs for mounting **\/mingw** to **C:\/MinGW\/msys\/1.0 ...**.  You need to use an identity mount, **C:\/Mingw** to **\/mingw** if you don't have a relocatable GDC.\r\n\r\nI'll try to compile D2 and see what I come up with.\r\n","created_on":"2011-03-05T21:51:57.902073+00:00","user":"venix1","updated_on":null,"issue":49,"id":393273},{"content":"Slightly OT: Does anyone know why .\/configure takes so long to finish on Windows? I don't have any antivirus apps running. It takes seconds on Linux, while configuring GCC takes well over a few minutes on Windows.\n\nEdit: Actually, it seems like an antivirus app was active even though I've disabled it. Only uninstalling it makes it go away. How silly..","created_on":"2011-03-05T23:16:03.508770+00:00","user":"Andrej08","updated_on":"2011-03-05T23:28:07.284816+00:00","issue":49,"id":393326},{"content":"I believe there's a lot of translation going on under the hood with both cygwin and msys, they share the same posix abstraction layer, which delays the execution slightly so I doubt it will ever be as fast as linux.\n\nI use Comodo Internet Security which seemingly lets me disable the antivirus.  .\/configure is much faster with it off.  It still takes minutes just not as many.\n\nEdit:  Microsoft has an official layer or did with the Business version of windows.  I have no idea about legal issues that may come up from using it with GPL code.","created_on":"2011-03-05T23:36:13.057338+00:00","user":"venix1","updated_on":"2011-03-05T23:37:37.726999+00:00","issue":49,"id":393351},{"content":"Ok, I've recompiled GDC with your patch from issue #158, imports work great now. However, I still get the errors for missing symbols in libgphobos2.a.\r\n\r\nCompiled with GCC 4.5.2 sources, with the two TDM-GCC 4.5.1 patch files.","created_on":"2011-03-05T23:56:21.064587+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393358},{"content":"All the symbols you mention are defined in **druntime\/rt\/monitor.c** can you check for a libdruntime.a(or something similar) or see if libgphobos.a has a monitor.o file.\n\nRun nm on Mingw's lib folder.\n{{{\nnm -A c:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/lib\/* | grep _d_monitor_create\n}}}\n\nSearch libgphobos for monitor.o\n{{{\nar t libgphobos.a | grep monitor.o\n}}}\n\nGDC is almost done building, I'll be able to inspect it more thoroughly when it is.\n\n","created_on":"2011-03-06T00:16:50.672700+00:00","user":"venix1","updated_on":"2011-03-06T00:28:09.494994+00:00","issue":49,"id":393381},{"content":"Seems that the druntime folk commented out the code ( see here: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=4332#c9 )\r\n\r\nBrad reported the D implementations of monitor.c and critical.c cause runtime problems when compiled with DMD, so I guess you can blame him. :~)\r\n\r\nThere's also missing _tlsstart, _tlsend and _tls_index symbols; the DMD compiler chucks them in unwittingly. I think I recall Daniel mentioning that MinGW\/Windows has __tls_start__ and __tls_end__ to mark start and end of the thread local sections, when I looked it seemed not to be the case (target platform uses an emulated tls implementation).\r\n\r\nRegards","created_on":"2011-03-06T00:34:39.013116+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":393390},{"content":"Neither libgphobos.a nor libgdruntime.a have **monitor.o**, I've checked this with **objconv -dh file**. However they both have **monitor_.o**\r\n\r\nnm returns this:\r\n{{{\r\n$ nm -A \/crossdev\/Mingw32\/mingw\/lib\/* | grep _d_monitor_create\r\nC:\/MinGW\/msys\/1.0\/crossdev\/Mingw32\/mingw\/lib\/libgdruntime.a:object_.o:         U __d_monitor_create\r\nC:\/MinGW\/msys\/1.0\/crossdev\/Mingw32\/mingw\/lib\/libgphobos2.a:object_.o:         U __d_monitor_create\r\n}}}\r\n\r\nThese two return void:\r\n{{{\r\nar t libgphobos.a | grep monitor.o\r\nar t libgdruntime.a | grep monitor.o\r\n}}}\r\n\r\nHowever both of these have a **monitor_.o** file, as noted above (**ar t** confirms it).","created_on":"2011-03-06T00:40:30.009056+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393397},{"content":"I'm almost tempted to rename monitor_.d to monitor.d in gdc\/d\/runtime, and see if recompiling GDC would work. \n\nDo you think that would do the trick? :)\n\nEdit: Actually that probably won't fix anything as the symbols that are missing aren't located in that object file. Silly me.","created_on":"2011-03-06T00:56:50.336559+00:00","user":"Andrej08","updated_on":"2011-03-06T00:58:38.824193+00:00","issue":49,"id":393408},{"content":"I just gave Interix a try, this is supposed to be Microsoft's version of cygwin. It can't compile GCC, configure says \"C compiler cannot create executables\". They've bundled gcc 3.3 with this compatibility layer. Talk about being outdated, lol.","created_on":"2011-03-06T01:20:17.986006+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393419},{"content":"If I understand the problem, monitor.c was converted to monitor_.d.  Something was wrong with the Win32 code and so win32 had been converted back to using monitor.c.\r\n\r\n* Ian also mentioned in the bug report that monitor.d compiles and works with GDC and D2.\r\n* Does D1 and D2 share druntime?  I know this wasn't the case months ago.\r\n* If they share druntime, does D1 still use monitor.c or does it use monitor_.d.\r\n\r\nAnd I'll try to refresh my memory, but I think I encountered this a while ago when I was getting MinGW & GDC up to date.  I may have posted it on one of the bug reports I made.\r\n\r\nDo you remember what the topic was where I talked about tls_start and tls_end?","created_on":"2011-03-06T01:21:43.943250+00:00","user":"venix1","updated_on":null,"issue":49,"id":393421},{"content":"Oh and I've made an updated MinGW build guide here (modified from the original one on bitbucket):\r\nhttps:\/\/gist.github.com\/856901\r\n\r\nIt takes into account your patch file and I've added some links on where to find the runtime libraries, how to use patch, etc. Someone was having problems with the existing MinGW instructions and asked about it on stackoverflow, so I made an updated guide.","created_on":"2011-03-06T01:27:04.816931+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393423},{"content":"@venix1: You talk about tls here: https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/115\/weird-memory-corruption-error-w-tls-gc#comment-305471","created_on":"2011-03-06T01:30:51.628330+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393425},{"content":"{{{\r\n#!d\r\n        else version( none\/*MinGW*\/ )\r\n        {\r\n            extern (C)\r\n            {\r\n                extern __gshared int __tls_start__;\r\n                extern __gshared int __tls_end__;                \r\n                \r\n                alias __tls_start__ _tlsstart;\r\n                alias __tls_end__ _tlsend;\r\n            }\r\n        }\r\n}}}\r\n\r\nThat was the tls test I did.  I think I remember it might have worked.  I remember disagreeing with Iain's response although I had\/have no way to disprove what he said.  Except that inspecting the symbols it always appeared first and last in any thread segments.  I also ran the test case against that fix and it worked fine.\r\n\r\nI'm not sure what relevance this has on the actual issue.  But I do have GDC compiled with support for D2 now.  So  I can look into it more.","created_on":"2011-03-06T02:05:13.436934+00:00","user":"venix1","updated_on":null,"issue":49,"id":393452},{"content":"I'll give a try with uncommenting those lines. \r\n\r\nIan has informed me in another issue that stdio has yet to be implemented (IIRC).","created_on":"2011-03-06T02:31:00.480556+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393464},{"content":"I just uncommented the lines in monitor_.d and recompiled.  Everything links and runs fine.  Perhaps wrapping it in **version(MinGW)** would allow it's inclusion in druntime.\n\nI do have undefined references using **std.stdio**.  \n{{{\n__fhnd_info\n_fputwc_nlock\n__fp_unlock\n__fp_lock\n_fputwc_nlock\n}}}\nI believe I've had to solve those problems before in #100.  Seems the problem is that the mingw.patch never got applied.  Which I used for the version condition.\n\nEdit: I've looked over my mingw patch that adds the version symbol and D2 support.  It probably needs to be rewritten.\n\n\n\n\n","created_on":"2011-03-06T02:26:58.132086+00:00","user":"venix1","updated_on":"2011-03-06T02:33:47.826392+00:00","issue":49,"id":393457},{"content":"I had it working 3 months ago, but I wasn't truly happy with the way I did it.  #100 has our discussion on that.","created_on":"2011-03-06T02:39:14.877427+00:00","user":"venix1","updated_on":null,"issue":49,"id":393467},{"content":"Argh crap. Did I have to run **.\/gcc\/d\/setup-gcc.sh --d-language-version=2** again after uncommenting those lines? Because I didn't, and I get the same errors as before.","created_on":"2011-03-06T03:01:07.630384+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393473},{"content":"Did you uncomment the right copy of the file?  Windows can't symlink the **phobos2** directory to **gcc\/phobos**.  I cheated and just compiled **monitor_.d** with my test file so I didn't have to worry about that.\r\n\r\nIf **.\/gcc\/d\/setup-gcc.sh --d-language-version=2** will recopy that directory then yes or you could just copy it yourself.","created_on":"2011-03-06T03:33:22.406011+00:00","user":"venix1","updated_on":null,"issue":49,"id":393482},{"content":"Yes, I had to use setup-gcc.sh again. Compiling a test project works now. Yay!","created_on":"2011-03-06T04:15:33.004909+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393491},{"content":"<<issue 160>> has a patch for stdio.d that needs some testing.","created_on":"2011-03-06T04:15:50.828396+00:00","user":"venix1","updated_on":null,"issue":49,"id":393492},{"content":"I'm compiling it right now, I'll give stdio a test-drive soon. One more question: Is GDC runnable only from within Msys when compiled this way? I can't seem to run it from a native command-line, it errors out. ","created_on":"2011-03-06T04:32:53.336597+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393498},{"content":"What errors? I have no issue running it from the normal commandline. ","created_on":"2011-03-06T04:35:19.409215+00:00","user":"venix1","updated_on":null,"issue":49,"id":393501},{"content":"How would I recompile ligphobos2.a without recompiling GDC? I'd like to try out dscimcha's new std.parallelism module and see how it compares to GDC compares to DMD.","created_on":"2011-03-06T15:31:58.482886+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393820},{"content":"Clean\r\n{{{\r\nmake clean-target-libphobos\r\n}}}\r\n\r\nMake your alterations (update Makefile.am, if you have autotools installed, Makefile.in should be regenerated)\r\n\r\nThen rebuild\r\n{{{\r\nmake all-target-libphobos\r\n}}}\r\n\r\nAnd installation (iirc)\r\n{{{\r\nmake install-target-libphobos\r\n}}}","created_on":"2011-03-06T15:37:50.039242+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":393824},{"content":"It errored out with some \"CreateProcess\" message. But adding GDC to the PATH fixes this. I can invoke it from command-line now without problems.","created_on":"2011-03-06T14:31:59.154331+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393779},{"content":"It wouldn't compile parallelism until I did a **..\/..\/gcc-4.5.2\/configure** before doing **make all-target-libphobos**.\n\nBut then I got errors:\n\n{{{\n\/gdcbuild\/build\/gcc\/.\/gcc\/gdc -B\/gdcbuild\/build\/gcc\/.\/gcc\/ -L\/gdcbuild\/build\/gcc\/i686-pc-m\ningw32\/winsup\/mingw -L\/gdcbuild\/build\/gcc\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/gdcb\nuild\/gcc-4.5.2\/winsup\/mingw\/include -isystem \/gdcbuild\/gcc-4.5.2\/winsup\/w32api\/include -B\/\nmingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/mingw\/i686-pc-mingw32\/i\nnclude -isystem \/mingw\/i686-pc-mingw32\/sys-include -o std\/parallelism.o -Wall -g -frelease\n -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/gcc-4.5.2\/libphobos -I .\/i686-pc-mingw32\n  -c ..\/..\/..\/..\/gcc-4.5.2\/libphobos\/std\/parallelism.d\n\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\\core\\atomic.d:117: Error: undefined identifier msync.raw\nmake[2]: *** [std\/parallelism.o] Error 1\n}}}","created_on":"2011-03-06T17:32:14.257746+00:00","user":"Andrej08","updated_on":"2011-03-06T17:32:35.712452+00:00","issue":49,"id":393885},{"content":"The \"CreateProcess\" error is a lack of binutils.  GDC is unable to find ld or as.","created_on":"2011-03-06T17:49:15.128541+00:00","user":"venix1","updated_on":null,"issue":49,"id":393900},{"content":"@venix1: I've got all the runtime libs installed. But without putting GDC in PATH it wouldn't work. So I'm guessing GDC uses PATH instead of its current directory to find binutils.","created_on":"2011-03-06T18:08:00.981215+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":393910},{"content":"@Andrej08:  It's the way GCC works.  Try compiling a c file without the path variable and it fails with the same error.","created_on":"2011-03-06T19:29:33.417848+00:00","user":"venix1","updated_on":null,"issue":49,"id":393973},{"content":"Would it be a bad idea to provide GDC Windows binaries for **developer alpha-testing only** as a download? I hear people would give GDC a try but they're scared of the build process (I can see why :p), at least on Windows.\r\n\r\nOr maybe that's a bad idea since only a few people are working on GDC right now (Ian, Daniel?, and who else?). I wouldn't want to pressure anyone for complete Windows support.","created_on":"2011-03-09T16:15:27.882309+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":397568},{"content":"It's not so scary once you've befriended it.  I don't think providing GDC binaries is a bad idea.  All of my D programming is done using GDC on windows.  Aside from platform quirks, I've ran across very few windows specific problems.\n\nI can build GDC but I have no experience in the packaging part.  Aside from GCC versions, there is the official MinGW GCC and TDM GCC.  Wouldn't want people to have bad experiences from mismatching GCC.\n\nIain is the only person working on GDC that I'm aware of.  I pop in every so often to keep it running on windows.\n\nEdit:  How should the TDM GCC and MinGW GCC issue be handled?  Is it even an issue?","created_on":"2011-03-09T22:14:20.389977+00:00","user":"venix1","updated_on":"2011-03-09T22:23:54.794150+00:00","issue":49,"id":398003},{"content":"Well, the MinGW team was asleep for a while which is why the TDM guys made their releases (as far as I know..). But the MinGW team is back on track and they've created a new autoinstall package, found here: http:\/\/sourceforge.net\/projects\/mingw\/files\/Automated%20MinGW%20Installer\/mingw-get-inst\/mingw-get-inst-20110211\/mingw-get-inst-20110211.exe\/download (currently 4.5.2)\r\n\r\nFor the last build I had to use those two TDM patches on the GCC source. But I'm using MinGW's runtime files. The MinGW autoinstall downloads runtime dependencies in a folder (C:\\MinGW\\var\\cache\\mingw-get\\packages in my case), which saves me from having to hunt down and download all the runtime stuff needed for GDC. MinGW also hosts the latest GDB on their sourceforge page.\r\n\r\nI dunno which is better to pick right now. Anyway, I was thinking of making a GDCWin project page somewhere to host the binaries (sourceforge might be an obvious choice here). It seems this one http:\/\/gdcwin.sourceforge.net\/ is abandoned.\r\n\r\nAs for the packaging, a simple zip file with the binaries and required dependencies should do it. All it takes is to extract and add \/bin to the PATH. Programmers should know this already anyway. :)","created_on":"2011-03-10T01:39:59.992214+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":398118},{"content":"I emailed Anders F Björklund, the current maintainer of gdcwin, about hosting binaries on gdcwin.","created_on":"2011-03-10T04:37:56.468776+00:00","user":"venix1","updated_on":null,"issue":49,"id":398228},{"content":"My gdc folder is 214 megs. 7zip can shrink that down to 24 megs. That means about 18 minutes to upload on my 20Kbps max upload speed. Not too bad. If Anders doesn't want to host the binaries, I can do it.","created_on":"2011-03-10T20:13:09.427642+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399243},{"content":"@Andrej, is that after you've ran strip? :)\r\n\r\nThe largest executables are the physical compilers themselves (circa 40MB each), though should be < 9MB post stripping.","created_on":"2011-03-10T20:42:14.825044+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":399276},{"content":"A binaries package would be great :)","created_on":"2011-03-10T21:43:34.378836+00:00","user":"trass3r","updated_on":null,"issue":49,"id":399320},{"content":"You'll have to fill me in on this strip technique? I've used 7zip's LZMA2 compression. Of course that would mean Windows users need 7zip installed.. Not a big deal,  I hope.","created_on":"2011-03-10T22:08:04.935034+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399348},{"content":"Andrej, I don't think there's an install-strip routine in the makefiles, so you strip the binaries post-installation.\r\n\r\nstrip should be part of the binutils of mingw. Invocation:\r\n{{{\r\nstrip --strip-unneeded \/path\/to\/lib_or_exe\r\n}}}\r\n\r\nUnless speficied otherwise, binaries are in:\r\n{{{\r\n\/usr\/bin\r\n\/usr\/libexec\/gcc\/$host\/$version\r\n}}}\r\nAnd libraries:\r\n{{{\r\n\/usr\/lib\/*.a\r\n\/usr\/lib\/*.so\r\n}}}\r\n","created_on":"2011-03-10T22:35:24.162847+00:00","user":"ibuclaw","updated_on":null,"issue":49,"id":399372},{"content":"I've used GDB on Windows 7 64bit.  I don't think there would be any problem unless mixing 64bit code with 32bit GDB.","created_on":"2011-03-10T23:15:30.415915+00:00","user":"venix1","updated_on":null,"issue":49,"id":399405},{"content":"Also, I'm compiling GDC with C and D support, without c++. Is that ok or should c++ be included? ","created_on":"2011-03-10T23:16:51.441693+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399407},{"content":"Right, but I'm on Windoze. No \/usr shenanigans here. Anywho I've batched it up with:\r\n\r\n{{{\r\nfor \/F %%G in ('dir \/B \/S *.exe;*.a;*.so') do strip --strip-unneeded %%G\r\n}}}\r\n\r\nDown to 120 megs. 7zipped to 13 megs. Maybe it could shrink more if I didn't pack GDB + its manuals. \r\n\r\nIs GDB compilable on x64? I don't even have a x64 Windows installation so I can't even try to compile it right now.","created_on":"2011-03-10T23:06:51.437628+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399396},{"content":"In a perfect world, we would only have to package up the D specific parts and let the user extract it into their current MinGW installation.  That's sorta the question I posted yesterday.  I have a project that uses c libraries compiled alongside my D code.  If it also had a c++ library compiled in the same way, then I would want a c++ compiler.\r\n\r\nI guess the question is how bad can things be if you mix object files compiled from multiple GCC compilers with potentially different configuration options?","created_on":"2011-03-10T23:24:36.427064+00:00","user":"venix1","updated_on":null,"issue":49,"id":399413},{"content":"What about D1 vs D2 support? There would have to be separate binaries for the two, unless I'm mistaken?","created_on":"2011-03-10T23:49:46.051644+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399442},{"content":"For now, I have an idea I want to look into to try to merge them.","created_on":"2011-03-10T23:51:24.538232+00:00","user":"venix1","updated_on":null,"issue":49,"id":399446},{"content":"It's not so bad with C++ on. It's 20 megs for me. I think I've managed to pack all the runtime libs that usually come with MinGW. What I would like to do is build some binaries of some C++ projects with this build and compare this to MinGW, to make sure everything compiles fine. I wouldn't want to distribute a half-broken gcc build.","created_on":"2011-03-11T00:49:17.409440+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":399510},{"content":"How can I add search directories for libraries when invoking GDC?\r\n\r\nI've tried using:\r\n{{{\r\ngdc main.d mylib.lib -Wl,-LD:\\libdir\\\r\n}}}\r\nand\r\n{{{\r\ngdc main.d mylib.lib -Xlinker -LD:\\libdir\\\r\n}}}\r\n\r\nBut I get errors from GDC, not the LD linker, saying \"mylib.lib: No such file or directory\". Via DMD I modify the **%LIB%** variable to add search paths (actually I've had to modify my sc.ini file to append instead of overwrite the LIB variable, but that's a different story). Optlink finds my lib file, but with GDC I'm not having that luck.","created_on":"2011-03-11T20:12:20.015447+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":400497},{"content":"Wait a second an import library **is** generated but it's in some other folder. Doh. I'll give this one a try.\n\n\n\n\n\n\nEdit: No luck, those import libs still don't have the proper symbols. Maybe this is an issue with the version of g++ used that comes with Qt. In any case my discussion doesn't belong here since this is not a GDC issue. Sorry. :)\n\n\n","created_on":"2011-03-11T23:22:03.862054+00:00","user":"Andrej08","updated_on":"2011-03-11T23:28:20.927370+00:00","issue":49,"id":400681},{"content":"I'm not an expert on GCC but specifying a library directly seems to search the current path.  You would have to use -l(little L) to inform gcc you want to use a library and -L to specify the directory to search.  \n\n{{{gdc main.d -lmylib -LD:\\libdir\\}}}\n\nFYI, I've always assumed that GCC required the lib<name>.a format, but it doesn't. Using -lgphobos as an example it will search for.  \n{{{\nlibgphobos.dll.a\ngphobos.dll.a \nlibgphobos.a \ngphobos.lib \nlibgphobos.dll \ngphobos.dll \nlibgphobos.a \n}}}\nEdit: That list is for windows.  I imagine it will vary slightly for other OSes.","created_on":"2011-03-11T21:50:57.640966+00:00","user":"venix1","updated_on":"2011-03-11T21:51:44.684072+00:00","issue":49,"id":400584},{"content":"Sorry for kind of hijacking the thread here, but where else can I post about GDC issues on Windows? :) Anyway..\r\n\r\nHow do you create an import library for a DLL with no source, for use with GDC\/MinGW? I've read this guide:\r\nhttp:\/\/www.mingw.org\/wiki\/CreateImportLibraries\r\n\r\nI was trying it out on the QtD project's DLLs, via:\r\n{{{\r\ndlltool -z libcpp_core.dll.def --export-all-symbol libcpp_core.dll\r\ndlltool -z libcpp_gui.dll.def --export-all-symbol libcpp_gui.dll\r\n}}}\r\nNo errors there. Then:\r\n{{{\r\ndlltool -d libcpp_core.dll.def -l libcpp_core.a\r\ndlltool -d libcpp_gui.dll.def -l libcpp_gui.a\r\n}}}\r\n\r\nIt doesn't take too long for libcpp_core, but it takes over 3 minutes to finish for the libcpp_gui.dll file. \r\nWhen I attempt to build a project:\r\n{{{\r\ngdmd main.d libcpp_core.a libcpp_gui.a\r\n}}}\r\n\r\nI get undefined reference errors for pretty much every symbol referenced by main.d. \r\n\r\nI've also tried this shorthand syntax:\r\n{{{\r\ndlltool -l qtdcore_coff.lib --leading-underscore --export-all-symbols libcpp_core.dll\r\ndlltool -l qtdgui_coff.lib --leading-underscore --export-all-symbols libcpp_gui.dll\r\n}}}\r\n\r\nThere's next to no D symbols in those generated import libraries, I've no idea why. **implib**, on the other hand, creates an OMF import library with a few hundred of D symbol names just for libcpp_core.dll, e.g. **_D2qt4core9QFileInfo9QFileInfo20__deleteNativeObjectFPvZv**. But dlltool seems to skip these. Also, the dlltool  generated import library for libcpp_gui.dll is 40 megs big, the DLL is 11 megs, what the hell?","created_on":"2011-03-11T22:21:24.551772+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":400601},{"content":"D.gnu on news.digitalmars.com although I have a habit of forgetting to check it, others still do. \r\n\r\nAre the dll's written with C++ or D?  Compiled with GCC or MSVC and do they use D linkage or C++ linkage?\r\nIn the past, different c++ compilers used different mangling schemes.  If the dll is from MSVC, then you will likely need to get some dlls compiled with GCC.\r\n\r\nIn short, it doesn't look like your doing anything wrong.  It sounds like an incompatibility between object formats, symbol names or a deficiency in the tool itself.  If you were just trying out dlltool usage, I've used it on C libraries in the past.  Also there is a program called reimp which does something similar to implib?  Possibly even works on static libraries(I might be misremembering).","created_on":"2011-03-11T22:53:15.684988+00:00","user":"venix1","updated_on":null,"issue":49,"id":400637},{"content":"This is going offtopic: Actually they're C++ DLLs, not D. Functions that are to be exported are wrapped in some fancy macros which rename those functions to look like D functions, but have the C calling convention.\r\n\r\nTake a look at this monster:\r\n{{{\r\n#define QTD_EXTERN extern \"C\"\r\n#ifdef CPP_SHARED\r\n    #define QTD_FUNC_DECL(MODULE, TYPE, NAME, ARGS) \\\r\n        QTD_EXTERN typedef TYPE (*qtd_##NAME##_t)ARGS; \\\r\n        QTD_EXTERN { extern QTD_##MODULE##_PUBLIC qtd_##NAME##_t qtd_##NAME; }\r\n    #define QTD_FUNC(MODULE, NAME) \\\r\n        QTD_EXTERN { QTD_##MODULE##_PUBLIC qtd_##NAME##_t qtd_##NAME; } \\\r\n        QTD_EXTERN QTD_EXPORT void qtd_set_##NAME(VoidFunc func) { qtd_##NAME = (qtd_##NAME##_t)func; }\r\n#else\r\n    #define QTD_FUNC_DECL(MODULE, TYPE, NAME, ARGS) \\\r\n        QTD_EXTERN TYPE qtd_##NAME ARGS;\r\n    #define QTD_FUNC(MODULE, NAME)\r\n#endif\r\n}}}\r\n\r\nIts used like so in one of the modules to be build as a DLL:\r\n{{{\r\nQTD_FUNC(CORE, allocate_QModelIndex_array)\r\nQTD_FUNC(CORE, assign_QModelIndex_array_element)\r\n}}}\r\n\r\nThis is part of the command to g++ which generated the DLL (files not listed):\r\n{{{\r\nC:\\Qt\\2010.04\\mingw\\bin\\g++.exe   -Wl,-enable-auto-import -shared -o lib\\libcpp_core.dll -Wl,--out-implib,CMakeFiles\\libcpp_core.a -Wl,--major-image-version,0,--minor-image-version,0 \r\n}}}\r\n\r\nAnd this is how implib was used:\r\n{{{\r\nD:\\DMD\\dmd2\\windows\\bin\\implib.exe \/system \/PAGESIZE:64 \"D:\\dev\\lib\\D\\qtd\\build_dir\\build\\CMakeFiles\\core.dir\\cpp_core.lib\" \"D:\\dev\\lib\\D\\qtd\\build_dir\\build\\lib\\libcpp_core.dll\"\r\n}}}\r\n\r\nimplib prepends underscores to exported symbol names.\r\n\r\nI guess I could make the import library when g++ builds the DLL, but I'll have to look at the g++ documentation first. I know Visual Studio has that nice option to generate import libs when building DLLs, g++ probably has this too.","created_on":"2011-03-11T23:18:56.627504+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":400677},{"content":"Do DLL's built by GDC need to have DllMain? I can build and call a DLL's function if there's no DllMain function, but I'm not sure this is the proper or safe way to do it? Using DMD it is required to have DllMain().\r\n\r\nIf I try to build with a DllMain function, I get back:\r\n{{{\r\nD:\\dev\\code\\d_code\\gdc\\DLL\\extern_D> gdc -shared -o mydll.dll mydll.d -Wl,--out-implib,implibmydll.a\r\nCreating library file: implibmydll.a\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(dll_helper.o):(.text+0x7d6): undefined reference to `_tls_callbacks_a'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(dll_helper.o):(.text+0x7de): undefined reference to `_tlsend'\r\nc:\/mingw\/msys\/1.0\/crossdev\/mingw32\/mingw\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(dll_helper.o):(.text+0x7ed): undefined reference to `_tlsstart'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\n\r\nmydll.d:\r\n{{{\r\nmodule mydll;\r\n\r\nimport std.stdio;\r\nimport std.c.windows.windows;\r\nimport core.dll_helper;\r\n\r\n__gshared HINSTANCE g_hInst;\r\n\r\nextern (Windows)\r\nBOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\r\n{\r\n    switch (ulReason)\r\n    {\r\n        case DLL_PROCESS_ATTACH:\r\n            g_hInst = hInstance;\r\n            dll_process_attach( hInstance, true );\r\n            break;\r\n\r\n        case DLL_PROCESS_DETACH:\r\n            dll_process_detach( hInstance, true );\r\n            break;\r\n\r\n        case DLL_THREAD_ATTACH:\r\n            dll_thread_attach( true, true );\r\n            break;\r\n\r\n        case DLL_THREAD_DETACH:\r\n            dll_thread_detach( true, true );\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport extern(D) int foo(int x)\r\n{\r\n    return x + 1;\r\n}\r\n}}}\r\n\r\nlibphobos bug or am I free to roam without a DllMain function?","created_on":"2011-03-13T01:28:51.441464+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":401388},{"content":"I think MinGW will include a stub DllMain for you.  If you use D from within a Dll you should initialize it first.  I do that during DllMain.\n\nThis example uses Tango.  So the rt_init and rt_term functions may be different.\n{{{\n#!d\n\/**\n * Handles initializing dll runtime.\n *\/\nversion (Windows)\n{\n    import tango.sys.win32.Types;\n    \n    extern (C) bool  rt_init( void delegate( Exception ) dg = null );\n    extern (C) bool  rt_term( void delegate( Exception ) dg = null ); \n    \n    \/\/ Globals\n    static HINSTANCE    g_hInst;     \n    \n    extern (Windows)\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\n    {\n        int argc;\n        char** argv;\n        \n        switch (ulReason)\n        {\n            case DLL_PROCESS_ATTACH:\n                rt_init();\n                break;\n            case DLL_PROCESS_DETACH:\n                rt_term();\n                break;\n            case DLL_THREAD_ATTACH:\n            case DLL_THREAD_DETACH:\n                return false;\n        }\n        \n        g_hInst = hInstance;\n        return true;\n    }\n}\n}}}\n\nEdit: Maybe future questions like this should be put on D.gnu.  If I don't respond, feel free to message me on here.","created_on":"2011-03-13T01:34:36.054484+00:00","user":"venix1","updated_on":"2011-03-13T01:35:35.962068+00:00","issue":49,"id":401389},{"content":"What the.. for some reason after executing GDMD it kills my batch script. This is really weird. Here's a zip if someone would test this out: http:\/\/dl.dropbox.com\/u\/9218759\/batch_fail.7z\r\n\r\nThe last step in the batch file doesn't execute, but why? All the commands return 0, so there's no error. Weird.. :s\r\n","created_on":"2011-03-13T01:44:24.052170+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":401396},{"content":"Ok I'll put my questions in D.gnu, thanks for the help Daniel.","created_on":"2011-03-13T01:45:05.691595+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":401397},{"content":"@Daniel: Thanks, that dll initialization worked. I've just had to import **std.c.windows.windows;** instead of the Tango imports. That previous linker error issue seems to be related with dll_helper.d. It works now.","created_on":"2011-03-13T01:48:48.617199+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":401405},{"content":"That is good.  I did download and play around with your files.  I didn't find anything related to what you were mentioning however I found a possible issue with D2 and Stdio.  The writeln statement never returns, looking at the task manager it's in an infinite loop.","created_on":"2011-03-13T02:11:17.270666+00:00","user":"venix1","updated_on":null,"issue":49,"id":401411},{"content":"Oh see, I thought I did notice something fishy about that app not quitting without a control-break. :)","created_on":"2011-03-13T04:14:59.138265+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":401446},{"content":"Did Anders F Björklund respond yet about hosting the binaries?","created_on":"2011-03-16T04:00:28.311463+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":404827},{"content":"Last email I had, he was attempting to get<<changeset 486>> compiled against 4.5.2 and hosted.\n\nEdit:  In the meantime, you reminded me that dropbox can host temporary binaries.  \n\nEdit:  Bad idea, the nature of the wiki means anyone could hijack the link.","created_on":"2011-03-16T04:22:36.301384+00:00","user":"venix1","updated_on":"2011-03-16T04:33:31.869872+00:00","issue":49,"id":404839},{"content":"I think dropbox has some limitations though. I've had it error out with \"too many people downloading\" before.","created_on":"2011-03-16T16:27:15.677511+00:00","user":"Andrej08","updated_on":null,"issue":49,"id":405605},{"content":"After uncommenting the stuff in monitor_.d and applying the stdio patch I still get linker errors :(\n{{{\nInfo: resolving __iob by linking to __imp___iob (auto-importG:\\MinGW\\bin\/ld.exe: warning: auto-importing has been \n\nactivated without --enable-auto-import specified on the command line.\nThis should work unless it involves constant data structures referencing symbols from auto-imported DLLs.\n\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\n\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x5e): undefined reference to `_fputc_nlock'\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\n\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x76): undefined reference to `_fputwc_nlock'\nfu000073.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000074.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000077.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000079.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000081.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nnmth000072.o:(.idata$4+0x0): undefined reference to `_nm___iob)\n}}}","created_on":"2011-03-17T20:17:44.537902+00:00","user":"trass3r","updated_on":"2011-03-17T20:18:57.971239+00:00","issue":49,"id":407216},{"content":"@trass3r:  \r\n\r\n{{{_fputc_nlock\/_fputwc_nlock}}} are likely due to improper version switches.  You would have to manually check {{{std\/stdio.d}}} to confirm.  Did you run {{{setup-gcc.sh}}} after patching?\r\n\r\nThe other two, I have seen before and will probably require more details about your D configuration and build process to figure out.  I think the cause may be incompatibilities within your build environment.  \r\n\r\nThe auto import thing has been fixed a couple of times and currently doesn't appear when I compile the latest version.","created_on":"2011-03-21T05:20:08.168675+00:00","user":"venix1","updated_on":null,"issue":49,"id":410383},{"content":"Binaries are released.  Currently you must install the 32-bit version of TDM-GCC 4.5.1.  Then extract the files into that directory and all should be well.\n\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/downloads\/gcc-4.5.1-tdm-1-gdc-r499.7z\n\nI think this issue has gotten long enough that it's time to close it.  Please direct any further compiling issues to D.gnu.  See <<issue 170>> for issues with the Windows Binaries.","created_on":"2011-03-22T02:56:58.610627+00:00","user":"venix1","updated_on":"2011-03-22T02:57:34.251155+00:00","issue":49,"id":411598},{"content":"<<changeset 712:4dfa4c11ccd7>>","created_on":"2011-12-23T02:02:16.430723+00:00","user":"ibuclaw","updated_on":null,"issue":296,"id":900079},{"content":"Should be **-fno-bounds-check**. :)","created_on":"2011-03-06T18:17:58.327484+00:00","user":"ibuclaw","updated_on":null,"issue":161,"id":393921},{"content":"<<changeset 485>>","created_on":"2011-03-06T22:37:42.402298+00:00","user":"ibuclaw","updated_on":null,"issue":161,"id":394075},{"content":null,"created_on":"2011-03-12T22:56:52.061033+00:00","user":"dsimcha","updated_on":null,"issue":163,"id":401309},{"content":null,"created_on":"2011-03-12T22:57:15.048522+00:00","user":"dsimcha","updated_on":null,"issue":163,"id":401310},{"content":"Happens on GCC 4.5.2, too.","created_on":"2011-03-13T00:47:51.638468+00:00","user":"dsimcha","updated_on":null,"issue":163,"id":401377},{"content":"Can't reproduce the segfault on the current tip w\/ 4.5.2 and 4.2.4 on my Atom, can you check your end?\r\n\r\nThanks.","created_on":"2011-03-24T22:07:18.054993+00:00","user":"ibuclaw","updated_on":null,"issue":163,"id":415372},{"content":"Oh wait, I see what I've done. :~)\r\n\r\nMade (and forgotten completely about) a change in gcc.","created_on":"2011-03-24T22:56:49.774318+00:00","user":"ibuclaw","updated_on":null,"issue":163,"id":415431},{"content":"Also got fixed as a result of <<changeset 568>>","created_on":"2011-06-19T11:29:20.461684+00:00","user":"ibuclaw","updated_on":null,"issue":163,"id":525775},{"content":"Here's a reduced test case (reduced in that it doesn't use any libraries, all the code is below).  Obvously, Map and Filter no longer do anything useful, but it's enough to reproduce the bug.\r\n\r\n{{{\r\n\/\/ Need the const qualifier to reproduce the bug.\r\nbool empty(const int[] a) {\r\n    return !a.length;\r\n}\r\n\r\nvoid popFront(ref int[] a) {\r\n    a = a[1 .. $];\r\n}\r\n\r\nstruct Filter {\r\n    Map _input;\r\n\r\n    this(Map r) {\r\n        _input = r;\r\n    }\r\n\r\n    bool empty() { return _input.empty; }\r\n\r\n    void popFront() {\r\n        assert(!empty);  \/\/ FAILS even though we check for it in doPopping().\r\n\r\n        do {\r\n            _input.popFront;\r\n        } while (!_input.empty);\r\n    }\r\n}\r\n\r\nstruct Map {\r\n    int[] _input;\r\n\r\n    \/\/ This needs to be here to reproduce the bug, even though it's not used:\r\n    int _cache;\r\n\r\n    this(int[] input) {\r\n        _input = input;\r\n    }\r\n\r\n    @property bool empty() {\r\n        return _input.empty;\r\n    }\r\n\r\n    void popFront() {\r\n        _input.popFront;\r\n    }\r\n}\r\n\r\nvoid doPopping(F)(F stuff) {\r\n    while(!stuff.empty) {\r\n        stuff.popFront();\r\n    }\r\n}\r\n\r\nvoid main() {\r\n    int[] nums = [1,2,3,4,5,6,7,8,9];\r\n    doPopping(Filter(Map(nums)));\r\n}\r\n}}}","created_on":"2011-02-16T02:57:03.177026+00:00","user":"dsimcha","updated_on":null,"issue":139,"id":372898},{"content":"This one's 4.4 specific.  I can't reproduce it on a GCC 4.5 build.","created_on":"2011-02-19T22:27:43.820138+00:00","user":"dsimcha","updated_on":null,"issue":139,"id":377292},{"content":"I can't reproduce this anymore.  One of the recent commits (probably the one about d_truthvalue_conversion) fixed it.","created_on":"2011-03-16T03:06:42.174425+00:00","user":"dsimcha","updated_on":null,"issue":139,"id":404800},{"content":null,"created_on":"2011-03-16T03:08:20.963681+00:00","user":"dsimcha","updated_on":null,"issue":139,"id":404804},{"content":"I'm willing to bank on the 2.052 merge. But thanks for checking anyway. :)\r\n\r\nRegards","created_on":"2011-03-16T08:24:23.502956+00:00","user":"ibuclaw","updated_on":null,"issue":139,"id":404983},{"content":"See issue 139 for a reduced test case.  This test case segfaults the compiler instead of causing an ICE error message, but I'm pretty sure the two have the same underlying cause.","created_on":"2011-02-16T02:58:33.722858+00:00","user":"dsimcha","updated_on":null,"issue":138,"id":372900},{"content":"This one's 4.4 specific.  I can't reproduce it on a GCC 4.5 build.","created_on":"2011-02-19T22:27:41.677473+00:00","user":"dsimcha","updated_on":null,"issue":138,"id":377291},{"content":"I can't reproduce this anymore.  One of the recent commits (probably the one about d_truthvalue_conversion) fixed it.","created_on":"2011-03-16T03:06:34.876750+00:00","user":"dsimcha","updated_on":null,"issue":138,"id":404799},{"content":"Note, smaller testcase related to this is:\n\n{{{\ntemplate Gen114(alias A){\n    string generate() {\n        return null;\n    }\n}\n\nvoid bug114(){\n    int x;\n    static assert( Gen114(x).generate() == null);\n}\n}}}\n\nRegards","created_on":"2010-11-28T01:03:30.298597+00:00","user":"ibuclaw","updated_on":"2010-11-28T01:03:45.793499+00:00","issue":114,"id":301161},{"content":"This one got fixed at some point.  Can't reproduce it anymore.","created_on":"2011-03-16T03:12:30.740662+00:00","user":"dsimcha","updated_on":null,"issue":114,"id":404805},{"content":"Is there anything you don't find weird? :~)","created_on":"2011-03-17T11:50:09.639082+00:00","user":"ibuclaw","updated_on":null,"issue":165,"id":406628},{"content":"Definitely not anything that involves linkers and compiler backends.","created_on":"2011-03-17T13:13:24.852153+00:00","user":"dsimcha","updated_on":null,"issue":165,"id":406703},{"content":"<<changeset 495>>","created_on":"2011-03-17T19:28:31.672602+00:00","user":"ibuclaw","updated_on":null,"issue":165,"id":407180},{"content":null,"created_on":"2011-03-17T18:40:26.794440+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":407133},{"content":"Actually, cannot reproduce this.","created_on":"2011-03-17T18:53:58.573850+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":407145},{"content":"Reopened for testing 64bit first.","created_on":"2011-03-17T18:55:52.911923+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":407148},{"content":"Right.  It only happens on 64 builds.  Forgot to mention that.","created_on":"2011-03-18T01:06:27.446465+00:00","user":"dsimcha","updated_on":null,"issue":164,"id":407495},{"content":"Here's a test case that doesn't depend on any libraries and happens with both 32 and 64 bit x86 on revision 521, when -O and -inline are used:\r\n\r\n{{{\r\n\/\/ Need the const qualifier to reproduce this.\r\n@property bool empty(T)(const T[] a) {\r\n    return !a.length;\r\n}\r\n\r\nbool isNaN(double num) {\r\n    return num != num;\r\n}\r\n\r\nauto filter(alias pred, Range)(Range rs) {\r\n    return Filter!(pred, Range)(rs);\r\n}\r\n\r\nstruct Filter(alias pred, Range) {\r\n    Range _input;\r\n\r\n    this(Range r) {}\r\n\r\n    @property bool empty() { return _input.empty; }\r\n}\r\n\r\nvoid doIt() {\r\n    static bool noNaNs(R)(R range) {\r\n        return filter!isNaN(range).empty;\r\n    }\r\n\r\n    if(noNaNs((double[]).init)) {}\r\n}\r\n\r\nvoid main() {\r\n    doIt();\r\n}\r\n}}}","created_on":"2011-04-08T00:32:58.049516+00:00","user":"dsimcha","updated_on":null,"issue":164,"id":432100},{"content":"The deep root of the problem is structs and D2's const system.\r\n\r\nFor example: const(T)[] and T[] create two distinct struct types in GCC code, but DMDFE treats both types as being transparent to each other. Under certain optimisations, the backend deduces that these two records aren't compatible so passed them off to fold_convert_loc for conversion (which doesn't handle record types, so this bug report's ICE occurs).\r\n\r\n","created_on":"2011-04-08T11:08:20.533853+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":432591},{"content":"Should be sorted for <<changeset 524>> - keeping this report open as there is still a failing example in the testsuite related to this (only instead of D array types, it's D const\/mutable structs).","created_on":"2011-04-08T11:46:44.796322+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":432657},{"content":"<<changeset 526>>","created_on":"2011-04-08T20:54:41.514418+00:00","user":"ibuclaw","updated_on":null,"issue":164,"id":433300},{"content":"Bleh, over engineering ho!\r\n\r\nLooks like am going to have to use lang_hooks.set_decl_assembler_name here... :3\r\n\r\nWill fix this up shortly...","created_on":"2011-03-18T19:53:58.488781+00:00","user":"ibuclaw","updated_on":null,"issue":167,"id":408330},{"content":"Nope, doesn't get passed there... bloat ho! giveDeclUniqueName it is then. :)","created_on":"2011-03-18T20:13:39.148441+00:00","user":"ibuclaw","updated_on":null,"issue":167,"id":408342},{"content":"<<changeset 497>>","created_on":"2011-03-18T20:19:19.241623+00:00","user":"ibuclaw","updated_on":null,"issue":167,"id":408345},{"content":"Should be fixed in <<changeset 500>>","created_on":"2011-03-21T20:41:46.786677+00:00","user":"ibuclaw","updated_on":null,"issue":168,"id":411271},{"content":"Is reproducible using -O1 -ftree-vrp","created_on":"2011-12-20T00:35:57.936198+00:00","user":"ibuclaw","updated_on":null,"issue":289,"id":888673},{"content":"<<changeset 710:9076a0f27fd9>>","created_on":"2011-12-20T01:11:41.057500+00:00","user":"ibuclaw","updated_on":null,"issue":289,"id":888750},{"content":null,"created_on":"2011-12-20T14:53:08.716531+00:00","user":"art_","updated_on":null,"issue":289,"id":890556},{"content":"Doesn't ice anymore. Thank you.","created_on":"2011-12-20T14:52:20.745680+00:00","user":"art_","updated_on":null,"issue":289,"id":890552},{"content":"OT: Why not use std.getopt?","created_on":"2011-12-16T14:25:59.878737+00:00","user":"trass3r","updated_on":null,"issue":289,"id":879702},{"content":"NIH? :)\r\n\r\nOn topic: current hg gdc (2.057( still ices.","created_on":"2011-12-16T18:13:12.103509+00:00","user":null,"updated_on":null,"issue":289,"id":880366},{"content":"Follow up.\r\n  \r\nRemoving the extern (C) will generate only 1(correct) undefined symbol.  I believe the nature of this may be related to when {{{FOO}}} gets the attribute applied to it.\r\n\r\nInside extern(C), the attribute has not been applied so the C symbol {{{_FOO}}} is used.  Once that block has been exited the new {{{__dllimport__}}} symbol, {{{__imp_FOO}}},  is used.\r\n\r\nAny other thoughts are welcomed.\r\n","created_on":"2011-03-23T02:40:03.439484+00:00","user":"venix1","updated_on":null,"issue":172,"id":413182},{"content":"I was mistaken about the {{{extern(C)}}} scoping.  The only time it doesn't create 2 symbols is inside a function body.","created_on":"2011-03-23T03:14:08.408167+00:00","user":"venix1","updated_on":null,"issue":172,"id":413195},{"content":"Does the same happen when you use 'export' ?\r\n{{{\r\nexport extern shared int[5] FOO;\r\n}}}","created_on":"2011-03-26T18:51:18.078598+00:00","user":"ibuclaw","updated_on":null,"issue":172,"id":417005},{"content":"I can't use export definitions in the same way.\r\n\r\n{{{\r\nexport extern shared int[5] BAR;   \r\nshared int* bar = &BAR[0];\r\n\r\ndllimport.d:10: Error: non-constant expression &BAR[0u]\r\n}}}\r\n\r\nBefore it was allowed but I think at some point it became disallowed.  I believe that is how I worked around it with D2 several months ago.","created_on":"2011-03-26T18:58:19.887585+00:00","user":"venix1","updated_on":null,"issue":172,"id":417013},{"content":"Tracing through GCC, dllimport mangling is one of the last things done.\n\nIs it possible that global data is finalized in such a way that the mangling has no effect? \n# Globals disregard symbol information, so when the name updates it doesn't.  I'm not aware of any other backend mangling that could be used to test this.\n# Globals are written out before the symbol information can change?  Reading over VarDeclaration::toObjFile in dmd2\/toobjfile.d this appears to be the case.  \n\nEdit:\nIf #2 is correct and has no other impact on GDC.  Applying it in uniqueName like fastcall is done should be a workable solution.\n","created_on":"2011-03-26T21:23:16.961815+00:00","user":"venix1","updated_on":"2011-03-26T21:35:09.198175+00:00","issue":172,"id":417109},{"content":"> I can't use export definitions in the same way.\r\n\r\n> export extern shared int[5] BAR;\r\n\r\n> shared int* bar = &BAR[0];\r\n\r\n> dllimport.d:10: Error: non-constant expression &BAR[0u]\r\n\r\nI'm pretty certain that behaviours correct, as the address of BAR[0] will not be known at compile time.\r\n\r\n\r\nAs for outputting symbols, whatever's in DECL_ASSEMBLER_NAME gets written out as the assembler name, and when compilation hits cgraph_optimize, most global symbols start being emitted.","created_on":"2011-03-27T00:16:18.280496+00:00","user":"ibuclaw","updated_on":null,"issue":172,"id":417200},{"content":"{{{VarDeclaration::toObj}}} calls {{{outdata}}} which calls {{{g.ofile->outputStaticSymbol}}} which calls {{{rodc}}} which is a wrapper for GCC's {{{rest_of_decl_compilation}}}.\n\n{{{\n\/* This is called from various places for FUNCTION_DECL, VAR_DECL,\n   and TYPE_DECL nodes.\n\n   This does nothing for local (non-static) variables, unless the\n   variable is a register variable with DECL_ASSEMBLER_NAME set.  In\n   that case, or if the variable is not an automatic, it sets up the\n   RTL and outputs any assembler code (label definition, storage\n   allocation and initialization).\n\n   DECL is the declaration.  TOP_LEVEL is nonzero\n   if this declaration is not within a function.  *\/\n}}}\nThis appears to me to mean that the symbol is written right now and not later.\n\nEDIT:  Which would support my previous hypothesis on why the name isn't mangled.","created_on":"2011-03-27T05:44:27.022244+00:00","user":"venix1","updated_on":"2011-03-27T05:53:15.377725+00:00","issue":172,"id":417291},{"content":"The structure of the statement is in core.stdc.stdio.\n\n{{{\n    private extern shared FILE[_NFILE] _iob;\n\n    shared stdin  = &_iob[0];\n    shared stdout = &_iob[1];\n    shared stderr = &_iob[2];\n    shared stdaux = &_iob[3];\n    shared stdprn = &_iob[4];\n}}}\n\n_iob is declared with {{{extern __attribute__ ((__dllimport__)) FILE _iob[];}}} for MinGW.  export definition on an extern turns into an import which was needed by GDC\/MinGW to import the correct {{{__imp__iob}}} symbol.\n\nI have tried the angle that {{{__dllimport__}}} wasn't being applied.  However checking the tree {{{DECL_DLLIMPORT_P}}} returns 1.  This ruled out the first two ideas I had.  That the attribute was being applied in a timely manner and that {{{DECL_IMPORT_P}}} was not being set.\n\nCurrently I am inspecting runtime logic with GDB.   {{{DECL_ASSEMBLER_NAME}}} defaults to something D creates.  For some things, like {{{__dllimport__}}} the name is changed in the backend.  This leads me to the current idea that globals are finalized before the name change can be applied by the backend.  Leading to the previous name to be used.  The reason behind this, is in {{{VarDeclaration::toObj}}} any extern global is treated as a local variable and all others are treated as globals and dt tables are created.  It is my belief that somehow those tables lose the ability for the backend to change the name with {{{SET_DECL_ASSEMBLER_NAME}}} or that they are written out before that can be done.\n\nEdit:  The dt structure created in {{{VarDeclaration::toObj}}} contains a reference to the symbol not a copy.  Unless there is something I haven't considered.  I'm leaning more towards the global being written out before the back end can modify the name.\n","created_on":"2011-03-27T05:15:19.296385+00:00","user":"venix1","updated_on":"2011-03-27T05:31:14.763508+00:00","issue":172,"id":417283},{"content":"The name of a dllimport symbol is only modified by the following functions\r\n{{{\r\nget_dllimport_decl\r\nlegitimize_dllimport_symbol\r\n\r\nix86_legitimize_address\r\nlegitimize_pic_address\r\nix86_expand_move\r\n}}}\r\n\r\n{{{ix86_expand_move}}} is what is used inside the main body.  I believe the other two are not called because the global uses the symbol directly\r\n{{{\r\n.globl _a\r\n\t.data\r\n\t.align 4\r\n_a:\r\n\t.long\t_FOO # Address isn't used.  The Symbol name is.\r\n}}}\r\n\r\nAt this point, I believe the issue is simply that get_dllimport_decl is never called for the global because the symbol name is used directly and outputted before the move instruction.\r\n\r\nI add a call to {{{get_dllimport_decl}}}  to {{{VarDeclaration::toObject}}} that will rename the symbol if {{{DECL_DLLIMPORT_P}}} is set.\r\n{{{\r\n#ifdef TARGET_DLLIMPORT_DECL_ATTRIBUTES\r\n        \/\/ Have to test for import first\r\n        if (isImportedSymbol())\r\n        {\r\n            gen.addDeclAttribute(var_decl, \"dllimport\");\r\n            DECL_DLLIMPORT_P(var_decl) = 1;\r\n        }\r\n        else if (isExport())\r\n            gen.addDeclAttribute(var_decl, \"dllexport\");\r\n            \r\n        if (DECL_DLLIMPORT_P(var_decl) == 1)\r\n            csym->Stree = get_dllimport_decl(var_decl);\r\n\r\n#endif\r\n}}}\r\n\r\nI'm not entirely sure what {{{get_dllimport_decl}}} does to the tree besides creating a new one.  There may be side effects associated with it.  However, simply renaming the symbol causes it to be ran anyways which results in {{{__imp____imp__foo}}}\r\n\r\nThe other issue is that {{{get_dllimport_decl}}} is static, which means either patching GCC or copying the function into GDC code.\r\n\r\nFor now, I'm going to sleep on it and wait for some feedback from Iain.","created_on":"2011-03-27T07:22:06.549931+00:00","user":"venix1","updated_on":null,"issue":172,"id":417305},{"content":"As far as constraints of C go, it's just not possible:\r\n\r\n{{{\r\nextern FILE _iob[_NFILE];\r\nFILE stdin  = &_iob[0];     \/\/ OK\r\n\r\n__declspec(dllimport) extern FILE _iob[_NFILE];\r\nFILE stdin  = &_iob[0];     \/\/ initialiser element is not constant\r\n}}}\r\n\r\n\r\nYou are likely going to have to settle with functions (and pray that they inline, which it should on -O3 or -fwhole-program :)\r\n{{{\r\nprivate extern export shared FILE[5] _iob;\r\nshared stdin() { return &_iob[0]; }\r\nshared stdout() { return &_iob[1]; }\r\nshared stderr() { return &_iob[2]; }\r\nshared stdaux() { return &_iob[3]; }\r\nshared stdprn() { return &_iob[4]; }\r\n}}}","created_on":"2011-03-27T17:05:23.868532+00:00","user":"ibuclaw","updated_on":null,"issue":172,"id":417588},{"content":"I didn't notice it at the time, but the reason the expression may have worked was because {{{version (GNU_CBridge_Stdio)}}} avoids the assignment expression.  This certainly appears to be the case now, otherwise D1 would give the same non-const error message compiling phobos.  I do recall simply renaming {{{_iob}}} to {{{__imp___iob}}} would cause the program to segfault on printing before the export attribute was fixed..  Which should not be the case if it was never necessary or used.\r\n\r\n\r\n# Why does auto-import fixing up the _iob extern solve the issue?  If the expression should not be possible\/functional.  Which I imagine is not the case since DMD can do it and _iob is stored inside microsoft dll's with declspec(dllimport) required for access.  If the usage was invalid the linker would complain with an error. See the documentation of [[http:\/\/sourceware.org\/binutils\/docs-2.21\/ld\/Options.html#Options|--enable-auto-import]] for more details.\r\n# Attempting to rename the symbol fails with a segfault.  Which means it is likely only possible right before the global is emitted.  Even modifying the assembly output with the wrong named symbol will segfault.  It appears dllimport doctors the usage a bit.\r\n# The segfault will also occur when forcing a call to {{{get_dllimport_decl}}} early.\r\n# A workable solution and what tango used in the past was static constructors.  That is probably what will be used for now.\r\n\r\nI'm not convinced that the usage below is incorrect.  If it was the linker would not be able to make it work correctly.  I do not know what GDC needs to change to make it work at this time.  \r\n{{{\r\n    pragma(set_attribute, _iob, dllimport);\r\n    private extern shared FILE[_NFILE] _iob;\r\n\r\n    shared stdin  = &_iob[0];\r\n    shared stdout = &_iob[1];\r\n    shared stderr = &_iob[2];\r\n    shared stdaux = &_iob[3];\r\n    shared stdprn = &_iob[4];\r\n}}}\r\nIn the meantime, {{{std.stdiobase}}} and {{{core.std.c.stdio}}} have been modified to use a static constructor to initialize the data.  For the time being I'm putting this issue on hold.","created_on":"2011-03-28T02:45:47.415579+00:00","user":"venix1","updated_on":null,"issue":172,"id":418141},{"content":"You must know, that linker makes it work by a very dirty hack, grep for _pei386_runtime_relocator.","created_on":"2011-04-20T18:55:41.388490+00:00","user":null,"updated_on":null,"issue":172,"id":449132},{"content":"{{{gdc -v2}}} implies your using the Windows binary.  If that is correct see <<issue 160>>.","created_on":"2011-03-25T23:02:09.153525+00:00","user":"venix1","updated_on":null,"issue":173,"id":416467},{"content":"Found the issue.  Was a recursive function call, when it shouldn't have been.  Look at <<issue 160>> for the patch [[https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110326\/160\/mingw_stdioV0.patch|mingw_stdioV0.patch]]","created_on":"2011-03-26T00:12:04.722861+00:00","user":"venix1","updated_on":null,"issue":173,"id":416487},{"content":"I think adding support for 4.2.x and 4.4.x would be good to do.\r\n\r\nA patch for 4.2.3 can be found here:\r\n\r\nhttp:\/\/demented.no-ip.org\/~root\/dgcc_to_4_2_3_and_autovec.patch\r\n\r\ncoming from the D.gnu newsgroup thread:\r\n\r\nhttp:\/\/www.digitalmars.com\/d\/archives\/D\/gnu\/GDC_on_4.2.3_with_autovectorization_3178.html\r\n\r\nFor 4.4.x, there was some discussion here:\r\n\r\nhttp:\/\/www.digitalmars.com\/d\/archives\/D\/gnu\/GDC_4.4.3_3619.html\r\n\r\nHe said he had some close to working patches for 4.4.x.\r\n\r\nAlso note that there is a 4.4.x branch in our repository:\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/src\/afa5b822cbef","created_on":"2010-08-08T18:06:28.339177+00:00","user":"michaelp","updated_on":null,"issue":53,"id":227488},{"content":null,"created_on":"2010-08-08T19:01:33.725734+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":227493},{"content":"If I recall correctly, the 4.4.x branch adds little to the already existing - and ftbfs anyway.\r\n\r\nCould look into GCC-4.2, I'm sure it won't be too much of a pain if 4.3.x is working almost as swell as 4.1.x. ;-)\r\n\r\n","created_on":"2010-08-08T21:35:50.521403+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":227529},{"content":"Well, according to the posts of the GCC 4.2.x patch thread, it appears that it works quite well as a patch.\r\n\r\nThe only thing is that it seems unlike the other patches, this is only in one patch file. (No separate file for a top level patch, just one big patch it seems)\r\n\r\nBut other than that (if it is even an issue), 4.2 should be relatively easy.","created_on":"2010-08-09T01:20:27.608178+00:00","user":"michaelp","updated_on":null,"issue":53,"id":227557},{"content":null,"created_on":"2010-08-09T09:31:16.849958+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":227657},{"content":null,"created_on":"2010-08-09T10:05:25.137326+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":227671},{"content":"Issue #75 was marked as a duplicate of this issue.","created_on":"2010-10-16T18:24:18.676654+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":268357},{"content":"Within the next 6 months would be a nice target for the port to GCC-4.5. Possibly the trunk soon after.","created_on":"2010-10-17T15:51:15.541846+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":268680},{"content":null,"created_on":"2011-03-26T22:36:35.435025+00:00","user":"ibuclaw","updated_on":null,"issue":53,"id":417142},{"content":"Hi yarf. Thanks for submitting this wish.\r\n\r\nIf you have spare time, can you please collect data and\/or informations in how this should be implemented?\r\n\r\n;) If you can't don't worry, we will look at it as soon as we can...","created_on":"2009-10-24T12:37:14.639427+00:00","user":"goshawk","updated_on":null,"issue":1,"id":67866},{"content":"If you could provide a small test case + results of what happens differently with DMD and GDC, that would be nice.","created_on":"2009-12-22T00:26:09.995096+00:00","user":"michaelp","updated_on":null,"issue":1,"id":96501},{"content":"From my usage of varargs in GDC, it appears that varargs default to  char * instead of void * like what DMD uses. \r\n\r\nI've adapted Tango 0.99.9's  Variant.d to a program specifically for the vararg support it provides.  This was simply done by using cast(char*) anyplace va_list was used as a type.  There does not appear to be any negative side effects from doing so.  However, it has only been a couple days and the program in question is still alpha quality.  I can say that the methods where it was used has worked as intended.","created_on":"2010-07-13T19:46:18.591186+00:00","user":"venix1","updated_on":null,"issue":1,"id":211992},{"content":"I think what he means is that other versions of D give you the ability to shift through all args via moving the pointer offset.\r\n\r\nie:\r\n\r\n{{{\r\nforeach (i, arg; arguments)\r\n{\r\n    arglist[i] = argptr;\r\n    argptr += (arg.tsize + size_t.sizeof - 1) & ~ (size_t.sizeof - 1);\r\n}\r\n}}}\r\nThis is not the case in gdc IIRC.","created_on":"2010-07-13T20:15:48.468961+00:00","user":"ibuclaw","updated_on":null,"issue":1,"id":212185},{"content":"Forgot the attachment...","created_on":"2010-09-21T18:54:19.380996+00:00","user":"ibuclaw","updated_on":null,"issue":1,"id":252052},{"content":"This patch will allow you to switch between DMD's void* varargs, and GCC's builtin varargs. GCC's builtin being turned on by default, but can be changed otherwise in the Makefile (by passing -DGCC_BUILTIN_VALIST=0)\n\nI'm curious as to how 'not-portable' the void pointer is. Could someone try it on x86_64 or another arch? (bare in mind it may not work with the va_list implementation in phobos).\n\nRegards","created_on":"2010-09-21T18:53:13.527708+00:00","user":"ibuclaw","updated_on":"2010-09-21T18:55:19.732909+00:00","issue":1,"id":252051},{"content":"As of <<changeset 508>>, va_list is hidden behind a void* data type.","created_on":"2011-03-27T14:10:52.023366+00:00","user":"ibuclaw","updated_on":null,"issue":1,"id":417474},{"content":"Sure it will be easy. :~)\r\n\r\nThere's no doubt <<changeset 508>> is to blame, and I'd imagine the builtin va_arg passes the va_list incorrectly around the place.","created_on":"2011-03-28T10:34:15.590968+00:00","user":"ibuclaw","updated_on":null,"issue":174,"id":418564},{"content":"Based on same principles as <<issue 109>>","created_on":"2011-03-28T10:37:13.431129+00:00","user":"ibuclaw","updated_on":null,"issue":174,"id":418568},{"content":"<<changeset 511>> should either fix or turn the SEGV into an ICE in stabilize_va_list in GCC.","created_on":"2011-03-29T23:34:14.409167+00:00","user":"ibuclaw","updated_on":"2011-03-29T23:38:21.125068+00:00","issue":174,"id":420886},{"content":"Looks like this is fixed.","created_on":"2011-04-07T02:13:12.937126+00:00","user":"dsimcha","updated_on":null,"issue":174,"id":430899},{"content":null,"created_on":"2011-03-28T17:14:10.397928+00:00","user":"venix1","updated_on":null,"issue":175,"id":419033},{"content":null,"created_on":"2011-03-28T17:14:53.652285+00:00","user":"venix1","updated_on":null,"issue":175,"id":419034},{"content":"I think the problem may be related to unitialized array in the construction of AsmCode.\n\n{{{\n    AsmCode(unsigned n_regs)\n    {\n        insnTemplate = NULL;\n        insnTemplateLen = 0;\n        clbregs = new unsigned[n_regs];\n        dollarLabel = 0;\n        clobbersMemory = 0;\n    }\n};\n}}}\n\nShortly after a loop is done to test for any clobbered variables.  It almost always generates some random number greater than 1 when viewed with a debugger.\n{{{\n    \/\/ Telling GCC that callee-saved registers are clobbered makes it preserve\n    \/\/ those registers.   This changes the stack from what a naked function\n    \/\/ expects.\n\n    if (! irs->func->naked)\n    {\n        for (int i = 0; i < N_Regs; i++)\n        {\n            if (code->clbregs[i])\n                clobbers.cons(NULL_TREE, regInfo[i].gccName);\n        }\n        if (clobbers_mem)\n            clobbers.cons(NULL_TREE, memory_name);\n    }\n}}}\n\nInitializing the array to 0 after allocation appears to remove the unknown register errors.","created_on":"2011-03-28T17:59:14.841596+00:00","user":"venix1","updated_on":"2011-03-28T18:10:41.850299+00:00","issue":175,"id":419071},{"content":"Solved in <<changeset 510>>","created_on":"2011-03-28T18:41:24.187361+00:00","user":"venix1","updated_on":null,"issue":175,"id":419153},{"content":"It was a static constructor dependency created by some changes made to stdio for MinGW.","created_on":"2011-03-29T01:01:01.087012+00:00","user":"venix1","updated_on":null,"issue":176,"id":419471},{"content":null,"created_on":"2011-04-29T01:31:20.270382+00:00","user":"venix1","updated_on":null,"issue":203,"id":458960},{"content":"No theories about the hodge podge gimplification in the backend. ;)\r\n\r\nHowever should only be setting TREE_STATIC on simple constructors...","created_on":"2011-04-29T08:35:40.209626+00:00","user":"ibuclaw","updated_on":null,"issue":203,"id":459188},{"content":"Actually, it doesn't make sense to either set TREE_STATIC or TREE_CONSTANT the only array literals should be setting are those created by toDt.\r\n\r\n<<changeset 557>>","created_on":"2011-04-29T13:17:26.589760+00:00","user":"ibuclaw","updated_on":null,"issue":203,"id":459419},{"content":"Good call, I did some digging as to why Linux works.\r\n\r\ngimplify.c:3724 contains the if branch that causes the change in GIMPLE code.  It seems the only reason Linux didn't exhibit the same bug is it fails {{{!can_move_by_pieces (size, align)}}}(gimplify.c:3750) and breaks the if statement.  In other words, Linux returns true for can_move_by_pieces and MinGW returns false.  MinGW appears to return false because it defaults to size optimization.\r\n\r\nHad I tried using -Os, this would have showed up on Linux as well.  Another bug related to this issue is using -Os or -OX would give {{{bug.d:1:0: internal compiler error: in make_decl_rtl, at varasm.c:1317}}}.  That was appears fixed and was likely related to setting TREE_STATIC or TREE_CONSTANT as well..\r\n\r\n\r\n\r\n\r\n\r\n","created_on":"2011-04-29T21:11:29.939554+00:00","user":"venix1","updated_on":null,"issue":203,"id":459837},{"content":"Not reproducible in <<changeset 514>>","created_on":"2011-04-03T20:03:52.583276+00:00","user":"ibuclaw","updated_on":null,"issue":177,"id":426104},{"content":"See the comment in <<issue 153>> I made about exp2 (and other naked std.math functions) popping the stack and the caller not cleaning up afterwards. The fix is already there, you just need to uncomment it in Make-lang.in. :)","created_on":"2011-03-22T01:32:40.654228+00:00","user":"ibuclaw","updated_on":null,"issue":169,"id":411538},{"content":"Ok, I'll just wait a little until these changes are fully baked then.  I'm not in a massive hurry to use GDC for real work.  I've just been testing it and filing bug reports to help along the process of getting it up to production quality.","created_on":"2011-03-22T01:35:43.238181+00:00","user":"dsimcha","updated_on":null,"issue":169,"id":411546},{"content":"<<changeset 514>>","created_on":"2011-04-03T20:04:36.127695+00:00","user":"ibuclaw","updated_on":null,"issue":169,"id":426105},{"content":"I see it. Note to self, the opposite of '<' is '>=' next time your in a rush. ;~)\r\n\r\n<<changeset 519>>","created_on":"2011-04-05T17:16:07.139570+00:00","user":"ibuclaw","updated_on":null,"issue":178,"id":428913},{"content":"64bit?","created_on":"2011-01-06T15:09:22.718567+00:00","user":"ibuclaw","updated_on":null,"issue":143,"id":333238},{"content":"Yes, 64 bit.  Sorry, forgot to mention it.","created_on":"2011-01-06T15:34:23.821511+00:00","user":"dsimcha","updated_on":null,"issue":143,"id":333260},{"content":"Here's a somewhat reduced test case that doesn't depend on any libraries except core.stdc.stdio for printf.  Weirdly, this now seems to happen in 32-bit mode as well.  On iteration 401, len == 0.  The check in uniform() that exits early if b - a == 0 seems to not be executed for some reason.  I can't seem to reproduce this without the huge Mersenne Twister struct.\r\n\r\nI compiled against GCC 4.4.5.  The flag that triggers this is -O.\r\n\r\n{{{\r\nimport core.stdc.stdio;\r\n\r\n\/\/ For some reason I can't seem to reproduce it without this huge thing.\r\nstruct MersenneTwisterEngine(\r\n    UIntType, size_t w, size_t n, size_t m, size_t r,\r\n    UIntType a, size_t u, size_t s,\r\n    UIntType b, size_t t,\r\n    UIntType c, size_t l)\r\n{\r\n    enum size_t wordSize = w;\r\n    enum size_t stateSize = n;\r\n    enum size_t shiftSize = m;\r\n    enum size_t maskBits = r;\r\n    enum UIntType xorMask = a;\r\n    enum UIntType temperingU = u;\r\n    enum size_t temperingS = s;\r\n    enum UIntType temperingB = b;\r\n    enum size_t temperingT = t;\r\n    enum UIntType temperingC = c;\r\n    enum size_t temperingL = l;\r\n\r\n    enum UIntType min = 0;\r\n    enum UIntType max =\r\n        w == UIntType.sizeof * 8 ? UIntType.max : (1u << w) - 1;\r\n    enum UIntType defaultSeed = 5489u;\r\n\r\n    this(UIntType value)\r\n    {\r\n        seed(value);\r\n    }\r\n\r\n    void seed(UIntType value = defaultSeed)\r\n    {\r\n        static if (w == UIntType.sizeof * 8)\r\n        {\r\n            mt[0] = value;\r\n        }\r\n        else\r\n        {\r\n            static assert(max + 1 > 0);\r\n            mt[0] = value % (max + 1);\r\n        }\r\n        for (mti = 1; mti < n; ++mti) {\r\n            mt[mti] =\r\n                cast(UIntType)\r\n                (1812433253UL * (mt[mti-1] ^ (mt[mti-1] >> (w - 2))) + mti);\r\n        }\r\n        popFront;\r\n    }\r\n\r\n    void popFront()\r\n    {\r\n        if (mti == size_t.max) seed();\r\n        enum UIntType\r\n            upperMask = ~((cast(UIntType) 1u <<\r\n                           (UIntType.sizeof * 8 - (w - r))) - 1),\r\n            lowerMask = (cast(UIntType) 1u << r) - 1;\r\n        static immutable UIntType mag01[2] = [0x0UL, a];\r\n\r\n        ulong y = void;\r\n\r\n        if (mti >= n)\r\n        {\r\n            \/* generate N words at one time *\/\r\n\r\n            int kk = 0;\r\n            const limit1 = n - m;\r\n            for (; kk < limit1; ++kk)\r\n            {\r\n                y = (mt[kk] & upperMask)|(mt[kk + 1] & lowerMask);\r\n                mt[kk] = cast(UIntType) (mt[kk + m] ^ (y >> 1)\r\n                        ^ mag01[cast(UIntType) y & 0x1U]);\r\n            }\r\n            const limit2 = n - 1;\r\n            for (; kk < limit2; ++kk)\r\n            {\r\n                y = (mt[kk] & upperMask)|(mt[kk + 1] & lowerMask);\r\n                mt[kk] = cast(UIntType) (mt[kk + (m -n)] ^ (y >> 1)\r\n                                         ^ mag01[cast(UIntType) y & 0x1U]);\r\n            }\r\n            y = (mt[n -1] & upperMask)|(mt[0] & lowerMask);\r\n            mt[n - 1] = cast(UIntType) (mt[m - 1] ^ (y >> 1)\r\n                                        ^ mag01[cast(UIntType) y & 0x1U]);\r\n\r\n            mti = 0;\r\n        }\r\n\r\n        y = mt[mti++];\r\n\r\n        \/* Tempering *\/\r\n        y ^= (y >> temperingU);\r\n        y ^= (y << temperingS) & temperingB;\r\n        y ^= (y << temperingT) & temperingC;\r\n        y ^= (y >> temperingL);\r\n\r\n        _y = cast(UIntType) y;\r\n    }\r\n\r\n    @property UIntType front()\r\n    {\r\n        if (mti == size_t.max) seed();\r\n        return _y;\r\n    }\r\n\r\n    enum bool empty = false;\r\n\r\n    private UIntType mt[n];\r\n    private size_t mti = size_t.max; \/* means mt is not initialized *\/\r\n    UIntType _y = UIntType.max;\r\n}\r\n\r\nalias MersenneTwisterEngine!(uint, 32, 624, 397, 31, 0x9908b0df, 11, 7,\r\n                             0x9d2c5680, 15, 0xefc60000, 18)\r\n    Mt19937;\r\n\r\nalias Mt19937 Random;\r\n\r\n\/\/ Switch to signed ints and the bug goes away.\r\nuint uniform(uint _a, uint _b, ref Random urng)\r\n{\r\n    if (_b == 0)\r\n    {\r\n        _b++;\r\n    }\r\n    _b--;\r\n\r\n    auto myRange = _b - _a;\r\n\r\n    \/\/ This must be written as !myRange.  If it's written as myRange == 0,\r\n    \/\/ the bug an no longer be reproduced.\r\n    if (!myRange) return _a;\r\n    printf(\"myRange = %d\\n\", myRange);  \/\/ 0 on iter 401.\r\n    uint bucketSize = 1 + (urng.max - urng.min - myRange) \/ (myRange + 1);\r\n    uint r;\r\n    do\r\n    {\r\n        r = cast(uint) ((urng.front - urng.min) \/ bucketSize);\r\n        urng.popFront;\r\n    }\r\n    while (r > myRange);\r\n    return cast(typeof(return)) (_a + r);\r\n}\r\n\r\nvoid main() {\r\n    Random gen = Random(84050684);\r\n    foreach(i; 0..10_000) {\r\n        printf(\"i = %d\\n\", i);\r\n        uint len = uniform(0, 1000, gen);\r\n        printf(\"len = %d\\n\", len);\r\n        int k = uniform(0, len, gen);\r\n        printf(\"k = %d\\n\", k);\r\n    }\r\n}\r\n}}}","created_on":"2011-02-16T03:51:35.549032+00:00","user":"dsimcha","updated_on":null,"issue":143,"id":372916},{"content":"Happens on GCC 4.5.2 builds, too.","created_on":"2011-02-19T21:18:15.924551+00:00","user":"dsimcha","updated_on":null,"issue":143,"id":377245},{"content":"Actually, I think I've cracked this on the head. I didn't see it initially because I usually build with checking enabled in my build directories.\r\n\r\nCan you give <<changeset 520>> a try on the original example? (or at the very least make the one-liner change locally :)\r\n\r\nRegards","created_on":"2011-04-05T18:17:07.971404+00:00","user":"ibuclaw","updated_on":null,"issue":143,"id":428975},{"content":"Yep, fixed.","created_on":"2011-04-06T00:17:30.489365+00:00","user":"dsimcha","updated_on":null,"issue":143,"id":429440},{"content":"Are you sure everything is in its right place? :)","created_on":"2011-04-06T07:03:41.775955+00:00","user":"ibuclaw","updated_on":null,"issue":179,"id":429695},{"content":"In the unlikely event you aren't doing anything in a strange way, <<changeset 521>> explicitly adds the zlib directory to the list of searched directories for headers. If you still get problems, there's something else wrong with your build system\/directory that I'd imagine be outside the scope of something in this project that would fix it.","created_on":"2011-04-06T07:43:23.594543+00:00","user":"ibuclaw","updated_on":null,"issue":179,"id":429783},{"content":"> Program asserts runtime, 'f' is incorrectly cast to int (somehow ends up turning into -2147483648 when it should be -1).\r\n\r\nWrong way round, float.infinity is -1 when it should be -2147483648.","created_on":"2010-11-16T20:18:06.004811+00:00","user":"ibuclaw","updated_on":null,"issue":99,"id":291630},{"content":"This is fixed in <<changeset 513>> - forgot to link it.\r\n\r\nThough the value of float.infinity when cast to int may still waiver on accounts to the effect enabled optimizations have on precision. But at least you can trust it to be either -2147483648 or 2147483647. ;-)","created_on":"2011-04-06T16:26:53.401126+00:00","user":"ibuclaw","updated_on":null,"issue":99,"id":430376},{"content":null,"created_on":"2011-04-07T02:37:34.226537+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":430911},{"content":null,"created_on":"2011-04-07T02:32:24.754684+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":430907},{"content":null,"created_on":"2011-04-07T02:35:27.037745+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":430908},{"content":null,"created_on":"2011-04-07T02:36:41.047129+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":430910},{"content":null,"created_on":"2011-04-07T02:45:03.382861+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":430919},{"content":"> Oddly enough, writefln works just fine. It's just format that has the problem.\r\n\r\nstd.stdio uses D-style varargs (as in, it's all templated now).\r\n\r\nI think I'm just going to revert <<changeset 508>> - as it's just causing too much hassle on GCC ports where the va type isn't already a pointer.\r\n\r\nI have borrowed a 64bit workstation for the weekend, so am currently running the testsuite on it (apart from this report, there are only three other bugs revealed by it - one of which being <<issue 164>> - so going to whip them all up with one stone). Oh, and will also give me a chance to use\/poke 64bit IASM into being usable enough to enable D_InlineAsm_X86_64 code. :)\r\n\r\nRegards","created_on":"2011-04-07T07:48:46.639881+00:00","user":"ibuclaw","updated_on":null,"issue":180,"id":431165},{"content":"Hmm, I find it a little strange that std.stdio and std.format are different, it seems like a waste of effort to have that kind of duplication in the library. I don't like reading the source code for phobos, but I end up having to because of the terrible documentation.\r\n\r\nAnyway, that sounds cool, let me know if I can help with testing.","created_on":"2011-04-07T15:30:31.424898+00:00","user":"ricochet1k","updated_on":null,"issue":180,"id":431615},{"content":"Sure! If possible, could you give 64bit IASM a try? I'd like for it to be stable enough to turn on D_InlineAsm_X86_64. (any code help to fix any oddities would be bonus :)","created_on":"2011-04-07T15:55:18.030449+00:00","user":"ibuclaw","updated_on":null,"issue":180,"id":431669},{"content":"<<changeset 522>>","created_on":"2011-04-07T16:17:04.696320+00:00","user":"ibuclaw","updated_on":null,"issue":180,"id":431684},{"content":null,"created_on":"2011-04-09T17:57:25.326652+00:00","user":"dsimcha","updated_on":null,"issue":183,"id":433972},{"content":"I've said this with 4.4 and 4.5 - blah blah blah, if you want it done, do it yourself.\r\n\r\nI will not bother until after 0.26 branch\/release, and definitely not until after 4.0 (and probably 4.1) are dropped. But certainly before Ubuntu 11.10 (and certainly in Debian Unstable by June\/July :)","created_on":"2011-04-13T23:47:18.518692+00:00","user":"ibuclaw","updated_on":null,"issue":183,"id":439937},{"content":"Makes sense.  I didn't mean to come off as pushy and I know maintaining GDC is a huge job for one person.  I agree this isn't a high priority item and don't need it right now myself.  I just thought there should be an issue open for it so that it's officially on the long-term agenda, etc.","created_on":"2011-04-14T01:23:52.128256+00:00","user":"dsimcha","updated_on":"2011-04-14T01:24:12.124586+00:00","issue":183,"id":440006},{"content":"That's OK, and your not being pushy (during the pending 4.5 port, I'd get a bug report\/personal message every other few days from someone) - but I am indeed stern on the issue. :~)\r\n\r\nLogic mostly being if someone else can port it in the meantime, I'll give them the write access to get it done.","created_on":"2011-04-14T08:49:09.400966+00:00","user":"ibuclaw","updated_on":null,"issue":183,"id":440331},{"content":"Hey,\r\n\r\nHow is this coming along? I'm wanting to help port it if possible but I have no experience with the D compiler internals (the reason I want to help is to understand about the internals because I am building a OS in D for fun and want to implement a simple compiler :) ). Building an OS in D also requires knowledge about the D compiler because I cause it to seg fault when I alter a local object.d (since I need classes and a small working base to load into memory)\r\n\r\nHave you got any tips\/hints where I should start? I'll fork your repository and start trying some changes if you point me in the right direction :)\r\n\r\nThanks,\r\n\r\nNebster","created_on":"2011-06-05T01:32:51.707739+00:00","user":"nebster","updated_on":null,"issue":183,"id":507432},{"content":"Hi,\r\n\r\nI'm trying to compile D2 compiler with gcc 4.6.1 on Gentoo 64bit, But phobos compilation fails:\r\n\r\n\/var\/tmp\/portage\/dev-lang\/gdc-9999\/work\/gdc\/gcc-4.6.1\/obj\/.\/gcc\/gdc -B\/var\/tmp\/portage\/dev-lang\/gdc-9999\/work\/gdc\/gcc-4.6.1\/obj\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o core\/cpuid.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu  -c ..\/..\/..\/libphobos\/core\/cpuid.d\r\n..\/..\/..\/libphobos\/core\/cpuid.d: Assembler messages:\r\n..\/..\/..\/libphobos\/core\/cpuid.d:758: Error: operand type mismatch for `pop'\r\n..\/..\/..\/libphobos\/core\/cpuid.d:761: Error: operand type mismatch for `push'\r\n..\/..\/..\/libphobos\/core\/cpuid.d:764: Error: operand type mismatch for `pop'\r\n\r\nCould you make phobos compilation optionnal ?\r\nI'd like to build it in a separate ebuild.\r\n","created_on":"2011-07-17T10:23:18.637752+00:00","user":null,"updated_on":null,"issue":183,"id":561338},{"content":"Support for 4.6.x has been committed to trunk.","created_on":"2011-07-24T15:26:14.384561+00:00","user":"ibuclaw","updated_on":null,"issue":183,"id":570797},{"content":"They're not supported in D1, no. :~)","created_on":"2011-04-09T19:13:58.180489+00:00","user":"ibuclaw","updated_on":null,"issue":184,"id":434018},{"content":"Oh right, the new **-v2** switch. It just bite me.\r\n\r\nHow do D1 people survive without ref returns? :)","created_on":"2011-04-09T20:18:59.935328+00:00","user":"Andrej08","updated_on":null,"issue":184,"id":434073},{"content":"Pointers.","created_on":"2011-04-09T20:20:26.808732+00:00","user":"venix1","updated_on":null,"issue":184,"id":434076},{"content":"Quite easily... :)\r\n\r\nJust run: .\/gcc\/d\/setup-gcc.sh -v2 --update\r\n\r\nThat way your source tree will be updated without the need to repatch GCC again.\r\n\r\nRegards","created_on":"2011-04-09T20:23:46.412889+00:00","user":"ibuclaw","updated_on":null,"issue":184,"id":434080},{"content":"It looks like there's already an alias in \"**opData64**\" in \"**d-asm-i386.h**\", line 1237:\r\n{{{\r\n{ \"cmpxch16b\", Op_cmpxchg8b },\r\n}}}\r\n\r\nThis might be okay, since cmpxch8b and cmpxch16b use the same opcode (0F C7).\r\n\r\nThe Instruction Set Reference (http:\/\/www.intel.com\/Assets\/PDF\/manual\/253666.pdf), however, says that...\r\n\r\n\/\/In 64-bit mode, default operation size is 64 bits. Use of the REX.W prefix promotes \r\noperation to 128 bits. Note that CMPXCHG16B requires that the destination \r\n(memory) operand be 16-byte aligned. See the summary chart at the beginning of \r\nthis section for encoding data and limits. For information on the CPUID flag that indicates CMPXCHG16B, see page 3-212.\/\/\r\n\r\nREX.W prefix? Any clue?","created_on":"2011-05-01T10:23:36.693903+00:00","user":"nischu7","updated_on":null,"issue":204,"id":460844},{"content":"In the next frontend update, the cmpxch8b and cmpxch16b instruction will be renamed to their intel instruction names, and the mnemonic in place removed.\r\n\r\nYou needn't worry about the VEX prefix - it's left to the job of the i386 backend to get that right (have a look at ix86_attr_length_vex_default in i386.c)","created_on":"2011-05-01T11:08:48.534233+00:00","user":"ibuclaw","updated_on":null,"issue":204,"id":460879},{"content":"https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/21128c37d917","created_on":"2011-06-05T19:58:54.290154+00:00","user":"ibuclaw","updated_on":null,"issue":204,"id":508133},{"content":"I can think of two solutions to the problem but I don't know how either option would impact the backend.\r\n\r\n# Enable TARGET_C99_FUNCTIONS for MinGW\r\n# Make all {{{built_in_decls}}} implicit.\r\n\r\n\r\n","created_on":"2011-04-11T08:41:36.163650+00:00","user":"venix1","updated_on":null,"issue":185,"id":435492},{"content":null,"created_on":"2011-04-11T08:43:12.932468+00:00","user":"venix1","updated_on":null,"issue":185,"id":435499},{"content":null,"created_on":"2011-04-11T08:43:20.877135+00:00","user":"venix1","updated_on":null,"issue":185,"id":435501},{"content":null,"created_on":"2011-04-11T08:43:26.440327+00:00","user":"venix1","updated_on":null,"issue":185,"id":435503},{"content":null,"created_on":"2011-04-11T08:44:31.850139+00:00","user":"venix1","updated_on":null,"issue":185,"id":435508},{"content":"Ain't that something. :)\r\n\r\nI should have it sorted before lunch break.","created_on":"2011-04-11T11:17:46.192603+00:00","user":"ibuclaw","updated_on":null,"issue":185,"id":435683},{"content":"<<changeset 532>>","created_on":"2011-04-11T11:49:09.930662+00:00","user":"ibuclaw","updated_on":null,"issue":185,"id":435714},{"content":"Finally got around to testing the changes.  Everything seems in order.","created_on":"2011-04-16T20:57:31.571598+00:00","user":"venix1","updated_on":null,"issue":185,"id":443580},{"content":">  \/\/Can GDC (or DMD) be built as a cross compiler ?? e.g. targeting ARM or MIPS or PowerPC, etc ?? I'm presuming this should be no problem for GCC ??\/\/\n\nYes, but first you'll need to setup a cross-compiler toolchain first. As as, ar, objdump, strip and other binutils don't come bundled with GCC (require a separate step to setup and install).\n\n> \/\/My development\/host platforms are OS X and Debian Linux. Are there any prebuilt binaries for such cross-compilers ??\/\/\n\nNope, I've only really tested  Arm <-> i386 and MinGW <-> Linux cross compilers in the past.\n\n> \/\/BTW, does GDC generate C++ code for GCC to compile, or does it directly generate object code ?? I'm presuming the latter.\/\/\n\nNeither, it generates straight to the target platform's asm code. It is the job of the toolchain to compile to object code \/ link.\n\n> \/\/Can D be used in low-level drivers for Linux or other RTOS (e.g. freertos) ??\/\/\n\nD is not really suitable for a freestanding environment. Especially if you intend to use any non-POD features of the language (C++ has the same problem too).\n\n\nNow, call me Ulrich Drepper, but this is not a bug report.\n\nYou can post questions \/ support requests in the ML\nhttp:\/\/www.digitalmars.com\/pnews\/indexing.php?server=news.digitalmars.com&group=D.gnu\n\nBye.","created_on":"2011-04-12T11:29:20.554047+00:00","user":"ibuclaw","updated_on":"2011-04-12T11:32:23.190944+00:00","issue":186,"id":437347},{"content":"Reimplemented.\r\n\r\nI should have thought that lrealpath (as supplied by GCC) should be OK with MinGW in getting the absolute file path. If not, let us know.","created_on":"2011-04-13T23:34:38.583967+00:00","user":"ibuclaw","updated_on":null,"issue":188,"id":439922},{"content":"Works on MinGW.","created_on":"2011-04-14T00:41:11.911259+00:00","user":"venix1","updated_on":null,"issue":188,"id":439981},{"content":"<<changeset 537>>","created_on":"2011-04-14T23:07:45.150597+00:00","user":"ibuclaw","updated_on":null,"issue":188,"id":441384},{"content":"I need to know more about your environment.  This sounds like a duplicate of <<issue 185>>.","created_on":"2011-04-14T21:01:13.541696+00:00","user":"venix1","updated_on":null,"issue":189,"id":441269},{"content":"Revision: 536:62c8038af25a using GCC-4.4.5","created_on":"2011-04-14T21:00:55.070738+00:00","user":null,"updated_on":null,"issue":189,"id":441268},{"content":"What OS\/Architecture?  Doesn't sound like it's a duplicate but definitely related.  Something I learned while researching <<issue 185 >> is the name built_in_decls is a bit of a misnomer.  I get the impression that it requires support from the platform libraries.","created_on":"2011-04-14T21:16:41.916344+00:00","user":"venix1","updated_on":"2011-04-14T21:17:21.021090+00:00","issue":189,"id":441282},{"content":"I'm running Ubuntu 10.10. Architecture is 386. Uname -a gives the following:\r\n\r\nLinux stonemac 2.6.35-28-generic #50-Ubuntu SMP Fri Mar 18 19:00:26 UTC 2011 i686 GNU\/Linux\r\n\r\nI built GDC using the short tutorial on the first page (using -v2 for GDC) and a  GCC 4.4.5 tarball and a fresh check-out.\r\n\r\nRegards","created_on":"2011-04-14T21:41:37.552218+00:00","user":null,"updated_on":null,"issue":189,"id":441301},{"content":"Another teething issue with migrating to intrinsically handled math functions.\r\n\r\n<<changeset 538>>","created_on":"2011-04-14T23:15:32.937384+00:00","user":"ibuclaw","updated_on":null,"issue":189,"id":441393},{"content":null,"created_on":"2011-04-14T23:21:49.615248+00:00","user":"venix1","updated_on":null,"issue":189,"id":441396},{"content":"An observation I made using GDB.\n\n{{{ exp = built_in_decls[BUILT_IN_SQRTL]; }}} is called.  When I inspect exp it says valued optimized out, because it's allocated to the register.\n\nThe next line {{{gcc_assert(exp);}}} is what causes the ICE.  Printing the value of exp returns 0x0.  So I print the value of {{{built_in_decls[BUILT_IN_SQRTL];}}} which is not 0x0!\n\nTo verify this, I let the compiler throw the ICE then I restarted it and manually set {{{exp = built_in_decls[BUILT_IN_SQRTL];}}} which did not ICE.\n\nEdit: Didn't mean to switch status, bitbucket did it for me.  Not sure why GDB showed that statement as executing. I suppose that makes this statement false.","created_on":"2011-04-14T23:18:20.360648+00:00","user":"venix1","updated_on":"2011-04-14T23:23:53.898473+00:00","issue":189,"id":441395},{"content":"> Not sure why GDB showed that statement as executing. I suppose that makes this statement false.\r\n\r\nDebugging optimized code tends to jump around a bit like that. :)","created_on":"2011-04-15T10:19:37.764186+00:00","user":"ibuclaw","updated_on":null,"issue":189,"id":442006},{"content":null,"created_on":"2011-04-12T22:16:13.483429+00:00","user":"venix1","updated_on":null,"issue":187,"id":438312},{"content":"The problem occurred after <<changeset 510>>.","created_on":"2011-04-12T22:48:19.216720+00:00","user":"venix1","updated_on":null,"issue":187,"id":438354},{"content":"I believe the error messages can be directly reproduced by using {{{typeid}}}.  \r\n\r\n{{{\r\n#!d\r\n\/\/ module Foo.d\r\nstruct Foo\r\n{\r\n}\r\n---\r\n\/\/ module main.d\r\nimport Foo;\r\n\r\nTypeInfo f = typeid(Foo);\r\n\r\n--- \r\n\/\/ Error\r\nC:\\{...}\\ccmvukgR.o:Foo.d:(.data+0x0): multiple definition of `_D20TypeInfo_S5Type13Foo6__initZ'\r\nC:\\{...}\\cc0au7wN.o:main.d:(.data+0x4): first defined here\r\n}}}\r\n\r\nOn the assumption this wasn't just  MinGW problem, I tried reproducing it on linux.\r\n{{{\r\n$ nm main.o\r\n                 U _D10TypeInfo_g6__initZ\r\n                 U _D15TypeInfo_Struct6__vtblZ\r\n0000000000000010 V _D18TypeInfo_S3Foo3Foo6__initZ\r\n0000000000000080 D _D4main12__ModuleInfoZ\r\n0000000000000000 D _D4main1fC8TypeInfo\r\n0000000000000000 t _D4main9__modinitFZv\r\n                 U _Dmodule_ref\r\n00000000000000f0 d __mod_ref.1671\r\n\r\n$ nm Foo.o\r\n                 U _D10TypeInfo_g6__initZ\r\n                 U _D15TypeInfo_Struct6__vtblZ\r\n0000000000000000 V _D18TypeInfo_S3Foo3Foo6__initZ\r\n0000000000000070 D _D3Foo12__ModuleInfoZ\r\n0000000000000000 R _D3Foo3Foo6__initZ\r\n0000000000000000 t _D3Foo9__modinitFZv\r\n                 U _Dmodule_ref\r\n00000000000000e0 d __mod_ref.1672\r\n}}}\r\n\r\n\"V\" means a weak reference.  I interpreted this to mean that GDC is emitting weak symbols for Linux but failing to do so for MinGW.\r\n\r\nThis was confirmed by inspecting the assembly output.  Linux has {{{.weak}}} and MinGW has {{{.globl}}}\r\n\r\n","created_on":"2011-04-14T02:14:02.594460+00:00","user":"venix1","updated_on":null,"issue":187,"id":440027},{"content":"If you can bisect the changes in d-objfile.cc before I can, go ahead.\r\n\r\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/8106bf3343e9#chg-d\/d-objfile.cc\r\n\r\nRegards","created_on":"2011-04-14T14:55:14.662882+00:00","user":"ibuclaw","updated_on":null,"issue":187,"id":440752},{"content":"It looks like the culprit is {{{ObjectFile::outputStaticSymbol}}} before<<changeset 513  >>it also set DECL_COMDAT to 1.  When the code got refactored that statement didn't survive.\r\n\r\nWhen I added that statement, the errors went away.  \r\n\r\nAfter reading {{{make_decl_one_only}}} in varasm.c and tracing the code.  The following section stands out.\r\n\r\n{{{\r\n#!c\r\n  if (SUPPORTS_ONE_ONLY)\r\n    {\r\n#ifdef MAKE_DECL_ONE_ONLY\r\n      MAKE_DECL_ONE_ONLY (decl);\r\n#endif\r\n      DECL_COMDAT_GROUP (decl) = comdat_group;\r\n    }\r\n}}}\r\n\r\nAfter tracing the code in GDB it appears that SUPPORTS_ONE_ONLY is defined but not MAKE_DECL_ONE_ONLY.  \r\n\r\nI believe this may be a bug\/issue with GCC.  {{{gcc\/config\/i386\/cygmingw.h}}} defines SUPPORTS_ONE_ONLY but does not define MAKE_DECL_ONE_ONLY.\r\n\r\nThe included patch will set DECL_COMDAT for MinGW.\r\n\r\n\r\n\r\n\r\n\r\n","created_on":"2011-04-14T21:04:47.697445+00:00","user":"venix1","updated_on":null,"issue":187,"id":441270},{"content":"Forgot to prune the patch first.\n\nEdit: I think I've commented on bitbucket's issue system before...  However all 3 file links point to the same place so it works.","created_on":"2011-04-14T21:31:40.972755+00:00","user":"venix1","updated_on":"2011-04-14T21:36:27.537810+00:00","issue":187,"id":441293},{"content":"<<changeset 540>>","created_on":"2011-04-15T11:53:11.256718+00:00","user":"ibuclaw","updated_on":null,"issue":187,"id":442077},{"content":"Just realized that pthread.patch and bitmanip.patch can be applied with p1, but file.patch needs p0. Sorry, didn't realize they weren't uniform.","created_on":"2011-04-18T00:02:53.014886+00:00","user":"debio","updated_on":null,"issue":193,"id":444732},{"content":"Regarding the stat64 structure:\r\n\r\nI ran a small C test program on my arm box (debian squeeze) to output the size of the stat64 structure and it's members. First number is the size of the member, second its offset:\r\n\r\n{{{\r\nsizeof(stat64): 104 0\r\nsizeof(stat64.st_dev): 8 0\r\nsizeof(stat64.__pad1): 4 8\r\nsizeof(stat64.__st_ino): 4 12\r\nsizeof(stat64.st_mode): 4 16\r\nsizeof(stat64.st_nlink): 4 20\r\nsizeof(stat64.st_uid): 4 24\r\nsizeof(stat64.st_gid): 4 28\r\nsizeof(stat64.st_rdev): 8 32\r\nsizeof(stat64.__pad2): 4 40\r\nsizeof(stat64.st_size): 8 48\r\nsizeof(stat64.st_blksize): 4 56\r\nsizeof(stat64.st_blocks): 8 64\r\nsizeof(stat64.st_atim): 8 72\r\nsizeof(stat64.st_mtim): 8 80\r\nsizeof(stat64.st_ctim): 8 88\r\nsizeof(stat64.st_ino): 8 96\r\n}}}\r\n\r\nSame output from a D program with the patch from this bugreport:\r\n{{{\r\nstat64: 96 0\r\nstat64.st_dev: 8 0\r\nstat64.__pad1: 4 8\r\nstat64.__st_ino: 4 12\r\nstat64.st_mode: 4 16\r\nstat64.st_nlink: 4 20\r\nstat64.st_uid: 4 24\r\nstat64.st_gid: 4 28\r\nstat64.st_rdev: 8 32\r\nstat64.__pad2: 4 40\r\nstat64.st_size: 8 44\r\nstat64.st_blksize: 4 52\r\nstat64.st_blocks: 8 56\r\nstat64.st_atime: 4 64\r\nstat64.st_atimensec: 4 68\r\nstat64.st_mtime: 4 72\r\nstat64.st_mtimensec: 4 76\r\nstat64.st_ctime: 4 80\r\nstat64.st_ctimensec: 4 84\r\nstat64.st_ino64: 8 88\r\n\r\n\r\n}}}\r\n\r\n**Here's the definition from the C header:**\r\n{{{\r\n#ifdef __USE_LARGEFILE64\r\nstruct stat64\r\n  {\r\n    __dev_t st_dev;\t\t\t\/* Device.  *\/\r\n    unsigned int __pad1;\r\n\r\n    __ino_t __st_ino;\t\t\t\/* 32bit file serial number.\t*\/\r\n    __mode_t st_mode;\t\t\t\/* File mode.  *\/\r\n    __nlink_t st_nlink;\t\t\t\/* Link count.  *\/\r\n    __uid_t st_uid;\t\t\t\/* User ID of the file's owner.\t*\/\r\n    __gid_t st_gid;\t\t\t\/* Group ID of the file's group.*\/\r\n    __dev_t st_rdev;\t\t\t\/* Device number, if device.  *\/\r\n    unsigned int __pad2;\r\n    __off64_t st_size;\t\t\t\/* Size of file, in bytes.  *\/\r\n    __blksize_t st_blksize;\t\t\/* Optimal block size for I\/O.  *\/\r\n\r\n    __blkcnt64_t st_blocks;\t\t\/* Number 512-byte blocks allocated. *\/\r\n#ifdef __USE_MISC\r\n    \/* Nanosecond resolution timestamps are stored in a format\r\n       equivalent to 'struct timespec'.  This is the type used\r\n       whenever possible but the Unix namespace rules do not allow the\r\n       identifier 'timespec' to appear in the <sys\/stat.h> header.\r\n       Therefore we have to handle the use of this header in strictly\r\n       standard-compliant sources special.  *\/\r\n    struct timespec st_atim;\t\t\/* Time of last access.  *\/\r\n    struct timespec st_mtim;\t\t\/* Time of last modification.  *\/\r\n    struct timespec st_ctim;\t\t\/* Time of last status change.  *\/\r\n#else\r\n    __time_t st_atime;\t\t\t\/* Time of last access.  *\/\r\n    unsigned long int st_atimensec;\t\/* Nscecs of last access.  *\/\r\n    __time_t st_mtime;\t\t\t\/* Time of last modification.  *\/\r\n    unsigned long int st_mtimensec;\t\/* Nsecs of last modification.  *\/\r\n    __time_t st_ctime;\t\t\t\/* Time of last status change.  *\/\r\n    unsigned long int st_ctimensec;\t\/* Nsecs of last status change.  *\/\r\n#endif\r\n    __ino64_t st_ino;\t\t\t\/* File serial number.\t\t*\/\r\n  };\r\n#endif\r\n}}}\r\n\r\nSo: The fields in the d stat64 structure are correct. \"static assert(struct_stat64.sizeof == 88);\" is wrong, without alignment it must be 96. But we also have to get alignment right, and then it must be 104.","created_on":"2011-04-22T08:25:51.017028+00:00","user":null,"updated_on":null,"issue":193,"id":451069},{"content":"I apologize, I double checked the sizes for the pthread patch and found everything was identical to x86, and assumed that the same would hold for stat64. Apparently that was a bad assumption to make.","created_on":"2011-04-22T18:12:38.201816+00:00","user":"debio","updated_on":null,"issue":193,"id":451562},{"content":"Yeah, The stat64 definition is identical, that's why the difference isn't obvious. I think ARM\/x86 might have different default alignments. It seems in ARM C code 8byte variables must be aligned to multiple-of-8 offsets? I'm not sure how gdc should behave in this case though: Should data alignment in d structs match the data alignment of c structs on the same architecture?","created_on":"2011-04-22T19:16:07.119364+00:00","user":"jpf","updated_on":null,"issue":193,"id":451599},{"content":"As of the latest trunk, these patches are no longer needed as the system struct representations have been generalized to 32 bit and 64 bit versions.","created_on":"2011-12-20T00:13:07.451157+00:00","user":"debio","updated_on":null,"issue":193,"id":888606},{"content":"Shouldn't this go into a phobos pull request rather than being gdc specific?","created_on":"2011-09-27T23:50:04.724573+00:00","user":"trass3r","updated_on":null,"issue":193,"id":674327},{"content":"It probably should, but doing so only makes sense after this works on GDC, and we can verify that everything is correct.","created_on":"2011-10-30T21:41:34.800628+00:00","user":"debio","updated_on":null,"issue":193,"id":748949},{"content":"Can you create an interface file of the gcc.builtins module?\r\n\r\n{{{\r\necho \"module gcc.builtins;\" > builtins.d\r\n}}}\r\n\r\nAs you'll be using gdc in the build directory, will need to adapt the calling command. :)\r\n\r\n{{{\r\n\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -fsyntax-only -fintfc builtins.d\r\n}}}\r\n\r\nAnd post the outputted builtins.di file\r\n\r\nRegards","created_on":"2011-04-17T09:06:19.162974+00:00","user":"ibuclaw","updated_on":null,"issue":192,"id":443928},{"content":"I was about to post that I get these errors:\n{{{\n[debio@cloud test]$ echo \"module gcc.builtins;\" > builtins.d\n[debio@cloud test]$ \/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/de\nbio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -fsyntax-only -fintfc builtins.d\nbuiltins.d: Error: struct gcc.builtins.__va_list conflicts with struct gcc.built\nins.__va_list at builtins.d\nobject.d: Error: module object is in file 'object.d' which cannot be read\n[debio@cloud test]$ \/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/de\nbio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -I \/home\/debio\/build\/gdc2-hg\/src\/gcc-4.4.\n5-build\/libphobos\/ -fsyntax-only -fintfc builtins.d\nbuiltins.d: Error: struct gcc.builtins.__va_list conflicts with struct gcc.built\nins.__va_list at builtins.d\n[debio@cloud test]$\n}}}\nBut apparently the file is generated anyway:\nhttp:\/\/paste.pocoo.org\/show\/373226\/","created_on":"2011-04-17T12:21:05.292584+00:00","user":"debio","updated_on":"2011-04-17T12:25:11.480650+00:00","issue":192,"id":444012},{"content":"<<changeset 547>>","created_on":"2011-04-17T14:18:32.481208+00:00","user":"ibuclaw","updated_on":null,"issue":192,"id":444109},{"content":null,"created_on":"2011-05-04T12:00:38.688787+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":465420},{"content":null,"created_on":"2011-05-04T12:02:05.626887+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":465422},{"content":null,"created_on":"2011-05-04T12:02:22.720422+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":465423},{"content":"GCC-4.4 will never cease to be a PITA release. :)","created_on":"2011-05-07T07:56:04.585870+00:00","user":"ibuclaw","updated_on":null,"issue":205,"id":469576},{"content":"Oh, i just use it because is the one i downloaded last time, i will move on to newer versions to see if this is solved.","created_on":"2011-05-07T10:43:43.273995+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":469673},{"content":"I confirm that gdc with gcc 4.5.3 doesn't have this problem. However it segfaults when i try to compile the original code (the full project) in the same function that made me isolate the bug in 4.4.4. I will try to isolate it again and see if they are related...","created_on":"2011-05-09T09:08:03.972426+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":471257},{"content":"I have re-isolated it in the gdc with 4.5.3, and i think it is related, so i will post it here.\r\n\r\n{{{\r\n\r\nmodule \tbug;\r\n\r\nimport std.algorithm;\r\n\r\nclass Sam\r\n{\r\n}\r\n\r\nSam[] sams;\r\n\r\nclass Joe \r\n{\r\npublic:\r\n\t\/\/ if not in a class, it doesn't crash\r\n\t\/\/ if static, it doesn't crash\r\n\tvoid foo()\r\n\t{\r\n\t\t\/\/ if in global scope, it doesn't crash\r\n\t\t\/\/ if a static member of Joe, it doesn't crash\r\n\t\tbool com( const Sam a, const Sam b )\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\t\tsort!(com)( sams );\r\n\t}\r\n}\r\n\r\n}}}\r\n\r\nIt gives me a segmentation fault if full optimisations are enabled:\r\n\r\n{{{\r\n\r\njordi@han:~\/d2\/bug\/crosa\/gui\/engine$ gdc -c -O3 bug.d\r\nbug.d: In member function ‘foo’:\r\nbug.d:18:0: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n\r\n}}}","created_on":"2011-05-09T11:31:09.067736+00:00","user":"jordirovira","updated_on":null,"issue":205,"id":471431},{"content":null,"created_on":"2011-08-07T15:02:19.997911+00:00","user":"ibuclaw","updated_on":null,"issue":205,"id":591879},{"content":"Testcase:\n\n{{{\nJoe[] joes;\nclass Joe\n{\n    void foo()\n    {\n        sort!({ return false; })(joes);\n    }\n}\n\nstruct SortedRange(Range, alias pred)\n{\n    @property auto save()\n    {\n        typeof(this) result;\n        return result;\n    }\n}\n\nSortedRange!(Range, less)\nsort(alias less, Range)(Range r)\n{\n    return SortedRange!(Range, less)();\n}\n}}}","created_on":"2011-08-07T15:02:10.567559+00:00","user":"ibuclaw","updated_on":"2011-08-07T15:04:46.291438+00:00","issue":205,"id":591878},{"content":"<<changeset 601>>","created_on":"2011-08-07T16:51:09.249463+00:00","user":"ibuclaw","updated_on":null,"issue":205,"id":591968},{"content":"MinGW-w64 support is available with the patch queue https:\/\/bitbucket.org\/venix1\/mingw-gdc.","created_on":"2011-07-28T05:09:25.593499+00:00","user":"venix1","updated_on":null,"issue":206,"id":575969},{"content":"Could it be an issue on your end?  I have not had an issue building the latest tip with either linux or MinGW.  If your not using a clean GCC source directory, Iain did a lot of changes with 4.6 support to the way patches are applied to GCC.","created_on":"2011-07-28T05:01:30.375076+00:00","user":"venix1","updated_on":null,"issue":219,"id":575965},{"content":"Doubt it.  I have a quick n' dirty script that automates checking out the GDC code, unzipping the GDC tarball, running all the commands, etc.  This script hasn't changed, but the results have. ","created_on":"2011-07-28T16:56:10.231343+00:00","user":"dsimcha","updated_on":null,"issue":219,"id":576756},{"content":"Should be fixed <<changeset 588>>.  It was testing for hg command and exiting regardless of -hg being passed.","created_on":"2011-07-28T20:51:34.922532+00:00","user":"venix1","updated_on":null,"issue":219,"id":577060},{"content":"Issue #207 was marked as a duplicate of this issue.","created_on":"2011-05-25T18:18:57.280208+00:00","user":"debio","updated_on":null,"issue":207,"id":494684},{"content":"Duplicate of #207.\nSadness. Bitbucket wasn't responding, but it was apparently still processing requests.","created_on":"2011-05-25T18:18:57.307259+00:00","user":"debio","updated_on":"2011-05-25T18:19:44.584505+00:00","issue":207,"id":494685},{"content":"Ok fixed it, attaching a patch here. It just took me awhile to find out where {{{cppdefault.o}}} was being brought in as a dependency to cc1d.","created_on":"2011-06-02T01:43:02.055454+00:00","user":"dan.sanduleac","updated_on":null,"issue":209,"id":503973},{"content":"Causes segfault with DMD 2.057 and 2.058.  Please report this upstream.\r\n","created_on":"2012-04-12T23:24:47.344392+00:00","user":"venix1","updated_on":null,"issue":332,"id":1294752},{"content":"Done.","created_on":"2012-04-12T23:46:29.015532+00:00","user":"TurkeyMan","updated_on":null,"issue":332,"id":1294786},{"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=7895","created_on":"2012-04-13T00:06:52.081503+00:00","user":"venix1","updated_on":null,"issue":332,"id":1294839},{"content":"No D_LANGUAGE_VERSION define usually means d-make-include is missing, or wasn't created. There's nothing wrong with setup-gcc.sh, so I'll assume it's your build script?\r\n\r\nSee:\r\n{{{\r\n# 0.7 Set the D language version.  Note: This creates a file in the D\r\n# source directory.  If the file is a link, remove it first.\r\nrm -f gcc\/d\/d-make-include\r\necho \"D_LANGUAGE_VERSION=$d_lang_version\" > gcc\/d\/d-make-include\r\n}}}","created_on":"2011-06-09T23:24:36.893393+00:00","user":"ibuclaw","updated_on":null,"issue":211,"id":514518},{"content":"Apologies.  It's because I checked out the wrong branch.  I didn't notice that all the recent commits were on a branch other than default.","created_on":"2011-06-10T01:53:59.794112+00:00","user":"dsimcha","updated_on":null,"issue":211,"id":514615},{"content":null,"created_on":"2011-06-10T01:55:50.047091+00:00","user":"dsimcha","updated_on":null,"issue":211,"id":514617},{"content":"Never need to check if a struct function needs a chain.\r\n\r\n<<changeset 568>> ","created_on":"2011-06-19T09:59:18.191652+00:00","user":"ibuclaw","updated_on":null,"issue":212,"id":525715},{"content":null,"created_on":"2011-12-25T16:51:19.072880+00:00","user":"art_","updated_on":null,"issue":299,"id":904320},{"content":"Yep, regenerating \"configure\" with autoconf 2.65 fixed it here.","created_on":"2011-12-25T17:04:59.284741+00:00","user":"art_","updated_on":null,"issue":299,"id":904326},{"content":"Fixed in recent upload.","created_on":"2011-12-26T10:56:39.797139+00:00","user":"ibuclaw","updated_on":null,"issue":299,"id":905309},{"content":"hmm... I could try turning back on calling _d_arraycopy here, rather than a straight view convert.  But I'm sure there was a reason for this behaviour (which seems correct IMO - as void has no size).","created_on":"2011-12-20T12:44:06.723251+00:00","user":"ibuclaw","updated_on":null,"issue":287,"id":890276},{"content":"That behavior is a bug and has caused memory corruption in my codebase.\r\nvoid certainly has a size: static assert(void.sizeof == 1);\r\n(Note that DMD does compile the example correctly.)\r\n\r\nThis bug can be used to corrupt memory in @safe code.","created_on":"2011-12-20T17:50:14.013846+00:00","user":null,"updated_on":null,"issue":287,"id":892432},{"content":"<<changeset 714:63647d6f2b87>>","created_on":"2011-12-23T20:27:30.664097+00:00","user":"ibuclaw","updated_on":null,"issue":287,"id":902211},{"content":"Just checked, In and Out contracts are not emitted in release mode - this is not too high on the TODO list, so it may be quite some time before this is ever implemented.","created_on":"2011-04-15T20:19:27.987920+00:00","user":"ibuclaw","updated_on":null,"issue":190,"id":442609},{"content":"Duplicate of #78.","created_on":"2011-07-30T16:14:03.910393+00:00","user":"ibuclaw","updated_on":null,"issue":190,"id":579530},{"content":"Only happens when 'mixin' is used.  Ultimately, this would be a D frontend bug.\r\n\r\n<<changeset 591>> turns ICE into error, thus resolving the initial problem.\r\n\r\nRaised new report here: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=6411","created_on":"2011-07-30T16:05:17.372918+00:00","user":"ibuclaw","updated_on":null,"issue":220,"id":579516},{"content":"The windows dmd also throw  this exception: \r\n\r\nUnhandled Exception: EXCEPTION_ACCESS_VIOLATION(0xc0000005) at _rt_finalize\r\n(0x0045db0e) thread(1256)\r\n->Unhandled Exception: EXCEPTION_ACCESS_VIOLATION(0xc0000005) at _rt_finalize\r\n(0x0045db0e) thread(1256) .","created_on":"2011-03-22T08:42:58.289662+00:00","user":"longch","updated_on":null,"issue":171,"id":411810},{"content":"Bug needs more information.  If the problem also happens in DMD, may likely be a bug with the program you are building.","created_on":"2011-07-30T16:08:13.688284+00:00","user":"ibuclaw","updated_on":null,"issue":171,"id":579521},{"content":null,"created_on":"2011-04-09T16:27:40.684672+00:00","user":"axeoth","updated_on":null,"issue":182,"id":433921},{"content":"gdc-4.6 will be next package released in time for oneiric - bug report should really be raised in launchpad.","created_on":"2011-07-30T16:10:01.395858+00:00","user":"ibuclaw","updated_on":null,"issue":182,"id":579522},{"content":"OK, looking into it. We *can* do this in GCC, but the support for it is non-existent.\n\nThe way STATIC_CHAIN_DECL's currently work, you can only get the frame pointer of a locally reachable function, ie: we are nested in it, we'll find it if we keep looking up. This does not suit the needs of contract inheritance, where we are *definitely not* nested inside the function we are trying to call; looking up will find nothing and the compiler ICE if we even try (see attached patch to test\/debug yourself).\n\nSo ways we could go about this:\n# Hack around the ICEs in the GCC source. - Very bad.\n# Somehow mark non-local chain declarations for the GCC middle-end to pick-up and handle correctly. - Might be OK, remember this should only be our code we'll change anyway (see applied patches folder).\n# Create a new tree code; NONLOCAL_CHAIN_DECL, or whatever better idea someone comes up with. - Good, progresses from point no.2 and we actually have a very identifiable mark to go off, but will mean more changes in the GCC patches.\n\nThoughts?","created_on":"2010-10-28T23:49:31.383446+00:00","user":"ibuclaw","updated_on":"2010-10-28T23:51:05.230934+00:00","issue":78,"id":277858},{"content":"Issue #190 was marked as a duplicate of this issue.","created_on":"2011-07-30T16:14:03.889502+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":579529},{"content":"Bump.\r\n\r\nSTATIC_CHAIN_DECL has been removed from the compiler static chain passing redesigned.  Will look into resolving this later this week.","created_on":"2011-07-30T16:11:57.437034+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":579523},{"content":null,"created_on":"2011-07-30T16:13:10.397718+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":579526},{"content":"Issue #245 was marked as a duplicate of this issue.","created_on":"2011-10-04T16:28:34.038208+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":685245},{"content":"Raising to blocker.","created_on":"2011-10-04T16:31:21.756246+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":685249},{"content":"<<changeset 664:a736ae4b92f2>>","created_on":"2011-10-30T20:28:31.356002+00:00","user":"ibuclaw","updated_on":null,"issue":78,"id":748851},{"content":"Well, I think i misread the Makefile.  I believe **d-lang.cc** is part of cc1d, I was thinking it was part of the driver.  So what is the purpose of the driver?  To call each step in the build process?  \r\n\r\nWould it be possible to create a dummy cc1d, that determines the version of D to use and then calls the real compiler for that version?","created_on":"2011-03-03T22:12:08.148275+00:00","user":"venix1","updated_on":null,"issue":159,"id":391462},{"content":"> Can the driver choose which executable to run? cc1d1 or cc1d2 depending on command line switches.\r\n\r\nAs far as I'm aware, no. As this is hard coded in lang-specs.h","created_on":"2011-03-03T21:37:29.285544+00:00","user":"ibuclaw","updated_on":null,"issue":159,"id":391441},{"content":"Proof of concept.  \r\n\r\nI renamed the actual cc1d.exe to the form ccd1.exe and ccd2.exe.  This allows me to reuse argv[0] by modifying it in place.  I sort of guessed on argv argument to execv.  It requires a NULL terminating the array.  Which is probably not true here, just lucky.  \r\n\r\nThere seems to be an issue relating to execv and msys(only?).  When the process is replaced sometimes stdout information can exceed the terminal.  I'll move to spawnv to solve this problem.\r\n\r\nThis is based on the assumption that GCC communicates entirely via the commandline.  By creating a dummy file(below) that simply calls the proper compiler it allows the version to be selected at runtime like DMD.\r\n\r\nRight now I believe GDC separates all D2\/D1 information except for cc1d.exe.\r\n{{{\r\n#!c\r\n#include <stdio.h>\r\n#include <string.h>\r\n#import <process.h>\r\n\r\nconst int d_version = 2;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    unsigned length = strlen(argv[0]);\r\n    argv[0][length-6] = 'd';\r\n    argv[0][length-5] = '2';\r\n    \/\/ Check for version string.\r\n    \/\/ Rewrite argv[0] to use new executable.\r\n    \/\/ Call Execv\r\n    \/\/printf(\"%s %d\\n\", argv[0], argc);\r\n    execv(argv[0], (const char* const*)argv);\r\n    \r\n    return 0;\r\n}\r\n}}}\r\n\r\nWhy C instead of D?  I didn't want to bother initializing the D runtime for such a little thing and there's no guarantee D will be installed when compiling GDC.","created_on":"2011-03-13T03:35:20.325340+00:00","user":"venix1","updated_on":null,"issue":159,"id":401427},{"content":"{{{argv[argc] == NULL}}} is true for [[http:\/\/msdn.microsoft.com\/en-us\/library\/88w63h9k%28v=vs.80%29.aspx|Windows]] and [[http:\/\/www.gnu.org\/software\/libc\/manual\/html_node\/Program-Arguments.html#Program-Arguments|glibc]].\r\n\r\n\r\n\r\n","created_on":"2011-03-14T18:12:29.240492+00:00","user":"venix1","updated_on":null,"issue":159,"id":403100},{"content":"This is what I have so far.  I'm not sure how to make the driver output the -v1 option.  I know GCC can do similar things.  -Wp, and -Wl, both transfer an option to another stage in the compile process.  I'd also like to remove the option -v1 from the command line args but I won't play with that until I figure out how to send it.\n{{{\n#!c\n#include <assert.h>\n#include <process.h>\n#include <stdio.h>\n#include <string.h>\n\nstatic char d_version = '2';\n\nvoid rewrite_binary(char* arg0)\n{\n    char* cc1d = strstr(arg0, \"cc1d\");\n    \n    if (!cc1d)\n    {\n        printf(\"Compiler wrapper:  Unable to find compiler substring.\");\n        assert(0);\n    }\n        \n    cc1d[2] = 'd';\n    cc1d[3] = d_version;\n}\n\nint main(int argc, char** argv)\n{\n    int i;\n    \n    \/\/ Look for -v1.\n    for(i=0; i < argc; ++i)\n        if (strcmp(\"-v1\", argv[i]) == 0)\n            d_version = '1';\n    \n    \/\/ Rewrite argv[0] to use correct compiler.\n    rewrite_binary(argv[0]);\n\n    printf(\"%s %d\\n\", argv[0], argc);\n    execv(argv[0], (const char* const*)argv);\n    \n    return 0;\n}\n}}}\n\nEdit: In the GDC tradition, -fv1 is properly passed to the compiler.\n\nEdit: The issue with using execv. Is, on windows, it seems to act more like a spawned process instead of replacing the current running.  This causes GCC to continue with the next stage.","created_on":"2011-03-14T21:26:59.175319+00:00","user":"venix1","updated_on":"2011-03-14T21:44:21.620903+00:00","issue":159,"id":403351},{"content":"New highly experimental version.  I'm not sure the spawn issue is fixed, but I have it calling both compilers.  D2 by default, D1 if I pass **-fv1**.\r\n\r\nIt's designed to eat that argument, to avoid the compiler complaining about unhandled arguments.\r\n\r\nGetting it working is a pain.  Should work for linux too, just remove the .exe stuff.\r\n# Acquire to copies of gdc.  One compiled as D1, one  compiled as D2.\r\n# Pick one for your base.\r\n# Renamed D1's **cc1d.exe** to **ccd1.exe**\r\n# Rename D2's **cc1d.exe** to **ccd2.exe**\r\n# Compile **cc1d.c** and rename binary to **cc1d.exe**\r\n\r\n# Depending on your base, you only have to copy one of these files.\r\n# Copy **libgphobos.a** and **libgphobos2.a** into **lib** folder.\r\n# Copy **include\/d1** and **include\/d2** into **include** folder.\r\n# Attempt to compile a project using either D1 or D2.\r\n# Pray to your deity of choice.\r\n\r\nWhen GDC starts releasing again, I may script this or just release a combined version.","created_on":"2011-03-14T22:13:41.658228+00:00","user":"venix1","updated_on":null,"issue":159,"id":403394},{"content":"Took a little bit of reading up.\r\n\r\nhttp:\/\/gcc.gnu.org\/onlinedocs\/gcc-4.5.2\/gcc\/Spec-Files.html#Spec-Files\r\n\r\nIn lang-specs.h, there is:\r\n{{{\r\n\"%{!E:cc1d ...\r\n}}}\r\n\r\nThis can be substituted given a -v2 switch\r\n{{{\r\n\"%{!E:%{v2:cc1d2; v1:cc1d; :cc1d} ...\r\n}}}\r\nThe above roughly translates to \"If -v2 was specified on the command line, substitute 'cc1d2', else if -v1 was specified on the command line, substitute 'cc1d', else just substitute 'cc1d'.\"\r\n\r\nResults:\r\n{{{\r\n[iain@natty objdir]$ \/opt\/gdc\/bin\/gdc foo.d -fsyntax-only --verbose\r\nCOLLECT_GCC_OPTIONS='-fsyntax-only' '-v' '-mtune=generic' '-march=i686'\r\n \/opt\/gdc\/libexec\/gcc\/i686-pc-linux-gnu\/4.5.2\/cc1d foo.d -quiet -dumpbase foo.d -mtune=generic -march=i686 -auxbase foo -version -fsyntax-only -o \/dev\/null\r\n\r\n[iain@natty objdir]$ \/opt\/gdc\/bin\/gdc foo.d -fsyntax-only --verbose -v1\r\nCOLLECT_GCC_OPTIONS='-fsyntax-only' '-v' '-v1' '-mtune=generic' '-march=i686'\r\n \/opt\/gdc\/libexec\/gcc\/i686-pc-linux-gnu\/4.5.2\/cc1d foo.d -quiet -dumpbase foo.d -mtune=generic -march=i686 -auxbase foo -version -fsyntax-only -o \/dev\/null\r\n\r\n[iain@natty objdir]$ \/opt\/gdc\/bin\/gdc foo.d -fsyntax-only --verbose -v2\r\nCOLLECT_GCC_OPTIONS='-fsyntax-only' '-v' '-v2' '-mtune=generic' '-march=i686'\r\n \/opt\/gdc\/libexec\/gcc\/i686-pc-linux-gnu\/4.5.2\/cc1d2 foo.d -quiet -dumpbase foo.d -mtune=generic -march=i686 -auxbase foo -version -fsyntax-only -o \/dev\/null\r\n}}}\r\n\r\n\r\nGCC looks in the exec prefix path for the compiler, if not found, will throw an error:\r\n{{{\r\ngdc: error trying to exec 'cc1d2': execvp: No such file or directory\r\n}}}\r\n\r\nRegards","created_on":"2011-03-15T11:43:35.441801+00:00","user":"ibuclaw","updated_on":null,"issue":159,"id":403874},{"content":"The patch I use to allow -v1 and -v2.\r\n\r\nThe other file is the automated process used to join the two separate compilations.  It is very specific to my setup but should detail the process clearly enough to be adapted by others.","created_on":"2011-03-28T02:59:40.101496+00:00","user":"venix1","updated_on":null,"issue":159,"id":418144},{"content":"Lastest implementation used by MinGW binaries can be found [[https:\/\/bitbucket.org\/venix1\/mingw-gdc\/src|here]] under the name dual-compiler.\r\n\r\nSince it has been announced that D1 will be discontinued, There doesn't seem to be a reason to make this a part of the GDC compiler.  As it is, with the patch it's rather trivial albeit time consuming to generate a dual installation.\r\n","created_on":"2011-12-15T22:25:48.440145+00:00","user":"venix1","updated_on":null,"issue":159,"id":877726},{"content":null,"created_on":"2011-07-25T13:21:31.532069+00:00","user":"trass3r","updated_on":null,"issue":218,"id":571896},{"content":null,"created_on":"2011-07-25T13:19:19.793736+00:00","user":"trass3r","updated_on":null,"issue":218,"id":571890},{"content":null,"created_on":"2011-07-25T13:19:51.430340+00:00","user":"trass3r","updated_on":null,"issue":218,"id":571892},{"content":null,"created_on":"2011-07-25T13:20:23.829892+00:00","user":"trass3r","updated_on":null,"issue":218,"id":571893},{"content":"You didn't need to update it so many times. xD\r\n\r\nI've seen this before with 64bit, is to do with the space allocated for arguments for the pthread switch - compare the patches 4.5 -> 4.6 for gcc.c and spot the difference.\r\n\r\nDon't have time to look now, but will do later.","created_on":"2011-07-26T19:50:51.991181+00:00","user":"ibuclaw","updated_on":null,"issue":218,"id":574115},{"content":"Do you mean the missing\r\n{{{\r\n@@ -4282,6 +4286,9 @@ process_command (int argc, const char **\r\n       save_temps_prefix = NULL;\r\n     }\r\n \r\n+  if (need_pthreads)\r\n+      n_switches++;\r\n+\r\n   if (save_temps_flag && use_pipes)\r\n     {\r\n}}}","created_on":"2011-07-27T00:49:55.054143+00:00","user":"trass3r","updated_on":null,"issue":218,"id":574474},{"content":"Can reproduce this with GDC from tip (fd532d8a5181) built against GCC 4.6.1 on Arch Linux (x86_64). FWIW, it doesn't crash when using »gcc« instead of »gdc« to invoke the compiler.","created_on":"2011-07-30T10:22:29.409841+00:00","user":"klickverbot","updated_on":null,"issue":218,"id":579247},{"content":"<<changeset 590>>","created_on":"2011-07-30T15:57:45.099466+00:00","user":"ibuclaw","updated_on":null,"issue":218,"id":579507},{"content":"@trass3r, yes. :)","created_on":"2011-07-30T15:23:24.715796+00:00","user":"ibuclaw","updated_on":null,"issue":218,"id":579464},{"content":"Really fixed in <<changeset 593>>","created_on":"2011-08-01T19:26:18.700042+00:00","user":"ibuclaw","updated_on":null,"issue":218,"id":582370},{"content":null,"created_on":"2011-07-25T03:27:53.477117+00:00","user":"heromyth","updated_on":null,"issue":217,"id":571277},{"content":"It's an optimization issue, removing -O2 from the build flags allows it to compile.","created_on":"2011-07-25T18:41:09.494955+00:00","user":"venix1","updated_on":null,"issue":217,"id":572418},{"content":"-O2 or -frelease alone will not cause the ICE.  When both are used is when it occurs.","created_on":"2011-07-25T19:47:54.114170+00:00","user":"venix1","updated_on":null,"issue":217,"id":572519},{"content":"Related to the issue as https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/164\/ice-fold-constc-2792-using-stdrangezip?\r\n\r\nLike issue 164, the failure is in fold_convert_loc.  When I inspect TARGET_CANONICAL during debugging, I find two types differing only in const.\r\n\r\n\r\n\r\n\r\n\r\n","created_on":"2011-07-26T02:27:55.973019+00:00","user":"venix1","updated_on":null,"issue":217,"id":572998},{"content":"**Occurs with linux x86-64 as well.**\r\n{{{\r\n ..\/..\/..\/libphobos\/std\/file.d\r\n..\/..\/..\/libphobos\/std\/file.d: In member function ‘next’:\r\n..\/..\/..\/libphobos\/std\/file.d:2985:0: internal compiler error: in fold_convert_loc, at fold-const.c:2792\r\n}}}\r\n\r\n\r\nThe ICE is due to array types that differ in only const.\r\n{{{\r\n<record_type 1021aea0 const(DirHandle)[] readonly DI\r\n<record_type 1021aea0 DirHandle[] readonly DI\r\n}}}\r\n\r\nLooking over the function TypeDArray::toCtype().  I get the impression that ctype is generated without any const modifiers.  After which {{{gen.addTypeModifiers(ctype, mod)}}} will create a Variant of that base if necessary.\r\n\r\nThe problem I'm seeing is that ctype is generated with const regardless.\r\n{{{\r\ndiff -r b3b60fdac583 d\/d-glue.cc\r\n--- a\/d\/d-glue.cc\tMon Jul 25 14:28:10 2011 -0400\r\n+++ b\/d\/d-glue.cc\tThu Jul 28 00:17:25 2011 -0400\r\n@@ -3802,7 +3802,7 @@\r\n         {   \/* Rather than making const(T[]) and const(T)[] two distinct\r\n                types, make the former a variant of the latter, and apply\r\n                modifiers afterwards. *\/\r\n-            ctype = next->arrayOf()->toCtype();\r\n+            ctype = next->castMod(0)->arrayOf()->toCtype();\r\n         }\r\n         else\r\n         {\r\n\r\n}}}\r\n\r\nWith the following changes, the ICE went away.  The const modifer is applied to both the TypeDArray and the field next.  If TypeDArray is const, then the type is  {{{const(T[])}}}.  If next is const, the type is {{{const(T)[]}}}.  By also stripping next of const, the type is {{{T[]}}}. This patch doesn't convert {{{const(T)[]}}} to {{{T[]}}}.\r\n\r\n I haven't figured out why GDC wants a const array for the operation(Could be a separate issue?).  Looking at std.file, I see no reference to const and have not reproduced the issue outside of that module.  Looking at symbols, I think it may be a result of template Appender in std.array.\r\n\r\n\r\n\r\n","created_on":"2011-07-28T05:03:13.874907+00:00","user":"venix1","updated_on":null,"issue":217,"id":575966},{"content":"This patch makes const(T)[] and const(T[]) a variant of T[].  Iain, I need your thoughts on the issue\/solution.\r\n\r\n{{{\r\ndiff -r dff644cb9636 d\/d-glue.cc\r\n--- a\/d\/d-glue.cc\tSat Jul 30 23:54:02 2011 -0400\r\n+++ b\/d\/d-glue.cc\tMon Aug 01 11:29:08 2011 -0400\r\n@@ -3810,12 +3810,19 @@ TypeDArray::toCtype()\r\n                     \"length\", \"ptr\");\r\n         }\r\n #if V2\r\n+        tree btype;\r\n+        \r\n         if (basic[next->ty])\r\n         {   \/* Basic array type always the main variant of this record type.\r\n                Addresses problems with transparency in the const system. *\/\r\n-            tree btype = basic[next->ty]->arrayOf()->toCtype();\r\n-            TYPE_MAIN_VARIANT(ctype) = btype;\r\n+            btype = basic[next->ty]->arrayOf()->toCtype();\r\n+        } \r\n+        else\r\n+        { \/* Make const(T[]) and const(T)[] variants of T[] otherwise when next\r\n+             is const GCC will view const(T)[] and T[] as distinct types. *\/\r\n+            btype = next->castMod(0)->arrayOf()->toCtype();\r\n         }\r\n+        TYPE_MAIN_VARIANT(ctype) = btype;\r\n #endif\r\n         dkeep(ctype);\r\n     }\r\n\r\n}}}","created_on":"2011-08-01T22:07:22.286405+00:00","user":"venix1","updated_on":null,"issue":217,"id":582600},{"content":"I think this should be resolved now.\r\n\r\nSee :\r\n<<changeset 594>>, \r\n<<changeset 597>>","created_on":"2011-08-06T21:10:40.950883+00:00","user":"ibuclaw","updated_on":null,"issue":217,"id":591343},{"content":"<<changeset 685:3da453291dc3>>","created_on":"2011-12-02T04:13:12.274569+00:00","user":"ibuclaw","updated_on":null,"issue":268,"id":831918},{"content":"How are you linking?  phobos2 should be linked by default.  TLS symbols are output only if you compile a source file that defines main, WinMain or DllMain.  \r\n\r\nAre you using -v2 to compile with D2?\r\n","created_on":"2011-08-02T22:36:05.799530+00:00","user":"venix1","updated_on":null,"issue":221,"id":584395},{"content":"Yes I am using -v2 and have no main or DllMain. If I don't link phobos2 I get \r\n\r\n{{{\r\nundefined reference to `_D3std6stdint12__ModuleInfoZ'\r\n}}}\r\n\r\nin a module which imports std.stdint","created_on":"2011-08-03T01:04:24.279914+00:00","user":"Zeex","updated_on":null,"issue":221,"id":584477},{"content":"Can you append -v to your build command and post the output?  With and without linking phobos2.  {{{_D3std6stdint12__ModuleInfoZ}}} is exported by libgphobos2.a.  I'm curious why it's not being found.\r\n\r\nAre you using WinMain or building a Dll?  Right now, TLS symbols are only emitted if GDC encounters DllMain, WinMain or main while compiling a source file.\r\n\r\nAre you linking with -lgphobos2 or giving the file path?  Does an empty program {{{void main(){}}}} compile successfully?","created_on":"2011-08-03T02:34:45.756456+00:00","user":"venix1","updated_on":null,"issue":221,"id":584544},{"content":"I just tested -v (it didn't work before because of const char*'s, had to change some stuff), and there were no errors - with and without explicitly linking phobos. When I link it against phobos2 it gives me same errors: undefined reference to `__enumtls.v_blahblah`. \n\n\nAnd yes, I'm building a DLL, which has no DllMain, just a few functions and several global vars (frankly it is a plugin for another app). I tried both -lgphobos2 and a full path, still the same.\n\n\nThe empty program is OK with both -v and -v2.\n\n\n\n","created_on":"2011-08-03T09:50:16.912881+00:00","user":"Zeex","updated_on":"2011-08-03T10:04:13.870054+00:00","issue":221,"id":584974},{"content":"MinGW supplies a default DllMain if you do not.  I recommend having your own DllMain, it is required to initialize D's runtime, static constructors and garbage collector.   It is also **required** to have GDC emit your missing TLS symbols.\n\nAlso, I don't recommend mixing runtimes.  libgphobos should be used only with D1 and libgphobos2 only with D2.\n\nI would like more information on your {{{_D3std6stdint12__ModuleInfoZ}}} problem.  Regardless of why it was trying to import that symbol, it should have been found by the linker.\n\n * [[http:\/\/mirrors.zoreil.com\/webclub.kcom.ne.jp\/ma\/colinp\/win32\/dll\/make.html|Generic DllMain]]\n * [[http:\/\/www.digitalmars.com\/d\/2.0\/dll.html|D DllMain]] dll_helper is not compatible with GDC.\n * I use the following.\n{{{\n\/**\n * Handles initializing dll runtime.\n *\/\nversion (Windows)\n{\n    import std.c.windows.windows;    \n\n    extern (C) bool rt_init(ExceptionHandler dg = null)\n    extern (C) bool rt_term(ExceptionHandler dg = null)\n    \n    \/\/ Globals\n    static HINSTANCE    g_hInst;     \n    \n    extern (Windows)\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\n    {\n        int argc;\n        char** argv;\n        \n        switch (ulReason)\n        {\n            case DLL_PROCESS_ATTACH:\n                rt_init();\n                break;\n            case DLL_PROCESS_DETACH:\n                rt_term();\n                break;\n            case DLL_THREAD_ATTACH:\n            case DLL_THREAD_DETACH:\n                return false;\n        }\n        \n        g_hInst = hInstance;\n        return true;\n    }\n}\n}}}","created_on":"2011-08-03T22:17:22.856772+00:00","user":"venix1","updated_on":"2011-08-03T22:25:09.532199+00:00","issue":221,"id":586196},{"content":"Now when I add your DllMain (need to import core.runtime btw) the errors are:\n\n{{{\nobj\\Debug\\SDK_D2\\amx\\amx.o:amx.d:(.data+0xc): undefined reference to `_D3std6stdint12__ModuleInfoZ'\nobj\\Debug\\helloworld.o: In function `DllMain@12':\nD:\\samp03svr\\plugins\\samp-plugin-sdk\\HelloWorld_D2\/helloworld.d:64: undefined reference to `rt_init'\nD:\\samp03svr\\plugins\\samp-plugin-sdk\\HelloWorld_D2\/helloworld.d:67: undefined reference to `rt_term'\nobj\\Debug\\helloworld.o:helloworld.d:(.data+0x50): undefined reference to `_D4core7runtime12__ModuleInfoZ\n}}}\n\nHowever when linking against libgphobos2 the errors dissapear (and the dll works perfectly well), seems like gdc can't find it? ","created_on":"2011-08-04T07:14:58.980934+00:00","user":"Zeex","updated_on":"2011-08-04T07:16:32.308855+00:00","issue":221,"id":586561},{"content":"It sounds like GDC is wanting to link against libgphobos.  You have said your using -v2 when compiling, are you using it when linking as well?  If GDC was unable to find libgphobos2 during linking it would fail and tell you.\r\n\r\nIf you append -v to your commandline, the link stage executes the program collect2.  Notice that one of the first libraries linked is -lgphobos2.   Can you check your output?\r\n{{{\r\n c:\/mingw32\/bin\/..\/libexec\/gcc\/mingw32\/4.5.2\/collect2.exe -Bdynamic c:\/mingw32\/b\r\nin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/crt2.o c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.\r\n5.2\/crtbegin.o -Lc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2 -Lc:\/mingw32\/bin\/..\/lib\r\n\/gcc -Lc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/..\/mingw32\/lib -Lc:\/ming\r\nw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/.. C:\\Users\\venix\\AppData\\Local\\Temp\\cco6\r\n1AJh.o -lgphobos2 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -luser32\r\n -lkernel32 -ladvapi32 -lshell32 -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -l\r\nmsvcrt c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/crtend.o\r\n}}}\r\n","created_on":"2011-08-04T09:36:37.658680+00:00","user":"venix1","updated_on":null,"issue":221,"id":586710},{"content":"Huh I didn't know that -v2 is needed when linking. But the funny thing is that even with -v2 it shows the same errors (about TLS stuff), despite the fact that it links against libgphobos2 according to my output:\n \n{{{\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRAPPER=c:\/mingw32\/bin\/..\/libexec\/gcc\/mingw32\/4.5.2\/lto-wrapper.exe\nTarget: mingw32\nConfigured with: ..\/gcc-4.5.2\/configure --build=mingw32 --enable-languages=c,d --enable-threads=win32 --enable-libgomp --enable-lto --enable-fully-dynamic-string --enable-libstdcxx-debug --enable-version-specific-runtime-libs --with-gnu-ld --disable-nls --disable-win32-registry --disable-symvers --disable-werror --prefix=\/crossdev\/MinGW32\/ --with-local-prefix=\/crossdev\/MinGW32\/ --enable-cxx-flags='-fno-function-sections -fno-data-sections' --with-pkgversion=tdm-1 --enable-sjlj-exceptions --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues --disable-bootstrap\nThread model: win32\ngcc version 4.5.2 20101216 (gdc hg r582:93e92f7f5901(default), using dmd 1.067\/2.052) (tdm-1) \nCOMPILER_PATH=c:\/mingw32\/bin\/..\/libexec\/gcc\/mingw32\/4.5.2\/;c:\/mingw32\/bin\/..\/libexec\/gcc\/;c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/..\/mingw32\/bin\/\nLIBRARY_PATH=c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/;c:\/mingw32\/bin\/..\/lib\/gcc\/;c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/..\/mingw32\/lib\/;c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/\nCOLLECT_GCC_OPTIONS='-v2' '-shared' '-static-libgcc' '-o' 'helloworld.dll' '-v' '-pthread' '-mtune=i386' '-march=i386'\n c:\/mingw32\/bin\/..\/libexec\/gcc\/mingw32\/4.5.2\/collect2.exe --shared -Bdynamic -e _DllMainCRTStartup@12 --enable-auto-image-base -o helloworld.dll c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/dllcrt2.o c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/crtbegin.o -Lc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2 -Lc:\/mingw32\/bin\/..\/lib\/gcc -Lc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/..\/mingw32\/lib -Lc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/.. --kill-at amx.o amxplugin.o amxplugin-impl.o helloworld.o -lgphobos2 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -luser32 -lkernel32 -ladvapi32 -lshell32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt c:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/crtend.o\n\n}}}\n\nHere's a part of my makefile:\n\n{{{\n.SUFFIXES: .o .d .asm\n\nhelloworld.dll: amx.o amxplugin.o amxplugin-impl.o helloworld.o\n\tgdc -v2 -shared -Wl,--kill-at -static-libgcc $^ -o $@ --verbose\n.d.o:\n\tgdc -v2 -Wall -v2 -I..\/SDK_D2 -c $< -o $@\n.asm.o:\n\tyasm -f win32 --prefix=_ $< -o $@\n\n}}}","created_on":"2011-08-04T11:59:23.697536+00:00","user":"Zeex","updated_on":"2011-08-04T12:18:22.329226+00:00","issue":221,"id":586869},{"content":"TLS must be generated by the compiler.  For the compiler to generate it, you must supply a DllMain, WinMain, or main function during compilation.  If you do not, you will always get undefined TLS symbols at link time.\r\n\r\n\r\n","created_on":"2011-08-04T23:29:34.679385+00:00","user":"venix1","updated_on":null,"issue":221,"id":587864},{"content":"Slightly reduced:\r\n\r\n{{{\r\n#!d\r\nimmutable(ReflectionInfo)* reflection;\r\n\r\nvoid _sitemap()\r\n{\r\n\tbool[string] handled;\r\n\r\n\tforeach(obj; reflection.objects)\r\n\t\tif (obj.name in handled)\r\n\t\t{}\r\n}\r\n\r\nstruct ReflectionInfo\r\n{\r\n\tconst(ReflectionInfo)*[] objects; \r\n\tstring name; \r\n}\r\n}}}\r\n\r\nCouldn't get rid of the assoc. array, the foreach or the recursive objects member.","created_on":"2011-11-15T21:18:10.755605+00:00","user":"trass3r","updated_on":null,"issue":259,"id":788237},{"content":"OK, should not be setting TREE_CONSTANT on locally created variables, as their address is anything but.\r\n\r\n<<changeset 676:72c16f7ab674>>","created_on":"2011-11-16T01:50:51.821801+00:00","user":"ibuclaw","updated_on":null,"issue":259,"id":788768},{"content":"Confirmed. This fixed it, thx.","created_on":"2011-11-16T02:27:24.411662+00:00","user":"trass3r","updated_on":null,"issue":259,"id":788803},{"content":"Question, are you running a testsuite, or just compiling random bits of code with --enable-checking?","created_on":"2011-11-16T01:59:47.850277+00:00","user":"ibuclaw","updated_on":null,"issue":260,"id":788774},{"content":"Maybe related test case - should be fail compilation.\n{{{\nvoid test()\n{\n   int i;\n   ubyte[4] ub;\n   ub[] = cast(ubyte[4]) &i;\n}\n}}}","created_on":"2011-11-16T02:00:31.456428+00:00","user":"ibuclaw","updated_on":"2011-11-16T02:00:45.517886+00:00","issue":260,"id":788776},{"content":"I'm just fixing some code and while I'm on it I also run it through gdc.\r\n\r\nYour test case yields:\r\n{{{\r\n$ dmd -run test5.d \r\nDMD v2.056 DEBUG\r\ntest5.d(5): Error: e2ir: cannot cast & i of type int* to type ubyte[4LU]\r\n$ gdc test5.d \r\ntest5.d: In function 'main':\r\ntest5.d:5:0: error: conversion to non-scalar type requested\r\ntest5.d:5:0: error: type: int*, target: ubyte[4LU]\r\ntest5.d:5:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in addressOf, at d\/d-codegen.cc:3669\r\n}}}","created_on":"2011-11-16T02:11:58.007560+00:00","user":"trass3r","updated_on":null,"issue":260,"id":788788},{"content":"Works now.","created_on":"2011-11-21T23:08:54.741133+00:00","user":"trass3r","updated_on":null,"issue":260,"id":804747},{"content":"Pretty certain that was resolved here: https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/148a5a16d432#chg_d\/d-codegen.cc_oldline421\r\n\r\n\r\n<<changeset 594>>","created_on":"2011-08-06T21:30:33.437223+00:00","user":"ibuclaw","updated_on":null,"issue":222,"id":591362},{"content":"Does a small program link OK? (ie: the problem you reported earlier today would be calling arrayappendcTp).\r\n\r\nSmells like an issue with installation, rather then the compiler. :)\r\n","created_on":"2011-08-06T23:37:40.488992+00:00","user":"ibuclaw","updated_on":null,"issue":223,"id":591437},{"content":"I think I did something silly like try to link a DMD-generated object to a gdmd-generated library.  I can't reproduce this anymore.","created_on":"2011-08-07T00:15:13.363306+00:00","user":"dsimcha","updated_on":null,"issue":223,"id":591456},{"content":"Note: DMD frontend bug (garbage gets passed to the backend). :~)","created_on":"2011-04-22T21:45:34.349435+00:00","user":"ibuclaw","updated_on":"2011-04-22T21:48:14.424593+00:00","issue":198,"id":451696},{"content":null,"created_on":"2011-04-22T21:48:35.531796+00:00","user":"ibuclaw","updated_on":null,"issue":198,"id":451698},{"content":"Fixed upstream - will be merged in next frontend update.","created_on":"2011-08-07T16:52:28.304107+00:00","user":"ibuclaw","updated_on":null,"issue":198,"id":591969},{"content":"The stuff I am playing with right now is likely to expose alot of these types of bugs, 99% of them are very rare corner cases.\r\n\r\nIf you don't want me reporting them or prefer a different method, let me know.","created_on":"2011-01-07T11:14:20.827393+00:00","user":"tbone","updated_on":null,"issue":145,"id":333963},{"content":"I don't mind (so long as the example code is posted).","created_on":"2011-01-07T22:55:59.449391+00:00","user":"ibuclaw","updated_on":null,"issue":145,"id":334466},{"content":"Attached is obviously something that is a skeleton, but should define enough to compile (but not link).\r\n\r\nThis with {{{ struct AssociativeArray(Key, Value) }}} defined (and implemented) will compile.\r\n\r\nI'd expect an error or something complaining, rather than gdc segfaulting.","created_on":"2011-01-07T23:15:56.292809+00:00","user":"tbone","updated_on":null,"issue":145,"id":334484},{"content":"Fix pushed upstream: https:\/\/github.com\/D-Programming-Language\/dmd\/pull\/295","created_on":"2011-08-07T18:02:52.456348+00:00","user":"ibuclaw","updated_on":null,"issue":145,"id":592028},{"content":"Does this mean that GDC2 is mature enough that we should start reporting bugs?  I finally set up a build environment and started playing around with it in the past few days, but I wasn't sure whether I should bother reporting bugs yet, or whether GDC2 is still so much of a work in progress that my bug reports would just be noise.","created_on":"2010-11-15T22:17:27.683289+00:00","user":"dsimcha","updated_on":null,"issue":97,"id":290652},{"content":"I should hope people report bugs regardless. Afterall if no one reports it, I can either assume that:\r\n# No one uses gdc, or\r\n# There are none!\r\n\r\nRegards. :~)","created_on":"2010-11-15T22:49:43.746671+00:00","user":"ibuclaw","updated_on":null,"issue":97,"id":290689},{"content":"Not reproducible in GDC-4.5","created_on":"2011-01-28T14:53:17.748748+00:00","user":"ibuclaw","updated_on":null,"issue":97,"id":353574},{"content":"No longer reproducible on GCC-4.4","created_on":"2011-08-07T20:56:15.327569+00:00","user":"ibuclaw","updated_on":null,"issue":97,"id":592123},{"content":"No longer reproducible on GCC-4.4","created_on":"2011-08-07T20:57:31.190907+00:00","user":"ibuclaw","updated_on":null,"issue":124,"id":592126},{"content":"<<changeset 602>>","created_on":"2011-08-09T00:54:18.114780+00:00","user":"ibuclaw","updated_on":null,"issue":191,"id":594165},{"content":"I had been looking into this for a while because the same thing plagues LDC, and I just stumbled on the solution.   When DMD is run with the -lib switch, it creates an archive where basically every function gets its own object file. Therefore, object files that contain dead code are never pulled in. By default there is never any dead code elimination within an object file. It only happens at the level of the whole object file.\r\n\r\nGDC used to write one object file per source file, which is more coarse-grained but still prevents most manifestations.  Now, it writes archives with one huge object file.  By default this contains one huge linker section. Therefore, when any of this stuff gets pulled in, all of it does.\r\n\r\nTo get DMD-like\/old GDC-like behavior, all you have to do is compile your libraries with -ffunction-sections and link with -L--gc-sections. The former causes every function to be put in its own section in the object file. The latter causes the linker to garbage collect unused sections, and hence not complain when an undefined symbol is referenced from dead code.\r\n","created_on":"2011-12-18T05:31:33.645190+00:00","user":"dsimcha","updated_on":null,"issue":292,"id":883291},{"content":"Not reproducible my side. Maybe I'm not doing something... :)","created_on":"2011-04-26T21:59:02.735718+00:00","user":"ibuclaw","updated_on":null,"issue":199,"id":455841},{"content":"Not missing anything.  I pasted the code into a file called test.d.  Then, gdmd -O -m32 test.d && .\/test reproduces it.","created_on":"2011-04-27T00:19:27.327532+00:00","user":"dsimcha","updated_on":null,"issue":199,"id":455959},{"content":"Closing.  CNR on trunk.","created_on":"2011-08-11T20:51:57.257513+00:00","user":"ibuclaw","updated_on":null,"issue":199,"id":599801},{"content":"GDC doesn't explicitly mark DECL_COMDAT, we just use DECL_ONE_ONLY (which lets the backend figure out what it wants to do with the symbol).\r\n\r\nThis should make the compiler generated arrayops weakly defined.\r\n\r\n<<changeset 604>>","created_on":"2011-08-15T19:41:13.102953+00:00","user":"ibuclaw","updated_on":null,"issue":225,"id":605128},{"content":"struct function is in gcc\/function.h - the member 'naked' would be present if the patches against gcc were correctly applied.","created_on":"2011-11-12T10:08:51.232445+00:00","user":"ibuclaw","updated_on":null,"issue":257,"id":779987},{"content":"Ok, sorry.  I assumed this was a bug because it showed up in g-glue.cc (I wasn't aware that struct function was coming from a GCC header) and none of the D files require patching.","created_on":"2011-11-12T14:55:00.124920+00:00","user":"dsimcha","updated_on":null,"issue":257,"id":780292},{"content":"<<changeset 680:75b7e1bca4d7>>","created_on":"2011-11-21T00:02:00.085719+00:00","user":"ibuclaw","updated_on":null,"issue":263,"id":801692},{"content":"D will not automatically cast away types of higher precision.  size_t is defined as either 32-bit unsigned integer or 64-bit unsigned integer depending on the architect.  However, most operations in windows that do not access memory want a 32-bit type.\r\n\r\nFixed in <<changeset b1c34b7e7764>>.\r\n\r\n\r\n","created_on":"2011-08-19T09:33:34.188460+00:00","user":"venix1","updated_on":null,"issue":227,"id":611116},{"content":"<<changeset 799:dea7e43a2179>>","created_on":"2012-02-27T19:37:10.724767+00:00","user":"ibuclaw","updated_on":null,"issue":318,"id":1125361},{"content":null,"created_on":"2011-11-09T02:09:22.066408+00:00","user":"dsimcha","updated_on":null,"issue":256,"id":771480},{"content":null,"created_on":"2011-11-09T02:09:41.346054+00:00","user":"dsimcha","updated_on":null,"issue":256,"id":771482},{"content":"Sorry, I just realized this was a duplicate.  Why did I think the old Cygwin build error was different than this one?","created_on":"2011-11-09T02:10:56.194409+00:00","user":"dsimcha","updated_on":null,"issue":256,"id":771483},{"content":"<<changeset 682:61ab289788a3>>","created_on":"2011-11-21T00:53:14.477760+00:00","user":"ibuclaw","updated_on":null,"issue":261,"id":801739},{"content":"<<changeset 684:d1005cb77a06>>","created_on":"2011-11-24T21:53:01.207517+00:00","user":"ibuclaw","updated_on":null,"issue":266,"id":813274},{"content":"Already have special casings for such code. Adding catches for INIT_EXPR's in d_gimplify_expr.\r\n\r\n<<changeset 677:36ae9c015e86>>","created_on":"2011-11-16T23:52:43.404245+00:00","user":"ibuclaw","updated_on":null,"issue":255,"id":791763},{"content":"GDC trunk is using D frontend version 2.059 - so I assume this will occur no more if has been fixed in DMD.","created_on":"2012-06-27T11:31:15.959803+00:00","user":"ibuclaw","updated_on":null,"issue":334,"id":1598196},{"content":"Host:\r\n* 64bit ?\r\n\r\nUsing:\r\n* 64bit compiler -> 64bit binaries\r\n* 64bit compiler -> 32bit binaries ?","created_on":"2011-06-23T06:38:42.230470+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":531030},{"content":"64-bit Ubuntu Natty (I haven't tested a 32-bit compiler binary.  I don't even know how to force the GDC binary to be 32-bit)\r\n\r\n64-bit compiler, doesn't matter whether I produce 32- or 64-bit binaries.","created_on":"2011-06-23T21:27:03.054921+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":532043},{"content":"I can still reproduce this on multiple configurations.  One complication is that it only happens with allocations that are rounded up to a full page or more by the GC's allocator (those requiring at least 2049 bytes).  Note that when arrays are allocated using `new`, there's some extra padding involved in what the GC actually allocates.\r\n\r\n{{{\r\nimport core.stdc.stdio, core.memory;\r\n\r\nshared static this() {\r\n    GC.malloc(2048);\r\n    printf(\"Allocated <1 page successfully.\\n\");\r\n    GC.malloc(2049);\r\n    printf(\"Allocated == 1 page successfully.\\n\");\r\n    GC.malloc(8192);\r\n    printf(\"Allocated >1 page successfully.\\n\");\r\n}\r\n\r\nvoid main() {}\r\n}}}\r\n\r\nThe first allocation succeeds.  The second one fails.                     ","created_on":"2011-08-15T19:01:43.648640+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":605071},{"content":"Also happens with GCC 4.5.3.","created_on":"2011-08-16T15:35:20.534278+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":606441},{"content":"Raising to blocker because this bug can be triggered by having a lot of modules in a project, in which case the static this statement that allocates ModuleInfo in object.d triggers this bug.  Therefore, this bug makes GDC completely unusable for large projects.","created_on":"2011-08-27T02:28:01.908575+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":622724},{"content":"Please ignore this comment.  It used to contain info submitted to the wrong issue, which I edited out and moved to the right issue.","created_on":"2011-08-27T20:56:14.926807+00:00","user":"dsimcha","updated_on":"2011-08-27T20:57:16.182322+00:00","issue":214,"id":623480},{"content":"No need to allocate anything here either.  Just collecting from a shared static c'tor is enough to reproduce this one.\r\n\r\n{{{\r\nimport core.memory;\r\n\r\nshared static this() {\r\n    GC.collect();\r\n}\r\n\r\nvoid main() {}\r\n}}}","created_on":"2011-08-27T21:01:46.692593+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":623490},{"content":"Also happens with GCC 4.4.6.","created_on":"2011-08-28T15:18:54.924118+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":624164},{"content":"Notes from me:\r\n\r\n#  Try compiling rt.lifetime with -fdebug so that debug messages get printed out.\r\n# Did this ever work before, or is there a commit which this worked (so can start bisecting the issue).\r\n\r\nRegards","created_on":"2011-08-28T15:37:30.463524+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":624182},{"content":"Here is the output with GCC 4.4.6, lifetime.d and gcx.d compiled with -fdebug=PRINTF, and the latest test case (the one that just calls GC.collect):\r\n\r\n{{{\r\n_d_newclass(ci = 0x642b00, core.thread.Thread)\r\n p = 0x7fd8acd5bf00\r\np = 0x7fd8acd5bf00\r\nci = 0x642b00, ci.init = 0xb0, len = 4400448\r\nvptr = 0x432600\r\nvtbl[0] = 0x642b00\r\nvtbl[1] = 0x401ab0\r\ninit[0] = 432600\r\ninit[1] = 0\r\ninit[2] = 0\r\ninit[3] = 0\r\ninit[4] = 0\r\ninitialization done\r\n0x25c7060.Gcx::addRange(0x63f100, 0x644c28), nranges = 0\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7fd8acd5ce00\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7fd8acd5cc00\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7fd8acd5ca00\r\nGC.fullCollect()\r\nprocessing GC Marks, ace5b710\r\nSegmentation fault\r\n}}}\r\n\r\nI **think** this used to work before the merge of the GCC 4.6 branch.  I'll compile the last trunk release from before that was merged and get back to you.  I'll also try your suggestions on Issue 226, which is probably related.","created_on":"2011-08-28T18:07:59.625840+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":624364},{"content":"Only speculating, as I have seen it before.  Could be that a cast operation is offsetting the address by one or two spaces.  Just can't seem to reproduce on 32bit. :-)","created_on":"2011-08-28T19:54:00.494228+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":624487},{"content":"I can reproduce this on both 32 and 64-bit with GCC 4.4.6, using the last pre-4.6.x branch merge, revision c272d49246c9 .","created_on":"2011-08-28T20:23:51.684347+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":624517},{"content":"Hmm... it may appear that static this() in lifetime.d doesn't get called - so _blkcache_offset is never set...\n\nCan't say why this works on 32bit compiler, and not 64bit - yet.","created_on":"2011-08-29T19:09:12.089442+00:00","user":"ibuclaw","updated_on":"2011-08-29T19:09:37.776386+00:00","issue":214,"id":626095},{"content":"You mean it works when the GCC\/GDC compiler binary is 32-bit, as opposed to when the output binary is 32-bit?  Wow, that is strange.","created_on":"2011-08-29T19:15:10.762080+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":626105},{"content":"Oh I see now!  This is an order\/race condition. :)\n\nGiven that:\n{{{\nmodule bug214;\n\nimport core.memory;\n\nshared static this() {\n    GC.collect();\n}\n\nvoid main() {}\n}}}\n\nOrder of execution is:\n# bug214.this()\n# rt_processGCMarks()  - \/\/ _blkinfo_offset is uninitialised\n# lifetime.this() -  \/\/ initialises _blkinfo_offset\n\nWhen it **should** be:\n# lifetime.this() -  \/\/ initialises _blkinfo_offset\n# bug214.this()\n# rt_processGCMarks()\n\n\nWill see if can delay outputting of main's ctor till last.\n\nRegards","created_on":"2011-08-29T19:35:08.043774+00:00","user":"ibuclaw","updated_on":"2011-08-29T19:35:35.357474+00:00","issue":214,"id":626137},{"content":"The more I look at this, the more I think it is pure coincidence it even works on 32bit, let alone DMD...  Since nothing import rt.lifetime, the order of module construction is effectively undefined.\r\n\r\nThe real fix would be to replace the static this in lifetime with a rt_init() function, and call it before running module constructors.\r\n\r\n","created_on":"2011-09-02T23:12:02.261705+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":633486},{"content":"I guess you could create an rt_init() function and call it from object.d's static c'tor.  object.d is implicitly imported by all modules, so its static c'tor is guaranteed to run before any non-druntime module.","created_on":"2011-09-03T02:14:35.684896+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":633577},{"content":"For testing, it might be worth pushing this upstream too.","created_on":"2011-09-03T10:06:28.510441+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":633789},{"content":"Fixed upstream:\n\nhttps:\/\/github.com\/D-Programming-Language\/druntime\/commit\/3e271ee1adad19a74d9d200ce8b4e3acec75d6a4\n\nhttps:\/\/github.com\/D-Programming-Language\/druntime\/commit\/ffb2ac377ac0f597dc9ede066e3fa6dd2edce748","created_on":"2011-09-08T17:25:42.701528+00:00","user":"ibuclaw","updated_on":"2011-09-08T17:25:55.930607+00:00","issue":214,"id":642546},{"content":"Great, but this fix was after the 2.055 release, I think.  Could you please make sure it gets merged into GDC when you do the 2.055 update, even though it's technically not part of 2.055?","created_on":"2011-09-08T17:45:45.394746+00:00","user":"dsimcha","updated_on":null,"issue":214,"id":642609},{"content":"Ah, didn't realise the release was the 4th.  Will do, cheers for the heads up.","created_on":"2011-09-08T18:25:07.406229+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":642661},{"content":"Will update to 2.055 - then push upstream change - then close.","created_on":"2011-09-08T18:26:21.985104+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":642664},{"content":"<<changeset 617:41218d9f5f59>>","created_on":"2011-09-12T22:47:36.164560+00:00","user":"ibuclaw","updated_on":null,"issue":214,"id":648678},{"content":"<<changeset 681:fcb2523b8ccd>>","created_on":"2011-11-21T00:02:32.291098+00:00","user":"ibuclaw","updated_on":null,"issue":264,"id":801693},{"content":"Tested again with original [[http:\/\/www.github.com\/cybershadow\/dustmite\/wiki|DustMite]] code to be sure.\r\n\r\n{{{\r\n$ gdc *.d\r\n  -> creates a.out just fine\r\n$ gdc -c *.d && gdc *.o -o DustMite\r\n  -> works\r\n$ gdc dustmite.d dsplit.d -o DustMite\r\ndsplit.d: In function '_staticCtor1':\r\ndsplit.d:336:0: internal compiler error: Segmentation fault\r\n$ gdc dsplit.d dustmite.d -o DustMite\r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/algorithm.d:3324: Error: function dustmite.applyNoRemoveRegex.scan.find!(__dgliteral7,Result).find forward reference to frame of scan\r\ndustmite.d: In function 'obfuscate':\r\ndustmite.d:250:0: internal compiler error: Segmentation fault\r\n}}}","created_on":"2011-11-17T08:02:29.547685+00:00","user":"trass3r","updated_on":null,"issue":262,"id":792682},{"content":"GC issues are always 'weird'. :)\r\n\r\nThat forward reference is another issue for a new bug report, tah.\r\n\r\n<<changeset 678:51d11a9bddf2>>","created_on":"2011-11-18T20:48:33.776325+00:00","user":"ibuclaw","updated_on":null,"issue":262,"id":797855},{"content":"No clue how you made it, bravo :)\r\n\r\nOpened <<issue 263>> for that foward ref issue.","created_on":"2011-11-19T13:52:15.169991+00:00","user":"trass3r","updated_on":null,"issue":262,"id":799001},{"content":"Is it possible to get a snippet that can compile\/ICE?  Need to test what compilers it's effects.  It's crashing the DMD frontend so it may be a bug with that.","created_on":"2012-04-02T18:33:25.737360+00:00","user":"venix1","updated_on":null,"issue":328,"id":1254619},{"content":"{{{\nmixin Blah()\n{\n  mixin(GetPublicMembers());\n}\n\nmixin Blah;\n}}}\n\n\nThat's all I tried to do with it.\n\ngdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)","created_on":"2012-04-02T20:14:50.698092+00:00","user":"TurkeyMan","updated_on":"2012-04-02T20:18:48.241762+00:00","issue":328,"id":1255040},{"content":"# give a complete code sample\r\n# 'mixin Blah()' is invalid code, missing 'template'","created_on":"2012-04-02T23:00:31.585685+00:00","user":null,"updated_on":null,"issue":328,"id":1255610},{"content":"Your original snippet produces the following errors.  I need the ability to reproduce the ICE.  Please submit a compilable testcase that demonstrates the ICE.  The more you can reduce the code the easier it will be to track down the problem.\r\n{{{\r\nC:\\Users\\venix\\projects\\fusion\\fail>gdc -c issue328.d\r\nissue328.d:4: Error: undefined identifier remedy.testmodule\r\nissue328.d:4: Error: argument has no members\r\nissue328.d:4: Error: foreach: bool is not an aggregate type\r\nissue328.d:9: Error: variable members cannot be read at compile time\r\nissue328.d:9: Error: static assert  members\r\n}}}","created_on":"2012-04-03T03:44:20.814175+00:00","user":"venix1","updated_on":null,"issue":328,"id":1256192},{"content":"{{{\r\nmodule testmodule;\r\n\r\nstring GetPublicMembers()\r\n{\r\n\tforeach(m; __traits(allMembers, testmodule))\r\n\t{\r\n\t\t\/\/...\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nmixin template RegisterModule()\r\n{\r\n\tmixin(GetPublicMembers());\r\n}\r\n\r\nmixin RegisterModule;\r\n}}}\r\n\r\nError:\r\n{{{\r\n\r\n3\/04\/2012 11:26:02 AM[ERROR]: gdc.exe failed with errors:\r\n\r\nThis application has requested the Runtime to terminate it in an unusual way.\r\nPlease contact the application's support team for more information.\r\nAssertion failed!\r\n\r\nProgram: c:\\mingw64\\bin\\..\\libexec\\gcc\\x86_64-w64-mingw32\\4.6.1\\cc1d.exe\r\nFile: ..\/..\/gcc-4.6.1\/gcc\/d\/dmd2\/dsymbol.c, Line 1052\r\n\r\nExpression: members\r\ncc1d.exe: internal compiler error: Aborted\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n}}}","created_on":"2012-04-03T08:27:58.557778+00:00","user":"TurkeyMan","updated_on":null,"issue":328,"id":1256835},{"content":null,"created_on":"2012-04-03T15:21:14.026654+00:00","user":"venix1","updated_on":null,"issue":328,"id":1258973},{"content":null,"created_on":"2012-04-03T15:20:21.624371+00:00","user":"venix1","updated_on":null,"issue":328,"id":1258965},{"content":"This needs to be reported to DMD.  It should stay open unless it compiles successfully with DMD trunk or the bug is found\/reported in the DMD [[http:\/\/d.puremagic.com\/issues\/|bugzilla]].\r\n\r\n{{{\r\nC:\\Users\\venix\\projects\\fusion\\fail>c:\\dmd2\\windows\\bin\\dmd.exe issue328.d\r\nAssertion failure: 'members' on line 1052 in file 'dsymbol.c'\r\n\r\nabnormal program termination\r\n}}}\r\n","created_on":"2012-04-03T15:25:56.007636+00:00","user":"venix1","updated_on":null,"issue":328,"id":1258983},{"content":"As it turns out, this is apparently fixed in DMD head already: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=7818\r\n\r\nAny chance of a new binary MinGW64 release against latest DMD? Or do you wait for release revisions?\r\n\r\nThe last GDC is getting pretty old now, and I've run into 3 compiler bugs now that I need to work around.","created_on":"2012-04-04T07:40:22.646796+00:00","user":"TurkeyMan","updated_on":null,"issue":328,"id":1261887},{"content":"GDC trunk is now using 2.059","created_on":"2012-06-27T11:27:21.377208+00:00","user":"ibuclaw","updated_on":null,"issue":328,"id":1598180},{"content":"This was tested with MinGW64 GCC-4.6.1.  This isn't using any MinGW specific code and checking GCC-4.7 and GCC-4.8 patches shows the same if statement.\r\n\r\nSo this likely affects all versions.","created_on":"2012-06-12T23:29:23.632697+00:00","user":"venix1","updated_on":null,"issue":349,"id":1540571},{"content":"https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/5e0a5219aadfa9a8a1e5607e8c49edb326f144e2\r\n\r\nNow produces (on Linux):\r\n{{{\r\n        .globl  _D4test12naked_calleeFPvPvZv\r\n        .type   _D4test12naked_calleeFPvPvZv, @function\r\n_D4test12naked_calleeFPvPvZv:\r\n.LFB0:\r\n        .cfi_startproc\r\n        movq    %rdi, -8(%rbp)\r\n        movq    %rsi, -16(%rbp)\r\n        nop\r\n        .cfi_endproc\r\n.LFE0:\r\n        .size   _D4test12naked_calleeFPvPvZv, .-_D4test12naked_calleeFPvPvZv\r\n        .globl  _D4test12naked_callerFZv\r\n        .type   _D4test12naked_callerFZv, @function\r\n_D4test12naked_callerFZv:\r\n.LFB1:\r\n        .cfi_startproc\r\n        pushq   %rbp\r\n        .cfi_def_cfa_offset 16\r\n        .cfi_offset 6, -16\r\n        movq    %rsp, %rbp\r\n        .cfi_def_cfa_register 6\r\n        subq    $16, %rsp\r\n        movq    $0, -8(%rbp)\r\n        movq    $0, -16(%rbp)\r\n        movq    -16(%rbp), %rdx\r\n        movq    -8(%rbp), %rax\r\n        movq    %rdx, %rsi\r\n        movq    %rax, %rdi\r\n        call    _D4test12naked_calleeFPvPvZv\r\n        leave\r\n        .cfi_def_cfa 7, 8\r\n        ret\r\n        .cfi_endproc\r\n.LFE1:\r\n        .size   _D4test12naked_callerFZv, .-_D4test12naked_callerFZv\r\n}}}\r\n\r\n","created_on":"2012-06-18T19:26:17.206335+00:00","user":"ibuclaw","updated_on":null,"issue":349,"id":1562333},{"content":"Naked is now gone in trunk.  Closing.","created_on":"2012-06-27T11:24:14.327968+00:00","user":"ibuclaw","updated_on":null,"issue":349,"id":1598165},{"content":"<<changeset 782:a5066e471ef0>>","created_on":"2012-01-29T17:06:06.382260+00:00","user":"ibuclaw","updated_on":"2012-01-29T17:06:18.036343+00:00","issue":309,"id":1012642},{"content":null,"created_on":"2012-01-24T08:47:17.236155+00:00","user":"ibuclaw","updated_on":null,"issue":309,"id":993423},{"content":"Can you provide a copy of the assembly with the following code and it's D equivalent?  (compile with -S)\r\n\r\n{{{\r\nunion a {\r\n  long double a1;\r\n  char        ac[20];\r\n};\r\n\r\nstruct b {\r\n  long double b1;\r\n  char        bc[20];\r\n};\r\n\r\nunion a a;\r\nstruct b b;\r\n}}}\r\n\r\nEither it's not padding to a 16 byte alignment, or .sizeof lies.  Checking the assembly will confirm this.\r\n\r\nRegards","created_on":"2012-01-24T08:55:53.270762+00:00","user":"ibuclaw","updated_on":null,"issue":309,"id":993436},{"content":"brad.lanam.comp _at_ gmail.com\r\n\r\nC code:\r\n{{{\r\nunion a {\r\n  long double a1;\r\n  char        ac[20];\r\n};\r\n\r\nstruct b {\r\n  long double b1;\r\n  char        bc[20];\r\n};\r\n\r\nunion a a;\r\nstruct b b;\r\n\r\n\r\n        .file   \"y1.c\"\r\n        .comm   a1,32,32\r\n        .comm   b1,48,32\r\n        .ident  \"GCC: (Debian 4.6.2-11) 4.6.2\"\r\n        .section        .note.GNU-stack,\"\",@progbits\r\n\r\n}}}\r\n\r\nD Code:\r\n\r\n{{{\r\nunion a {\r\n  real a1;\r\n  char ac[20];\r\n};\r\n\r\nstruct b {\r\n  real b1;\r\n  char bc[20];\r\n};\r\n\r\na a1;\r\nb b1;\r\n\r\n        .file   \"y1.d\"\r\n        .weak   _D15TypeInfo_S2y11a6__initZ\r\n        .section        .data._D15TypeInfo_S2y11a6__initZ,\"awG\",@progbits,_D15TypeInfo_S2y11a6__initZ,comdat\r\n        .align 32\r\n        .type   _D15TypeInfo_S2y11a6__initZ, @gnu_unique_object\r\n        .size   _D15TypeInfo_S2y11a6__initZ, 136\r\n_D15TypeInfo_S2y11a6__initZ:\r\n        .quad   _D15TypeInfo_Struct6__vtblZ\r\n        .quad   0\r\n        .quad   4\r\n        .quad   _D15TypeInfo_S2y11a6__initZ+136\r\n        .quad   20\r\n        .quad   _D2y11a6__initZ\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   4\r\n        .quad   0\r\n        .quad   0\r\n        .string \"y1.a\"\r\n        .globl  _D2y11a6__initZ\r\n        .section        .rodata\r\n        .align 16\r\n        .type   _D2y11a6__initZ, @object\r\n        .size   _D2y11a6__initZ, 20\r\n_D2y11a6__initZ:\r\n        .long   0\r\n        .long   2684354560\r\n        .long   32767\r\n        .long   0\r\n        .zero   4\r\n        .weak   _D15TypeInfo_S2y11b6__initZ\r\n        .section        .data._D15TypeInfo_S2y11b6__initZ,\"awG\",@progbits,_D15TypeInfo_S2y11b6__initZ,comdat\r\n        .align 32\r\n        .type   _D15TypeInfo_S2y11b6__initZ, @gnu_unique_object\r\n        .size   _D15TypeInfo_S2y11b6__initZ, 136\r\n_D15TypeInfo_S2y11b6__initZ:\r\n        .quad   _D15TypeInfo_Struct6__vtblZ\r\n        .quad   0\r\n        .quad   4\r\n        .quad   _D15TypeInfo_S2y11b6__initZ+136\r\n        .quad   36\r\n        .quad   _D2y11b6__initZ\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   0\r\n        .quad   4\r\n        .quad   0\r\n        .quad   0\r\n        .string \"y1.b\"\r\n        .globl  _D2y11b6__initZ\r\n        .section        .rodata\r\n        .align 32\r\n        .type   _D2y11b6__initZ, @object\r\n        .size   _D2y11b6__initZ, 36\r\n_D2y11b6__initZ:\r\n        .long   0\r\n        .long   2684354560\r\n        .long   32767\r\n        .long   0\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .globl  _D2y12a1S2y11a\r\n        .section        .tdata,\"awT\",@progbits\r\n        .align 4\r\n        .type   _D2y12a1S2y11a, @object\r\n        .size   _D2y12a1S2y11a, 20\r\n_D2y12a1S2y11a:\r\n        .long   0\r\n        .long   2684354560\r\n        .long   32767\r\n        .long   0\r\n        .zero   4\r\n        .globl  _D2y12b1S2y11b\r\n        .align 4\r\n        .type   _D2y12b1S2y11b, @object\r\n        .size   _D2y12b1S2y11b, 36\r\n_D2y12b1S2y11b:\r\n        .long   0\r\n        .long   2684354560\r\n        .long   32767\r\n        .long   0\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .byte   -1\r\n        .globl  _D2y112__ModuleInfoZ\r\n        .data\r\n        .align 16\r\n        .type   _D2y112__ModuleInfoZ, @object\r\n        .size   _D2y112__ModuleInfoZ, 16\r\n_D2y112__ModuleInfoZ:\r\n        .long   -2147483644\r\n        .long   0\r\n        .string \"y1\"\r\n        .zero   5\r\n        .align 16\r\n        .type   __mod_ref.1668, @object\r\n        .size   __mod_ref.1668, 16\r\n__mod_ref.1668:\r\n        .quad   0\r\n        .quad   _D2y112__ModuleInfoZ\r\n        .text\r\n        .type   _D2y19__modinitFZv, @function\r\n_D2y19__modinitFZv:\r\n.LFB0:\r\n        .cfi_startproc\r\n        pushq   %rbp\r\n        .cfi_def_cfa_offset 16\r\n        .cfi_offset 6, -16\r\n        movq    %rsp, %rbp\r\n        .cfi_def_cfa_register 6\r\n        movq    _Dmodule_ref(%rip), %rax\r\n        movq    %rax, __mod_ref.1668(%rip)\r\n        movq    $__mod_ref.1668, _Dmodule_ref(%rip)\r\n        popq    %rbp\r\n        .cfi_def_cfa 7, 8\r\n        ret\r\n        .cfi_endproc\r\n.LFE0:\r\n        .size   _D2y19__modinitFZv, .-_D2y19__modinitFZv\r\n        .section        .ctors,\"aw\",@progbits\r\n        .align 8\r\n        .quad   _D2y19__modinitFZv\r\n        .ident  \"GCC: (Debian 4.6.2-4) 4.6.2\"\r\n        .section        .note.GNU-stack,\"\",@progbits\r\n}}}\r\n","created_on":"2012-01-24T18:31:07.428230+00:00","user":null,"updated_on":null,"issue":309,"id":995110},{"content":"Also happens with GCC 4.5.3.\r\n","created_on":"2011-08-16T15:35:39.697996+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":606442},{"content":"Raising to blocker because this bug makes GDC completely unusable for multithreaded projectson 64-bit.","created_on":"2011-08-27T02:28:28.993064+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":622726},{"content":"Actually, you don't even need to allocate anything.  Just trying to collect from a thread other than the main thread will do it.  Again, GCC 4.6.1, GDC tip.  This is enough to reproduce the bug:\r\n\r\n{{{\r\nimport core.thread, core.memory;\r\n\r\nvoid main() {\r\n    auto t = new Thread(&GC.collect);\r\n    t.start();\r\n    t.join();\r\n}\r\n}}}","created_on":"2011-08-27T20:57:31.108340+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":623485},{"content":"Also happens with GCC 4.4.6.","created_on":"2011-08-28T15:19:45.705911+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":624165},{"content":"Here's some output from the latest test program with -fdebug=PRINTF turned on for gcx.d and lifetime.d:\r\n\r\n{{{\r\n_d_newclass(ci = 0x642ae0, core.thread.Thread)\r\n p = 0x7f6e4e67ff00\r\np = 0x7f6e4e67ff00\r\nci = 0x642ae0, ci.init = 0xb0, len = 4400480\r\nvptr = 0x432620\r\nvtbl[0] = 0x642ae0\r\nvtbl[1] = 0x401ae0\r\ninit[0] = 432620\r\ninit[1] = 0\r\ninit[2] = 0\r\ninit[3] = 0\r\ninit[4] = 0\r\ninitialization done\r\n0x1fc9060.Gcx::addRange(0x63f0e0, 0x644c08), nranges = 0\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7f6e4e680e00\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7f6e4e680c00\r\n_d_newarrayT(length = x2a, size = 8)\r\n p = 0x7f6e4e680a00\r\n_d_newclass(ci = 0x642ae0, core.thread.Thread)\r\n p = 0x7f6e4e67fe00\r\np = 0x7f6e4e67fe00\r\nci = 0x642ae0, ci.init = 0xb0, len = 4400480\r\nvptr = 0x432620\r\nvtbl[0] = 0x642ae0\r\nvtbl[1] = 0x401ae0\r\ninit[0] = 432620\r\ninit[1] = 0\r\ninit[2] = 0\r\ninit[3] = 0\r\ninit[4] = 0\r\ninitialization done\r\nGC.fullCollect()\r\nSegmentation fault\r\n}}}","created_on":"2011-08-28T18:09:49.876895+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":624368},{"content":"I can't reproduce this using the last pre-4.6.x branch merge revision, c272d49246c9 .  Looks like this is a regression on or after the 4.6.x branch.","created_on":"2011-08-28T20:25:29.667328+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":624519},{"content":"Cheers, will bisect this tonight.","created_on":"2011-09-08T17:26:33.511922+00:00","user":"ibuclaw","updated_on":null,"issue":226,"id":642551},{"content":"Issue is a knock-on from an optimisation fix committed during 4.6 branch testing:\r\n\r\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/61c81c98d80c\r\n\r\n\r\nIssue is iasm-related in that manifests from the naked functions in thread_entryPoint.  It seems the address in RBP is not what the code expects to be there - so really should just use the generic assignments.\r\n\r\n<<changeset 3ea496446c7e>>","created_on":"2011-09-10T22:04:24.517320+00:00","user":"ibuclaw","updated_on":null,"issue":226,"id":645540},{"content":"Reopening because I can still reproduce this.  Maybe it's intermittent.  If in doubt, run it in a loop.","created_on":"2011-09-15T15:30:13.849323+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":654698},{"content":"Just tested this on another computer with a clean Ubuntu 11.04 install (meaning nothing from old builds could have accidentally been left behind).  It's definitely still there and is the last bug I've found that blocks me from using GDC for real work and being able to find and report less severe bugs.","created_on":"2011-09-21T19:18:08.736005+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":664203},{"content":"Tested this with Ubuntu 11.04 as well and got the segfault.  However I also tested on ArchLinux x86_64 with --disable-multilib and was unable to reproduce.  I'm recompiling with --disable-multilib on ubuntu and will post how that reacts.","created_on":"2011-09-22T23:35:06.314455+00:00","user":"venix1","updated_on":null,"issue":226,"id":666670},{"content":"Still happens for me on Ubuntu 11.04 even when I compile with --disable-multilib.","created_on":"2011-09-23T00:59:34.844648+00:00","user":"dsimcha","updated_on":null,"issue":226,"id":666747},{"content":"Apparently the fix got reverted in the 1.070\/2.055 library update... >.>","created_on":"2011-09-24T14:21:33.208128+00:00","user":"ibuclaw","updated_on":null,"issue":226,"id":668911},{"content":"<<changeset 639:a998cdff6e0f>>","created_on":"2011-09-24T14:23:14.858383+00:00","user":"ibuclaw","updated_on":null,"issue":226,"id":668915},{"content":"Is probably better to look for -lpthread rather than -pthread due to change in latest gcc release.\r\n\r\n\r\n<<changeset b0a9ef534877>>","created_on":"2011-09-10T22:39:22.603901+00:00","user":"ibuclaw","updated_on":null,"issue":230,"id":645570},{"content":"<<changeset 702:ecd60be7f89c>>","created_on":"2011-12-18T15:21:23.862065+00:00","user":"ibuclaw","updated_on":null,"issue":290,"id":884018},{"content":"A temporary work around is is to define {{{extern (C) int _Dmain(char[][] argv)}}} to avoid undefined symbol errors.  Then add compiler option {{{-e _WinMain@16}}} to change your entry point.","created_on":"2011-04-18T19:48:57.695839+00:00","user":"venix1","updated_on":null,"issue":195,"id":445923},{"content":"**Disregard my previous comment.**  \r\n\r\nI have looked into the issue further and discovered that libmingw32.a defines a main function that is supposed to be used in the event no main is supplied to the application.  This function calls sets up the call to WinMain@16.  To get the proper linking order it should be possible to to link libmingw32.a before phobos when -mwindows is on the command line.\r\n\r\n{{{ gdc -v2 WinMain.d -mwindows -lmingw32}}} produced the correct results with the test file.\r\n\r\n","created_on":"2011-04-19T23:41:30.329750+00:00","user":"venix1","updated_on":null,"issue":195,"id":447885},{"content":null,"created_on":"2011-07-28T05:11:08.611484+00:00","user":"venix1","updated_on":null,"issue":195,"id":575971},{"content":"This issue can be solved by implementing <<issue 229>>.\r\n\r\nDuplicate of #229.","created_on":"2011-09-10T20:35:09.430719+00:00","user":"venix1","updated_on":null,"issue":195,"id":645470},{"content":"<<changeset 736:2dda156fb2f9>>","created_on":"2012-01-02T04:04:19.163335+00:00","user":"ibuclaw","updated_on":null,"issue":281,"id":919024},{"content":"External Bug. (#100)","created_on":"2014-03-31T15:15:59.200472+00:00","user":"ibuclaw","updated_on":null,"issue":166,"id":9408132},{"content":"This was migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=100\n\nPlease continue discussion there.","created_on":"2014-02-01T11:15:13.840922+00:00","user":"JinShil","updated_on":null,"issue":166,"id":8035309},{"content":"Hello, Can any body give a tip how to do this !!!!!!!!!!!!!!!\r\n\r\nor there already is a document ,  or I am wrong gdc already can build .so file with current libgphobos.a !!!!!!!\r\n\r\nany body please give me a response .","created_on":"2011-03-21T11:05:44.991964+00:00","user":null,"updated_on":null,"issue":166,"id":410603},{"content":"I have never tried.  I can tell you that a static library does not prohibit a project from using shared libraries.  The elf format and linker take care of everything so all symbols resolve to a single copy(usually the copy inside your program).\r\n\r\nThat was the conclusion I came to several years ago.  I'm sure there are other advantages.  I have built a project utilizing that fact with D before.\r\n\r\nAs long as you can get the druntime and phobos to compile with -fPIC, then creating a shared library from that output should be relatively simple(Do a search for converting static to shared).\r\n\r\nI would also search the newsgroup for others who have attempted this.  I've heard reference to it before.\r\n\r\n","created_on":"2011-03-21T15:34:12.159137+00:00","user":"venix1","updated_on":null,"issue":166,"id":410917},{"content":"Thank for this valuable answer .  \r\n\r\nI know the DRuntime & phobos is patch before GDC build it ,  I can't find where is the posix.mak in gdc source package before I run **..\/configure --enable-languages=d --enable-checking=release --disable-shared && make** .\r\n\r\none more question , should I use** ..\/configure --enable-languages=d --enable-checking=release --enable-shared **\r\n","created_on":"2011-03-22T01:30:39.791575+00:00","user":null,"updated_on":null,"issue":166,"id":411534},{"content":"I use export DGLAGS=-fPIC, then catch this error .\r\n{{{\r\n#!sh\r\n\r\n\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/gdc -B\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -m32 -o rt\/adi.o -fPIC -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/rt\/adi.d\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d: Assembler messages:\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:474: Warning: missing operand; zero assumed\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:475: Warning: missing operand; zero assumed\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:477: Warning: missing operand; zero assumed\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:478: Warning: missing operand; zero assumed\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:536: Warning: missing operand; zero assumed\r\n..\/..\/..\/..\/libphobos\/rt\/adi.d:537: Warning: missing operand; zero assumed\r\n\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/gdc -B\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -m32 -o rt\/arrayassign.o -fPIC -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/rt\/arrayassign.d\r\n\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/gdc -B\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -m32 -o rt\/arraybyte.o -fPIC -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/rt\/arraybyte.d\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d: In function ‘_arraySliceExpAddSliceAssign_g’:\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:220: error: PIC register ‘ebx’ clobbered in ‘asm’\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:222: error: PIC register ‘ebx’ clobbered in ‘asm’\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:223: error: PIC register ‘ebx’ clobbered in ‘asm’\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d: In function ‘_arraySliceExpMinSliceAssign_g’:\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:1039: error: PIC register ‘ebx’ clobbered in ‘asm’\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:1041: error: PIC register ‘ebx’ clobbered in ‘asm’\r\n..\/..\/..\/..\/libphobos\/rt\/arraybyte.d:1042: error: PIC register ‘ebx’ clobbered in ‘asm’\r\nmake[6]: *** [rt\/arraybyte.o] Error 1\r\nmake[6]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/x86_64-unknown-linux-gnu\/32\/libphobos'\r\nmake[5]: *** [all] Error 2\r\nmake[5]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/x86_64-unknown-linux-gnu\/32\/libphobos'\r\nmake[4]: *** [multi-do] Error 1\r\nmake[4]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[3]: *** [all-multi] Error 2\r\nmake[3]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/web\/pool\/source_storage\/gdc\/dev\/gcc-4.4.5\/objdir'\r\nmake: *** [all] Error 2\r\n\r\n}}}","created_on":"2011-03-22T02:21:58.288828+00:00","user":null,"updated_on":null,"issue":166,"id":411575},{"content":"Sorry for the double post but it seems that in dmd 2.055 global.params.isX86_64 changed to global.params.is64bit in d-asm-i386.h\r\n\r\nDaniel Edwards","created_on":"2011-09-12T19:57:17.833866+00:00","user":null,"updated_on":null,"issue":166,"id":648343},{"content":"Here is a patch for gdc with dmd 2.054 (until revision b0a9ef534877). It patches d-asm-i386.h, core\/cpuid.d, core\/thread.d, rt\/arraybyte.d, rt\/arrayint.d, std\/cpuid.d. I tested it with gcc 4.4.5 and it let me compile gdc version 2 (or actually phobos2) with -fPIC so you can create shared objects on x86_64 platforms.\r\n\r\nThe compilation errors with ebx clobbering are a result of the 32bit pic implentation. In 32bit code the ebx register is the pic-register and cannot be marked clobbered. That is what is fixed in d-asm-i386.h, now gdc doesn't tell gcc that ebx gets clobbered if compiling 32bit PIC code. This means that _you_ have to make sure that the value of ebx is saved and restored (this is adressed in the patches of phobos2 and druntime files), wich is what you'd have to do in C too if the PIC regiser get clobbered.\r\n\r\nI'm not sure if I found all places where the ebx register is used in phobos2\/druntime there are probably many more files that need to be patched.\r\n\r\nAlso I had issues when compiling with -funittest, but I don't know if this is related to the patch or something else.\r\n\r\nPS: I'm not entirely sure but it shouln't matter if you apply the patch before or after calling .\/gcc\/d\/setup-gdc.sh -v2\r\nPS2: HowTo: copy the patch to a new file (lets call it gdc-dmd-2054-pic.patch) in gcc-<version> (the main directory) and call \"patch -p0 < gdc-dmd-2054-pic.patch\".\r\n\r\nDaniel Edwards\r\n\r\n{{{\r\ndiff -Naru gcc-van\/d\/d-asm-i386.h gcc\/d\/d-asm-i386.h\r\n--- gcc-van\/d\/d-asm-i386.h\t2011-09-12 17:36:19.000000000 +0200\r\n+++ gcc\/d\/d-asm-i386.h\t2011-09-12 17:50:09.000000000 +0200\r\n@@ -2181,7 +2181,9 @@\r\n         if (op == Op_cpuid)\r\n         {\r\n             asmcode->clbregs[Reg_EAX] = 1;\r\n-            asmcode->clbregs[Reg_EBX] = 1;\r\n+            \/\/ pic & 32bit : EBX must not be (marked) clobbered, it is the pic register\r\n+            if (!global.params.pic || global.params.isX86_64)\r\n+                asmcode->clbregs[Reg_EBX] = 1;\r\n             asmcode->clbregs[Reg_ECX] = 1;\r\n             asmcode->clbregs[Reg_EDX] = 1;\r\n         }\r\n@@ -2265,7 +2267,11 @@\r\n                     {\r\n                         Reg clbr_reg = (Reg) regInfo[operand->reg].baseReg;\r\n                         if (clbr_reg != Reg_Invalid)\r\n-                            asmcode->clbregs[clbr_reg] = 1;\r\n+                        {\r\n+                            \/\/ pic & 32bit : EBX must not be (marked) clobbered, it is the pic register\r\n+                            if (global.params.isX86_64 || !global.params.pic || clbr_reg != Reg_EBX)\r\n+                                asmcode->clbregs[clbr_reg] = 1;\r\n+                        }\r\n                     }\r\n                     if (opTakesLabel()\/*opInfo->takesLabel()*\/)\r\n                         insnTemplate->writebyte('*');\r\ndiff -Naru gcc-van\/d\/druntime\/core\/cpuid.d gcc\/d\/druntime\/core\/cpuid.d\r\n--- gcc-van\/d\/druntime\/core\/cpuid.d\t2011-09-12 20:51:06.000000000 +0200\r\n+++ gcc\/d\/druntime\/core\/cpuid.d\t2011-09-12 20:58:09.000000000 +0200\r\n@@ -379,12 +379,16 @@\r\n     uint numinfos = 1;\r\n     do {\r\n         asm {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 2;\r\n             cpuid;\r\n             mov a, EAX;\r\n             mov a+4, EBX;\r\n             mov a+8, ECX;\r\n             mov a+12, EDX;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n         if (firstTime) {\r\n             if (a[0]==0x0000_7001 && a[3]==0x80 && a[1]==0 && a[2]==0) {\r\n@@ -421,12 +425,16 @@\r\n     for(;;) {\r\n         uint a, b, number_of_sets;\r\n         asm {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 4;\r\n             mov ECX, cachenum;\r\n             cpuid;\r\n             mov a, EAX;\r\n             mov b, EBX;\r\n             mov number_of_sets, ECX;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n         ++cachenum;\r\n         if ((a&0x1F)==0) break; \/\/ no more caches\r\n@@ -459,12 +467,16 @@\r\n {\r\n     uint c5, c6, d6;\r\n     asm {\r\n+        mov EDI, EBX;\r\n+        \r\n         mov EAX, 0x8000_0005; \/\/ L1 cache\r\n         cpuid;\r\n         \/\/ EAX has L1_TLB_4M.\r\n         \/\/ EBX has L1_TLB_4K\r\n         \/\/ EDX has L1 instruction cache\r\n         mov c5, ECX;\r\n+        \r\n+        mov EBX, EDI;\r\n     }\r\n \r\n     datacache[0].size = ( (c5>>24) & 0xFF);\r\n@@ -476,18 +488,26 @@\r\n         ubyte numcores = 1;\r\n         if (max_extended_cpuid >=0x8000_0008) {\r\n             asm {\r\n+                mov EDI, EBX;\r\n+                \r\n                 mov EAX, 0x8000_0008;\r\n                 cpuid;\r\n                 mov numcores, CL;\r\n+                \r\n+                mov EBX, EDI;\r\n             }\r\n             ++numcores;\r\n             if (numcores>maxCores) maxCores = numcores;\r\n         }\r\n         asm {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0x8000_0006; \/\/ L2\/L3 cache\r\n             cpuid;\r\n             mov c6, ECX; \/\/ L2 cache info\r\n             mov d6, EDX; \/\/ L3 cache info\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n \r\n         immutable ubyte [] assocmap = [ 0, 1, 2, 0, 4, 0, 8, 0, 16, 0, 32, 48, 64, 96, 128, 0xFF ];\r\n@@ -511,6 +531,8 @@\r\n     uint a, b, c, d;\r\n     do {\r\n         asm {\r\n+            mov EDI, EBX;\r\n+        \r\n             mov EAX, 0x0B;\r\n             mov ECX, level;\r\n             cpuid;\r\n@@ -518,6 +540,8 @@\r\n             mov b, EBX;\r\n             mov c, ECX;\r\n             mov d, EDX;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n         if (b!=0) {\r\n            \/\/ I'm not sure about this. The docs state that there\r\n@@ -539,16 +563,35 @@\r\n {\r\n     char * venptr = vendorID.ptr;\r\n     uint a, b, c, d, a2;\r\n+    \r\n     version(D_InlineAsm_X86)\r\n     {\r\n-        asm {\r\n-            mov EAX, 0;\r\n-            cpuid;\r\n-            mov a, EAX;\r\n-            mov EAX, venptr;\r\n-            mov [EAX], EBX;\r\n-            mov [EAX + 4], EDX;\r\n-            mov [EAX + 8], ECX;\r\n+        version(D_PIC) {\r\n+            asm\r\n+            {\r\n+                mov EDI, EBX;\r\n+                \r\n+                mov EAX, 0;\r\n+                cpuid;\r\n+                mov a, EAX;\r\n+                mov EAX, venptr;\r\n+                mov [EAX], EBX;\r\n+                mov [EAX + 4], EDX;\r\n+                mov [EAX + 8], ECX;\r\n+                \r\n+                mov EBX, EDI;\r\n+            }\r\n+        } else {\r\n+            asm\r\n+            {\r\n+                mov EAX, 0;\r\n+                cpuid;\r\n+                mov a, EAX;\r\n+                mov EAX, venptr;\r\n+                mov [EAX], EBX;\r\n+                mov [EAX + 4], EDX;\r\n+                mov [EAX + 8], ECX;\r\n+            }\r\n         }\r\n     }\r\n     else version(D_InlineAsm_X86_64)\r\n@@ -563,36 +606,51 @@\r\n             mov [RAX + 8], ECX;\r\n         }\r\n     }\r\n+    \r\n     asm {\r\n+        mov EDI, EBX;\r\n+        \r\n         mov EAX, 0x8000_0000;\r\n         cpuid;\r\n         mov a2, EAX;\r\n+        \r\n+        mov EBX, EDI;\r\n     }\r\n+    \r\n     max_cpuid = a;\r\n     max_extended_cpuid = a2;\r\n \r\n-\r\n     probablyIntel = vendorID == \"GenuineIntel\";\r\n     probablyAMD = vendorID == \"AuthenticAMD\";\r\n     uint apic = 0; \/\/ brand index, apic id\r\n+    \r\n     asm {\r\n+        mov EDI, EBX;\r\n+        \r\n         mov EAX, 1; \/\/ model, stepping\r\n         cpuid;\r\n         mov a, EAX;\r\n         mov apic, EBX;\r\n         mov c, ECX;\r\n         mov d, EDX;\r\n+        \r\n+        mov EBX, EDI;\r\n     }\r\n+    \r\n     features = d;\r\n     miscfeatures = c;\r\n     amdfeatures = 0;\r\n     amdmiscfeatures = 0;\r\n     if (max_extended_cpuid >= 0x8000_0001) {\r\n         asm {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0x8000_0001;\r\n             cpuid;\r\n             mov c, ECX;\r\n             mov d, EDX;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n         amdmiscfeatures = c;\r\n         amdfeatures = d;\r\n@@ -610,9 +668,13 @@\r\n     if (!probablyIntel && max_extended_cpuid >= 0x8000_0008) {\r\n         \/\/ determine max number of cores for AMD\r\n         asm {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0x8000_0008;\r\n             cpuid;\r\n             mov c, ECX;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n         uint apicsize = (c>>12) & 0xF;\r\n         if (apicsize == 0) {\r\n@@ -630,28 +692,59 @@\r\n         char *procptr = processorNameBuffer.ptr;\r\n         version(D_InlineAsm_X86)\r\n         {\r\n-            asm {\r\n-                push ESI;\r\n-                mov ESI, procptr;\r\n-                mov EAX, 0x8000_0002;\r\n-                cpuid;\r\n-                mov [ESI], EAX;\r\n-                mov [ESI+4], EBX;\r\n-                mov [ESI+8], ECX;\r\n-                mov [ESI+12], EDX;\r\n-                mov EAX, 0x8000_0003;\r\n-                cpuid;\r\n-                mov [ESI+16], EAX;\r\n-                mov [ESI+20], EBX;\r\n-                mov [ESI+24], ECX;\r\n-                mov [ESI+28], EDX;\r\n-                mov EAX, 0x8000_0004;\r\n-                cpuid;\r\n-                mov [ESI+32], EAX;\r\n-                mov [ESI+36], EBX;\r\n-                mov [ESI+40], ECX;\r\n-                mov [ESI+44], EDX;\r\n-                pop ESI;\r\n+            version(D_PIC)\r\n+            {\r\n+                asm\r\n+                {\r\n+                    push EBX;\r\n+                    push ESI;\r\n+                    mov ESI, procptr;\r\n+                    mov EAX, 0x8000_0002;\r\n+                    cpuid;\r\n+                    mov [ESI], EAX;\r\n+                    mov [ESI+4], EBX;\r\n+                    mov [ESI+8], ECX;\r\n+                    mov [ESI+12], EDX;\r\n+                    mov EAX, 0x8000_0003;\r\n+                    cpuid;\r\n+                    mov [ESI+16], EAX;\r\n+                    mov [ESI+20], EBX;\r\n+                    mov [ESI+24], ECX;\r\n+                    mov [ESI+28], EDX;\r\n+                    mov EAX, 0x8000_0004;\r\n+                    cpuid;\r\n+                    mov [ESI+32], EAX;\r\n+                    mov [ESI+36], EBX;\r\n+                    mov [ESI+40], ECX;\r\n+                    mov [ESI+44], EDX;\r\n+                    pop ESI;\r\n+                    pop EBX;\r\n+                }\r\n+            } else {\r\n+                asm\r\n+                {\r\n+                    push ESI;\r\n+                    mov ESI, procptr;\r\n+                    mov EAX, 0x8000_0002;\r\n+                    cpuid;\r\n+                    mov [ESI], EAX;\r\n+                    mov [ESI+4], EBX;\r\n+                    mov [ESI+8], ECX;\r\n+                    mov [ESI+12], EDX;\r\n+                    mov EAX, 0x8000_0003;\r\n+                    cpuid;\r\n+                    mov [ESI+16], EAX;\r\n+                    mov [ESI+20], EBX;\r\n+                    mov [ESI+24], ECX;\r\n+                    mov [ESI+28], EDX;\r\n+                    mov EAX, 0x8000_0004;\r\n+                    cpuid;\r\n+                    mov [ESI+32], EAX;\r\n+                    mov [ESI+36], EBX;\r\n+                    mov [ESI+40], ECX;\r\n+                    mov [ESI+44], EDX;\r\n+                    pop ESI;\r\n+                }\r\n             }\r\n         }\r\n         else version(D_InlineAsm_X86_64)\r\ndiff -Naru gcc-van\/d\/druntime\/core\/thread.d gcc\/d\/druntime\/core\/thread.d\r\n--- gcc-van\/d\/druntime\/core\/thread.d\t2011-09-12 17:36:19.000000000 +0200\r\n+++ gcc\/d\/druntime\/core\/thread.d\t2011-09-12 18:52:49.000000000 +0200\r\n@@ -588,25 +588,48 @@\r\n             }\r\n             else version ( D_InlineAsm_X86_64 )\r\n             {\r\n-                asm\r\n-                {\r\n-                    \/\/ Not sure what goes here, popad is invalid in 64 bit code\r\n-                    pop RAX ;   \/\/ 16 byte align the stack\r\n-                    pop R15 ;\r\n-                    pop R14 ;\r\n-                    pop R13 ;\r\n-                    pop R12 ;\r\n-                    pop R11 ;\r\n-                    pop R10 ;\r\n-                    pop R9  ;\r\n-                    pop R8  ;\r\n-                    pop RBP ;\r\n-                    pop RDI ;\r\n-                    pop RSI ;\r\n-                    pop RDX ;\r\n-                    pop RCX ;\r\n-                    pop RBX ;\r\n-                    pop RAX ;\r\n+                version (D_PIC) {\r\n+                    asm\r\n+                    {\r\n+                        \/\/ Not sure what goes here, popad is invalid in 64 bit code\r\n+                        pop RAX ;   \/\/ 16 byte align the stack\r\n+                        pop R15 ;\r\n+                        pop R14 ;\r\n+                        pop R13 ;\r\n+                        pop R12 ;\r\n+                        pop R11 ;\r\n+                        pop R10 ;\r\n+                        pop R9  ;\r\n+                        pop R8  ;\r\n+                        \/\/pop RBP ; \/\/ Breaks compilation with -fPIC\r\n+                        pop RDI ;\r\n+                        pop RSI ;\r\n+                        pop RDX ;\r\n+                        pop RCX ;\r\n+                        pop RBX ;\r\n+                        pop RAX ;\r\n+                    }\r\n+                } else {\r\n+                    asm\r\n+                    {\r\n+                        \/\/ Not sure what goes here, popad is invalid in 64 bit code\r\n+                        pop RAX ;   \/\/ 16 byte align the stack\r\n+                        pop R15 ;\r\n+                        pop R14 ;\r\n+                        pop R13 ;\r\n+                        pop R12 ;\r\n+                        pop R11 ;\r\n+                        pop R10 ;\r\n+                        pop R9  ;\r\n+                        pop R8  ;\r\n+                        pop RBP ;\r\n+                        pop RDI ;\r\n+                        pop RSI ;\r\n+                        pop RDX ;\r\n+                        pop RCX ;\r\n+                        pop RBX ;\r\n+                        pop RAX ;\r\n+                    }\r\n                 }\r\n             }\r\n             else version( GNU )\r\ndiff -Naru gcc-van\/d\/druntime\/rt\/arraybyte.d gcc\/d\/druntime\/rt\/arraybyte.d\r\n--- gcc-van\/d\/druntime\/rt\/arraybyte.d\t2011-09-12 17:36:19.000000000 +0200\r\n+++ gcc\/d\/druntime\/rt\/arraybyte.d\t2011-09-12 20:29:38.000000000 +0200\r\n@@ -210,6 +210,8 @@\r\n             auto n = aptr + (a.length & ~3);\r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EAX, bptr;\r\n@@ -232,6 +234,8 @@\r\n \r\n                 mov aptr, ESI;\r\n                 mov bptr, EAX;\r\n+                \r\n+                pop EBX;\r\n             }\r\n \r\n         }\r\n@@ -1029,6 +1033,8 @@\r\n             auto n = aptr + (a.length & ~3);\r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EAX, bptr;\r\n@@ -1051,6 +1057,8 @@\r\n \r\n                 mov aptr, ESI;\r\n                 mov bptr, EAX;\r\n+                \r\n+                pop EBX;\r\n             }\r\n         }\r\n     }\r\ndiff -Naru gcc-van\/d\/druntime\/rt\/arrayint.d gcc\/d\/druntime\/rt\/arrayint.d\r\n--- gcc-van\/d\/druntime\/rt\/arrayint.d\t2011-09-12 17:36:19.000000000 +0200\r\n+++ gcc\/d\/druntime\/rt\/arrayint.d\t2011-09-12 20:32:18.000000000 +0200\r\n@@ -183,6 +183,8 @@\r\n \r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EAX, bptr;\r\n@@ -203,6 +205,8 @@\r\n \r\n                 mov aptr, ESI;\r\n                 mov bptr, EAX;\r\n+                \r\n+                pop EBX;\r\n             }\r\n         }\r\n     }\r\n@@ -554,6 +558,8 @@\r\n \r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EDX, value;\r\n@@ -571,6 +577,8 @@\r\n                 jb start386;\r\n \r\n                 mov aptr, ESI;\r\n+                \r\n+                pop EBX;\r\n             }\r\n         }\r\n     }\r\n@@ -928,6 +936,8 @@\r\n \r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EAX, bptr;\r\n@@ -948,6 +958,8 @@\r\n \r\n                 mov aptr, ESI;\r\n                 mov bptr, EAX;\r\n+                \r\n+                pop EBX;\r\n             }\r\n         }\r\n     }\r\n@@ -1477,6 +1489,8 @@\r\n \r\n             asm\r\n             {\r\n+                push EBX;\r\n+                \r\n                 mov ESI, aptr;\r\n                 mov EDI, n;\r\n                 mov EDX, value;\r\n@@ -1494,6 +1508,8 @@\r\n                 jb start386;\r\n \r\n                 mov aptr, ESI;\r\n+                \r\n+                pop EBX;\r\n             }\r\n         }\r\n     }\r\ndiff -Naru gcc-van\/d\/phobos2\/std\/cpuid.d gcc\/d\/phobos2\/std\/cpuid.d\r\n--- gcc-van\/d\/phobos2\/std\/cpuid.d\t2011-09-12 17:36:20.000000000 +0200\r\n+++ gcc\/d\/phobos2\/std\/cpuid.d\t2011-09-12 20:17:57.000000000 +0200\r\n@@ -235,12 +235,16 @@\r\n         \/\/ puts the vendor string into dst\r\n         asm\r\n         {\r\n+            mov EDI, EBX; \r\n+            \r\n             mov EAX, 0                  ;\r\n             cpuid                       ;\r\n             mov EAX, dst                ;\r\n             mov [EAX], EBX              ;\r\n             mov [EAX+4], EDX            ;\r\n             mov [EAX+8], ECX            ;\r\n+            \r\n+            mov EBX, EDI;\r\n         }\r\n     }\r\n \r\n@@ -251,6 +255,8 @@\r\n         \/\/ puts the processor string into dst\r\n         asm\r\n         {\r\n+            push EBX;\r\n+            \r\n             mov EAX, 0x8000_0000        ;\r\n             cpuid                       ;\r\n             cmp EAX, 0x8000_0004        ;\r\n@@ -277,6 +283,8 @@\r\n             mov [EDI+44], EDX           ;\r\n             pop EDI                     ;\r\n         PSLabel:                        ;\r\n+            \r\n+            pop EBX;\r\n         }\r\n \r\n         if (buffer[0] == char.init) \/\/ no support\r\n@@ -291,6 +299,8 @@\r\n         uint f,m,e,a,s;\r\n         asm\r\n         {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0                  ;\r\n             cpuid                       ;\r\n             cmp EAX, 1                  ;\r\n@@ -312,6 +322,8 @@\r\n             mov e, EDX                  ;\r\n \r\n         FeatLabel2:\r\n+        \r\n+            mov EBX, EDI;\r\n             ;\r\n         }\r\n         flags = f;\r\n@@ -327,6 +339,8 @@\r\n         ubyte b = 0;\r\n         asm\r\n         {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0                  ;\r\n             cpuid                       ;\r\n             cmp EAX, 4                  ;\r\n@@ -337,6 +351,8 @@\r\n             mov n, EAX                  ;\r\n             mov b, 1                    ;\r\n         IntelSingle:                    ;\r\n+        \r\n+            mov EBX, EDI;\r\n         }\r\n         if (b != 0)\r\n         {\r\n@@ -355,6 +371,8 @@\r\n         ubyte b = 0;\r\n         asm\r\n         {\r\n+            mov EDI, EBX;\r\n+            \r\n             mov EAX, 0x8000_0000        ;\r\n             cpuid                       ;\r\n             cmp EAX, 0x8000_0008        ;\r\n@@ -364,6 +382,8 @@\r\n             mov n, CL                   ;\r\n             mov b, 1                    ;\r\n         AMDSingle:                      ;\r\n+        \r\n+            mov EBX, EDI;\r\n         }\r\n         if (b != 0)\r\n         {\r\n}}}","created_on":"2011-09-12T19:48:23.811917+00:00","user":null,"updated_on":null,"issue":166,"id":648329},{"content":"Issue #4 was marked as a duplicate of this issue.","created_on":"2011-09-12T21:13:16.878104+00:00","user":"siretty","updated_on":null,"issue":166,"id":648501},{"content":"Issue #238 was marked as a duplicate of this issue.","created_on":"2011-09-25T15:02:30.091167+00:00","user":"ibuclaw","updated_on":null,"issue":166,"id":669856},{"content":"I suggest trying out this with GCC 4.3.1 or 4.1.2 first, because (with D1 at least) there have been some problems on GCC 4.3.x, except for 4.3.1.","created_on":"2009-12-16T12:51:04.041251+00:00","user":"michaelp","updated_on":null,"issue":4,"id":93674},{"content":null,"created_on":"2009-12-24T18:23:02.488460+00:00","user":"michaelp","updated_on":null,"issue":4,"id":97936},{"content":"Duplicate of #166.","created_on":"2011-09-12T21:13:16.904258+00:00","user":"siretty","updated_on":null,"issue":4,"id":648502},{"content":"Looks like just changing the return type from unsigned int to size_t in dt.h fixes this.","created_on":"2011-09-13T12:54:57.173588+00:00","user":"dsimcha","updated_on":null,"issue":231,"id":649796},{"content":"BTW, I'm guessing this is a 64-bit-specific issue.  I know Iain develops on a 32-bit box, where unsigned int == size_t, and therefore probably hasn't run into this.  Also, for future debugging, is there an easy way to force GCC\/GDC to be compiled as a 32-bit binary on a 64-bit system?","created_on":"2011-09-14T02:38:20.562169+00:00","user":"dsimcha","updated_on":null,"issue":231,"id":651132},{"content":"I did replace unisgned by size_t like suggested, but it just moved the problem and didn't actually soved it.\r\n\r\n..\/..\/gcc\/d\/dmd2\/todt.c:873: error: invalid use of incomplete type ‘struct dt_t’\r\n..\/..\/gcc\/d\/dmd2\/aggregate.h:41: error: forward declaration of ‘struct dt_t’\r\n\r\nAnd bunch of others. This isn't a suffiscient fix.","created_on":"2011-09-15T11:58:40.763643+00:00","user":null,"updated_on":null,"issue":231,"id":654209},{"content":"Simply changing the header solved the problem for me as well.  @Anonymous it seems that you have a different problem.\r\n\r\n@dsimcha.  Configuring with --target=i686-linux should compile it for 32 bit.\r\n\r\nFixed in <<changeset f9fee0fd57a2 >>","created_on":"2011-09-15T17:31:05.258228+00:00","user":"venix1","updated_on":null,"issue":231,"id":654909},{"content":null,"created_on":"2011-09-13T12:56:18.052006+00:00","user":"dsimcha","updated_on":null,"issue":232,"id":649801},{"content":"Inserting an explicit cast, i.e. `sqrt(cast(real) num)`, works around this.  It must be a problem with implicit conversions or overload resolution or something.","created_on":"2011-09-13T14:54:27.152273+00:00","user":"dsimcha","updated_on":null,"issue":232,"id":650057},{"content":"Eww... I mean, <<changeset 619:8994cef9271f>>","created_on":"2011-09-13T21:22:46.944040+00:00","user":"ibuclaw","updated_on":null,"issue":232,"id":650836},{"content":"I think that could just hide the bug.\n\nI took a quick look at the rt\/gc code and  it seems the data returned via the \"BlkInfo bic\" *pointer* from getBlkInfo(px.ptr) in rt\/lifetime:_d_arrayappendcTp() is still ok, but after the \"info = *bic\" assignment \"info.base\" is null.\n\nSo the question is: what protects the cache structs to which getBlkInfo(px.ptr) returns a reference from being modified while they are still being used? ...\n\n\n{{{\nbyte[] _d_arrayappendcTp(TypeInfo ti, ref byte[] px, size_t n)\n{\n\t   import std.stdio;\n    \/\/ This is a cut&paste job from _d_arrayappendT(). Should be refactored.\n\n    \/\/ only optimize array append where ti is not a shared type\n    auto sizeelem = ti.next.tsize();            \/\/ array element size\n    auto isshared = ti.classinfo is TypeInfo_Shared.classinfo;\n    auto bic = !isshared ? __getBlkInfo(px.ptr) : null;\n+ writeln(\"gBI: \", bic);\n+ if (bic)\n+   writeln(\"gBI: \", *bic);\n    auto info = bic ? *bic : gc_query(px.ptr);\n+ if (!info.base)\n+  writeln(\"INFO: \", info);\n    auto length = px.length;\n    auto newlength = length + n;\n[...]\n}}}\ncan result in this:\n{{{\ngBI: 809CDA4\ngBI: BlkInfo(F33EE000, 49152, 10)\nINFO: BlkInfo(0, 49152, 10)\n[...]\nSegmentation fault (core dumped)\n}}}\n\n(This happens rarely, usually when the crash occurs (and the test crashes for 90%+ runs here) info.base is already null when we read it.)","created_on":"2012-01-02T14:32:40.312498+00:00","user":"art_","updated_on":"2012-01-02T14:34:08.615384+00:00","issue":295,"id":919829},{"content":null,"created_on":"2011-12-21T19:31:32.539552+00:00","user":"dsimcha","updated_on":null,"issue":295,"id":896097},{"content":"LDC has the same bug, but DMD appears not to have this issue.  It could be that druntime is doing something that's thread unsafe given certain compiler optimizations, but DMD doesn't do those optimizations.","created_on":"2011-12-21T20:50:54.860391+00:00","user":"dsimcha","updated_on":null,"issue":295,"id":896281},{"content":"On looking into this further, this seems fairly deterministic given sufficiently concurrent array appending.  (Note that we're not appending to the **same** array from different threads, so the concurrency bug is within druntime.)\r\n\r\n{{{\r\nimport core.thread;\r\n\r\nvoid main() {\r\n    auto t = new Thread(&doIt);\r\n    t.start();\r\n    doIt();\r\n}\r\n\r\nvoid doIt() {\r\n    while(1) {\r\n        int[] arr1, arr2;\r\n        double[] arr3;\r\n\r\n        foreach(i; 0..10_000) {\r\n            arr1 ~= 1;\r\n            arr2 ~= 2;\r\n            arr3 ~= 3;\r\n        }\r\n    }\r\n}\r\n}}}\r\n\r\nHere's some GDB output that shows what's going on.\r\n\r\n{{{\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x0000000000409349 in _d_arrayappendcTp (ti=..., px=..., n=<value optimized out>)\r\n    at ..\/..\/..\/libphobos\/rt\/lifetime.d:1738\r\n1738                    if(*(cast(size_t*)info.base) == size + offset)\r\n(gdb) bt\r\n#0  0x0000000000409349 in _d_arrayappendcTp (ti=..., px=..., n=<value optimized out>)\r\n    at ..\/..\/..\/libphobos\/rt\/lifetime.d:1738\r\n#1  0x0000000000401b71 in _D4test4doItFZv () at test.d:16\r\n#2  0x0000000000401a6d in _Dmain () at test.d:6\r\n#3  0x00000000004068d1 in rt.dmain2.main.runMain (this=0x7fffffffe3d0)\r\n    at ..\/..\/..\/libphobos\/rt\/dmain2.d:568\r\n#4  0x00000000004067ed in rt.dmain2.main.tryExec (this=<value optimized out>, dg=...)\r\n    at ..\/..\/..\/libphobos\/rt\/dmain2.d:543\r\n#5  0x00000000004068b5 in rt.dmain2.main.runAll (this=0x7fffffffe3d0)\r\n    at ..\/..\/..\/libphobos\/rt\/dmain2.d:584\r\n#6  0x00000000004067ed in rt.dmain2.main.tryExec (this=<value optimized out>, dg=...)\r\n    at ..\/..\/..\/libphobos\/rt\/dmain2.d:543\r\n#7  0x0000000000406e82 in main (argc=1, argv=0x7fffffffe508) at ..\/..\/..\/libphobos\/rt\/dmain2.d:594\r\n(gdb) info registers\r\nrax            0x0      0\r\nrbx            0x7fffffffe280   140737488347776\r\nrcx            0x10     16\r\nrdx            0xde6c   56940\r\nrsi            0x7ffff6b8294c   140737332652364\r\nrdi            0x7fffffffe1f0   140737488347632\r\nrbp            0x437900 0x437900\r\nrsp            0x7fffffffe180   0x7fffffffe180\r\nr8             0x7fffffffe1f0   140737488347632\r\nr9             0x7ffff6b82948   140737332652360\r\nr10            0x7ffff6b7a000   140737332617216\r\nr11            0xde6c   56940\r\nr12            0x894c   35148\r\nr13            0x2253   8787\r\nr14            0x65b7a0 6666144\r\nr15            0x4      4\r\nrip            0x409349 0x409349 <_d_arrayappendcTp+393>\r\neflags         0x10202  [ IF RF ]\r\ncs             0x33     51\r\nss             0x2b     43\r\nds             0x0      0\r\nes             0x0      0\r\nfs             0x0      0\r\ngs             0x0      0\r\n(gdb) \r\n}}}","created_on":"2011-12-21T20:48:25.295628+00:00","user":"dsimcha","updated_on":null,"issue":295,"id":896272},{"content":"I'm sticking to my guns here for the moment, and pushed my change into gdc.  If the druntime devs decide to fix this upstream, will be updated in the next merge.\r\n\r\nRegards\r\n\r\n<<changeset 738:9cb02ac1f22f>>\r\n","created_on":"2012-01-02T23:28:02.366745+00:00","user":"ibuclaw","updated_on":null,"issue":295,"id":920830},{"content":"http:\/\/lists.puremagic.com\/pipermail\/digitalmars-d-learn\/2011-October\/027638.html\n\n(no idea why the status gets changed; didn't mean to)","created_on":"2011-12-22T19:09:16.926044+00:00","user":"art_","updated_on":"2011-12-22T19:14:18.590082+00:00","issue":295,"id":899087},{"content":"Push change in druntime to fix issue - can you check it makes sense?","created_on":"2012-01-02T01:55:29.915367+00:00","user":"ibuclaw","updated_on":null,"issue":295,"id":918920},{"content":"https:\/\/github.com\/D-Programming-Language\/druntime\/pull\/110\r\n","created_on":"2012-01-02T02:12:56.907617+00:00","user":"ibuclaw","updated_on":null,"issue":295,"id":918927},{"content":"Closing and reopening 226 b\/c it looks like the real issue was just that 226 was never actually fixed.","created_on":"2011-09-15T15:28:25.383322+00:00","user":"dsimcha","updated_on":null,"issue":233,"id":654689},{"content":null,"created_on":"2011-09-15T16:46:27.421854+00:00","user":"dsimcha","updated_on":null,"issue":233,"id":654837},{"content":"Added INI parser in <<changeset 640:db9070d078a8>>.\r\n\r\nGDC ignore DFLAGS at the moment though.\r\n\r\nRegards\r\n","created_on":"2011-09-25T21:46:47.935357+00:00","user":"ibuclaw","updated_on":null,"issue":234,"id":670359},{"content":"If it ignores DFLAGS then what purpose does it serve?","created_on":"2011-09-25T22:33:00.973001+00:00","user":"dsimcha","updated_on":null,"issue":234,"id":670399},{"content":"You should be able to define any GCC special environment variable and that will get picked up and used by the compiler when looking for libraries, linker, etc (at least, should... :)","created_on":"2011-09-25T23:06:03.101943+00:00","user":"ibuclaw","updated_on":null,"issue":234,"id":670423},{"content":"It's currently a half baked feature, hence status -> opened.","created_on":"2011-09-25T23:07:15.089492+00:00","user":"ibuclaw","updated_on":null,"issue":234,"id":670424},{"content":"Actually, probably best to keep it to the script for the time being.  Will have a think about whether parsing DFLAGS would be more useful being built into the compiler.\r\n\r\n<<changeset 641:3acdb17df213>>\r\n\r\n\r\nShould be ok to mark as resolved.","created_on":"2011-09-25T23:24:01.070396+00:00","user":"ibuclaw","updated_on":null,"issue":234,"id":670428},{"content":null,"created_on":"2011-09-27T05:01:53.659872+00:00","user":"ibuclaw","updated_on":null,"issue":234,"id":672523},{"content":"gdc 4.6.3","created_on":"2012-02-27T00:38:02.114532+00:00","user":null,"updated_on":null,"issue":321,"id":1122064},{"content":"<<changeset 800:5358186ffa1c>>","created_on":"2012-02-27T19:36:51.971937+00:00","user":"ibuclaw","updated_on":null,"issue":321,"id":1125358},{"content":"I have minimized this issue to the following:\r\nvoid bug() {\r\n        if (string rest = \"\"[]) {}\r\n}\r\n\r\nWith error message:\r\ntools\/downloader.d: In function 'downloader.bug':\r\ntools\/downloader.d:2:0: internal compiler error: in make_decl_rtl, at varasm.c:1163","created_on":"2011-09-20T22:39:37.676781+00:00","user":"opticron","updated_on":null,"issue":235,"id":662575},{"content":"It looks like this was a result of the merger of the 4.6 branch into trunk.","created_on":"2011-09-21T00:46:18.733093+00:00","user":"opticron","updated_on":null,"issue":235,"id":662709},{"content":"I neglected to mention this was in D1.","created_on":"2011-09-21T05:55:40.615063+00:00","user":"opticron","updated_on":null,"issue":235,"id":662952},{"content":"<<changeset 17da3d28ba17:625>>","created_on":"2011-09-23T21:41:33.733289+00:00","user":"ibuclaw","updated_on":null,"issue":235,"id":668468},{"content":"<<changeset 687:3763796b9cbf>>","created_on":"2011-12-04T21:55:02.788127+00:00","user":"ibuclaw","updated_on":null,"issue":236,"id":838272},{"content":"Implementing this weekend.\r\n\r\nI'll start off with -M and -MF, and see what else will be needed from there.","created_on":"2011-12-03T10:51:50.699131+00:00","user":"ibuclaw","updated_on":null,"issue":236,"id":834962},{"content":"Reverted and made the options -fmake-deps= and -fmake-mdeps= to produce dependency files respectively.\n\n<<changeset 689:5f71b69d1494>>","created_on":"2011-12-05T00:05:41.161997+00:00","user":"ibuclaw","updated_on":"2011-12-05T00:06:06.114119+00:00","issue":236,"id":838511},{"content":"Added new options to the manpages.  Closing.","created_on":"2011-12-19T01:41:46.782742+00:00","user":"ibuclaw","updated_on":null,"issue":236,"id":885282},{"content":"<<changeset 722:0b470bc59251>>","created_on":"2011-12-27T22:14:04.032058+00:00","user":"ibuclaw","updated_on":null,"issue":258,"id":909201},{"content":"<<changeset 722:0b470bc59251>>","created_on":"2011-12-27T22:14:02.732283+00:00","user":"ibuclaw","updated_on":null,"issue":258,"id":909199},{"content":"Interestingly, if you add the following at the end it additionally ICEs:\r\n\r\n{{{\r\n#!d\r\nElement[] removeDuplicates()\r\n{\r\n\tElement[] ret;\r\n\r\n\tbool[Element] already;\r\n\treturn ret;\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -c dom.d\r\ndom.d:17: Error: function dom.TextNode.appendChild cannot access frame of appendChild\r\n\/opt\/gdc\/include\/d2\/4.6.1\/object.di: In member function 'foo':\r\n\/opt\/gdc\/include\/d2\/4.6.1\/object.di:394:0: internal compiler error: Segmentation fault\r\n}}}","created_on":"2011-11-15T02:55:22.586324+00:00","user":"trass3r","updated_on":null,"issue":258,"id":785752},{"content":"This is in part to libphobos not being shared itself.","created_on":"2011-09-25T15:01:43.287527+00:00","user":"ibuclaw","updated_on":null,"issue":238,"id":669855},{"content":"Duplicate of #166.","created_on":"2011-09-25T15:02:30.111196+00:00","user":"ibuclaw","updated_on":null,"issue":238,"id":669857},{"content":"Never mind.  This error was due to a bunch of cruft I had left over from a non-multilib build.","created_on":"2011-09-24T21:01:49.613162+00:00","user":"dsimcha","updated_on":null,"issue":237,"id":669179},{"content":"There should really be a separation between bug and support issues on here. :~)\r\n\r\nBuild failures are 99% of the time non-bugs (the only exception being unsupported architectures in D2).","created_on":"2011-09-25T15:10:05.417527+00:00","user":"ibuclaw","updated_on":null,"issue":237,"id":669871},{"content":"For the record:\n\nCodegen for .filter:\n{{{\nbug.main.filter!(lam).filter!(string[]).filter (void * D.1606, struct  rs)\n{\n  struct Result & D.2083;\n  struct FRAME.filter D.1609;\n  struct Result __ctmp1329;\n  struct Result & D.1749;\n\n<bb 2>:\n  D.1609.__chain = D.1606_1(D);\n  __ctmp1329 = {};\n  D.2083_2 = bug.main.filter!(lam).filter!(string[]).filter.Result.this (&__ctmp1329, rs);\n  D.1749_3 = D.2083_2;\n  <retval> = *D.1749_3;\n  return <retval>;\n\n}\n}}}\n\nProblem is that the temporary variable _ctmp is not set-up with the chain of D main.  Will fix this sometime tonight or tomorrow.\n\nRegards","created_on":"2011-09-26T21:16:06.258734+00:00","user":"ibuclaw","updated_on":"2011-09-26T21:16:23.165078+00:00","issue":239,"id":672133},{"content":"Fixed codegen:\r\n{{{\r\nbug.main.filter!(lam).filter!(string[]).filter (void * D.1606, struct  rs)\r\n{\r\n  struct Result & D.2077;\r\n  struct FRAME.filter D.1609;\r\n  struct Result __ctmp1329;\r\n  struct Result & D.1749;\r\n\r\n<bb 2>:\r\n  D.1609.__chain = D.1606_1(D);\r\n  __ctmp1329 = {};\r\n  __ctmp1329.this = &D.1609;\r\n  D.2077_2 = bug.main.filter!(lam).filter!(string[]).filter.Result.this (&__ctmp1329, rs);\r\n  D.1749_3 = D.2077_2;\r\n  <retval> = *D.1749_3;\r\n  return <retval>;\r\n\r\n}\r\n}}}\r\n\r\n<<changeset 644:23b24ffe94f2>>","created_on":"2011-09-27T04:59:18.035928+00:00","user":"ibuclaw","updated_on":null,"issue":239,"id":672522},{"content":"Actually, was gdc runtime bug.\r\n\r\n<<changeset 739:263dd1c45382>>","created_on":"2012-01-03T00:33:27.336644+00:00","user":"ibuclaw","updated_on":null,"issue":240,"id":920948},{"content":"I think it's got something to do with the library not being built that way.","created_on":"2011-09-26T20:18:24.698837+00:00","user":"ibuclaw","updated_on":null,"issue":240,"id":672029},{"content":"Is this an issue present in DMD 2.055?","created_on":"2011-11-30T09:45:05.019767+00:00","user":"ibuclaw","updated_on":null,"issue":269,"id":825969},{"content":"IIRC, this code worked on DMD 2.054 and older.","created_on":"2011-11-30T10:31:01.760223+00:00","user":"alexrp","updated_on":null,"issue":269,"id":826042},{"content":null,"created_on":"2011-11-30T14:11:03.150039+00:00","user":"alexrp","updated_on":null,"issue":269,"id":826570},{"content":"But it doesn't work on dmd 2.055 and newer...\r\n\r\nI wish I had time to look into D frontend bugs, but at the moment I don't.  Best I can advise is check if this is an issue with the current tip.  If yes, raise a bug against dmd.\r\n\r\nRegards.","created_on":"2011-11-30T20:29:58.509429+00:00","user":"ibuclaw","updated_on":null,"issue":269,"id":827550},{"content":"It does work with the latest DMD (2.056) and doesn't work with GDC tip.","created_on":"2011-11-30T21:09:03.468294+00:00","user":"alexrp","updated_on":null,"issue":269,"id":827688},{"content":"I've installed latest dmd via release packages (64bit) and the error occurs.\r\n\r\nRegards","created_on":"2011-11-30T23:16:09.905396+00:00","user":"ibuclaw","updated_on":null,"issue":269,"id":828050},{"content":"BTW, if you start getting more bug reports from me lately, it doesn't mean GDC has gotten buggier.  Quite the contrary.  It's because all the huge showstopper bugs have been fixed, so I'm now using GDC for real work and finding the smaller bugs in it.","created_on":"2011-09-27T14:42:49.447902+00:00","user":"dsimcha","updated_on":null,"issue":242,"id":673367},{"content":":)\r\n\r\nUsing -release is enough to reproduce the problem.","created_on":"2011-09-27T19:06:48.583004+00:00","user":"ibuclaw","updated_on":null,"issue":242,"id":673965},{"content":"{{{\r\nStarting program: \/home\/iain\/src\/gdc\/build46\/objdir\/a.out \r\n[Thread debugging using libthread_db enabled]\r\n\r\nBreakpoint 1, bug.main.__dgliteral1 (i=0) at bug.d:7\r\n(gdb) p __framedecl\r\n$1 = {__chain = 0xbffff128}\r\n(gdb) up\r\n#1  0x0804b99f in bug.main() (this=...) at \/opt\/usr\/local\/include\/d2\/4.6.0\/std\/algorithm.d:423\r\n(gdb) p this\r\n$2 = (struct Result &) @0xbffff154: {_input = {current = 0, pastLast = 5}, this = 0xbffff160}\r\n(gdb) p *(void**)this.this\r\n$3 = (void *) 0xb7ee9ff0\r\n(gdb) c\r\nContinuing.\r\n\r\nBreakpoint 1, bug.main.__dgliteral1 (i=1) at bug.d:7\r\n(gdb) p __framedecl\r\n$4 = {__chain = 0xb7ee9ff0}\r\n(gdb) up\r\n#1  0x0804b99f in bug.main() (this=...) at \/opt\/usr\/local\/include\/d2\/4.6.0\/std\/algorithm.d:423\r\n(gdb) p this\r\n$5 = (struct Result &) @0xbffff154: {_input = {current = 1, pastLast = 5}, this = 0xbffff160}\r\n(gdb) p *(void**)this.this\r\n$6 = (void *) 0x0\r\n(gdb) s\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x0804b786 in bug.main.__dgliteral1 (i=1) at bug.d:7\r\n(gdb) p __framedecl\r\n$7 = {__chain = 0x0}\r\n(gdb)\r\n}}}\r\n\r\nLooks like the frame of the above function is being stamped over, setting the chain to access D main a null pointer.\r\n\r\nThis will be tricky... :3","created_on":"2011-09-27T20:40:43.475943+00:00","user":"ibuclaw","updated_on":null,"issue":242,"id":674105},{"content":"I think the proper fix will require an ABI change.\n\nCurrently, function frames are created and passed in the same way the GCC backend does, except it's written in the frontend (mostly for simplicity).\n\nAs in - a new local decl is created for each nesting function to hold and chain on the function frame which is used for passing to lower functions or accessing decls referenced above.\n\nThink:\n{{{\nvoid main()\n{\n   frame { .x }  \/\/ int x;\n   foo(void *chain)\n   {\n       frame { .chain = chain };\n       void bar(void *chain)\n       {\n          frame { .chain = chain };\n          ((frame.main *)((void **)frame.chain))->x = 3;   \/\/ x = 3;\n       }\n       bar(&frame);\n   }\n   foo(&frame);\n}\n}}}\n\nThe rewrite would imply that only functions that have nested references would create frames. The same will also be the case with closures also.\n{{{\nvoid main()\n{\n   frame { .x }  \/\/ int x;\n   foo(void *chain)\n   {\n       void bar(void *chain)\n       {\n          ((frame.main *)chain)->x = 3;   \/\/ x = 3;\n       }\n       bar(chain);\n   }\n   foo(&frame);\n}\n}}}\n\nI think this would closer match the behaviour of DMD too.","created_on":"2011-09-29T21:43:45.488019+00:00","user":"ibuclaw","updated_on":"2011-09-29T21:46:15.166325+00:00","issue":242,"id":678009},{"content":"Fix is in test.","created_on":"2011-10-01T21:37:29.130662+00:00","user":"ibuclaw","updated_on":null,"issue":242,"id":680613},{"content":"Fix was lost, found, and applied before I lost the patches again.\r\n\r\n<<changeset 674:467d7fa518fc>>","created_on":"2011-11-14T00:27:16.403478+00:00","user":"ibuclaw","updated_on":null,"issue":242,"id":782578},{"content":"I think the problem here is that DFLAGS gets appended to the argument list after translating the DMD-style args to GDC-style args.  For compatibility with DMD DFLAGS should be translated from DMD-style to GDC-style.","created_on":"2011-09-27T15:47:44.421074+00:00","user":"dsimcha","updated_on":null,"issue":241,"id":673554},{"content":"I totally forgot about this...\r\n\r\n<<changeset 645:4bf307759462>>","created_on":"2011-09-27T18:20:27.426446+00:00","user":"ibuclaw","updated_on":null,"issue":241,"id":673856},{"content":"I think you forgot to commit the change set.  There haven't been any new commits.  ","created_on":"2011-09-27T18:28:16.294636+00:00","user":"dsimcha","updated_on":null,"issue":241,"id":673870},{"content":"Not strictly true.  For GCC major versions >= 4, there is support for processing multiple files via the -combine option. The dmd-script utilises this so all source files get passed to the compiler in one sweep.  For GCC 4.6, -combine was removed in favour of it being the default behaviour if \"-o\" is specified (which it is in the script).\r\n\r\nThe only thing serial in the build process compared to dmd would be the reading of files passed - which won't be fixed for some time. :)","created_on":"2011-09-27T18:32:54.578868+00:00","user":"ibuclaw","updated_on":null,"issue":243,"id":673884},{"content":"Hmm, strange.  I definitely see multiple instances of cc1d being started serially when I compile some libraries using all-at-once building, and I'm using the gdmd wrapper and GCC 4.6.1.  Anyhow, this isn't a high priority issue.  It's just that my work box has 8 cores and GDC builds these libs a lot slower than DMD.  I thought (possibly wrongly) that parallelizing might be an easy, no-brainer way to speed things up.","created_on":"2011-09-27T18:38:49.021157+00:00","user":"dsimcha","updated_on":null,"issue":243,"id":673899},{"content":"Ahh, -lib is an exception to my former statement. :)","created_on":"2011-09-27T18:59:36.183125+00:00","user":"ibuclaw","updated_on":null,"issue":243,"id":673953},{"content":"Closing as per above comments on behaviour.","created_on":"2011-10-04T16:27:44.602973+00:00","user":"ibuclaw","updated_on":null,"issue":243,"id":685242},{"content":"with checking=release it compiles.","created_on":"2011-12-06T17:48:20.875919+00:00","user":"trass3r","updated_on":null,"issue":278,"id":845062},{"content":"yep, I now configured with {{{--enable-checking=assert,misc,gimple,tree,types,rtlflag,runtime}}}\r\n\r\ni.e. 'yes' without 'gc' and it still compiles.\r\nShall I leave it that way and not report gc stuff anymore?","created_on":"2011-12-06T18:39:27.055762+00:00","user":"trass3r","updated_on":null,"issue":278,"id":845188},{"content":null,"created_on":"2011-12-06T12:35:04.489928+00:00","user":"trass3r","updated_on":null,"issue":278,"id":844052},{"content":"> arsd\/web.d:1921:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (H�߽\u0001) in \r\n\r\nIf you compile with --enable-checking=release, does the same thing occur?\r\n\r\nI'm pretty certain you are getting these because gdc isn't properly integrated with the gcc garbage collector, and you have --enable-checking=gc turned on.\r\n\r\nRegards.","created_on":"2011-12-06T16:43:00.372020+00:00","user":"ibuclaw","updated_on":null,"issue":278,"id":844840},{"content":"As of <<changeset fc5e3bddbf94>> - does this GC error still occur?\r\n\r\nRegards","created_on":"2011-12-27T22:51:34.990316+00:00","user":"ibuclaw","updated_on":null,"issue":278,"id":909272},{"content":"Works now, thx.","created_on":"2011-12-27T23:25:34.246573+00:00","user":"trass3r","updated_on":null,"issue":278,"id":909337},{"content":"That would be preferable until I sort out GDC and the GTY'd system.\r\n\r\nRegards","created_on":"2011-12-07T17:13:00.124596+00:00","user":"ibuclaw","updated_on":null,"issue":278,"id":848762},{"content":"Duplicate of #78.","created_on":"2011-10-04T16:28:34.056578+00:00","user":"ibuclaw","updated_on":null,"issue":245,"id":685246},{"content":"Not a bug \/ works for me - it wouldn't be a problem if you had all build dependencies installed.","created_on":"2011-04-26T19:14:01.332761+00:00","user":"ibuclaw","updated_on":null,"issue":201,"id":455636},{"content":"Sorry ibuclaw.  It's a bug.  Specific to Ubuntu.\r\n\/usr\/include\/linux\/asm\/errno.h does not exist.\r\ninstead, it exists in \/usr\/include\/[arch]-linux-gnu\/asm\/errno.h\r\n\r\nI don't know enough to tell who's fault it is.  My money is on Ubuntu, though.\r\nSometimes installing gcc-multilib fixes it.  \r\nIt didn't in my case... =(\r\n\r\nI wonder if simply copying the file over will fix this...\r\nWatch this.  this is how I keep hosing my system.","created_on":"2011-10-04T21:16:47.010865+00:00","user":null,"updated_on":null,"issue":201,"id":685876},{"content":"And... Astonishingly enough it worked.  just create a symlink from \/usr\/includes\/asm to \/usr\/include\/asm-generic\r\nThat's it.  I noticed that you have a few other bugs that are basically the same as this one.\r\n\r\nMight be worth it to put up a caution sign.\r\ninstall gcc-mulitlib, or make this symlink.","created_on":"2011-10-04T23:44:07.994812+00:00","user":null,"updated_on":null,"issue":201,"id":686078},{"content":null,"created_on":"2011-12-04T21:58:06.013549+00:00","user":"ibuclaw","updated_on":null,"issue":275,"id":838277},{"content":"<<changeset 688:e32c8fbe7343>>","created_on":"2011-12-04T22:36:33.282684+00:00","user":"ibuclaw","updated_on":null,"issue":275,"id":838384},{"content":"Thank you, but gdc still segfaults here.\r\n\r\nIn fact \"gdc -m64 ice01.d -o ice01\" does not, but \"gdc -m64 -g ice01.d -o ice01\" still results in:\r\n\r\n{{{\r\nice01.d:7: Error: class ice01.C interface function I.m isn't implemented\r\nice01.d:16:0: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n}}}\r\n\r\nBTW, is http:\/\/lists.puremagic.com\/pipermail\/digitalmars-d-learn\/2011-October\/027638.html likely a GDC issue to add here? (i don't have dmd to verify if it also happens with that compiler...)","created_on":"2011-12-05T02:09:40.860505+00:00","user":null,"updated_on":null,"issue":275,"id":838657},{"content":"I forgot to mention:  PackedStorage's postblit is somehow related to this bug.  If you remove it, then the bug goes away.","created_on":"2011-12-18T03:45:50.435380+00:00","user":"dsimcha","updated_on":null,"issue":291,"id":883210},{"content":"Here's a simplified test case.  The root of the problem is that GDC doesn't implement NRVO properly and (don't ask me why, I didn't write that code and don't understand the details of its reference counting scheme) SciD relies heavily on it being implemented properly.\r\n\r\n{{{\r\nimport core.stdc.stdio;\r\n\r\nstruct S {\r\n    this(this) {\r\n        printf(\"Postblit\\n\");\r\n    }\r\n    \r\n    ~this() {\r\n        printf(\"D'tor\\n\");\r\n    }\r\n}\r\n\r\nS doIt() {\r\n    S s;\r\n    printf(\"s lives at %p in doIt.\\n\", &s);\r\n    printf(\"Return from doIt\\n\");\r\n    return s;\r\n}\r\n\r\nvoid main() {\r\n    printf(\"Call doIt\\n\");\r\n    auto s = doIt();\r\n    printf(\"s lives at %p in main.\\n\", &s);\r\n    printf(\"Return from main\\n\");\r\n}\r\n}}}\r\n\r\n{{{\r\ndsimcha@debian:~$ gdc -o test test.d && .\/test\r\nCall doIt\r\ns lives at 0x7fff2950832f in doIt.\r\nReturn from doIt\r\nPostblit\r\nD'tor\r\ns lives at 0x7fff2950836f in main.\r\nReturn from main\r\nD'tor\r\n\r\ndsimcha@debian:~$ dmd test.d && .\/test\r\nCall doIt\r\ns lives at 0x7fff19ec1f68 in doIt.\r\nReturn from doIt\r\ns lives at 0x7fff19ec1f68 in main.\r\nReturn from main\r\nD'tor\r\n\r\ndsimcha@debian:~$ ldc2 test.d && .\/test\r\nCall doIt\r\ns lives at 0x7fff5b5fdfe0 in doIt.\r\nReturn from doIt\r\ns lives at 0x7fff5b5fdfe0 in main.\r\nReturn from main\r\nD'tor\r\n\r\n}}}","created_on":"2011-12-19T00:54:11.638119+00:00","user":"dsimcha","updated_on":null,"issue":291,"id":885203},{"content":"Looks like I beat you to the answer within a minute... :-)\r\n\r\nRe-adding as duplicate.\r\n\r\nDuplicate of #244.","created_on":"2011-12-19T00:57:49.251019+00:00","user":"ibuclaw","updated_on":"2011-12-19T00:57:49.299982+00:00","issue":291,"id":885210},{"content":"Changing back to duplicate.  I changed it to new by accident, ironically because I was in the process of writing a post saying it was NRVO-related when you submitted yours.  Our changes collided.","created_on":"2011-12-19T00:56:53.185325+00:00","user":"dsimcha","updated_on":null,"issue":291,"id":885208},{"content":"Is related to open NRVO report.\r\n\r\nDuplicate of #244.","created_on":"2011-12-19T00:53:11.349483+00:00","user":"ibuclaw","updated_on":"2011-12-19T00:53:11.397431+00:00","issue":291,"id":885200},{"content":null,"created_on":"2011-12-08T14:37:39.927561+00:00","user":"dsimcha","updated_on":null,"issue":253,"id":851886},{"content":"This has been fixed in GCC-4.5 (there's not much mention on the macro, but I've just found it hiding there a few moments ago).\r\n\r\nJust testing an in-house fix, and all now passes OK here.\r\n\r\nRegards\r\nIain","created_on":"2011-10-18T22:23:38.251521+00:00","user":"ibuclaw","updated_on":null,"issue":247,"id":723083},{"content":"<<changeset 652:19de20aec625>>","created_on":"2011-10-21T22:07:18.265419+00:00","user":"ibuclaw","updated_on":null,"issue":247,"id":730205},{"content":null,"created_on":"2011-10-22T17:32:10.313290+00:00","user":"ibuclaw","updated_on":null,"issue":247,"id":731260},{"content":"Building with '-nophoboslib' or '-defaultlib tango' does this. (You will also require to add '-pthread' too using these options).","created_on":"2010-11-15T11:44:08.126649+00:00","user":"ibuclaw","updated_on":null,"issue":96,"id":290167},{"content":"Cannot this issue be marked as resolved?","created_on":"2011-10-11T15:44:28.079701+00:00","user":"mafm","updated_on":null,"issue":96,"id":707194},{"content":"Yes, it can be marked as resolved.\r\n\r\n-nophobos and -defaultlib are documented options.","created_on":"2011-10-11T19:00:50.867504+00:00","user":"ibuclaw","updated_on":null,"issue":96,"id":707623},{"content":"Have you tested this?","created_on":"2011-12-19T08:05:13.568246+00:00","user":"ibuclaw","updated_on":null,"issue":293,"id":885892},{"content":"In reply to https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/293\/ffunction-sections-fdata-sections-for#comment-887904:\r\n\r\nI don't get an ICE with LTO + gc-sections.\\\\\r\nPlease file it as a separate issue.","created_on":"2011-12-28T00:18:51.376307+00:00","user":"trass3r","updated_on":null,"issue":293,"id":909398},{"content":"I was curious about the impact this would make, so i ran i few quick tests [1]; building a small and simple program, which uses only a few modules.\r\n\r\nThe resulting executable sizes (identical builds, differing only in gc-sections options):\r\n{{{\r\nstock libphobos, no --gc-sections:  755104 bytes\r\nstock libphobos plus gc-sections:  634688 bytes\r\nlibphobos built with -ffunction-sections -fdata-sections plus gc-sections:  328128 bytes\r\n}}}\r\n\r\nSo it makes a huge difference, more than cutting the binary size in half.\r\n\r\nHopefully it won't confuse the GC, and i will not run into yet another ICE issue forcing me to revert this. :)\r\n\r\n[1] basically:\r\n{{{\r\n[...]\r\n  make -j9 2>&1 | tee build.log\r\n  \r\n+  (\r\n+  cd *\/libphobos\/\r\n+   sed <Makefile >Makefile.new -e 's\/^DFLAGS =.*\/& -ffunction-sections -fdata-sections\/'\r\n+   mv Makefile.new Makefile\r\n+   make clean\r\n+  )\r\n+  make -j9 2>&1 | tee build.log\r\n  \r\n  make -j2 install\r\n[...]\r\n}}}\r\n\r\nand \"-ffunction-sections -fdata-sections -Wl,--gc-sections\" when compiling and linking the program.","created_on":"2011-12-19T17:22:59.399658+00:00","user":"art_","updated_on":null,"issue":293,"id":887392},{"content":"Does it make a difference in compile\/link time?","created_on":"2011-12-19T18:11:06.097542+00:00","user":"trass3r","updated_on":null,"issue":293,"id":887537},{"content":"I'd expect no significant diff in compile times, and small increase in link times (when the section GC actually happens). but i have no large enough D project to time...\r\n\r\nFor the simple program mentioned above, the final compile-main-unit+link invocation takes 1.97s with section-gc, and 1.96s w\/o, so it's in the noise.\r\n\r\nFWIW, \"make 2>&1  | grep -c 'Removing unused section'\"  tells me that the GC removed 3168 unneeded sections from the resulting executable...","created_on":"2011-12-19T18:36:19.023670+00:00","user":"art_","updated_on":null,"issue":293,"id":887648},{"content":"To me, this looks like more of a cludge or stop gap until libphobos is set to be built as a shared library by default.\r\n\r\nAnd having a look up on the behaviour of the flags, it seems that building with -ffunction-sections\/-fdata-sections will generally create larger binaries unless one remembers to always compile with --gc-sections.  Ugh.","created_on":"2011-12-19T18:58:40.534051+00:00","user":"ibuclaw","updated_on":null,"issue":293,"id":887698},{"content":"It will be many years until a std shared d runtime could even be considered a real option... Hence static linking will be the norm for at least the next five years, maybe much longer...\r\n\r\nLarger binaries? The linker will merge the sections even when -Wl,--gc-sections is omitted.\r\n\r\nBTW i also tried gc-sections together with LTO in the mean time, and that gets me an ICE again, but i guess that's expected (lto1: internal compiler error: in ipcp_iterate_stage, at ipa-cp.c:891)","created_on":"2011-12-19T20:01:08.714220+00:00","user":"art_","updated_on":null,"issue":293,"id":887904},{"content":"> It will be many years until a std shared d runtime could even be considered a real option... Hence static linking will be the norm for at least the next five years, maybe much longer...\r\n\r\nI expect to roll out shared library support over the next two months... ","created_on":"2011-12-19T21:05:48.444188+00:00","user":"ibuclaw","updated_on":null,"issue":293,"id":888077},{"content":"I certainly appreciate your (and everybody elses) work on this, and hope shared libs happen sooner rather than later.\r\n\r\nBut it's not as simple as making the dlls build. Can you imagine somebody shipping a (binary) product linked to a shared system D runtime (phobos etc) in three months time? Half a year? Two years? \r\n\r\nBecause if it can not use system provided libs, it might just as well be linked statically; in fact doing this avoids a lot of problems, for which the only solution would be \"make sure the very library we shipped you is used\" anyway.\r\n\r\nIs phobos stable enough that you can rely on the dll ABI not changing for the lifetime of the product? Being included in every relevant distribution\/OS, with all of them being compatible?\r\n\r\nHow many versions of the dlls will there be? IOW, will you have to pick one of llvm, gdc or dmd variants? Support all of them?\r\n\r\nThe problem may be a little smaller for source (or pseudo-source, such as ubuntu etc) based distributions, but it is still there. I imagine the windows way would be a bundled dll with every single D app anyway, so that doesn't impact much.\r\n\r\nMy point is just that statically linked D programs [1] will be relevant for quite some time yet, and the \"stop gap\" would be useful even long after shared libs became officially supported. Hence the multi-year estimate above.\r\n\r\nIs there any technical problem with the per-function|data sections approach? The few tests i was able to run here didn't turn up anything, other than the huge difference in executable sizes. (First thing i was worried about was the possibility of the D GC being confused by data\/bss layout changes, but things seem ok so far. Normal (ie. w\/o ld's --gc-sections) linking seems to work reasonably (same number of sections in the resulting executable, similar size)\r\n\r\n[1] well, \"programs statically linked with phobos\", as the issues with other (common) libs are not much different from Cs.","created_on":"2011-12-19T22:41:00.678379+00:00","user":"art_","updated_on":null,"issue":293,"id":888330},{"content":"1) Do some GC intensive tests:\r\n\r\n2) The phobos library shipped with GDC is to reside in the GCC library directories, so is not to be confused with system libraries.  Generally, you release a binary, you say it requires GDC runtime library version 4.x.x to run.  It is not assumed that mixing libraries between DMD, GDC and LDC will work, due to ABI differences, but with the issue you raised on library variants, this is only an issue if you ship libraries as a standalone package\/install.   Applications on the other hand will have no such problem as they tend to ship their own dependencies in their own library directories.\r\n\r\nRegards","created_on":"2011-12-20T00:10:33.547967+00:00","user":"ibuclaw","updated_on":null,"issue":293,"id":888596},{"content":"1. resulting executable is already doubly bloated, so if one doesn't care about size, he may not care about forgetting --gc-sections. It should be also solvable with compiler config, right?\r\n\r\n2. shared and static linking serve different purposes and have different tradeoffs (like distribution and maintainability issues). Static linking will always have sense, so ideally both options should be available (just like for c++ libs). This proposal improves static linking and seemingly doesn't break shared one.\r\n\r\n3. shared linking has even worse size issues because nothing can be omitted from the library.","created_on":"2011-12-21T08:43:34.899739+00:00","user":null,"updated_on":null,"issue":293,"id":894368},{"content":"wontfix as shared library support is now in the works.","created_on":"2012-01-25T19:04:27.596932+00:00","user":"ibuclaw","updated_on":null,"issue":293,"id":999124},{"content":"Turned out to be TLS related.  That issue has been fixed as well as requiring _Dmain to link.\r\n\r\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/downloads","created_on":"2011-12-15T10:34:19.940127+00:00","user":"venix1","updated_on":null,"issue":285,"id":875518},{"content":"I'll have it fixed in the next release.  \r\n\r\nThe problem is related to <<issue 229>> in that main is part of the phobos library.  When I separated it for MinGW I didn't remove the external reference to it from dmain2.\r\n\r\nYou can in the meantime just supply a main function.  Which with -mwindows will never be called.\r\n\r\n{{{\r\n#!d\r\nvoid main()\r\n{\r\n     assert(false, \"should never be called\");\r\n}\r\n}}}","created_on":"2011-12-13T02:40:59.231589+00:00","user":"venix1","updated_on":null,"issue":285,"id":866213},{"content":"Adding a normal main won't work:\r\n\r\n{{{\r\nD:\\dev\\code\\d_code\\gdcBug>gdc -v2 -mwindows test.d\r\n\r\nC:\\DOCUME~1\\Andrej\\LOCALS~1\\Temp\\cc5TaWsW.s: Assembler messages:\r\nC:\\DOCUME~1\\Andrej\\LOCALS~1\\Temp\\cc5TaWsW.s:149: Error: symbol `__tlsstart' is already defined\r\nC:\\DOCUME~1\\Andrej\\LOCALS~1\\Temp\\cc5TaWsW.s:154: Error: symbol `__tlsend' is\r\nalready defined\r\n}}}","created_on":"2011-12-13T03:43:22.375259+00:00","user":"Andrej08","updated_on":null,"issue":285,"id":866334},{"content":"Well, by works I mean it compiles. It doesn't actually run properly:\r\n\r\n{{{\r\n#!D\r\nmodule test;\r\n\r\nimport core.runtime;\r\nimport std.c.windows.windows;\r\nimport std.string;\r\n\r\nextern(Windows)\r\nint WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int iCmdShow)\r\n{\r\n    int result;\r\n    void exceptionHandler(Throwable e) { throw e; }\r\n\r\n    try\r\n    {\r\n        Runtime.initialize(&exceptionHandler);\r\n        \r\n        \/\/ crash\r\n        MessageBoxA(null, \"Test Message\".toStringz, \"\", MB_OK | MB_ICONEXCLAMATION);\r\n        \r\n        Runtime.terminate(&exceptionHandler);\r\n    }\r\n    catch (Throwable e)\r\n    {\r\n        MessageBoxA(null, e.toString().toStringz, \"Error\", MB_OK | MB_ICONEXCLAMATION);\r\n        result = 0;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nextern (C) void _Dmain()  { assert(false); }\r\n}}}\r\n\r\n{{{\r\ngdc -v2 -mwindows test.d && a.exe\r\n\r\n---------------------------\r\na.exe - Application Error\r\n---------------------------\r\nThe instruction at \"0x00408718\" referenced memory at \"0x00000000\". The memory could not be \"read\".\r\n}}}","created_on":"2011-12-13T03:57:48.320958+00:00","user":"Andrej08","updated_on":null,"issue":285,"id":866354},{"content":"Try\r\n\r\n{{{\r\nextern (C) void _Dmain()  { assert(false); }\r\n}}}","created_on":"2011-12-13T03:46:35.702840+00:00","user":"venix1","updated_on":null,"issue":285,"id":866339},{"content":"Thanks, that works.","created_on":"2011-12-13T03:51:58.152226+00:00","user":"Andrej08","updated_on":null,"issue":285,"id":866347},{"content":"For the record, DMD compiles the same code into a non-crashing app via:\r\n{{{\r\ndmd -L-Subsystem:Windows test.d && test.exe\r\n}}}","created_on":"2011-12-13T03:58:59.659820+00:00","user":"Andrej08","updated_on":null,"issue":285,"id":866356},{"content":"Fantastic work! My DWinProgramming project now successfully compiles via GDC, and I'll soon upload the build scripts so others can give it a try.","created_on":"2011-12-15T14:35:51.167415+00:00","user":"Andrej08","updated_on":null,"issue":285,"id":876167},{"content":"GCC is clobbering EDX before it's value can be used.  I'm trying to determine if this is related to my TLS patches or a GDC issue.\r\n\r\nFrom [[http:\/\/www.d-programming-language.org\/abi.html|D ABI]].  \r\n  \"Dynamic arrays are returned with the pointer in EDX and the length in EAX.\"","created_on":"2011-12-14T02:19:36.213834+00:00","user":"venix1","updated_on":null,"issue":285,"id":870378},{"content":"s\/segfaulting\/gcc_asserting\/, obviously. sorry.","created_on":"2011-12-05T16:26:39.564501+00:00","user":null,"updated_on":null,"issue":276,"id":840626},{"content":"Hmm, does not happen when building with a x86 targeted gdc build. Hence probably bogus - i had to play games with some includes\/*.di, which probably caused this....\r\n Still, is -m32 supposed to work?  It does not right now, as the 32bit includes are missing.","created_on":"2011-12-05T16:47:26.974303+00:00","user":null,"updated_on":null,"issue":276,"id":840711},{"content":"I can reproduce this on an older build, but not the current tip.\r\n\r\nThanks.","created_on":"2011-12-05T20:58:50.551521+00:00","user":"ibuclaw","updated_on":null,"issue":276,"id":841762},{"content":"I have also tried the gcc inline assembler syntax:\r\n\r\n{{{\r\n\tasm {\r\n\t\t\"fild %0\" : : \"m\" l;\r\n\t\tfstp\tl_value;\r\n\t}\r\n}}}\r\n\r\nThis also only loads the bottom 16 bits of the long int value.","created_on":"2011-10-15T13:59:06.248165+00:00","user":"GrahamC","updated_on":null,"issue":248,"id":715943},{"content":"This does work:\r\n\r\n{{{\r\n\tasm {\r\n\t\t\"fildll %0\" : : \"m\" l;\r\n\t\tfstp\tl_value;\r\n\t}\r\n}}}\r\n\r\nBut I would like to be able to use the same code for dmd and gdc and the fildll opcode is only accepted with the gcc inline assembler syntax.","created_on":"2011-10-15T14:15:00.136011+00:00","user":"GrahamC","updated_on":null,"issue":248,"id":715957},{"content":"However, this syntax can cause an internal compiler error. The following code generates the compilation error:\r\n{{{\r\ntest.d: In function ‘test.myfunc’:\r\ntest.d:3:0: internal compiler error: in expand_gimple_stmt_1, at cfgexpand.c:1869\r\n}}}\r\n\r\n{{{\r\nvoid myfunc(long n) {\r\n\tn += 1;\r\n\tasm {\r\n\t\t\"fildll %0\" : : \"m\" n;\r\n\t}\r\n}\r\n}}}\r\n\r\nThe internal error is for line 3 (n += 1). If you take that line out it compiles OK. If you take the asm statement out it compiles OK. With both statements the compiler internal error happens.\r\n\r\nThe same error message for both 32 bit and 64 bit compilations.","created_on":"2011-10-16T10:37:37.354607+00:00","user":"GrahamC","updated_on":null,"issue":248,"id":716924},{"content":"<<changeset 8bd2a4ca84c0:647>>\r\n\r\nWill probably need to double check which opcodes have 'll' sufffix for 64bit.","created_on":"2011-10-16T23:41:15.388260+00:00","user":"ibuclaw","updated_on":null,"issue":248,"id":717835},{"content":"Yep, it's just fild which has 64bit extension - so will need special case. For all others, can use just 'l'.","created_on":"2011-10-17T10:56:04.704282+00:00","user":"ibuclaw","updated_on":null,"issue":248,"id":718720},{"content":"I used \"fildll\" in the example as that is how gdb displays it. I believe \"fildq\" is the same so it would be nice if both are accepted.","created_on":"2011-10-17T14:20:03.742741+00:00","user":"GrahamC","updated_on":null,"issue":248,"id":719181},{"content":"Ifyou are using gcc assembler syntax,  then you can use either. The errors will only occur at the assembly stage of compiling. \r\n\r\nFor D iasm syntax,  you always use fild, its the job off the compiler to emit the correct instruction for what you mean. ","created_on":"2011-10-17T17:41:18.380479+00:00","user":"ibuclaw","updated_on":null,"issue":248,"id":719585},{"content":"<<changeset 651:8789c97f84ac>>\r\n","created_on":"2011-10-17T20:35:02.581164+00:00","user":"ibuclaw","updated_on":null,"issue":248,"id":720004},{"content":"I stumbled on a (rather long) case where this still occurs with GDC tip, GCC 4.6.1:\r\n\r\n{{{\r\nstruct naive_ {\t\r\n\tstatic void getrf( T )\r\n    ( size_t m, size_t n, T* a, size_t lda, int* pivot, ref int info ) {\r\n\t\tvoid set()( T x, size_t i, size_t j ) {\r\n\t\t\ta[j * lda + i] = x;\r\n\t\t}\r\n\r\n\t\tT aux = get;\r\n\t\tset( aux, pivot[1], 1 );\r\n\t}\r\n}\r\n\r\nstruct BasicVector {\r\n\tvoid opSliceAssign( Rhs )( auto ref Rhs rhs ) {\r\n\t\tevalCopy( rhs, this );\r\n\t}\r\n}\r\n\r\nenum Transpose : bool { no }\r\n\r\nvoid evalCopy( Source, Dest )( Source source, Dest dest ) {\r\n evalMatrixVectorProduct( 1.0, source.lhs, source.rhs, 0.0, dest );\r\n}\r\n\r\nvoid evalMatrixVectorProduct(  Alpha, Beta, Mat, Vec, Dest )\r\n( Alpha alpha_, Mat mat, Vec vec, Beta beta_, Dest dest ) {\r\n\t\t\t\tevalSolve( mat.lhs, dest );\r\n}\r\n\r\nvoid evalSolve( Transpose transM = Transpose.no, Mat, Dest)(Mat mat, Dest) {\r\n\tenum compiles =  __traits(compiles, mat.solveRight());\r\n}\r\n\r\nExpression!(op, Lhs, Rhs) expression( string op, Lhs, Rhs)(Lhs lhs, Rhs rhs) {\r\n\tassert(0);\r\n}\r\n\r\nstruct Expression( string op_, Lhs, Rhs = void) {\t\r\n\tauto opBinary( string op, NewRhs )( NewRhs newRhs ) {\r\n       return expression!op( this, newRhs );\r\n    }\r\n\r\n\tLhs   lhs;\t\r\n\tstatic if( op_ == \"*\" ) Rhs   rhs;\r\n}\r\n\r\nstruct BasicMatrix {\t\r\n    void solveRight( Transpose transM = Transpose.no)() {\r\n\t\tint info = 0;                                                   \r\n\t\tnaive_.getrf( 1, 1, (double*).init, 1, (int*).init, info );                    \r\n\t}\r\n}\r\n\r\nExpression!( \"inv\", M ) inv( M )( auto ref M matrix ) {\r\n\treturn typeof( return ).init;\t\r\n}\r\n\r\nvoid main() {\r\n    BasicMatrix cwc;\r\n    auto csiVec = BasicVector();\r\n\tcsiVec.opSliceAssign(inv(cwc) * csiVec);\r\n}\r\n}}}\r\n\r\nThis test case was isolated from SciD and is named scidSingleFile.d.  Since this bug seems very sensitive to seemingly minor details like identifier names, I printed out my whole GDC configuration before compiling the file.  (See below.)\r\n\r\n{{{\r\ndsimcha@debian:~$ gdc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gdc\r\nCOLLECT_LTO_WRAPPER=\/home\/dsimcha\/apps\/gdc\/bin\/..\/libexec\/gcc\/x86_64-linux-gnu\/4.6.1\/lto-wrapper\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ..\/configure -v --enable-languages=d --disable-bootstrap --prefix=\/gdc --disable-shared --enable-multiarch --with-multiarch-defaults=x86_64-linux-gnu --enable-linker-build-id --with-system-zlib --without-included-gettext --enable-threads=posix --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-plugin --with-arch-32=i586 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --disable-lto --disable-mudflap --disable-libgomp\r\nThread model: posix\r\ngcc version 4.6.1 20110627 (gdc 0.30, using dmd 2.057) (GCC) \r\ndsimcha@debian:~$ gdc -c scidSingleFile.d\r\nscidSingleFile.d: In member function ‘scidSingleFile.naive_.getrf!(double).getrf.set!().set’:\r\nscidSingleFile.d:4:0: internal compiler error: in gimple_expand_cfg, at cfgexpand.c:4063\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}","created_on":"2011-12-17T23:58:07.723310+00:00","user":"dsimcha","updated_on":null,"issue":279,"id":883022},{"content":"<<changeset 694:c501487a685a>>","created_on":"2011-12-10T09:25:36.651733+00:00","user":"ibuclaw","updated_on":null,"issue":279,"id":858613},{"content":"And no wonder.  the nested function set!() gets emitted, but it's parent getrf is ignored by the D frontend?\r\n\r\nI think the fix would be to catch and not emit the nested function, tah.","created_on":"2011-12-18T13:45:39.498248+00:00","user":"ibuclaw","updated_on":null,"issue":279,"id":883809},{"content":"<<changeset 708:6778c7a1f79e>>","created_on":"2011-12-19T01:00:30.241617+00:00","user":"ibuclaw","updated_on":null,"issue":279,"id":885215},{"content":"Could give it a try, and revert if it reaps havoc. :)\r\n\r\n<<changeset 700:f1bd82f9bb5b>>","created_on":"2011-12-17T14:43:47.432284+00:00","user":"ibuclaw","updated_on":null,"issue":282,"id":882115},{"content":"Not anymore - was removed in place of gcc's imultilib option,  and means can remove a patch against gcc proper. \r\n\r\nThight I had removed all references... :)","created_on":"2011-10-24T08:07:42.731533+00:00","user":null,"updated_on":null,"issue":251,"id":733879},{"content":"<<changeset 662:c72727fc3f13>>","created_on":"2011-10-24T11:29:00.944073+00:00","user":"ibuclaw","updated_on":null,"issue":251,"id":734377},{"content":"MinGW has TLS support.","created_on":"2011-12-06T00:28:07.536486+00:00","user":"venix1","updated_on":null,"issue":194,"id":842358},{"content":null,"created_on":"2011-12-06T00:29:44.839559+00:00","user":"venix1","updated_on":null,"issue":170,"id":842364},{"content":"Is pragma(lib) going to be supported? I'm not in a rush or anything. :)\r\n\r\nThe other issue is that I've tried passing the library file name on command line, like so:\r\n\r\n{{{\r\ngdmd driver.d libwinmm.a\r\n}}}\r\n\r\nHowever gdmd won't link with libwinmm.a unless I copy the file directly to my project directory. libwinmm.a is an import library and its located by default in the \/lib subdirectory of MinGW\/GDC. Shouldn't GDMD automatically try to look in the \/lib directory for missing library files specified on the command line?","created_on":"2011-03-23T00:03:27.969183+00:00","user":"Andrej08","updated_on":null,"issue":170,"id":413049},{"content":"I guess that shows how much gdmd has been tested.  GDC requires {{{-lwinmm -L<path>}}} for library usage.  Briefly looking over the source for GDMD it doesn't take that into consideration.","created_on":"2011-03-23T00:11:51.148346+00:00","user":"venix1","updated_on":null,"issue":170,"id":413055},{"content":"Windows users will need to create a batch to easily use GDMD, gdmd.bat:\r\n{{{\r\n@echo off\r\nperl gdmd %*\r\n@echo on\r\n}}}\r\n\r\nI keep that file in GDC \/bin. Maybe add it to the binaries on the next release?","created_on":"2011-03-23T00:41:11.541578+00:00","user":"Andrej08","updated_on":null,"issue":170,"id":413092},{"content":"I'm sorry, for some reason every time I post the status of the bug changes. I haven't selected anything. :s","created_on":"2011-03-23T00:43:39.393666+00:00","user":"Andrej08","updated_on":null,"issue":170,"id":413099},{"content":"I was thinking using something like http:\/\/par.perl.org\/wiki\/Main_Page to turn it into a binary.\n\nOn the other hand, maybe it's time someone rewrote it in D.","created_on":"2011-03-23T00:47:27.471042+00:00","user":"venix1","updated_on":"2011-03-23T00:48:58.955275+00:00","issue":170,"id":413104},{"content":"{{{\r\n#!d\r\nimport std.stdio, std.conv;\r\n\r\nint main()\r\n{\r\n\twstring wmsg=\"hello world\"w;\r\n\tstring cmsg=text(wmsg);\r\n\tassert(cmsg==\"hello world\");\r\n\twriteln(cmsg);\r\n\twriteln(\"hangs on writeln(wmsg);\");\r\n\twriteln(wmsg);\r\n\treturn 0;\r\n}\r\n\r\n}}}\r\ncompile\r\n\r\ngdc -v2 test.d -o test.exe\r\n\r\nand run\r\n\r\nworks with dmd 2.050, windows","created_on":"2011-03-26T21:08:59.657972+00:00","user":null,"updated_on":null,"issue":170,"id":417100},{"content":"\r\n{{{\r\n#!d\r\nwriteln(1);\r\n}}}\r\nis interesting too: it does print 1, doesn't print new line and hangs.","created_on":"2011-03-26T21:42:25.481389+00:00","user":null,"updated_on":null,"issue":170,"id":417126},{"content":"This small program gives me an ICE with the latest binary distribution. I think the linux version works, however i will try again later.\r\n\r\n{{{\r\nmodule  bug;\r\n\r\nclass foo\r\n{\r\n}\r\n\r\nvoid func()\r\n{\r\n        foo a = null;\r\n        foo[] b = [ null, a, a ];\r\n}\r\n\r\n}}}\r\n\r\nused like this:\r\n\r\n{{{\r\nD:\\projectes\\bug>gdc -v2 bug.d\r\nbug.d:1:0: internal compiler error: in expand_expr_real_1, at expr.c:8481\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issue> for instructions.\r\n}}}","created_on":"2011-04-20T12:09:57.344459+00:00","user":"jordirovira","updated_on":null,"issue":170,"id":448541},{"content":"I can confirm that #8 doesn't crash the latest gdc in linux, or dmd (linux or windows).","created_on":"2011-04-21T08:33:45.897024+00:00","user":"jordirovira","updated_on":null,"issue":170,"id":449906},{"content":"Got debugging symbols put back into GDC.  Briefly looking at the code, the assert is triggered **because context is null**.  I'll look into it more later, unless Iain has any ideas on why it's happening.\r\n{{{\r\n\/* from expr.c *\/\r\n8474          \/* Variables inherited from containing functions should have\r\n8475             been lowered by this point.  *\/\r\n8476          context = decl_function_context (exp);\r\n8477          gcc_assert (!context\r\n8478                      || context == current_function_decl\r\n8479                      || TREE_STATIC (exp)\r\n8480                      \/* ??? C++ creates functions that are not TREE_STATIC. *\/\r\n8481                      || TREE_CODE (exp) == FUNCTION_DECL);\r\n}}}","created_on":"2011-04-22T22:06:17.880758+00:00","user":"venix1","updated_on":null,"issue":170,"id":451711},{"content":"Derp, can't reproduce this in my cross-compiler, what other changes have you made outside of what's in the trunk?","created_on":"2011-04-23T11:30:53.645410+00:00","user":"ibuclaw","updated_on":null,"issue":170,"id":452220},{"content":"Only my changes to d-spec.c and lang-specs.h have not been merged.  They modify the command line to allow GDC to invoke D1 or D2.  **changes.diff** contains the modifications that aren't merged.\r\n\r\nA couple of interesting things.\r\n{{{\r\nfoo a = null;\r\nfoo[] b = [ a, null, null ]; \/\/ Will not trigger the assert.  No matter what position as long as a is used only once.\r\n}}}\r\n\r\n{{{decl_function_context(exp)}}} returns {{{DECL_CONTEXT (exp)}}}.  \r\n\r\nIn {{{[ a, null, a]}}}  I would have thought both \"a\" refer to the same tree.  That seems to be false or DECL_CONTEXT is lost after the first use.  The symbol name that triggers the assert appears to be an internal symbol DI.XXX.\r\n\r\nThis issue is not related to reference types only.\r\n\r\n{{{\r\n    int a = 12;\r\n    int[] b = [a, 0, a]; \/\/ Produces the same error.\r\n}}}\r\n","created_on":"2011-04-23T16:55:59.192950+00:00","user":"venix1","updated_on":null,"issue":170,"id":452436},{"content":"Looking at the issue again, the variable 'a' **does** have a context.  It fails the second test in the assert {{{context == current_function_decl}}}, current_function_decl is null.\n\nThis was tested on a fresh compiler with only the trunk.\n\nWhen I look at the gimple output with {{{-fdump-tree-gimple}}}  Linux and Windows produce different code for the same source.\n\n{{{\n\/\/ Linux gimple\nfunc ()\n{\n  void * D.1731[3];\n  void * * D.1732;\n  struct  b;\n  void * a;\n\n  a = 0B;\n  D.1731[0] = 0B;\n  D.1731[1] = a;\n  D.1731[2] = a;\n  D.1732 = _d_arrayliteralTp (&_D12TypeInfo_APv6__initZ, 3);\n  __builtin_memcpy (D.1732, &D.1731, 24);\n  b.length = 3;\n  b.ptr = D.1732;\n}\n}}}\n\n{{{\n\/\/ Windows gimple\nfunc ()\n{\n  void * D.1718[3];\n  static void * C.0[3] = {0B, a, a};\n  void * * D.1720;\n  struct  b;\n  void * a;\n\n  a = 0B;\n  D.1718 = C.0;\n  D.1720 = _d_arrayliteralTp (&_D12TypeInfo_APv6__initZ, 3);\n  __builtin_memcpy (D.1720, &D.1718, 12);\n  b.length = 3;\n  b.ptr = D.1720;\n}\n}}}\n\nI find it reasonable to infer that {{{current_function_decl}}} is null because {{{'a'}}} is used to initialize a static variable.\n\nI build GDC\/MinGW with cloog and ppl.  I'll rebuild tomorrow without those libraries and see if things change.","created_on":"2011-04-28T02:15:43.109052+00:00","user":"venix1","updated_on":"2011-04-28T02:22:43.817866+00:00","issue":170,"id":457534},{"content":"ICE discussion has moved to <<issue 203>>","created_on":"2011-04-29T01:30:21.139302+00:00","user":"venix1","updated_on":null,"issue":170,"id":458959},{"content":"Switch back from label addresses to .LDASM labels - seems that 64bit doesn't like them.\r\n\r\n<<changeset 663:0d65aed46422>>\r\n\r\n","created_on":"2011-10-25T23:40:10.717177+00:00","user":"ibuclaw","updated_on":null,"issue":252,"id":739091},{"content":"Argh, now I see what's going on. The 4.5.2 *installer* actually installs 4.6.1. Damn online installers. Sorry for the noise.","created_on":"2011-12-03T21:15:05.901669+00:00","user":"Andrej08","updated_on":null,"issue":273,"id":835986},{"content":"You find them at \"\\MinGW32\\libexec\\gcc\\mingw32\\<gcc_version>\" of the TDM distro.  Did you copy the GDC files into the MinGW32 installation?","created_on":"2011-12-03T21:08:03.550344+00:00","user":"venix1","updated_on":null,"issue":273,"id":835957},{"content":null,"created_on":"2011-12-24T05:04:44.535379+00:00","user":"debio","updated_on":null,"issue":297,"id":902686},{"content":"Ah, this is something that is now handled in the D frontend.\r\n\r\n\r\n<<changeset 716:7470a20b2900>>\r\n","created_on":"2011-12-24T11:06:39.635278+00:00","user":"ibuclaw","updated_on":null,"issue":297,"id":902943},{"content":"Inlining functions has gone through some phases of being turned on and off. :)\r\n\r\nI think currently the only issue with turning inlining on is to do with ref return functions returning the reference to a temporary var, and not the variable you wish to access.\r\n\r\nie:\r\n{{{\r\nstruct S\r\n{\r\n   int x = 0;\r\n   ref int mX() { return x; }\r\n}\r\n\r\ns.mX += 4;   \/\/ Does not assign to s.x\r\nassert(s.x == 4);\r\n}}}\r\n\r\nThis can be raised separately.\r\n\r\n<<changeset 719:f9217ce815ea>>","created_on":"2011-12-26T11:02:07.773682+00:00","user":"ibuclaw","updated_on":null,"issue":298,"id":905319},{"content":null,"created_on":"2011-12-26T03:28:59.233265+00:00","user":"art_","updated_on":null,"issue":300,"id":904848},{"content":"GDC currently only hints the inlining of methods and function literals.  Is not really a GDC issue on discussing how the backend chooses to optimise certain functions.","created_on":"2011-12-26T10:55:37.892115+00:00","user":"ibuclaw","updated_on":null,"issue":300,"id":905307},{"content":"Bump!\r\n\r\nI haven't seen any adverse affects due to the patch.  However, I'm don't know what it affects so I can't really test it.","created_on":"2011-12-04T19:58:41.836502+00:00","user":"venix1","updated_on":null,"issue":249,"id":838034},{"content":"OK, fixed proper:\r\n\r\n<<changeset 720:fc5e3bddbf94>>","created_on":"2011-12-27T10:46:56.339390+00:00","user":"ibuclaw","updated_on":null,"issue":249,"id":907699},{"content":"Building with --disable-libquadmath will work around it.  Not sure why it crops up for 64bit - I assume some missing dependency...\n\nAnyway, is not an issue directly linked with gdc.","created_on":"2011-10-19T20:14:02.828306+00:00","user":"ibuclaw","updated_on":"2011-10-19T20:14:32.417650+00:00","issue":249,"id":725287},{"content":"This issue will appear only after applying GDC patches to GCC.  It also occurs when building MinGW32.\n\nEdit:  D was not built in either case.  Only C before and after running D patches.","created_on":"2011-10-24T03:08:13.452818+00:00","user":"venix1","updated_on":"2011-10-24T03:12:55.014163+00:00","issue":249,"id":733459},{"content":"I managed to build it somehow by using a hack (replacing the printf_fp.o with the one inside the libquadmath.a static archive of the installed TDM compiler), but now I got another compiling error with GDC refusing to compile 'dll.d' source file and crashing, I tried with the pre-compiled GDC 4.5.2 (the latest binary compiled in the repository) and the same happened, keep in mind I'm compiling on Windows 7 64-bit.\r\n\r\nI found something I'm skeptical about inside 'dll.d' source file:\r\n\r\n        asm\r\n        {\r\n            mov EAX,FS:[0x30];\r\n            mov peb, EAX;\r\n        }\r\n\r\nInside the dll_fixTLS function that the compiler complained about.\r\nThis assembly code is not compatible with 64-bits, and IMO it's the source of the compiler internal error.\r\nI guess the compiler should be more verbose and clear regarding those errors and should tell clearly that 32-bit addresses are not allowed in 64-bit assembly.","created_on":"2011-10-24T08:08:31.459948+00:00","user":"jay3d","updated_on":null,"issue":249,"id":733882},{"content":"That is a bug in phobos.  They need to put in version(X86) blocks around such asm code.","created_on":"2011-10-24T11:30:29.422756+00:00","user":"ibuclaw","updated_on":null,"issue":249,"id":734380},{"content":"In addition the FS register is used by Win32 and the GS register is used by Win64 for accessing the Thread Information Block.\r\n\r\nTLS support is currently broken for MinGW builds.  dll.d has not been upgraded to Win64 for that reason.","created_on":"2011-10-24T12:49:12.449109+00:00","user":"venix1","updated_on":null,"issue":249,"id":734483},{"content":"The cause of this issue the following change made by GDC to cgraph.c\r\n\r\nThe undefined function can be found printf_fp.c and is a nested C function.  Windows is not the only OS affected by this.  Inspecting the file printf_fp.o on a linux build shows hack_digit.XXX as being undefined as well.\r\n\r\n{{{\r\n\/\/ Working.\r\n  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)\r\n    {\r\n      node->origin = cgraph_node (DECL_CONTEXT (decl));\r\n      node->next_nested = node->origin->nested;\r\n      node->origin->nested = node;\r\n    }\r\n---\r\n\/\/ Causes undefined error.\r\n  if (DECL_STATIC_CHAIN (decl))\r\n    {\r\n      context = decl_function_context (decl);\r\n      if (context)\r\n\t{\r\n\t  node->origin = cgraph_node (context);\r\n\t  node->next_nested = node->origin->nested;\r\n\t  node->origin->nested = node;\r\n\t}\r\n    }\r\n}}}","created_on":"2011-10-26T02:06:54.642207+00:00","user":"venix1","updated_on":null,"issue":249,"id":739248},{"content":"That particular change is for D code like this:\r\n{{{\r\nstruct Foo\r\n{\r\n    void outer()\r\n    {\r\n        struct Bar\r\n        {\r\n            void inner()\r\n            {\r\n            }\r\n        {\r\n    {\r\n}\r\n}}}\r\n\r\nIn the cgraph representation, makes \"inner\" nested in \"outer\" rather than \"Bar\".\r\n\r\nQuestion to test:\r\n\r\n1. What happens if we don't rely on DECL_STATIC_CHAIN being set?\r\n\r\n{{{\r\n\/\/  if (DECL_STATIC_CHAIN (decl))\r\n\/\/    {\r\n      context = decl_function_context (decl);\r\n      if (context)\r\n\t{\r\n\t  node->origin = cgraph_node (context);\r\n\t  node->next_nested = node->origin->nested;\r\n\t  node->origin->nested = node;\r\n\t}\r\n\/\/    }\r\n}}}\r\n\r\n2. Ideally we should push this patch on gcc into gdc frontend. Careful not to cause a recursive loop somewhere though. :)","created_on":"2011-10-26T07:05:53.993271+00:00","user":"ibuclaw","updated_on":null,"issue":249,"id":739600},{"content":"Daniel, could you test this?\r\n\r\nI can confirm it doesn't break builds on 32bit Linux - and codegen for D is not affected.","created_on":"2011-10-26T19:30:14.090306+00:00","user":"ibuclaw","updated_on":null,"issue":249,"id":741082},{"content":"For GCC-4.6 at least ... will need to check earlier releases too.","created_on":"2011-10-26T19:30:46.050135+00:00","user":"ibuclaw","updated_on":null,"issue":249,"id":741086},{"content":"Do you have a file to test with?","created_on":"2011-10-26T23:37:18.656193+00:00","user":"venix1","updated_on":null,"issue":249,"id":741542},{"content":"Can you post test.d?","created_on":"2011-12-06T01:10:34.357523+00:00","user":"venix1","updated_on":null,"issue":277,"id":842424},{"content":"Yeah sorry about that:\r\n\r\n{{{\r\n#!D\r\n\r\nmodule test;\r\n\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n\t\r\n}\r\n}}}","created_on":"2011-12-06T01:18:49.666610+00:00","user":"Andrej08","updated_on":null,"issue":277,"id":842438},{"content":"sync_and_add_4 is a symbol used in place of an i686 instruction.  When I recompile binutils I didn't specify i686 as the architect defaulting to something lower.  It'll be sorted out soon.","created_on":"2011-12-06T01:35:00.221873+00:00","user":"venix1","updated_on":null,"issue":277,"id":842466},{"content":"Atomic operations exist on i486 and later only.  MinGW was targeting i386 so replacement functions had to be used.  Recompiling for i686 solves the issue.","created_on":"2011-12-10T16:29:05.786348+00:00","user":"venix1","updated_on":null,"issue":277,"id":859264},{"content":"<<changeset 2cc2e8c5a778>> started using GCC atomic instructions only available with i486 and up processors.  The build scripts default to i386 architect.  ","created_on":"2011-12-08T02:40:29.802924+00:00","user":"venix1","updated_on":null,"issue":277,"id":850318},{"content":"Just a note, I have removed the dependencies on atomic operations. See <<changeset caf2c8d4f036>>","created_on":"2011-12-28T21:28:14.005181+00:00","user":"ibuclaw","updated_on":null,"issue":277,"id":911855},{"content":"MinGW should be defined [[https:\/\/bitbucket.org\/goshawk\/gdc\/src\/f4b81c81e760\/d\/d-lang.cc#cl-346|here]].\r\n\r\nI added MinGW32 and MinGW64 for consistency.  D has Windows, Win32 and Win64.  I felt it appropriate to have MinGW, MinGW32 and MinGW64.\r\n\r\nAlso, I'm not a fan of nesting versions because D isn't capable of expressing {{{version( MinGW && D_LP64)}}}.  Until that happens I want to keep them.\r\n\r\n","created_on":"2012-02-26T15:56:31.774975+00:00","user":"venix1","updated_on":null,"issue":320,"id":1120267},{"content":"I thought these were only defined in target-ver-syms.sh. Never mind then.","created_on":"2012-02-26T16:17:48.680682+00:00","user":"alexrp","updated_on":null,"issue":320,"id":1120303},{"content":"<<changeset 732:2350d3a27ac8>>","created_on":"2011-12-31T00:27:47.803828+00:00","user":"ibuclaw","updated_on":null,"issue":301,"id":916903},{"content":"Fixed codegen to treat NRV variables as such even though it isn't implemented.\r\n\r\n<<changeset 734:fc46cfed1fcf>>","created_on":"2012-01-01T15:57:36.438956+00:00","user":"ibuclaw","updated_on":null,"issue":294,"id":918446},{"content":"External Bug. (#101)","created_on":"2014-03-31T15:16:27.567460+00:00","user":"ibuclaw","updated_on":null,"issue":288,"id":9408141},{"content":"This has been migrated to http:\/\/bugzilla.gdcproject.org\/show_bug.cgi?id=101\n\nPlease continue discussion there.","created_on":"2014-02-01T11:20:27.459969+00:00","user":"JinShil","updated_on":null,"issue":288,"id":8035344},{"content":"Actually there is one more workaround to the ModuleInfoZ problem, it's to use function-local import to **core.sys.windows.dll**, e.g.:\r\n{{{\r\nmodule mydll;\r\n\r\nimport std.c.windows.windows;\r\n\r\n__gshared HINSTANCE g_hInst;\r\n\r\nextern(C) int _tls_callbacks_a;\r\n\r\nversion (Windows)\r\n{\r\n    extern (Windows)\r\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\r\n    {\r\n        import core.sys.windows.dll;\r\n        \r\n        switch (ulReason)\r\n        {\r\n            case DLL_PROCESS_ATTACH:\r\n                dll_process_attach( hInstance, true );\r\n                break;\r\n            case DLL_PROCESS_DETACH:\r\n                dll_process_detach( hInstance, true );\r\n                break;\r\n            case DLL_THREAD_ATTACH:\r\n                dll_thread_attach( true, true );\r\n                break;\r\n            case DLL_THREAD_DETACH:\r\n                dll_thread_detach( true, true );\r\n                return false;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        g_hInst = hInstance;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport extern(D) int sum(int x, int y)\r\n{\r\n    return x + y;\r\n}\r\n}}}","created_on":"2011-12-15T17:48:10.919062+00:00","user":"Andrej08","updated_on":null,"issue":288,"id":876760},{"content":"Another workaround for 'ModuleInfoZ' is to use -Wl,--export-all-symbols.  It is defined, but it's not exported from the Dll.  The only issue here, is you can't generate the library file and must link with the Dll.\n\n{{{\ngdc -v2 -shared -o mydll.dll mydll.d -Wl,--export-all-symbols\ngdc -v2 -fintfc -fsyntax-only -H mydll.d\ngdc -v2 -o main.exe main.d mydll.dll\n}}}\n\nDo you think it would be safe to apply the export attribute to generated 'ModuleInfoZ' symbol?\n\nEdit:  It also seems DMD wishes to have all ModuleInfoZ symbols declared weak.  So that the inability to import one will not prevent linking.","created_on":"2012-01-27T18:07:22.836894+00:00","user":"venix1","updated_on":"2012-01-27T18:08:48.070057+00:00","issue":288,"id":1007597},{"content":"_tls_callbacks_a is a Digital Mars thing.  I believe Visual Studio and MinGW use xl_a.  It's a pointer to the start of the TLS callbacks.  I'll look into this.  It may only require {{{alias __xl_a _tls_callbacks}}} and the approriate extern definition for __xl_a.","created_on":"2012-01-25T23:05:22.362901+00:00","user":"venix1","updated_on":null,"issue":288,"id":999904},{"content":"reduced further:\r\n\r\n{{{\r\n#!d\r\nT enforce(T, )\r\n    (T value, lazy const(char)[] ) {\r\n    return value;\r\n}\r\n\r\nvoid getopt(T...)(T opts) {\r\n    handleOption();\r\n}\r\n\r\nvoid handleOption()\r\n{\r\n   static if (is(typeof(receiver(\"\")) ))\r\n   {}\r\n}\r\n\r\nvoid main()\r\n{\r\n    void dashOh(string key, string value)\r\n    {\r\n            enforce(false, \"Unrecognized option: \"~key~value);\r\n    }\r\n\r\n    bool bailout;\r\n    getopt( \"help\", { bailout = true; }\r\n\t\t\t,&dashOh \/\/ comment this out and it works with -O2 or above\r\n            );\r\n}\r\n}}}","created_on":"2011-12-02T01:06:26.946238+00:00","user":"trass3r","updated_on":null,"issue":272,"id":831734},{"content":"I can no longer reproduce this.","created_on":"2012-01-02T03:12:44.972978+00:00","user":"ibuclaw","updated_on":null,"issue":272,"id":918973},{"content":"I can not reproduce this in trunk.","created_on":"2012-01-02T03:14:06.568613+00:00","user":"ibuclaw","updated_on":null,"issue":274,"id":918975},{"content":"<<changeset 735:b098f8a5cefa>>","created_on":"2012-01-02T03:33:14.007496+00:00","user":"ibuclaw","updated_on":null,"issue":216,"id":918989},{"content":null,"created_on":"2011-07-14T23:03:24.538071+00:00","user":"trass3r","updated_on":null,"issue":216,"id":559048},{"content":"The command line option was the compromise between Iain and I about having the script automatically include the revision.\r\n\r\n","created_on":"2011-07-16T03:04:31.710344+00:00","user":"venix1","updated_on":null,"issue":216,"id":560428},{"content":"What speaks against doing it like I proposed?","created_on":"2011-07-16T10:23:43.003940+00:00","user":"trass3r","updated_on":null,"issue":216,"id":560558},{"content":"I actually wanted to replace 'hg' with something meaningful - which is just what I've done so today (bumped the version number to 0.30), as it's about time to get gdc out of rolling development and into stable release\/bug fixing mode. :)","created_on":"2011-07-24T15:33:52.607640+00:00","user":"ibuclaw","updated_on":null,"issue":216,"id":570803},{"content":"Hmm btw the -hg switch doesn't work at all for me even though I have mercurial installed.","created_on":"2011-07-24T20:09:26.475324+00:00","user":"trass3r","updated_on":null,"issue":216,"id":570975},{"content":"The D frontend translates\r\n{{{\r\nstruct B\r\n{\r\n    align:\r\n        char* _ptr;\r\n        int   _cnt;\r\n        char* _base;\r\n        int   _flag;\r\n        int   _file;\r\n        int   _charbuf;\r\n        int   _bufsiz;\r\n        char* __tmpnum;\r\n}\r\n}}}\r\ninto\r\n{{{\r\nstruct B\r\n{\r\n    align(8) \/\/ 8 is the default alignment\r\n    {\r\n        char* _ptr;\r\n        int   _cnt;\r\n        char* _base;\r\n        int   _flag;\r\n        int   _file;\r\n        int   _charbuf;\r\n        int   _bufsiz;\r\n        char* __tmpnum;\r\n    }\r\n}\r\n}}}\r\n\r\nGDC forces all struct fields to align on the specified boundary.  The default alignment of GDC is type specific.  So any use of align inside a structure will override the type specific alignment with no way to restore it.\r\n\r\n","created_on":"2012-01-29T08:49:06.491557+00:00","user":"venix1","updated_on":null,"issue":311,"id":1011650},{"content":null,"created_on":"2012-01-29T16:52:09.498262+00:00","user":"venix1","updated_on":null,"issue":311,"id":1012608},{"content":"<<changeset 782:a5066e471ef0>>\r\n\r\nJust removed the code I added to it.","created_on":"2012-01-29T17:12:25.862336+00:00","user":"ibuclaw","updated_on":null,"issue":311,"id":1012651},{"content":null,"created_on":"2010-07-25T20:00:58.472827+00:00","user":"trass3r","updated_on":null,"issue":45,"id":221208},{"content":null,"created_on":"2010-07-25T20:08:41.755765+00:00","user":"trass3r","updated_on":null,"issue":45,"id":221209},{"content":"I think that this is a good idea, as long as the whole document isn't just copy and pasted.\n\nSome parts of the document could go onto a wiki page other than the Documentation page (such command line options, since the Documentation page is supposed to be for developers). Also, the Changes section at the end isn't really relevant, since an official release hasn't been made yet.\n\nAlthough for the changes, we could add in what we have done for each commit. Currently, this is supposed to be outlined in the Changelog file in d\/.","created_on":"2010-07-25T20:15:01.036898+00:00","user":"michaelp","updated_on":"2010-07-25T20:13:38.056646+00:00","issue":45,"id":221211},{"content":"I'd name the documentation page something like GDC internals and let it be a subpage of Documentation.\\\\\r\nProbably the different build instructions should also be in the documentation group.","created_on":"2010-07-25T20:31:21.254315+00:00","user":"trass3r","updated_on":null,"issue":45,"id":221213},{"content":"That should work.\r\n\r\nOne part should be geared towards users, the other part should be geared towards developers.","created_on":"2010-07-25T20:53:22.343830+00:00","user":"michaelp","updated_on":null,"issue":45,"id":221220},{"content":"The page names:\r\n\r\n#wiki\/gdc\r\n#wiki\/gdcint\r\n\r\nShould be easy enough to remember.\r\n","created_on":"2010-07-25T21:12:33.993066+00:00","user":"ibuclaw","updated_on":null,"issue":45,"id":221239},{"content":"New Years Resolution.  Documentation!","created_on":"2012-01-03T00:35:44.909544+00:00","user":"ibuclaw","updated_on":null,"issue":45,"id":920952},{"content":"Closing as per User manual below which was stemmed from original documentation on sourceforge.\r\n\r\nhttp:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/UserDocumentation\r\n\r\n","created_on":"2012-01-25T19:00:20.077542+00:00","user":"ibuclaw","updated_on":null,"issue":45,"id":999112},{"content":"4.4.x support has been dropped.  As per above, closing bug.","created_on":"2012-01-25T18:52:30.859081+00:00","user":"ibuclaw","updated_on":null,"issue":265,"id":999083},{"content":"That gcc is your system gcc, not the gdc one.","created_on":"2011-11-21T14:02:31.430920+00:00","user":"trass3r","updated_on":null,"issue":265,"id":803094},{"content":"Indeed I thought info about the build system might interest you. Tell me if I can help.\r\n\r\n\r\n","created_on":"2011-11-21T14:54:10.940668+00:00","user":"rbouqueau","updated_on":null,"issue":265,"id":803258},{"content":"How did you configure gdc? Which version did you use?\n\nCould you try to build a gdc based on other gcc versions too? 4.5 and 4.6","created_on":"2011-11-21T16:19:43.058262+00:00","user":"trass3r","updated_on":"2011-11-21T16:21:12.879030+00:00","issue":265,"id":803478},{"content":"Are you building using the source supplied by the distributer? (ie: via apt-get install gcc-source)","created_on":"2011-11-21T19:19:05.499643+00:00","user":"ibuclaw","updated_on":null,"issue":265,"id":804216},{"content":"I strictly followed the wiki page to configure (I didn't take any of the extra options) and downloaded gcc from the link you gave on the wiki page. I compiled the latest gdc version from the default branch.\n\nI'm currently compiling both with gcc 4.6.2 and gcc 4.5.3, I'll let you know here when it's done.\n","created_on":"2011-11-21T19:49:14.009842+00:00","user":"rbouqueau","updated_on":"2011-11-21T19:50:07.336875+00:00","issue":265,"id":804307},{"content":"Both gcc 4.6.2 and gcc 4.5.3 have compiled sucessfully.\r\n","created_on":"2011-11-21T20:12:25.692433+00:00","user":"rbouqueau","updated_on":null,"issue":265,"id":804359},{"content":"My stat.h file looks like the second (running Arch Linux). It looks like I have both __USE_XOPEN2K8 and __USE_MISC defined.\r\n\r\nThe comments in bits\/stat.h pretty much state that the two structs are exactly the same, but the Unix namespace rules, when applied strictly, don't let timespec appear in bits\/stat.h. Since either representation is valid, we should probably just match what D is doing on other platforms and call it good.","created_on":"2011-12-04T13:18:55.188407+00:00","user":"debio","updated_on":null,"issue":215,"id":837175},{"content":"One more thing, but I'm absolutely not sure on this one:\r\n{{{\r\n#!gdb\r\nx $fp\r\n    0xbe9912ac:\t0x0003622c\r\nprint $fp\r\n    3197702828\r\n}}}\r\n3197702828 \/ 8 == 399712853,5\r\n\r\nDoes this mean the callstack is not 8 byte aligned as specified by http:\/\/wiki.debian.org\/ArmEabiPort#Stack_alignment ?\r\nI'm not really sure how to check the stack alignment, so this could be completely wrong.\r\n","created_on":"2011-07-06T11:00:12.769948+00:00","user":"jpf","updated_on":null,"issue":215,"id":547351},{"content":"Spring cleaning report.  Issue fixed in <<changeset 2df7ca5fa4b6>>","created_on":"2012-01-25T18:51:36.129166+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":999077},{"content":"So I've been playing with this in GDC on and off, and the problem is that GDC basically blindly uses the offset values provided by the DMD frontend (which thinks it's on x86) when laying out structs and classes. It should be possible to get GDC to re-layout things to get everything to work, but doing so will be a large undertaking, and will probably break things like offsetof and probably some parts of _ _traits (space to keep Bitbucket from underlining) because the layouts won't be fixed until after the frontend is done (at least, as I currently understand it - I haven't looked into exactly when such things are substituted with their actual values).\nTo avoid that issue, we could patch the frontend so GDC does the initial struct and class layouts instead of fixing them later, but that would complicate how DMD is patched with each new version.\n\nIn short, this is non-trivial, but the current method seems like a Bad Idea (TM), and I think the only really clean path forward is to do layouts ourselves.","created_on":"2011-09-03T05:04:15.059187+00:00","user":"debio","updated_on":"2011-09-03T05:05:16.961273+00:00","issue":215,"id":633642},{"content":"Adding myself to the thread (didn't realise there was activity in here :)\r\n\r\nGCC offers a record layout helper functions that are used by the C and C++ frontends. See stor-layout.c\r\n\r\nFunctions of interest:\r\n* start_record_layout\r\n* place_field\r\n* finish_record_layout\r\n\r\nMight be able to produce a better layout using those helpers and re-writing around what is currently done.","created_on":"2011-09-03T10:21:04.882348+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":633795},{"content":"The other problem is toDt, which generates the static initialiser for the type. This computed struct must also match what toCtype generates.","created_on":"2011-09-03T10:53:48.745349+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":633807},{"content":"The place I stopped in my previous attempt was when I realized I didn't know how to add the monitor and vtable pointer to a class, and I don't recall whether inherited fields were layed out correctly either. Also, you may recall the output I asked you about that looked like type information on ARM was either not initialized or corrupt.\r\n\r\nI'll pull out the code I had before and take another look.","created_on":"2011-09-07T06:30:03.278343+00:00","user":"debio","updated_on":null,"issue":215,"id":639526},{"content":"Sounds like I should start giving out training on GDC development. =)\r\n\r\nGive me a free weekend sometime and I'll have a look.","created_on":"2011-09-08T17:23:35.696874+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":642540},{"content":"I've been revisiting this (mostly because I have an ARM system up and running for motivation :D), and when I cut out all the debugging code and my failed attempt to generate the monitor\/vtable pointer, my patch is actually quite simple.\r\n\r\nOn 32 bit, it seems to match DMD except for classes, although it's hard to get a thorough test. I'm not sure whether it works correctly for unions.\r\n\r\nOn 64 bit, I seem to get more discrepancies. Not sure why at this point.","created_on":"2011-10-27T05:14:32.946225+00:00","user":"debio","updated_on":null,"issue":215,"id":741874},{"content":"I think I accidentally the whole thing.\nGot classes working.\n\nThis still has discrepancies on 64 though, and I probably missed something. Still, it's a start.","created_on":"2011-10-27T05:47:01.453154+00:00","user":"debio","updated_on":"2011-10-27T06:00:25.913982+00:00","issue":215,"id":741902},{"content":"So from some digging and some breaking things, it seems like if I set var_decl->offset = gcc_offset, toDt *should* be forced to generate a static initializer that matches the revised layout, but I'm current getting errors like \"class std.stream.FilterStream duplicated union initialization for nestClose\" (which sounds like my patch doesn't work for Unions)\r\n\r\nOne thing I've looked for but am not seeing is how to handle things like `align(8) int i;` . I need to override the default type alignment to make this have any effect, but I can't figure out where to find this data in the VarDeclaration.","created_on":"2011-10-30T21:51:12.543385+00:00","user":"debio","updated_on":null,"issue":215,"id":748958},{"content":"Alright, I have a much less hacky solution now (I'll probably put it in my Bitbucket fork instead of posting patches that are hard to look at), but I have two issues:\r\n\r\nFirst, I still haven't found a way to detect things like `align(8) int i;` where the user has forced a certain alignment.\r\n\r\nSecond, there's a comment in the source that says this:\r\n{{{\r\n#!D\r\n\/\/ %% D anonymous unions just put the fields into the outer struct...\r\n\/\/ does this cause problems?\r\n}}}\r\n\r\nBefore, this didn't matter because we weren't calculating offsets ourselves, but now I need to find a way to check whether fields are part of an anonymous union, or they get laid out like ordinary struct fields. One somewhat hacky way would be to record the DMD offset of the last field I laid out and call it a union if subsequent fields have the same offset, but I'd like to not depend on DMD's offsets at all if possible. As far as I can tell, the VarDeclaration for a field of an anonymous union doesn't show that it's in a union, but it's possible that I'm missing something.  Thoughts?","created_on":"2011-11-01T04:20:56.450336+00:00","user":"debio","updated_on":null,"issue":215,"id":751783},{"content":"Initial changeset is at https:\/\/bitbucket.org\/debio\/gdc\/changeset\/a8a7b627f928","created_on":"2011-11-01T04:43:36.944091+00:00","user":"debio","updated_on":null,"issue":215,"id":751837},{"content":"For unions, consider the following:\r\n{{{\r\n         VarDeclaration * var_decl = fields->tdata()[i];\r\n         gcc_assert(var_decl && var_decl->storage_class & STCfield);\r\n\r\n+        size_t unionSize= aggDecl->numFieldsInUnion(i);\r\n+        if (unionSize == 1)\r\n+            fprintf(stderr, \"Adding field %s at offset %d\\n\",\r\n+                    var_decl->toChars(), var_decl->offset);\r\n+        else\r\n+        {\r\n+            fprintf(stderr, \"Creating anonymous UNION_TYPE tree node\\n\");\r\n+            for (size_t j = 0; j < unionSize; j++)\r\n+            {\r\n+                var_decl = fields->tdata()[i+j];\r\n+                fprintf(stderr, \"Adding field %s into union at offset %d\\n\",\r\n+                        var_decl->toChars(), var_decl->offset);\r\n+            }\r\n+            fprintf(stderr, \"Finishing UNION_TYPE decl layout, adding to struct\\n\");\r\n+            i += (unionSize-1);\r\n+            continue;\r\n+        }\r\n+\r\n         tree ident = var_decl->ident ? get_identifier(var_decl->ident->string) : NULL_TREE;\r\n         tree field_decl = d_build_decl(FIELD_DECL, ident,\r\n             gen.trueDeclarationType(var_decl));\r\n}}}\r\n\r\nSince the rli you are making at the start is not for a union, place_field will continue adding fields at the next calculated offset, rather than the offset of the first union member - so will need to create a new rli to store the union information in. :-)","created_on":"2011-11-02T01:51:45.395254+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":754272},{"content":"Attaching primer patch to use gcc helper functions for record field alignment.\r\n\r\n\r\n","created_on":"2011-11-04T02:43:29.445991+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":759640},{"content":"Scrapped the above, implemented instead in the D frontend.\r\n\r\nAttaching patch which works out alignment in D frontend, using hooks into GCC backend to get correct value. Also, patch fixes the use of align() keyword to take effect on field decls; ie:\r\n\r\n{{{\r\nstruct A { int a; long b; }\r\nstruct B { int a; align(8) long b; }\r\n\r\nstatic assert(A.sizeof == 12u);\r\nstatic assert(B.sizeof == 16u);  \/\/ 4 byte padding after 'a'\r\n}}}","created_on":"2011-11-14T00:20:03.869839+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":782573},{"content":"I've jumped the gun and pushed this, as I am happy that it works correctly under 32bit.\r\n\r\n<<changeset 675:2df7ca5fa4b6>>\r\n\r\nCan someone test this is now fine for ARM?\r\n\r\nThanks.","created_on":"2011-11-14T01:00:53.251737+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":782610},{"content":null,"created_on":"2011-11-14T01:01:07.571916+00:00","user":"ibuclaw","updated_on":null,"issue":215,"id":782611},{"content":"Hi Iain, I haven't got access to my ARM hardware right now, but I'll test the patch next weekend.","created_on":"2011-11-14T18:18:54.023645+00:00","user":"jpf","updated_on":null,"issue":215,"id":784377},{"content":"I've been off the face of the earth for the last two weeks or so, but I got some time to test this tonight, and so far it looks good on ARM. The definition of stat64 that's in stat.c doesn't match what my system actually uses (it uses one in \/usr\/include\/bits\/stat.h that uses timeval structs instead of separate timensec fields), but when I update the D struct to match the C definition, the alignments match up and the 8 byte fields are explicitly being aligned to 8 bytes. offsetof also seems to be behaving correctly.\r\n\r\nI'll take a closer look tomorrow if I can, but so far so good.","created_on":"2011-11-17T07:59:31.940138+00:00","user":"debio","updated_on":null,"issue":215,"id":792677},{"content":"I can confirm that the patch is working, at least for this testcase.\r\n\r\nAndrew, does your stat.h file look like one of these: https:\/\/gist.github.com\/1380076 https:\/\/gist.github.com\/1380063 ? One is from debian the other from archlinux. (both glibc, afaik). Is __USE_XOPEN2K8 or __USE_MISC defined for you? And how do we properly translate this to D? We could obviously use version \/ static if statements, but then we'd have to edit the build script so that these versions match the C defines.\r\n\r\nBut wait:\r\nDoes it even matter whether it uses timeval structs vs individual fields? The first address is already 8byte aligned, so if the type requires 4 (__time_t) or 8 byte(timespec?) alignement shouldn't matter. Also, timespec is defined as:\r\n{{{\r\nstruct timespec\r\n{\r\n    __time_t tv_sec;\r\n    long int tv_nsec;\r\n}\r\n}}}\r\nwhich is the same as the individual fields, except that nanoseconds are unsigned with individual fields, but I bet that's also true for struct timespec and it's just not marked correctly?","created_on":"2011-11-20T13:40:01.449012+00:00","user":"jpf","updated_on":null,"issue":215,"id":800696},{"content":"I can reproduce this with dmd (2.057) - so if you can't reproduce on 2.058, is likely a library bug that got fixed upstream.","created_on":"2012-02-27T19:51:20.875989+00:00","user":"ibuclaw","updated_on":null,"issue":322,"id":1125423},{"content":"Good. I try dmd-2.057\/linux\/bin32 and try compile dmd from source -  still can't reproduce.","created_on":"2012-02-27T21:00:42.348699+00:00","user":null,"updated_on":null,"issue":322,"id":1125682},{"content":"Also, you can use setenv in it's place.\r\n{{{\r\nsetenv(\"LDFLAGS\", \"--sort-common,--\", true);\r\n}}}","created_on":"2012-02-27T21:54:02.785795+00:00","user":"ibuclaw","updated_on":null,"issue":322,"id":1125890},{"content":"The hint here is \"bin32\" - this is a 64bit bug, not 32bit - tah.","created_on":"2012-02-27T21:45:26.867912+00:00","user":"ibuclaw","updated_on":null,"issue":322,"id":1125852},{"content":"OK, after poking around, you are calling the function wrong:\n\ncorrect code:\n{{{\nimport std.file;\nimport std.process;\n\nvoid main() {\n   putenv(\"LDFLAGS=--sort-common,--\");\n   system(\"set\");\n   listdir(\"\/usr\/bin\");\n   system(\"set\");\n}\n\nextern (C): int putenv(immutable(char) *string);\n}}}\n\nstd.string.toStringz() makes an unreferenced copy, so it gets collected after a big allocation, which as per the specification of putenv - does not make a copy of the strings you pass to it, and so changes to the strings will alter the enviroment you have set.   Not a bug.","created_on":"2012-02-27T22:04:34.152120+00:00","user":"ibuclaw","updated_on":"2012-02-27T22:05:21.639324+00:00","issue":322,"id":1125928},{"content":"You right! Thanks!","created_on":"2012-02-27T22:38:19.130073+00:00","user":null,"updated_on":null,"issue":322,"id":1126047},{"content":"<<changeset 743:dd39ad50935a>>","created_on":"2012-01-05T20:36:22.453260+00:00","user":"ibuclaw","updated_on":null,"issue":303,"id":930503},{"content":"<<changeset 773:eb5244f96662>>","created_on":"2012-01-21T02:00:43.940254+00:00","user":"ibuclaw","updated_on":null,"issue":306,"id":984172},{"content":"Static chains are set-up and handled in the front-end, that the backend is trying to do it is a bug.  It is likely a sign we are passing the wrong chain to the inherited contract.","created_on":"2012-01-18T21:54:10.530074+00:00","user":"ibuclaw","updated_on":null,"issue":306,"id":976345},{"content":"{{{\r\nThe function that calls get_static_chain.\r\n\/* Called via walk_function+walk_gimple_stmt, rewrite all GIMPLE_CALLs\r\n   that reference nested functions to make sure that the static chain\r\n   is set up properly for the call.  *\/\r\n}}}\r\nThe backend appears to be attempting to transverse it in order to find a context from the chain that matches the function.  From what I've gathered about how it works, our static chain for B doesn't have a link to A which is what the backend is expecting from us.\r\n\r\nI'd like to point out what I did below is close to how GCC actually handles it.  info->context will be A or B if only 1 contract is defined.  A or B depends on what class has the contract.\r\n\r\nManually fiddling with get_static_chain, by setting info->context to target_context when appropriate in the debugger can avoid this issue and the code will run successfully.  I've included the file used and gimple output with correction and gimple output from ICE.\r\n\r\n**struct nesting_info*** info is always the same for each call to get_static_chain.  This suggests that our static chain is indeed incomplete.\r\n\r\nGDB hits get_static_chain 3 times for the example.  The first time it hits info->context = ...B.foo and target_context = ...A.foo.  The remaining two occurrences target_context = ...B.foo.\r\n\r\n\r\n","created_on":"2012-01-18T22:10:46.180290+00:00","user":"venix1","updated_on":null,"issue":306,"id":976568},{"content":"Issue was caused by setting DECL_STATIC_CHAIN. Being turned on meant the backend was setting up a new static chain for the function. This no longer is required to be set by the frontend (gcc is capable of checking whether one is really needed in lower_nested_functions).  Adding a new macro should fix issue.","created_on":"2012-01-19T00:01:20.327815+00:00","user":"ibuclaw","updated_on":null,"issue":306,"id":976866},{"content":null,"created_on":"2012-04-27T18:56:53.927927+00:00","user":"venix1","updated_on":null,"issue":338,"id":1354219},{"content":null,"created_on":"2012-04-27T18:59:00.722889+00:00","user":"venix1","updated_on":null,"issue":338,"id":1354224},{"content":"Seems, D2.058 did away with _Dmodule_ref for Windows  and moved to using minit.","created_on":"2012-04-27T19:51:39.536813+00:00","user":"venix1","updated_on":null,"issue":338,"id":1354409},{"content":"GCC uses _Dmodule_ref.  DMD for Windows does not.  Adding GNU version block to libdruntime\/rt\/minfo.d solves the issue.\n\nhttps:\/\/github.com\/venix1\/GDC\/commit\/0d0a1f4a16dc132599a157a90b6f06828099a44f","created_on":"2012-05-14T04:11:14.620847+00:00","user":"venix1","updated_on":"2012-05-14T04:19:08.463525+00:00","issue":338,"id":1414901},{"content":null,"created_on":"2010-03-14T10:58:54.946593+00:00","user":"ibuclaw","updated_on":null,"issue":11,"id":139015},{"content":null,"created_on":"2010-03-14T10:59:39.610125+00:00","user":"ibuclaw","updated_on":null,"issue":11,"id":139016},{"content":"Could it be related to issue <<issue 2>>?\r\n\r\nGDC has be known not to work with GCC 4.3.x, except for 4.3.1.","created_on":"2010-03-16T22:08:40.305337+00:00","user":"michaelp","updated_on":null,"issue":11,"id":140422},{"content":"It seems to be an entirely separate issue. The fault occurs in an entire different place for entirely different reasons. Issue <<issue 2>> is about a NULL_TREE reference. This is about a page table entry not being allocated via gcc's collector.\n\nI'll have another go at rebuilding to see if it continues after a cold reboot. I have a vague idea of what causes it (but not the reason why), and although it was very reproducible last time I tried, it is possible that it could have been caused by memory corruption (afterall, stranger things have happened at sea :)\n\nRegards\nIain","created_on":"2010-03-16T23:26:41.857285+00:00","user":"ibuclaw","updated_on":"2010-03-16T23:35:51.719250+00:00","issue":11,"id":140451},{"content":"OK, here is my debugging session, tell us if you need more information:\n\n{{{\nGNU gdb (GDB) 7.0.1-debian\nCopyright (C) 2009 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http:\/\/gnu.org\/licenses\/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-kfreebsd-gnu\".\nFor bug reporting instructions, please see:\n<http:\/\/www.gnu.org\/software\/gdb\/bugs\/>...\nReading symbols from \/home\/iain\/gdc-20100301-1.043.4.3.4\/build\/gcc\/cc1d...done.\n(gdb) r\nStarting program: \/home\/iain\/gdc-20100301-1.043.4.3.4\/build\/gcc\/cc1d ..\/..\/..\/src\/libphobos\/std\/socket.d -quiet -dumpbase socket.d -mtune=generic -auxbase-st\nrip std\/socket.o -g -O2 -frelease -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_FreeBSD -fversion=GC_Use_Data_Fixed -iprefix \/home\/iain\/gdc-1.043.4.3.4\/\nbuild\/gcc\/..\/lib\/gcc\/x86_64-kfreebsd-gnu\/4.3.4\/ -isystem \/home\/iain\/gdc-20100301-1.043.4.3.4\/build\/.\/gcc\/include -isystem \/home\/iain\/gdc-20100301-1.043.4.3.4\n\/build\/.\/gcc\/include-fixed -nostdinc -I ..\/..\/..\/src\/libphobos -I ..\/..\/..\/src\/libphobos\/internal\/gc -I .\/x86_64-kfreebsd-gnu -o -\n        .file   \"socket.d\"\n\n\/* Skip alot of asm output *\/\n\n.LFE15:\n        .size   _D3std6socket12InternetHost12validHostentMFPS3gcc6config4unix7hostentZv, .-_D3std6socket12InternetHost12validHostentMFPS3gcc6config4unix7host\nentZv\n.globl _Unwind_Resume\n\nProgram received signal SIGSEGV, Segmentation fault.\nlookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:596\nBreakpoint 1, lookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:597\n(gdb) bt\n#0  lookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:597\n#1  ggc_set_mark (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:1290\n#2  0x00000000004a2b25 in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:50\n#3  0x000000000059f033 in gt_ggc_mx_tree_statement_list_node (x_p=<value optimized out>) at gtype-desc.c:506\n#4  0x00000000004a34da in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:434\n#5  0x000000000059f357 in gt_ggc_mx_tree_bb_info (x_p=<value optimized out>) at gtype-desc.c:190\n#6  0x00000000005a4fe5 in gt_ggc_mx_basic_block_def (x_p=<value optimized out>) at gtype-desc.c:746\n#7  0x00000000005a50a5 in gt_ggc_mx_tree_ann_d (x_p=<value optimized out>) at gtype-desc.c:657\n#8  0x00000000004a374d in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:361\n#9  0x000000000059f5a1 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:127\n#10 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#11 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#12 0x000000000059f409 in gt_ggc_mx_cgraph_node (x_p=<value optimized out>) at gtype-desc.c:151\n#13 0x000000000059f69e in gt_ggc_m_P11cgraph_node4htab (x_p=<value optimized out>) at gtype-desc.c:1863\n#14 0x000000000058fbdf in ggc_mark_roots () at ..\/..\/src\/gcc\/ggc-common.c:117\n#15 0x00000000004c1b79 in ggc_collect () at ..\/..\/src\/gcc\/ggc-page.c:1912\n#16 0x00000000005d737d in execute_todo (flags=132099) at ..\/..\/src\/gcc\/passes.c:1013\n#17 0x00000000005d754a in execute_one_pass (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1145\n#18 0x00000000005d7690 in execute_pass_list (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1176\n#19 0x00000000005d76a5 in execute_pass_list (pass=0xe39400) at ..\/..\/src\/gcc\/passes.c:1177\n#20 0x000000000068c934 in tree_rest_of_compilation (fndecl=0x801f84680) at ..\/..\/src\/gcc\/tree-optimize.c:404\n#21 0x00000000007a0b02 in cgraph_expand_function (node=0x801f94d00) at ..\/..\/src\/gcc\/cgraphunit.c:1166\n#22 0x00000000007a25e4 in cgraph_expand_all_functions () at ..\/..\/src\/gcc\/cgraphunit.c:1229\n#23 cgraph_optimize () at ..\/..\/src\/gcc\/cgraphunit.c:1436\n#24 0x00000000004896ee in d_write_global_declarations () at ..\/..\/src\/gcc\/d\/d-lang.cc:737\n#25 0x000000000065200c in compile_file (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:1055\n#26 do_compile (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2244\n#27 toplev_main (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2276\n#28 0x0000000801c60f29 in __libc_start_main () from \/lib\/libc.so.0.1\n#29 0x0000000000404d2c in _start ()\n(gdb) p table\n$1 = (page_table) 0x0\n(gdb) break ggc-page.c:597\nBreakpoint 1 at 0x4c0ec0: file ..\/..\/src\/gcc\/ggc-page.c, line 597. (4 locations)\n(gdb) r\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nThe program being debugged has been started already.\nStarting program: \/home\/iain\/gdc-20100301-1.043.4.3.4\/build\/gcc\/cc1d ..\/..\/..\/src\/libphobos\/std\/socket.d -quiet -dumpbase socket.d -mtune=generic -auxbase-st\nrip std\/socket.o -g -O2 -frelease -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_FreeBSD -fversion=GC_Use_Data_Fixed -iprefix \/home\/iain\/gdc-1.043.4.3.4\/\nbuild\/gcc\/..\/lib\/gcc\/x86_64-kfreebsd-gnu\/4.3.4\/ -isystem \/home\/iain\/gdc-20100301-1.043.4.3.4\/build\/.\/gcc\/include -isystem \/home\/iain\/gdc-20100301-1.043.4.3.4\n\/build\/.\/gcc\/include-fixed -nostdinc -I ..\/..\/..\/src\/libphobos -I ..\/..\/..\/src\/libphobos\/internal\/gc -I .\/x86_64-kfreebsd-gnu -o -\n        .file   \"socket.d\"\n\n\/* Skip some more asm output *\/\n\n.LFE15:\n        .size   _D3std6socket12InternetHost12validHostentMFPS3gcc6config4unix7hostentZv, .-_D3std6socket12InternetHost12validHostentMFPS3gcc6config4unix7host\nentZv\n.globl _Unwind_Resume\n\nBreakpoint 1, lookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:597\n(gdb) bt\n#0  lookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:596\n#1  ggc_set_mark (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:1290\n#2  0x00000000004a2b25 in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:50\n#3  0x000000000059f033 in gt_ggc_mx_tree_statement_list_node (x_p=<value optimized out>) at gtype-desc.c:506\n#4  0x00000000004a34da in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:434\n#5  0x000000000059f357 in gt_ggc_mx_tree_bb_info (x_p=<value optimized out>) at gtype-desc.c:190\n#6  0x00000000005a4fe5 in gt_ggc_mx_basic_block_def (x_p=<value optimized out>) at gtype-desc.c:746\n#7  0x00000000005a50a5 in gt_ggc_mx_tree_ann_d (x_p=<value optimized out>) at gtype-desc.c:657\n#8  0x00000000004a374d in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:361\n#9  0x000000000059f5a1 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:127\n#10 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#11 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#12 0x000000000059f409 in gt_ggc_mx_cgraph_node (x_p=<value optimized out>) at gtype-desc.c:151\n#13 0x000000000059f69e in gt_ggc_m_P11cgraph_node4htab (x_p=<value optimized out>) at gtype-desc.c:1863\n#14 0x000000000058fbdf in ggc_mark_roots () at ..\/..\/src\/gcc\/ggc-common.c:117\n#15 0x00000000004c1b79 in ggc_collect () at ..\/..\/src\/gcc\/ggc-page.c:1912\n#16 0x00000000005d737d in execute_todo (flags=132099) at ..\/..\/src\/gcc\/passes.c:1013\n#17 0x00000000005d754a in execute_one_pass (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1145\n#18 0x00000000005d7690 in execute_pass_list (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1176\n#19 0x00000000005d76a5 in execute_pass_list (pass=0xe39400) at ..\/..\/src\/gcc\/passes.c:1177\n#20 0x000000000068c934 in tree_rest_of_compilation (fndecl=0x801f84680) at ..\/..\/src\/gcc\/tree-optimize.c:404\n#21 0x00000000007a0b02 in cgraph_expand_function (node=0x801f94d00) at ..\/..\/src\/gcc\/cgraphunit.c:1166\n#22 0x00000000007a25e4 in cgraph_expand_all_functions () at ..\/..\/src\/gcc\/cgraphunit.c:1229\n#23 cgraph_optimize () at ..\/..\/src\/gcc\/cgraphunit.c:1436\n#24 0x00000000004896ee in d_write_global_declarations () at ..\/..\/src\/gcc\/d\/d-lang.cc:737\n#25 0x000000000065200c in compile_file (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:1055\n#26 do_compile (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2244\n#27 toplev_main (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2276\n#28 0x0000000801c60f29 in __libc_start_main () from \/lib\/libc.so.0.1\n#29 0x0000000000404d2c in _start ()\n(gdb) p table->high_bits\n$2 = 34359738368\n(gdb) p high_bits\n$3 = 0\n(gdb) p table->next\n$4 = (struct page_table_chain *) 0x0\n(gdb) up\n#1  ggc_set_mark (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:1290\n(gdb) up\n#2  0x00000000004a2b25 in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:50\n(gdb) up\n#3  0x000000000059f033 in gt_ggc_mx_tree_statement_list_node (x_p=<value optimized out>) at gtype-desc.c:506\n(gdb) p x.stmt.common.chain\n$5 = (union tree_node *) 0x2789\n(gdb) p (size_t)x.stmt.common.chain & ~ (size_t)0xffffffff\n$6 = 0\n(gdb) p x.stmt.common.base.code\n$7 = GIMPLE_MODIFY_STMT\n(gdb) up\n#4  0x00000000004a34da in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:434\n(gdb) p x.generic.stmt_list.head.stmt.common.chain\n$8 = (union tree_node *) 0x2789\n(gdb) p x.generic.stmt_list.common.base.code\n$9 = STATEMENT_LIST\n}}}\nJust to annotate a little on it.\n\n$1 = (page_table) 0x0    <-- This is what segfaults the runtime.\n\n$2 = 34359738368    <-- This is the expected value in the while (table->high_bits != high_bits) loop\n\n$3 = 0    <-- This is the actual value of high_bits (invalid)\n\n$5 = (union tree_node *) 0x2789    <-- Found invalid address. this what gives us grief later\n\n$6 = 0    <-- confirming via printing how high_bits gets it's value\n\nRegards\nIain","created_on":"2010-03-17T08:04:23.271577+00:00","user":"ibuclaw","updated_on":"2010-03-17T08:17:46.602245+00:00","issue":11,"id":140559},{"content":"Is this still an issue?\r\n\r\nI thought 4.3.x was working now.","created_on":"2010-07-06T02:08:43.248400+00:00","user":"michaelp","updated_on":null,"issue":11,"id":208027},{"content":"4.3.x no longer supported.\r\n\r\nClosing","created_on":"2012-01-21T12:23:17.071462+00:00","user":"ibuclaw","updated_on":null,"issue":11,"id":984958},{"content":"No sign of configure flags?","created_on":"2011-02-21T14:38:26.036045+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":379001},{"content":"You mean config.log? I've just attached it.","created_on":"2011-02-21T15:17:15.375326+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":379059},{"content":"Reproducible only on 4.5.0 (4.5.2 is fine, haven't tried 4.5.1)\n\nThis isn't specific to Windows.","created_on":"2011-02-21T20:21:18.547545+00:00","user":"ibuclaw","updated_on":"2011-02-21T20:21:59.269268+00:00","issue":156,"id":379417},{"content":null,"created_on":"2011-02-21T20:24:26.096195+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":379420},{"content":"I'll give 4.5.1 a try. I don't know if I can try 4.5.2, since TDM has not released patches for that version yet.","created_on":"2011-02-21T20:54:05.201209+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":379458},{"content":"This is indeed rather strange. I have a debugger window open for both 4.5.2 and 4.5.0 and breakpoints at the same place. As far as I can tell, both environments (params, etc) are the same. However one diverges where the other doesn't.\r\n\r\nRegardless though, there is a hidden issue here where anonymous structures aren't emitted in unions.\r\n\r\nSo:\r\n{{{\r\nunion A {\r\n    double d;\r\n    struct {\r\n        uint hi;\r\n        uint lo;\r\n    }\r\n}\r\n}}}\r\nBecomes:\r\n{{{\r\nunion A {\r\n    double d;  \/\/ offset = 0\r\n    uint hi;   \/\/ offset = 0\r\n    uint lo;   \/\/ offset = 4 <- danger ahead.\r\n}\r\n}}}\r\n\r\nSo should really be addressing this first. :)","created_on":"2011-02-21T21:48:02.188385+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":379540},{"content":"double post","created_on":"2011-02-21T21:48:04.356577+00:00","user":"ibuclaw","updated_on":"2011-02-21T21:48:30.838220+00:00","issue":156,"id":379541},{"content":"Building with 4.5.1 sources fails, see attached logs.\r\n\r\nIn particular:\r\n\r\n..\/..\/..\/..\/gcc-4.5.1\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: import sa_family_t not found\r\n\r\n..\/..\/..\/..\/gcc-4.5.1\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: alias core.sys.posix.sys.un.sa_family_t recursive alias declaration\r\nmake[3]: *** [import\/core\/sys\/posix\/sys\/un.di] Error 1\r\n\r\nI don't know why it's trying to build those, I'm on Windows.","created_on":"2011-02-21T23:44:33.268992+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":379711},{"content":"I have just tried it with MinGW 4.5.2 from the official MinGW website. Both the compiler & the sources are 4.5.2. The build still fails at the \"posix\" files, just like my last report.","created_on":"2011-02-22T01:58:51.535912+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":379805},{"content":"All interface files are generated regardless of platform (it doesn't try to build, just runs semantic on the files and outputs a .di).\r\n\r\nHaving a look at Druntime, looks like un.d was pulled from the repository.","created_on":"2011-02-22T18:33:24.438367+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":380784},{"content":"double post... again... D;","created_on":"2011-02-22T18:33:29.551882+00:00","user":"ibuclaw","updated_on":"2011-02-22T18:34:05.500242+00:00","issue":156,"id":380785},{"content":"Sure thing, close it!","created_on":"2011-02-22T23:35:16.994249+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":381126},{"content":"New errors with rev476:\r\n\r\nrt\/cmain.o\r\n\\mingw\\bin\\ar.exe: creating libgdruntime.a\r\nranlib libgdruntime.a\r\n\/gdc\/devnow\/build\/gcc\/.\/gcc\/gdc -B\/gdc\/devnow\/build\/gcc\/.\/gcc\/ -L\/gdc\/devnow\/build\/gcc\/i686-pc-mingw32\/winsup\/mingw -L\/gdc\/devnow\/build\/gcc\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/gdc\/devnow\/gcc-4.5.2\/winsup\/mingw\/include -isystem \/gdc\/devnow\/gcc-4.5.2\/winsup\/w32api\/include -B\/mingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/mingw\/i686-pc-mingw32\/include -isystem \/mingw\/i686-pc-mingw32\/sys-include -o std\/boxer.o -Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/gcc-4.5.2\/libphobos -I .\/i686-pc-mingw32  -c ..\/..\/..\/..\/gcc-4.5.2\/libphobos\/std\/boxer.d\r\nstd.stdarg is deprecated.  You should import core.vararg instead.\r\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\\std\\stdio.d:163: Error: static assert  \"unsupported C I\/O system\"\r\nmake[3]: *** [std\/boxer.o] Error 1\r\nmake[3]: Leaving directory `\/gdc\/devnow\/build\/gcc\/i686-pc-mingw32\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/gdc\/devnow\/build\/gcc\/i686-pc-mingw32\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/gdc\/devnow\/build\/gcc'\r\nmake: *** [all] Error 2\r\n\r\nFrom what I can tell one of these 3 have to be defined:\r\nversion (DIGITAL_MARS_STDIO)\r\nversion (GCC_IO)\r\nversion (GENERIC_IO)\r\n\r\nI'm guessing GCC_IO should be defined?\r\n\r\nP.S. Sorry if this is taking your time that you could use elsewhere. You're free to work on important issues on other platforms of course! :)","created_on":"2011-02-22T23:09:48.092821+00:00","user":"Andrej08","updated_on":null,"issue":156,"id":381111},{"content":"I recall a conversation with Daniel Green some time ago. IIRC, he said GCC_IO is not enough, as MinGW is a mixture of what's in both GCC and DigitalMars [citation needed] <g>\r\n\r\nWhile I search around for that conversation, would you mind moving further mingw build discussion to <<issue 151>> - as this report is for the ICE in tree-sra.c :~)\r\n\r\nRegards","created_on":"2011-02-22T23:16:18.078613+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":381114},{"content":"Will do once I've fixed it. ^_^","created_on":"2011-02-23T00:51:54.988827+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":381194},{"content":"Closing as issue may be fixed now (Daniel has been successfully building MinGW for some time now).","created_on":"2012-01-21T12:27:36.554496+00:00","user":"ibuclaw","updated_on":null,"issue":156,"id":984967},{"content":"So what you're trying to say is...\r\n\r\n{{{\r\nreturn reduce(r.front, (r.popFront(), r));\r\n}}}\r\n\r\nThe arguments are evaluated right to left instead of left to right.\r\n\r\nI'll have a quick look, but I'm writing this expecting to see a similar situation to:\r\n{{{\r\nint i = 0;\r\nfoo(i++, i++, i++);   \/\/ calls foo(2, 1, 0)\r\n}}}\r\nWhich is not a bug, but an ABI quirk of the i386\/x86_64 architectures.\r\n","created_on":"2011-04-27T18:28:19.947862+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":457062},{"content":"I guess all I can say is this code works on DMD, so I assumed it's a bug in GDC.  Whether the code is poorly written and should be non-portable is a different issue and one that you know way more than me about.  If you have a good reason for decreeing that this evaluation order is non-portable across compilers, I'll just fix the Phobos code and be done with it, but I prefer as few incompatibilities between DMD and GDC as possible.","created_on":"2011-04-27T18:32:42.506828+00:00","user":"dsimcha","updated_on":null,"issue":202,"id":457068},{"content":null,"created_on":"2011-04-27T22:50:33.941372+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":457384},{"content":"I can have a look at what I can do for extern(D) functions. But I seem to recall something rather inconsistent about order of evaluation in DMD.\n\nEdit:\n{{{\ne1.e2(e3, e4)\n}}}\nI think that's what I was thinking of... and it evaluates in the order: e1, e3, e4, e2.","created_on":"2011-04-27T19:44:06.018940+00:00","user":"ibuclaw","updated_on":"2011-04-27T19:48:43.784885+00:00","issue":202,"id":457150},{"content":"Implementing reverse args if extern(D) and no varargs isn't quite so trivial an ABI feature, so I'll probably put off such a feat until after 0.26.","created_on":"2011-04-27T22:12:06.661559+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":457342},{"content":"Ok, no problem.  I'll change the code in Phobos tonight to not rely on this.  IMHO relying on such arcane minutiae is a terrible idea anyhow.  (I had no idea what the rule for this was in DMD other than because the code sample from std.algorithm.reduce seemed to work.)","created_on":"2011-04-27T22:21:58.191939+00:00","user":"dsimcha","updated_on":null,"issue":202,"id":457358},{"content":"I can see Andrei disagreeing on this... ;)","created_on":"2011-04-27T22:49:49.288257+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":457381},{"content":"AFAIK Walter wanted to standardize order of evaluation for function arguments, but this would be a performance penalty for varargs, so this wasn't done.","created_on":"2011-05-03T14:12:49.485332+00:00","user":null,"updated_on":null,"issue":202,"id":464044},{"content":"Not changing the ABI anymore.\r\n\r\nCan instead check parameter for side effects and evaluate before calling the function.","created_on":"2012-01-21T13:19:25.607344+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":985030},{"content":"<<changeset 774:88b1c453b7d8>>","created_on":"2012-01-21T16:16:23.018917+00:00","user":"ibuclaw","updated_on":null,"issue":202,"id":985308},{"content":"Might be a frontend issue. The method opCall gets deduced to the type:\n{{{\npure nothrow @safe _error_(string a, _error_)\n}}}\n\nOn second look (it's first break of morning here and haven't let the coffee slip down yet) - it shouldn't be compilable.  So that leaves preventing the fact it's emitted anyway.","created_on":"2012-02-26T12:48:36.211304+00:00","user":"ibuclaw","updated_on":"2012-02-26T12:52:15.911271+00:00","issue":317,"id":1119990},{"content":"Because {{{curry!(tcallable, \"5\")}}} should throw an error (it is gagged by the static assert - which is correct.\r\n\r\nGDC adds the instantiated function to a flat list (methods) which is used to emit debug information for all methods in a struct, class or union. This should not happen for functions we are never going to emit.","created_on":"2012-02-26T16:45:24.525763+00:00","user":"ibuclaw","updated_on":null,"issue":317,"id":1120345},{"content":"Why is it invalid?","created_on":"2012-02-26T16:19:02.073580+00:00","user":"trass3r","updated_on":null,"issue":317,"id":1120304},{"content":"<<changeset 797:00ae62a518a0>> removes this flatlist and adds the methods as needed.","created_on":"2012-02-26T16:52:42.994383+00:00","user":"ibuclaw","updated_on":null,"issue":317,"id":1120367},{"content":null,"created_on":"2011-11-28T11:30:27.009640+00:00","user":"deadalnix","updated_on":null,"issue":267,"id":819905},{"content":null,"created_on":"2011-11-28T11:31:44.576881+00:00","user":"deadalnix","updated_on":null,"issue":267,"id":819907},{"content":"How is this specific to gdc? Isn't this a general frontend problem and should be fixed in dmd instead?","created_on":"2011-11-28T12:02:34.079297+00:00","user":"trass3r","updated_on":null,"issue":267,"id":819971},{"content":"Mangling in C++ is compiler dependent, so I guess it is a GDC problem. It is unlikely that DMC mangle the same way as G++ .","created_on":"2011-11-28T16:04:03.204948+00:00","user":"deadalnix","updated_on":null,"issue":267,"id":820590},{"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=7024\r\n\r\nIt seems that the problem exists in DMD too. So this is maybe not a GDC problem after all.","created_on":"2011-11-28T16:06:48.988131+00:00","user":"deadalnix","updated_on":null,"issue":267,"id":820595},{"content":"Saying that, probably should start using the D frontend's implementation starting next frontend merge.  Any arch-related bits should be able just slide in without any issues.","created_on":"2011-11-30T20:44:13.129561+00:00","user":"ibuclaw","updated_on":null,"issue":267,"id":827581},{"content":"GDC's C++ mangling handler is separate from DMD's.  Probably a coincidence both exhibit the same behaviour. :-)","created_on":"2011-11-30T20:32:04.894625+00:00","user":"ibuclaw","updated_on":null,"issue":267,"id":827554},{"content":null,"created_on":"2011-11-30T20:56:57.113056+00:00","user":"ibuclaw","updated_on":null,"issue":267,"id":827628},{"content":"typedefs are deprecated in D2. So this is \"wontfix\".","created_on":"2012-01-21T16:23:22.253461+00:00","user":"ibuclaw","updated_on":null,"issue":267,"id":985324},{"content":"How is it typedefs related ?","created_on":"2012-01-22T18:21:28.866663+00:00","user":null,"updated_on":null,"issue":267,"id":987616},{"content":"<<changeset 783:522f00d94a5e>>","created_on":"2012-01-29T18:40:28.213875+00:00","user":"ibuclaw","updated_on":null,"issue":308,"id":1012872},{"content":null,"created_on":"2012-01-22T19:39:57.282776+00:00","user":"ibuclaw","updated_on":null,"issue":308,"id":987809},{"content":"There's nothing wrong with accessing members.  Just when exceptions are thrown in the destruction stage of runtime.\n{{{\nclass C\n{\n    ~this()\n    {\n        assert(0);\n    }\n}\n\nvoid main()\n{\n    C c = new C;\n}\n}}}\n\nChanged OP to reflect a better minimal test case.","created_on":"2012-01-22T19:37:32.848753+00:00","user":"ibuclaw","updated_on":"2012-01-22T19:39:20.321242+00:00","issue":308,"id":987803},{"content":"Well, the following also crashes on my system:\r\n\r\n{{{\r\n#!d\r\nimport std.stdio;\r\n\r\nclass C\r\n{\r\npublic:\r\n    ~this()\r\n    {\r\n        writeln(this);\r\n    }\r\n}\r\n\r\nvoid main()\r\n{\r\n    C c = new C;\r\n}\r\n}}}\r\n\r\nUsing: gdc -v2 main.d -o main.exe -static-libgcc -O2 -s -g -Wall\r\nOn Win7 32bit.","created_on":"2012-01-23T09:54:39.568028+00:00","user":null,"updated_on":null,"issue":308,"id":989395},{"content":"Making a very careful adjustment to my custom static chain code. :-)","created_on":"2012-02-27T20:23:06.016279+00:00","user":"ibuclaw","updated_on":null,"issue":319,"id":1125553},{"content":"Another quick-fix down.\r\n\r\n<<changeset 801:52a403419f53>>","created_on":"2012-02-27T22:10:02.164640+00:00","user":"ibuclaw","updated_on":null,"issue":319,"id":1125957},{"content":"This may be related to #312, but I'm not sure.","created_on":"2012-02-16T00:04:38.773712+00:00","user":null,"updated_on":null,"issue":313,"id":1081836},{"content":"ok, not a gdc bug as dmd has the same behaviour.\n{{{\ngdc abc.d test.d\n}}}\nIs equivalent in dmd to:\n{{{\ndmd -c abc.d\ndmd -c test.d\ndmd abc.o test.o\n}}}\n\nReason why dmd doesn't get this behaviour with:\n{{{\ndmd abc.d test.d\n}}}\nIs because it processes all sources at once.  To achieve this in gdc, use -o switch (in previous versions, this was done by the -combine switch)\n{{{\ngdc -o test abc.d test.d\n}}}\n\nor use -femit-templates to force emission of templates if you are going to compile each source file individually.\n{{{\ngdc -femit-templates abc.d test.d\n}}}\n\nRegards,","created_on":"2012-07-01T11:10:08.728782+00:00","user":"ibuclaw","updated_on":"2012-07-01T11:12:49.402277+00:00","issue":313,"id":1612832},{"content":"Assigning to self to look into \/ hopefully fix tonight.","created_on":"2012-06-27T11:37:09.805386+00:00","user":"ibuclaw","updated_on":null,"issue":313,"id":1598225},{"content":"At least for Posix systems, Martin Nowak has implemented a better way to get the TLS ranges: https:\/\/github.com\/dawgfoto\/druntime\/blob\/SharedRuntime\/src\/rt\/dso.d#L459\r\n\r\nThis doesn't use _tlsstart anymore and it will likely get merged into upstream druntime, so at least for Posix this is not an issue anymore. Not sure about Windows\/MacOSX.","created_on":"2012-03-25T14:01:16.534805+00:00","user":"jpf","updated_on":null,"issue":270,"id":1223146},{"content":"That is a known issue for that release.  Please upgrade to [[https:\/\/bitbucket.org\/goshawk\/gdc\/downloads\/gcc-4.6.1-tdm64-1-gdc-232cd89d90b4-20120128.7z|gcc-4.6.1-tdm64-1-gdc-232cd89d90b4-20120128.7z]].  That issue has been corrected along with some others.\n\nJust a reminder that the MinGW releases are alpha quality and provided as a courtesy since building them manually can be difficult.\n\nhttp:\/\/forum.dlang.org\/thread\/jg11ok$30s6$1@digitalmars.com\n\nEdit:  The issue is caused because phobos depends on winsock.  To correct it for the version you use. Add {{{-lgphobos -lw2_32}}} to the compile options.","created_on":"2012-03-08T13:25:42.684988+00:00","user":"venix1","updated_on":"2012-03-08T13:26:51.871360+00:00","issue":325,"id":1163713},{"content":"With the newer versions I have completely different problems. After solving some I'm stuck at a missing liblto_plugin-0.dll now, which it claims can't be found, although it's definitely there. Well, maybe I could try the MinGW you linked to.\r\nI wrote a little wrapper around GDC for now, to make everything work like I expect it to. I'm praying I won't run into any more problems... without GDC working with D and extern libraries on Windows is too tedious.\r\nHow about releasing something in beta or release quality?^^\"","created_on":"2012-03-09T12:27:31.365474+00:00","user":null,"updated_on":null,"issue":325,"id":1167296},{"content":"Fixed with DMD 2.058.  Waiting for GDC to update to test again.","created_on":"2012-04-17T19:00:08.720777+00:00","user":"venix1","updated_on":null,"issue":326,"id":1312785},{"content":"To install simply extract to your TDM MinGW64 directory.   You may wish to install a copy of MinGW64 specifically for GDC as TLS patches have required changes to binutils and the MinGW runtime.\r\n\r\nTDM includes a batch file mingwvars.bat to easily set variables.\r\n\r\nTDM GCC required by GDC.\r\nhttp:\/\/tdm-gcc.tdragon.net\/","created_on":"2012-03-24T21:58:16.725589+00:00","user":"venix1","updated_on":null,"issue":327,"id":1221749},{"content":"Let me clarify,  GDC does not work alone.  It requires being extracted into a TDM MinGW64 installation.  The TDM MinGW64 will contain all missing binaries, dlls, and libraries.","created_on":"2012-03-24T21:59:47.713878+00:00","user":"venix1","updated_on":null,"issue":327,"id":1221754},{"content":"I removed this file completely from the project, and I get this:\r\n\r\n1>Source\/Emulator\/Parts\/IO\/MOS6532.d:1:0: internal compiler error: in toCtype, at d\/d-glue.cc:3589\r\n1>Please submit a full bug report,\r\n1>with preprocessed source if appropriate.\r\n1>See <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n\r\n... it just moved to another file.\r\nThe command line I'm using to build:\r\n\r\ngdc -m32 -g -fno-inline-functions -fdebug -fXf=\"$(IntDir)\\$(TargetName).json\" -I\"$(DMDInstallDir)src\\libs\" -fdeps=\"$(OutDir)\\$(ProjectName).dep\" -o \"$(OutDir)\\$(ProjectName).exe\" -L\/SUBSYSTEM:WINDOWS\r\n\r\nWith all source files compiled together (found in the repo I linked above)\r\nOr just compile with VisualD and the project file that's in there.","created_on":"2012-04-02T21:16:58.582201+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1255284},{"content":"gdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)","created_on":"2012-04-02T20:23:27.539287+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1255110},{"content":"I want to wait for the thunk issue to be resolved before I release a new version for MinGW.  In the meantime, I have to update the build script to use github.  Once that done if you wished, you could build your own binaries.  For releases, I do {{{.\/build-tdm-gdc.sh }}} run some tests and then 7-zip. :-)  It's not a very smart script so some piloting, in the form of comments to skip certain steps, is required.\n\nI have binaries from bitbucket tip.  I can use those to try to compile.\n\n{{{\ntype *\nTypeEnum::toCtype()\n...\n\/\/ This is where it fails.  Haven't looked yet, but experience suggests it's a SIGSEGV, most likely on sym->attributes. \n                decl_attributes(& ctype, gen.attributes(sym->attributes), ATTR_FLAG_TYPE_IN_PLACE);\n}}}\n\nOnce, I do a full backtrace I can determine more.  Being that you've described as moving files indicates it might be a command line related or related to an import module with certain invalid attributes on an enum.  Possibly, even both those things.","created_on":"2012-04-07T03:10:18.599747+00:00","user":"venix1","updated_on":"2012-04-07T03:10:42.582530+00:00","issue":329,"id":1273680},{"content":"Can you clarify exactly how you build it?  I don't have Visual Studio, so I was trying to do it on the command line but kept coming up against import errors for demu.SomeModule.  I managed to quiet those by copying and pasting to the appropriate directory structure.  Then I ran into two missing modules win32.windows and std.instrinsics(a D1 only module).\r\n\r\nAfter that was all taken care of, it compiled and it worked. I then saw that you compiled all modules together on the command line.  So I was going to start with winmain.d(win32.windows again) and fill in the missing modules as necessary.\r\n{{{\r\n\/\/import std.c.windows.windows;\r\nimport win32.windows; <- No clue where to find\r\nimport win32.wingdi;  <- ditto\r\n\r\nimport demu.systemregistry;  <- Source\/Emulator\/SystemRegistery.d???\r\n\r\nimport demu.rommanager.romdatabase;  <- Source\/RomManager\/RomDatabase.d???\r\n}}}\r\n\r\nAt this point, I cannot compile your program to the point it where I can generate the error.  Installing Visual Studio is not really an option at this time.  So if you could provide the exact command line required with the expanded environment variables and explain how to map the files to the appropriate imports.  I can look at this again.\r\n\r\nAlso, i think visual studio has an output Makefile option.  You might consider doing that before every commit into svn.  So that people without Visual Studio can still build.","created_on":"2012-04-07T03:48:04.854890+00:00","user":"venix1","updated_on":null,"issue":329,"id":1273696},{"content":"Ah crap, I rearranged my project structure a little, and forgot to update my module names. It would seem VisualStudio manages to silently handle modules being kept in an arbitrary directory structure. Sorry for putting you through that! >_<\r\n\r\nOkay, so I just commit a clean up for all the import paths which you can get if you like (although it sounds like you've done it yourself), I also attached the win32 lib, and the script VisualD generates and runs to perform the build.\r\nSee the bat file, that should reproduce my build environment exactly.\r\nYou may note the: -I\"C:\\Program Files (x86)\\D\\dmd2\\src\\libs\" <- that's where I have the win32 lib sitting (alongside phobos and friends). It's safe to change that to suit your purposes.\r\n\r\nSadly, Visual Studio support is only via VisualD, which is still quite immature at this time, and doesn't offer anything like an option to produce a makefile.\r\n\r\nThanks for taking the time to look at this.","created_on":"2012-04-07T09:35:34.083445+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1274409},{"content":null,"created_on":"2012-04-22T11:42:52.576474+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1329983},{"content":"Fixed. Duplicate of #321\r\n\r\nCan't reproduce with \r\n{{{\r\ngcc version 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2\r\n.057) (tdm64-1)\r\n}}}\r\n\r\nAlso, change your compile line to the following, or you'll have undefined symbol errors.  Notice -mwindows, that's the equivalent of -L\/SUBSYSTEM:WINDOWS, additionally it blocks the import of dmain.o which requires _Dmain to be defined and the @Debug\\DEmu.build.rsp must come before the library imports.\r\n{{{\r\ngdc -v -mwindows -m32 -g -fno-inline-functions -fdebug -fXf=\"Debug\\DEmu.json\" -I\"C:\\Program Files (x86)\\D\\dmd2\\src\\libs\" -fdeps=\"Debug\\DEmu.dep\" @Debug\\DEmu.build.rsp -o \"Debug\\DEmu.exe\" -lsqlite -lgdi32 -lole32 -lkernel32 -luser32 -lcomctl32 -lcomdlg32 -L\/SUBSYSTEM:WINDOWS \r\n}}}","created_on":"2012-04-22T18:28:26.673847+00:00","user":"venix1","updated_on":null,"issue":329,"id":1330773},{"content":"Anyone managed to have a look at this? It's very strange that I just can't build my project with GDC :\/\r\nI wonder if it's just magically gone with the latest code like most of the other bugs I've reported?","created_on":"2012-04-05T17:03:02.092500+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1268072},{"content":"That looks like the current release build... Are you saying it works for you with the existing build?\r\nI have already changed to use -mwindows at my end, but it didn't affect this problem. This appears before it tries to link.\r\n\r\nThat fix of Iain's looks like it's more recent than the build you're using. I'm kinda confused, if that fixes it, how are you able to build? Or of you can't reproduce, how do you know it's fixed?\r\n\r\nIt's certainly broken with that build here :\/","created_on":"2012-04-23T08:15:14.209589+00:00","user":"TurkeyMan","updated_on":null,"issue":329,"id":1332672},{"content":"The build was actually a more recent test build that included the patch.\r\n\r\nI'm working on a D2 only intermittent release.  I just need to test for bugs and it's ready to go.","created_on":"2012-04-23T22:02:51.244819+00:00","user":"venix1","updated_on":null,"issue":329,"id":1336181},{"content":"[[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/00b19ad7e81f#chg-d\/druntime\/core\/sys\/posix\/sys\/un.d|Added]]\r\n\r\n[[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/37fe4c2179b3#chg-d\/druntime\/core\/sys\/posix\/sys\/un.d|Removed]]\r\n\r\nThe root of the issue is that GDC tries to generate a posix header on MinGW but because MinGW is not posix, it fails with the error above.  If you inspect the DMD makefile, they avoid generating a header for that file on Windows. ","created_on":"2012-04-27T02:30:51.395962+00:00","user":"venix1","updated_on":null,"issue":337,"id":1350751},{"content":"This is finally fixed in 2.058 as well.  So for now, add {{{  version(Posix):  }}} to the top of that file.","created_on":"2012-04-27T03:09:06.740357+00:00","user":"venix1","updated_on":null,"issue":337,"id":1350842},{"content":"Don't worry, it's not really your fault.  I need to update some documentation.\n\nYou need to apply the patches from https:\/\/bitbucket.org\/venix1\/mingw-gdc\/wiki\/Home This is something that I pushed upstream and is available with D2.058.  It was maintained separately from GDC for that reason.\n\n{{{\n# Requires hg-git\nhg clone git:\/\/github.com\/D-Programming-GDC\/GDC.git\nhg update gcc-compat\ncd GDC\/.hg\nhg clone https:\/\/bitbucket.org\/venix1\/mingw-gdc\/.hg\/patches\nhg qpush -a # Might have failures.  I try to keep it current though. \n}}}\n\ni'll be moving away from patch queues soon and replace it with a separate MinGW branch.\n\nEdit: It's necessary to use revision [[https:\/\/bitbucket.org\/venix1\/mingw-gdc\/changeset\/0ff682f25eae|0ff682f25eae]]  otherwise it'll fail since it's been updated to D2.058.","created_on":"2012-04-27T15:12:33.118878+00:00","user":"venix1","updated_on":"2012-04-27T15:14:11.690092+00:00","issue":339,"id":1353471},{"content":"I'd say your running a (only slightly)  old build of gdc.  This was fixed recently in the trunk (from the 2.059 merge).\r\n\r\nAs you can see in object.d:\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/blob\/master\/libphobos\/libdruntime\/object.di#L363\r\n\r\nAlso in aaA.d:\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/blob\/master\/libphobos\/libdruntime\/rt\/aaA.d#L396\r\n\r\nAnd also in the compiler implementation when generating the library call:\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/blob\/master\/gcc\/d\/d-codegen.cc#L2480\r\n\r\n\r\nRegards,\r\nIain","created_on":"2012-07-02T17:13:45.448866+00:00","user":"ibuclaw","updated_on":null,"issue":356,"id":1617358},{"content":"That's great, but I couldn't find instructions on how to install GDC from Github repository. (That's why I'm using outdated GDC built from this bitbucket repo.) Are there any?","created_on":"2012-07-03T17:13:45.884440+00:00","user":"lomereiter","updated_on":null,"issue":356,"id":1622407},{"content":null,"created_on":"2012-05-25T09:29:25.024421+00:00","user":"Calrama","updated_on":null,"issue":343,"id":1463580},{"content":"GDC trunk follows GCC trunk.  In revision [[https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/95407e97ee160ba48d7d30fc4a7e12534ac6fbba|95407e97ee160ba48d7d30fc4a7e12534ac6fbba]] ,we switched to using the GCC zlib.  Prior to this, the GCC zlib version was older than what was being used within phobos.  Newer versions of zlib separate the contents of gzio.c into separate files.\r\n\r\nPlease use the gcc-4.x-compat for all previous versions of GCC.  You can also try rolling back the commit.","created_on":"2012-05-25T14:35:24.357358+00:00","user":"venix1","updated_on":null,"issue":343,"id":1464671},{"content":"But that does not explain the second problem which has nothing to do with zlib.","created_on":"2012-05-25T15:53:17.167860+00:00","user":"Calrama","updated_on":null,"issue":343,"id":1464986},{"content":null,"created_on":"2012-05-24T16:14:30.542954+00:00","user":"Calrama","updated_on":null,"issue":343,"id":1460727},{"content":null,"created_on":"2012-05-24T16:15:06.285329+00:00","user":"Calrama","updated_on":null,"issue":343,"id":1460732},{"content":"Fixed in [[https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/65bcf413354769da12ccac48a287cdcf375be9a5|65bcf41335]]","created_on":"2012-05-30T01:04:06.565712+00:00","user":"venix1","updated_on":null,"issue":345,"id":1480332},{"content":"Confirmed to build for the attached configuration (i686).\n\nFor (possible) future reference:\n\n{{{\ngcc trunk revision used (currently newest): 187953\n\ngdc trunk revision used (currently newest): 316ad9c558450c8826c7ae4c8d9a6a0fed2a0b0d\n}}}","created_on":"2012-05-29T11:44:58.169022+00:00","user":"Calrama","updated_on":"2012-05-29T11:46:44.514037+00:00","issue":344,"id":1476794},{"content":"Last snapshot I retrieved from GCC is:\r\nftp:\/\/ftp.mirrorservice.org\/sites\/sourceware.org\/pub\/gcc\/snapshots\/4.8-20120325\/\r\n\r\nI will be working my way back up to trunk later this week.  Have been busy left and right at the moment I'm afraid.","created_on":"2012-05-28T13:08:13.841847+00:00","user":"ibuclaw","updated_on":null,"issue":344,"id":1472761},{"content":"Fixed in [[https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/58e45da396a260883113d90e931c0cf14dfe5046|58e45da396]]\r\n\r\n{{{\r\nPath: .\r\nURL: svn:\/\/gcc.gnu.org\/svn\/gcc\/trunk\r\nRepository Root: svn:\/\/gcc.gnu.org\/svn\/gcc\r\nRepository UUID: 138bc75d-0d04-0410-961f-82ee72b054a4\r\nRevision: 187922\r\nNode Kind: directory\r\nSchedule: normal\r\nLast Changed Author: jb\r\nLast Changed Rev: 187922\r\nLast Changed Date: 2012-05-27 09:09:15 +0200 (Sun, 27 May 2012)\r\n}}}","created_on":"2012-05-28T16:15:07.637767+00:00","user":"venix1","updated_on":null,"issue":344,"id":1473440},{"content":"Thanks.\r\n\r\nBy the way, are you compiling with --enable-checking?","created_on":"2012-05-28T16:44:16.516131+00:00","user":"ibuclaw","updated_on":null,"issue":344,"id":1473510},{"content":"Just pulled gdc git master and it still doesn't compile with the latest trunk:\r\n\r\n{{{\r\n#!make\r\n\r\n\/home\/cal\/.aur\/gdc-git\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/cal\/.aur\/gdc-git\/src\/gcc-build\/.\/gcc\/ -B\/usr\/i686-pc-linux-gnu\/bin\/ -B\/usr\/i686-pc-linux-gnu\/lib\/ -isystem \/usr\/i686-pc-linux-gnu\/include -isystem \/usr\/i686-pc-linux-gnu\/sys-include -o std\/file.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I \/home\/cal\/.aur\/gdc-git\/src\/gcc-4.8.0\/libphobos -I \/home\/cal\/.aur\/gdc-git\/src\/gcc-4.8.0\/libphobos\/libdruntime -I .\/libdruntime\/i686-pc-linux-gnu  -c \/home\/cal\/.aur\/gdc-git\/src\/gcc-4.8.0\/libphobos\/std\/file.d\r\n\/home\/cal\/.aur\/gdc-git\/src\/gcc-4.8.0\/libphobos\/std\/file.d: In member function 'std.file.DirIteratorImpl.popFront':\r\n\/home\/cal\/.aur\/gdc-git\/src\/gcc-4.8.0\/libphobos\/std\/file.d:3201:0: internal compiler error: tree check: expected integer_type or enumeral_type or boolean_type or real_type or fixed_point_type, have void_type in preprocess_case_label_vec_for_gimple, at gimplify.c:1598\r\n             next();\r\n}}}","created_on":"2012-05-28T19:51:10.248378+00:00","user":"Calrama","updated_on":null,"issue":344,"id":1474045},{"content":"Was using --enable-checking but patches didn't get applied properly so it wasn't building libphobos.\r\n\r\nError occurs in more than one file.\r\n{{{\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/mmfile.d: In member function 'std.mmfile.MmFile.this':\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/mmfile.d:128:0: internal compiler error: tree check: expected integer_type or enumeral_type or boolean_type or real_type or fixed_point_type, have void_type in preprocess_case_label_vec_for_gimple, at gimplify.c:1598\r\n             assert(0);\r\n ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\nmake[8]: *** [std\/mmfile.o] Error 1\r\nmake[8]: *** Waiting for unfinished jobs....\r\n\/home\/venix\/GDC\/dev\/gcc-svn\/libphobos\/std\/format.d: In member function 'std.format.FormatSpec!(char).FormatSpec.fillUp':\r\n\/home\/venix\/GDC\/dev\/gcc-svn\/libphobos\/std\/format.d:861:0: internal compiler error: tree check: expected integer_type or enumeral_type or boolean_type or real_type or fixed_point_type, have void_type in preprocess_case_label_vec_for_gimple, at gimplify.c:1598\r\n                 return;\r\n ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\nmake[8]: *** [std\/process.o] Error 1\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/file.d: In member function 'std.file.DirIteratorImpl.popFront':\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/file.d:3201:0: internal compiler error: tree check: expected integer_type or enumeral_type or boolean_type or real_type or fixed_point_type, have void_type in preprocess_case_label_vec_for_gimple, at gimplify.c:1598\r\n             next();\r\n ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\nmake[8]: *** [std\/file.o] Error 1\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/socket.d: In member function 'std.socket.Socket.createAddress':\r\n..\/..\/..\/..\/gcc-svn\/libphobos\/std\/socket.d:3047:0: internal compiler error: treecheck: expected integer_type or enumeral_type or boolean_type or real_type or fixed_point_type, have void_type in preprocess_case_label_vec_for_gimple, at gimplify.c:1598\r\n             result = new UnknownAddress;\r\n ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n}}}\r\n\r\n","created_on":"2012-05-29T02:58:20.141581+00:00","user":"venix1","updated_on":null,"issue":344,"id":1474952},{"content":"see ::endCase where we use void_type_node for switch statements.","created_on":"2012-05-29T06:58:45.322046+00:00","user":"ibuclaw","updated_on":null,"issue":344,"id":1475474},{"content":"Should be fixed now:\r\n\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/316ad9c558450c8826c7ae4c8d9a6a0fed2a0b0d","created_on":"2012-05-29T07:07:52.063128+00:00","user":"ibuclaw","updated_on":null,"issue":344,"id":1475499},{"content":"**writeln** apparently enters an infinite loop?","created_on":"2011-03-13T02:59:10.821986+00:00","user":"venix1","updated_on":"2011-03-13T02:59:19.838270+00:00","issue":160,"id":401420},{"content":"I still get the following with your patch:\r\n\r\n<pre>ccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x5e): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x76): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x71): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x103): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x156): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x180): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x1ae): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x5e): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x76): undefined reference to `_fputwc_nlock'\r\n<\/pre>","created_on":"2011-03-17T20:12:12.175623+00:00","user":null,"updated_on":null,"issue":160,"id":407208},{"content":"Sorry,\r\n{{{\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x5e): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTaZ3putMFaZv]+0x76): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x71): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x103): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x156): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x180): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter10__T3putTwZ3putMFwZv]+0x1ae): undefined reference to `_fputwc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x5e): undefined reference to `_fputc_nlock'\r\nccFSIasO.o:context.d:(.text$_D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv\r\n\r\n[__D3std5stdio4File17LockingTextWriter11__T3putTxaZ3putMFxaZv]+0x76): undefined reference to `_fputwc_nlock'\r\n}}}","created_on":"2011-03-17T20:15:35.146668+00:00","user":"trass3r","updated_on":null,"issue":160,"id":407213},{"content":"The undefined symbols your getting {{{*_nlock}}} are symbols defined by  {{{DIGITAL_MARS_STDIO}}}.  I would verify the version declarations.","created_on":"2011-03-21T04:07:13.052306+00:00","user":"venix1","updated_on":null,"issue":160,"id":410352},{"content":"stdio.writeln freezes applications (D2 tested). stdio.printf doesn't suffer from this problem.","created_on":"2011-03-22T23:42:08.941334+00:00","user":"Andrej08","updated_on":null,"issue":160,"id":413036},{"content":"Try the latest [[https:\/\/bitbucket.org\/goshawk\/gdc\/downloads|binaries]].  The writeln loop appears to have disappeared.  Replaced by an auto import warning.\r\n\r\n","created_on":"2011-03-23T00:24:38.892261+00:00","user":"venix1","updated_on":null,"issue":160,"id":413066},{"content":null,"created_on":"2011-03-26T00:14:35.681903+00:00","user":"venix1","updated_on":null,"issue":160,"id":416489},{"content":"All information on the writeln issue will be put in <<issue 173>>.","created_on":"2011-03-25T23:04:04.842652+00:00","user":"venix1","updated_on":null,"issue":160,"id":416468},{"content":"Solved the writeln issue.","created_on":"2011-03-26T00:10:41.504157+00:00","user":"venix1","updated_on":null,"issue":160,"id":416484},{"content":"Updated the patch to also remove the auto import warning relating to issue <<issue 172>>","created_on":"2011-03-28T02:48:50.524479+00:00","user":"venix1","updated_on":null,"issue":160,"id":418142},{"content":"Decided it's better to live with the auto import warning than contort the runtime and deviate from expected behavior. \r\n\r\nAlso added what I feel to be correct implementation of flockfile and funlockfile.  My build environment is a little messy right now.  So I'll test them when I get the chance.","created_on":"2011-04-16T03:15:52.960137+00:00","user":"venix1","updated_on":null,"issue":160,"id":442991},{"content":"Merged.\r\n\r\n> Decided it's better to live with the auto import warning than contort the runtime and deviate from expected behavior. \r\n\r\nHere, the auto import warning is an error, so I've put a static ctor in cstdio :)\r\n\r\n<<changeset 545>>","created_on":"2011-04-16T11:49:20.336005+00:00","user":"ibuclaw","updated_on":null,"issue":160,"id":443243},{"content":"Oops, should have been a shared static constructor...\r\n\r\n<<changeset 546>>","created_on":"2011-04-16T19:45:19.833402+00:00","user":"ibuclaw","updated_on":null,"issue":160,"id":443550},{"content":"I misinterpreted the functionality of flockfile and funlockfile.  The code in the last patch will not work for it.","created_on":"2011-04-16T20:59:09.874950+00:00","user":"venix1","updated_on":null,"issue":160,"id":443586},{"content":null,"created_on":"2011-07-28T05:11:20.277747+00:00","user":"venix1","updated_on":null,"issue":160,"id":575972},{"content":"Thanks. The helloworld.d can be compiled and linked successfully with MingW GCC 2.5.2 on Windows XP SP3.\n\nWow, the GDC based on DMD 2.054 works on Windows!","created_on":"2011-08-01T01:21:24.358800+00:00","user":"heromyth","updated_on":"2011-08-01T01:21:54.202390+00:00","issue":160,"id":580950},{"content":"Proper support for this was implemented in \r\n[[https:\/\/github.com\/venix1\/GDC\/commit\/4ce8e8bcfdb4fbc8b92361bc82ae98f87a4872c0|4ce8e8bcfd]] \r\nand \r\n[[https:\/\/github.com\/venix1\/GDC\/commit\/6a838080f17c01f34b375af294e9bfb784685fa1|6a838080f1]]","created_on":"2012-06-29T22:02:51.429295+00:00","user":"venix1","updated_on":null,"issue":160,"id":1609833},{"content":"{{{\r\nmodule winmain;\r\n\r\nimport core.runtime;\r\nimport std.c.windows.windows;\r\nimport core.thread;\r\n\r\nextern (Windows)\r\nint WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)\r\n{\r\n    int result;\r\n\r\n    void exceptionHandler(Throwable e)\r\n    {\r\n        throw e;\r\n    }\r\n\r\n    try\r\n    {\r\n        Runtime.initialize(&exceptionHandler);\r\n\r\n        result = myWinMain(hInstance, hPrevInstance, lpCmdLine, nCmdShow);\r\n\r\n        Runtime.terminate(&exceptionHandler);\r\n    }\r\n    catch (Throwable o)\t\t\/\/ catch any uncaught exceptions\r\n    {\r\n        MessageBoxA(null, cast(char *)o.toString(), \"Error\", MB_OK | MB_ICONEXCLAMATION);\r\n        result = 0;\t\t\/\/ failed\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvoid test()\r\n{\r\n    int x = 0; \/\/ breakpoint here\r\n    assert(false, \"I'm here!\");\r\n}\r\n\r\nint myWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)\r\n{\r\n    Fiber f = new Fiber(&test);\r\n    f.call();\r\n\r\n    return 0;\r\n}\r\n}}}\r\n\r\nHere's my test program. It works with DMD 2.059, but with the latest build of MinGW GDC (both x32 and x64), f.call() just returns immediately, it never actually enters test().\r\n\r\nIn my actual context however (x64 called from within a DLL), it crashes in f.call() on a null pointer, also never enters test() :\/\r\n\r\nMy case with the DLL may add some complexity, but the simple case (just compile the above and run) also doesn't work, though no actual crash. So I'm definitely suspicious of MinGW GDC's Fiber support.","created_on":"2012-05-22T15:51:27.363413+00:00","user":"TurkeyMan","updated_on":null,"issue":342,"id":1450504},{"content":null,"created_on":"2012-05-29T02:58:45.983887+00:00","user":"venix1","updated_on":null,"issue":342,"id":1474954},{"content":"Looking at libphobos\/libdruntime\/core\/thread.d fibers aren't supported.  \r\n\r\nThis is due to the use of D_InlineAsm_X86 and D_InlineAsm_X86_64 to generate custom assembly for the function fiber_switchContext\r\n\r\nIt's a bug that it doesn't fail cleanly.\r\n\r\nI'll look at it more over the weekend.  Going to have to convert the D assembly to GCC assembly.","created_on":"2012-05-30T01:35:05.459561+00:00","user":"venix1","updated_on":null,"issue":342,"id":1480399},{"content":"Awesome thanks!","created_on":"2012-05-30T08:09:04.072804+00:00","user":"TurkeyMan","updated_on":null,"issue":342,"id":1481333},{"content":"Sorry, I'm not clear what the result is here...\r\nIs this effectively 'not fixed', but the issue was re-defined in the new bug?","created_on":"2012-06-12T13:49:42.145506+00:00","user":"TurkeyMan","updated_on":null,"issue":342,"id":1538342},{"content":"It is fixed.  This code allows fibers and exceptions from fibers to function with MinGW32 and MinGW64.\r\n\r\nThe new issue is related to the stack trace associated with exceptions.  These do not produce useful output for MinGW32 and has caused segfaults with MinGW64 in association with Fibers(or did).\r\n\r\n# This occurs one the first call to StackWalk64, which suggests the issue is not Fiber related as any issues with that should be occurring on the second call.  Hard to really say without knowing how StackWalk64 works.\r\n# There are inconsistencies with the GDB stack for MinGW64.  Which may be related.\r\n# MinGW32 doesn't generate useful stack dumps.\r\n\r\nWhile it could be argued that the issue is Fiber related, I think it may be evident of a more serious underlying stack issue that only became apparent with Fibers.  So rather than spending time chasing a red herring, I thought it better to give it a separate issue.\r\n\r\nFiber unittests do succeed.","created_on":"2012-06-12T15:36:22.881151+00:00","user":"venix1","updated_on":null,"issue":342,"id":1538942},{"content":"Awesome, thanks!\r\nAny chance of a new build with those fixes?","created_on":"2012-06-12T17:29:32.123752+00:00","user":"TurkeyMan","updated_on":null,"issue":342,"id":1539353},{"content":"Support has been added in\r\n[[https:\/\/github.com\/venix1\/GDC\/commit\/c3db888d743672c89990a9d60cda5d70fef4ee63|c3db888d74]]\r\n\r\nThere's an issue with using StackWalk64 after Fiber switching for MinGW64 so stack traces are disabled.  They need to be enhanced as well.  Currently, they don't show symbol names which makes them kinda useless.\r\n\r\nI'm not sure it's related to Fibers or if it's amplified from a previous issue.  Currently, it's not exhibiting the same symptoms after running Windows Update(but I'm playing safe) and rebooting.  This will be enabled in the releases so that more information can be gotten about it but will stay disabled in the repository.\r\n\r\nI believe it's probably related to why GDB loses stack information.\r\n\r\n{{{\r\n#0  _d_throw (obj=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/gcc\/deh.d:153\r\n#1  0x0000000000420853 in onAssertErrorMsg (file=..., line=53, msg=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/core\/exception.d:421\r\n#2  0x0000000000411382 in _d_assert_msg (msg=..., file=) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:203\r\n#3  0x0000000000401659 in D main () at issue342.d:53\r\n#4  0x00000000004126a2 in rt.dmain2._d_run_main.runMain (this=0x22fda0) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:574\r\n#5  0x0000000000411fe1 in rt.dmain2._d_run_main.tryExec (this=0x22fda0, dg=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:549\r\n#6  0x0000000000000000 in ?? () <- This is invalid.  Where's the rest of the call stack?\r\n}}}\r\n\r\nWhen compared to the values given by StackWalk64.  It's missing 4 frames of stack information lost upon calling rt.dmain2._d_run_main.tryExec.  Prior to the use of Fibers.  This symptom was not exhibited by MinGW32.\r\n\r\n{{{\r\n40FF74\r\n409BDB\r\n411176\r\n418F0F\r\n411382\r\n401659\r\n4126A2\r\n411FE1\r\n41271E\r\n411FE1 <- last GDB entry\r\n411D35\r\n401735\r\n4013CE\r\n4014E8\r\n}}}\r\n\r\nI'm closing this issue and will separate one for [[https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/348\/mingw-stack-trace-on-exception-needs|stack trace]].","created_on":"2012-06-11T22:22:12.853755+00:00","user":"venix1","updated_on":null,"issue":342,"id":1535547},{"content":"I noted this a while ago, and should be fixed in trunk - will have to recheck though with this test case.\r\n\r\nSee following: https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/37fe4c2179b3#chg-d\/d-codegen.cc","created_on":"2012-04-05T08:31:39.679228+00:00","user":"ibuclaw","updated_on":null,"issue":330,"id":1266200},{"content":"Cool. Seems like many of these bugs I'm running in to have been fixed since the last build of GDC (January).\r\nMaybe it's time for a new build ;)","created_on":"2012-04-05T11:18:33.484463+00:00","user":"TurkeyMan","updated_on":null,"issue":330,"id":1266785},{"content":"CNR in trunk","created_on":"2012-06-27T11:25:55.030737+00:00","user":"ibuclaw","updated_on":null,"issue":330,"id":1598175},{"content":null,"created_on":"2012-06-26T06:58:07.461838+00:00","user":"Calrama","updated_on":null,"issue":354,"id":1592033},{"content":"-o is already used, though in front instead of at the back. I just tried compiling like this:\r\n\r\n{{{\r\ngdc *.d semitwist\/*.d semitwist\/util\/*.d goldie\/*.d goldie\/grmc\/*.d goldie\/langs\/grm\/*.d tools\/*.d -o main\r\n}}}\r\n\r\nand sadly it throws the same error.","created_on":"2012-06-26T08:27:14.329106+00:00","user":"Calrama","updated_on":null,"issue":354,"id":1592338},{"content":"Good to know, thank you for the explanation. Do you also know why the order is relevant (And\/or an\nidea how to fix that if it is not intended behaviour) or how to find the correct order for multiple source files (see my previous post)? Because eventually I'd like to use goldie with llvm on windows as well and with dmd that's just not\nan option (Don't want to create new import libs for every llvm update).","created_on":"2012-06-30T09:07:25.040225+00:00","user":"Calrama","updated_on":"2012-06-30T09:09:39.919865+00:00","issue":354,"id":1610565},{"content":"ok - thanks for the full sources, I'll run this through dustmite later.\r\n\r\nOut of general curiousness, does the same happen if you compile all modules at once?  eg.\r\n{{{\r\ngdc *.d -o main\r\n}}}\r\n-o is needed so all files are passed to the compiler by the driver, rather than one-at-a-time.\r\n\r\nRegards","created_on":"2012-06-26T07:55:36.363779+00:00","user":"ibuclaw","updated_on":null,"issue":354,"id":1592227},{"content":"https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/00110751fff0132bf3dd98f0f397098d6797b69c","created_on":"2012-07-01T10:55:51.309847+00:00","user":"ibuclaw","updated_on":"2012-07-01T10:56:12.532022+00:00","issue":354,"id":1612813},{"content":"Started dustmite last night, but it was still working away come this morning.  So will have to get back to you this evening.","created_on":"2012-06-28T10:14:33.416478+00:00","user":"ibuclaw","updated_on":null,"issue":354,"id":1602558},{"content":"Thanks for the update, if I can help in any way with this issue I'd be glad to.","created_on":"2012-06-28T10:17:50.800728+00:00","user":"Calrama","updated_on":null,"issue":354,"id":1602578},{"content":"Thanks, tried out the test case and omitting -o or reversing order does work for it\n(Is that behaviour intended ? If it is, can you explain why the order of that code is relevant to the compiler, because\nlooking at it I don't really see why, if not, is it hard to fix?), alas it does not work completely for the\nfull source (in undref.zip).\n\nThe unindent-reducable undefined reference does go away but instead an\nentire series of new (different) undefined references appear (see log.txt, there are a lot). It could be that there still\nis not the order the compiler needs but with that many source files I'm not sure what that correct order is (or how I can determine it other than going through all permutations and that's a bit much, around fac(\"number of source files\")).\n\nWhether\n{{{\n gdc semitwist\/util\/*.d semitwist\/*.d tools\/*.d goldie\/grmc\/*.d goldie\/langs\/grm\/*.d goldie\/*.d main.d\n}}}\n\nor the updated Makefile (with the new order but each source at a time) is used, the same errors occur.\n\nAttached are the errors (log.txt), the updated Makefile alone and the entire source with the updated Makefile included\n\nPS: I also noticed that dmd completes in about 4 seconds while gdc needs about 30 seconds to get to\nthe first error (Most likely not related to the issue, but still rather strange since they both use the same frontend and\ngdc iirc puts a bit of glue code between that frontend and gcc, so it shouldn't be that much slower)","created_on":"2012-06-29T11:43:37.331958+00:00","user":"Calrama","updated_on":"2012-06-29T11:53:44.913795+00:00","issue":354,"id":1607584},{"content":"Assigning to self to look into \/ hopefully fix tonight.","created_on":"2012-06-27T11:36:01.707223+00:00","user":"ibuclaw","updated_on":null,"issue":354,"id":1598222},{"content":"Oh, GCC *is* that much slower. :~)\r\n\r\nThe frontend is exactly the same speed in terms of reading, parsing and running semantics on code, and from an updated report I produced on compilation times, the creation of GCC trees from the D frontend AST is done at a negligible speed.  The difference is the large number of passes the GCC backend has which processes the generated trees.  That is what slows it down by that much of a factor.","created_on":"2012-06-29T15:42:46.015553+00:00","user":"ibuclaw","updated_on":null,"issue":354,"id":1608707},{"content":"Reduced test case:\r\n\r\nall.d\r\n{{{\r\nmodule all;\r\nimport std.conv;\r\nvoid main() {}\r\n}}}\r\n\r\ntext.d\r\n{{{\r\nmodule text;\r\n\r\nimport std.traits;\r\nimport std.string;\r\n\r\nT[] unindent(T)(T[] lines) {\r\n        return unindentImpl(lines);\r\n}\r\n\r\npublic T[] unindentImpl(T)(T[] lines, T origStr=null) {\r\n\r\n        T[] indents;\r\n        T shorterAndNonNull(T a, T b) {\r\n\r\n                return (a.length < b.length)? a : b;\r\n        }\r\n        auto shortestIndent = std.algorithm.reduce!shorterAndNonNull(indents);\r\n\r\n        return lines;\r\n}\r\n\r\nT normalize(T)(T str) if(isSomeString!T)\r\n{\r\n\r\n        T[] lines;\r\n        lines = normalize(lines);\r\n                return lines.join;\r\n}\r\n\r\nT[] normalize(T)(T[] lines) if(isSomeString!T)\r\n{\r\n        lines = unindent(lines);\r\n        return lines;\r\n}\r\n\r\nstring helpInfoHeader(string programName, string copyrightInfo)\r\n{\r\n        return \"\".normalize;\r\n}\r\n}}}\r\n\r\nOnly reducible when compiled in a certain order:\r\n{{{\r\ngdc all.d text.d -o main\r\n}}}\r\n\r\nReverse the order or omit the '-o' and compilation is fine.\r\n\r\n\r\nRegards,\r\nIain","created_on":"2012-06-29T07:00:21.636541+00:00","user":"ibuclaw","updated_on":null,"issue":354,"id":1606632},{"content":"You mean \"omits the contracts\" - not skips the assertions. :~)\r\n\r\nAs per thread discussion, I cannot reproduce this on the trunk builds.","created_on":"2012-04-18T23:47:51.183525+00:00","user":"ibuclaw","updated_on":null,"issue":333,"id":1318202},{"content":"Yes. :-)  For future reference, here's the discussion thread: http:\/\/forum.dlang.org\/thread\/mailman.1698.1334353074.4860.d.gnu@puremagic.com","created_on":"2012-04-19T17:12:31.437386+00:00","user":"WebDrake","updated_on":null,"issue":333,"id":1321482},{"content":"CNR","created_on":"2012-06-27T11:24:47.030204+00:00","user":"ibuclaw","updated_on":null,"issue":333,"id":1598171},{"content":"You can you the D.gnu mailing list for formal discussion.  For ETA - talk to me on skype later if needed (I'll have get a headset ready).  We could discuss any specific items that need action immediately.","created_on":"2012-04-23T15:46:24.297849+00:00","user":"ibuclaw","updated_on":null,"issue":336,"id":1334653},{"content":"2.059 is the current frontend merge in trunk","created_on":"2012-06-27T11:25:23.791268+00:00","user":"ibuclaw","updated_on":null,"issue":336,"id":1598174},{"content":"Trying to narrow down where this was introduced now...(after r758 and before r777, multiple definition of these symbols in r767).","created_on":"2012-02-16T19:32:32.842437+00:00","user":"opticron","updated_on":"2012-02-16T21:48:35.241070+00:00","issue":284,"id":1085304},{"content":"747 seems to be the killing commit for me.","created_on":"2012-02-17T21:12:45.555888+00:00","user":"opticron","updated_on":null,"issue":284,"id":1090251},{"content":"I ended up jumping back to r743 because I needed a working compiler (r758 presented an issue using sockets post-compilation).","created_on":"2012-02-16T22:51:07.515578+00:00","user":"opticron","updated_on":"2012-02-17T17:32:12.176661+00:00","issue":284,"id":1086058},{"content":"Just for clarification (bitbucket doesn't have numbers against commits) - this is the commit that broke it for you?\r\n\r\n<<changeset:8ce24563e42e>>","created_on":"2012-02-18T09:44:16.050262+00:00","user":"ibuclaw","updated_on":null,"issue":284,"id":1091519},{"content":"I ask because it was not until much later I started updating our thunk implementation.\r\n\r\n<<changeset:e060d079e138>>","created_on":"2012-02-18T09:46:24.394941+00:00","user":"ibuclaw","updated_on":null,"issue":284,"id":1091525},{"content":"I'm getting this issue as well.  I'm using the recommended build instructions on the main page (after attempting to use my own GDC build script and failing).  Can't link anything :\/ Two examples of my errors:\n{{{\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.3\/..\/..\/..\/..\/lib32\/libgphobos.a(socketstream.o):(.data+0x13c): undefined reference to `___t.35'\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.3\/..\/..\/..\/..\/lib32\/libgphobos.a(cstream.o):(.data+0x90): undefined reference to `___t.0'\n}}}","created_on":"2012-02-16T15:22:05.652674+00:00","user":"opticron","updated_on":"2012-02-16T15:22:56.855699+00:00","issue":284,"id":1084471},{"content":"I have the same problem extending std.stream.Stream and overriding flush(). I'm using a cross-compiler (Linux64 to Win32) and while I have enabled LTO in the build, I didn't use it for compilation of my program:\r\n{{{\r\nimport std.stream;\r\n\r\nclass Foo : Stream\r\n{\r\n\toverride void flush() {}\r\n}\r\n\r\nvoid main(string[] args) {}\r\n}}}\r\n{{{\r\ni686-mingw32-gdc src\/fp8.d -owindows\/fp8win32.exe -lpsapi\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x50): undefined reference to `____t.0'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x54): undefined reference to `____t.1'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x58): undefined reference to `____t.2'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x5c): undefined reference to `____t.3'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x60): undefined reference to `____t.4'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x64): undefined reference to `____t.5'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x68): undefined reference to `____t.6'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x6c): undefined reference to `____t.7'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x70): undefined reference to `____t.8'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x74): undefined reference to `____t.9'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x78): undefined reference to `____t.10'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x7c): undefined reference to `____t.11'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x80): undefined reference to `____t.12'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x84): undefined reference to `____t.13'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x88): undefined reference to `____t.14'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x8c): undefined reference to `____t.15'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x90): undefined reference to `____t.16'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x94): undefined reference to `____t.17'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x98): undefined reference to `____t.18'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0x9c): undefined reference to `____t.19'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xa0): undefined reference to `____t.20'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xa4): undefined reference to `____t.21'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xa8): undefined reference to `____t.22'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xac): undefined reference to `____t.23'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xb0): undefined reference to `____t.24'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xb4): undefined reference to `____t.25'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xb8): undefined reference to `____t.26'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xbc): undefined reference to `____t.27'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xc0): undefined reference to `____t.28'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xc4): undefined reference to `____t.29'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xc8): undefined reference to `____t.30'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xcc): undefined reference to `____t.31'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xd0): undefined reference to `____t.32'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xd8): undefined reference to `____t.34'\r\n\/tmp\/cckpduRz.o:fp8.d:(.data+0xdc): undefined reference to `____t.35'\r\ncollect2: ld gab 1 als Ende-Status zurück\r\n}}}","created_on":"2012-02-07T08:39:28.701640+00:00","user":null,"updated_on":null,"issue":284,"id":1046308},{"content":"8ce24563e42e is where my code starts breaking post-compilation (socket related).  The actual error messages (stream\/socket related) start showing up in later commits and I haven't tracked that down quite yet.","created_on":"2012-02-20T15:01:32.219518+00:00","user":"opticron","updated_on":null,"issue":284,"id":1099111},{"content":"Here's a reduced test case without LTO: \n{{{\n#!d\nmodule stream;\n\ninterface OutputStream\n{\n    void writeExact(const void* buffer, size_t a);\n    void flush();\n}\n\nclass Stream : OutputStream\n{\n    void writeExact(const void* buffer, size_t a) {}\n    void flush() {}\n}\n}}}\n\n{{{\n#!d\nimport stream;\n\nclass CFile : Stream\n{\n    void flush() { }\n}\n\nvoid main() {}\n}}}\n\nCompile like this: (also happens with -nostdlib and without the main, but then you'll of course have other linker errors as well)\n{{{\ngdc stream.d cstream.d\n\/tmp\/ccHnHq6q.o:(.data+0x50): undefined reference to `___t.0'\ncollect2: ld returned 1 exit status\n}}}","created_on":"2012-03-27T20:12:15.536438+00:00","user":"jpf","updated_on":"2012-03-27T20:16:05.643471+00:00","issue":284,"id":1232747},{"content":"e060d079e138 is the commit that actually breaks compilation.","created_on":"2012-02-21T03:23:17.741317+00:00","user":"opticron","updated_on":null,"issue":284,"id":1101446},{"content":"After some digging, I've discovered why [[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/e060d079e138|e060d079e138]] breaks thunks with interfaces.\n\n#DMD requires any class that inherits from an interface, to output thunks for that interface.  It's irrelevant how far back that inheritance took place.  This is why it's always the second generation class that has the issue.  As the first generation is required to implement all methods.\n#Prior to the mentioned changeset.  GDC would force the generation of thunk functions.  As of now, it relies upon the the GCC backend to output thunk functions.\n#The GCC backend will only generate thunks when a function is generated.  So attempting to generate thunks for external functions fails.\n\nI've looked over thunk generation in the GCC backend and as far as I can tell it only outputs aliases when the function is output as well.  If there is no function to output no thunk will be generated.\n\nedit: clarified some stuff.","created_on":"2012-04-02T02:03:16.647446+00:00","user":"venix1","updated_on":"2012-04-02T02:04:39.772617+00:00","issue":284,"id":1251278},{"content":"Same issue here:\r\n\r\n{{{\r\nandres-macbook-pro:gtk_test aw$ gdc -I\/opt\/local\/include\/d -L\/opt\/local\/lib -lgphobos2 -lgtkd -m64 -O2 test.d\r\nUndefined symbols for architecture x86_64:\r\n  \"____t.0\", referenced from:\r\n      __D3gtk5Label5Label7__ClassZ in libgtkd.a(Label.o)\r\n      __D3gtk6Window6Window7__ClassZ in libgtkd.a(Window.o)\r\n      __D3gtk9Container9Container7__ClassZ in libgtkd.a(Container.o)\r\n      __D3gtk3Bin3Bin7__ClassZ in libgtkd.a(Bin.o)\r\n      __D3gtk4Misc4Misc7__ClassZ in libgtkd.a(Misc.o)\r\n  \"____t.2\", referenced from: ... as above ...\r\n  \"____t.3\", referenced from: ... as above ...\r\n  \"____t.4\", referenced from: ... as above ...\r\n  \"____t.5\", referenced from: ... as above ...\r\n  \"____t.6\", referenced from: ... as above ...\r\n  \"____t.7\", referenced from: ... as above ...\r\n  \"____t.8\", referenced from: ... as above ...\r\n  \"____t.9\", referenced from: ... as above ...\r\n  \"____t.10\", referenced from: ... as above ...\r\n  \"____t.11\", referenced from: ... as above ...\r\n}}}","created_on":"2012-02-26T20:24:26.073411+00:00","user":null,"updated_on":null,"issue":284,"id":1121360},{"content":"I appear to have the same\/similar issue, but without using -flto (at least not explicitly).\n\nMy gdc is configured to provide D1.\n\nI first compiled Tango into libgtango, using bob, no special switches. I then compiled my application, giving gdc all the sources, and -defaultlib=gtango\n\nNow, when my application is linked, I get a bunch of \n{{{\n___t.x\n}}} missing references from a bunch of the object files in libgtango (presumably those used).","created_on":"2012-03-18T20:47:33.743544+00:00","user":"larsivi","updated_on":"2012-03-18T20:48:30.585479+00:00","issue":284,"id":1198349},{"content":"I'm getting dozens of these errors (Undefined reference to ___t.xxx) when trying to build gtkd. Is there a workaround?","created_on":"2012-04-22T22:57:22.921763+00:00","user":null,"updated_on":null,"issue":284,"id":1331326},{"content":"Finally I know which one is the last known working changeset ([[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/00b19ad7e81f|00b19ad7e81f]]). How do you get along with fixing this issue? I couldn't build a working compiler since this happened 3 months ago. You must be using some workaround in the meantime, right?","created_on":"2012-04-19T16:20:19.978723+00:00","user":null,"updated_on":null,"issue":284,"id":1321290},{"content":"I'm having the exact same issue, also trying to compile gtkd under Windows. Was is the last windows binary release without this bug?","created_on":"2012-04-26T05:40:01.786667+00:00","user":null,"updated_on":null,"issue":284,"id":1346688},{"content":"Sorry for the incorrect links, I thought they would create local links to the comments.","created_on":"2012-04-27T23:27:26.839596+00:00","user":null,"updated_on":null,"issue":284,"id":1354859},{"content":"I posted comment #14, try if that reversion works for you.\r\n\r\nIn the mean time i moved on to the GitHub branch gcc-4.x-compat which works with my GCC 4.6.2. The master branch on GitHub is only compatible with the mainline development version (now at 4.8.x or so). With this compatibility branch I can compile GtkD including the options -O3, -ffunction-sections, -fdata-sections (excluding LTO). So try that if GtkD is your only problem.\r\n\r\nIf you get get _t.xxx errors on some sources, that involve what is described in #12, then try the revision given in #14, which is probably the most stable one available at the moment.\r\n\r\n-- Marco <mleise>","created_on":"2012-04-27T23:25:53.735148+00:00","user":null,"updated_on":null,"issue":284,"id":1354855},{"content":"Just tried a few things with gdc git master + gcc svn trunk (see config.log for\nthe options):\n\nThe first code piece (see original post at top)\n\nnow actually compiles (and links) fine with either command:\n\n{{{\ngdc lto01.d\ngdc -O2 -flto lto01.d -o lto01\n}}}\n\nwhile the second code piece\n\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/issue\/284\/lto-undefined-reference-to#comment-1046308\n\ndoes not and gives different errors whether its done with -flto or without, see lto02.log and lto02_flto.log,\n\nthe third code piece\n\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/issue\/284\/lto-undefined-reference-to#comment-1121360\n\ndoes neither with the same error that was given in the comment and another code piece does\nnot compile as well (see lto04.log):\n\n{{{\nimport std.cstream;\n\nvoid main(string[] args)\n{\n    auto input = din.toString();\n}\n}}}\n\nI already tried to revert the commit that broke it by hand (on current master) and that didn't go so well (internal compiler error(s) when trying to compile gdc) and using the compat branch isn't really an option because I need the 2.058 updates (and they aren't in the compat branch afaict), is there any news about this in sight?","created_on":"2012-05-29T12:21:21.635532+00:00","user":"Calrama","updated_on":"2012-05-29T14:33:56.425912+00:00","issue":284,"id":1476963},{"content":"[[https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/a2bbf3d1527bdb48b35a82de18ebf3c16ec24247]]","created_on":"2012-06-04T14:13:30.979690+00:00","user":"ibuclaw","updated_on":"2012-06-04T14:14:13.515919+00:00","issue":284,"id":1504329},{"content":"Thank you for the fix, just compiled latest gdc+gcc and tested with these results:\r\n\r\nThis\r\n{{{\r\ngdc lto0(1\/2\/4).d\r\ngdc -O2 -flto lto0(1\/4).d\r\n}}}\r\nworks, but this still gives undefined references (see lto02.log):\r\n{{{\r\ngdc -O2 -flto lto02.d -o lto02\r\n}}}\r\n\r\nlto02.d:\r\n{{{\r\nimport std.stream;\r\n\r\nclass Foo : Stream\r\n{\r\n        override void flush() {}\r\n}\r\n\r\nvoid main(string[] args) {}\r\n\r\n}}}\r\n\r\nlto02.log:\r\n\r\n{{{\r\ngdc -O2 -flto lto02.d\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x50): undefined reference to `___t.0.2518.2384'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x54): undefined reference to `___t.1.2520.2387'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x58): undefined reference to `___t.2.2522.2393'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x5c): undefined reference to `___t.3.2524.2395'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x60): undefined reference to `___t.4.2526.2397'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x64): undefined reference to `___t.5.2528.2399'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x68): undefined reference to `___t.6.2530.2401'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x6c): undefined reference to `___t.7.2532.2403'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x70): undefined reference to `___t.8.2534.2405'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x74): undefined reference to `___t.9.2536.2407'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x78): undefined reference to `___t.10.2538.2409'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x7c): undefined reference to `___t.11.2540.2411'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x80): undefined reference to `___t.12.2542.2413'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x84): undefined reference to `___t.13.2544.2415'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x88): undefined reference to `___t.14.2546.2418'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x8c): undefined reference to `___t.15.2548.2421'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x90): undefined reference to `___t.16.2550.2424'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x94): undefined reference to `___t.17.2552.2426'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x98): undefined reference to `___t.18.2554.2428'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0x9c): undefined reference to `___t.19.2556.2430'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xa0): undefined reference to `___t.20.2558.2432'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xa4): undefined reference to `___t.21.2560.2434'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xa8): undefined reference to `___t.22.2562.2437'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xac): undefined reference to `___t.23.2564.2442'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xb0): undefined reference to `___t.24.2566.2447'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xb4): undefined reference to `___t.25.2568.2449'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xb8): undefined reference to `___t.26.2570.2451'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xbc): undefined reference to `___t.27.2572.2453'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xc0): undefined reference to `___t.28.2574.2455'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xc4): undefined reference to `___t.29.2576.2457'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xc8): undefined reference to `___t.30.2578.2471'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xcc): undefined reference to `___t.31.2580.2475'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xd0): undefined reference to `___t.32.2582.2477'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xd8): undefined reference to `___t.34.2584.2479'\r\n\/tmp\/cchTaPiq.ltrans0.ltrans.o:(.data+0xdc): undefined reference to `___t.35.2586.2481'\r\ncollect2: error: ld returned 1 exit status\r\n}}}","created_on":"2012-06-04T18:44:39.527749+00:00","user":"Calrama","updated_on":null,"issue":284,"id":1505563},{"content":"Going to undo the removal\/additions of this code:\r\n\r\nhttps:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/e060d079e138#chg_d\/d-objfile.cc_oldline780\r\n\r\nAnd update it with what is being done here:\r\n\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/pull\/15\/files#L1R768\r\n\r\nThis fix will resolve the issue.","created_on":"2012-05-30T07:47:33.287782+00:00","user":"ibuclaw","updated_on":null,"issue":284,"id":1481244},{"content":"That's great, thanks!\n\nJust one thing: Could you try whether the code in the zip compiles+links with the new version (make)\nbefore marking this issue as resolved? The same code compiles+links fine with dmd (make dmd), but\nnot with gdc (error message below); since it's also about undefined references, but different ones I'm not sure whether this is even really related to this issue. Sorry about the amount of src, but I wasn't able to remove\nmore files while still keeping the error (e.g. semitwist without goldie alone compile+links fine, but if goldie+semitwist together, I get the error in the semitwist file...).\n\n{{{\ngdc  -omain main.d  semitwist\/refbox.d semitwist\/treeout.d semitwist\/cmdlineparser.d  semitwist\/util\/array.d semitwist\/util\/text.d semitwist\/util\/container.d semitwist\/util\/io.d semitwist\/util\/all.d semitwist\/util\/os.d semitwist\/util\/mixins.d semitwist\/util\/ctfe.d semitwist\/util\/process.d semitwist\/util\/reflect.d semitwist\/util\/ver.d semitwist\/util\/unittests.d semitwist\/util\/functional.d  goldie\/base.d goldie\/lexer.d goldie\/exception.d goldie\/all.d goldie\/lang.d goldie\/parser.d goldie\/file.d goldie\/token.d goldie\/langHelper.d goldie\/ver.d  goldie\/grmc\/ast.d goldie\/grmc\/fsm.d goldie\/grmc\/gendfa.d goldie\/grmc\/genlalr.d goldie\/grmc\/process.d    goldie\/langs\/grm\/lexer.d goldie\/langs\/grm\/all.d goldie\/langs\/grm\/lang.d goldie\/langs\/grm\/parser.d goldie\/langs\/grm\/token.d goldie\/langs\/grm\/langHelper.d tools\/util.d\n\/tmp\/ccCA7LrV.o: In function `_D9semitwist4util4text22__T12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya119__T6reduceS104_D9se\nmitwist4util4text22__T12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya17shorterAndNonNullMFAyaAyaZ\nAyaZ16__T6reduceTAAyaZ6reduceMFAAyaZAya':\nmain.d:(.text+0x7e00): undefined reference to `_D9semitwist4util4text22__T12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya119__T6reduceS104_D9se\nmitwist4util4text22__T12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya17shorterAndNonNullMFAyaAyaZ\nAyaZ20__T6reduceTAyaTAAyaZ6reduceMFAyaAAyaZAya'\ncollect2: error: ld returned 1 exit status\n}}}\n\nPS: I don't own Goldie or Semitwist\n","created_on":"2012-05-31T07:16:35.022013+00:00","user":"Calrama","updated_on":"2012-05-31T07:20:31.406586+00:00","issue":284,"id":1486313},{"content":"output.h is due to be poisoned from frontends to use. So raising priority of the issue as we will no longer be able to call output_mi_thunk for much longer...","created_on":"2012-06-26T02:35:02.632305+00:00","user":"ibuclaw","updated_on":null,"issue":284,"id":1591497},{"content":"https:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/55277e4ff35d27757481cc4bc639c0cff2b46196\r\n\r\nCalrama, I can't reproduce your report on the trunk I'm using.","created_on":"2012-06-26T03:49:56.713114+00:00","user":"ibuclaw","updated_on":null,"issue":284,"id":1591634},{"content":"Just compiled and tested with latest gdc git and gcc svn. I can confirm that the reported lto errors are gone.\n\nSadly the undefinered reference error in undref.zip isn't gone and thus it is not the same bug. I'll open another issue for it.","created_on":"2012-06-26T06:48:44.452188+00:00","user":"Calrama","updated_on":"2012-06-26T06:49:11.795508+00:00","issue":284,"id":1591991},{"content":"fixed in trunk.","created_on":"2012-06-25T23:24:40.137927+00:00","user":"ibuclaw","updated_on":null,"issue":353,"id":1591044},{"content":null,"created_on":"2012-06-25T20:50:12.360603+00:00","user":"Calrama","updated_on":null,"issue":353,"id":1590558},{"content":"The function is declared inside libmingwex.a.  Due to the use of export in libphobos\/libdruntime\/core\/sys\/windows\/windows.d the import symbol is mangled and unable to locate the correct function.\r\n\r\nlibmingwex.a:lib64_libmingwex_a-ilockinc.o:0000000000000000 T _InterlockedIncrement\r\n\r\nThe other issue with IID_IUnknown is a common issue when libgphobos2.a depends on external libraries.  The symbol is located in libuuid.a, but due to GCC having strict symbol resolution any user supplied library is not used to resolve symbols for libgphobos2.a.\r\n\r\nlibuuid.a:lib64_libuuid_a-uuid.o:0000000000000000 R IID_IUnknown\r\n\r\nThe way to resolve this would be -lgphobos2 -luuid.  I'll fix the use of libuuid.a in the next build so that the workaround won't be necessary.\r\n\r\n","created_on":"2012-06-27T00:16:00.007911+00:00","user":"venix1","updated_on":null,"issue":355,"id":1596291},{"content":"(Reply via de...@mispah.net):\n\nThanks Daniel, I was finally able to get it to link.\n","created_on":"2012-06-28T14:25:05.956016+00:00","user":"dev10","updated_on":null,"issue":355,"id":1603647},{"content":"Fixed in\r\n[[https:\/\/github.com\/venix1\/GDC\/commit\/47a94135658c15b89f241c9d0e69f8f153ee102d|47a9413565]]","created_on":"2012-06-29T00:10:51.915588+00:00","user":"venix1","updated_on":null,"issue":355,"id":1605848},{"content":null,"created_on":"2012-02-10T21:37:23.127529+00:00","user":"alexrp","updated_on":null,"issue":312,"id":1062284},{"content":"OK, thanks!","created_on":"2012-07-01T11:14:37.342942+00:00","user":"ibuclaw","updated_on":null,"issue":312,"id":1612844},{"content":"Assigning to self to look into \/ hopefully fix tonight.","created_on":"2012-06-27T11:37:28.127905+00:00","user":"ibuclaw","updated_on":null,"issue":312,"id":1598226},{"content":"This is the same issue I reported on GitHub. It is fixed.","created_on":"2012-06-27T12:05:09.243896+00:00","user":"alexrp","updated_on":null,"issue":312,"id":1598329},{"content":"Got the following:\r\n\r\n{{{\r\n#!d\r\nint foo()\r\n{\r\n\tasm\r\n\t{\r\n\t\tnaked;\r\n\t\tmov RAX, 1;\r\n\t}\r\n}\r\n\r\nvoid main()\r\n{\r\n\tint i = foo();\r\n}\r\n}}}\r\n\r\n{{{\r\n$ dmd -release -O -inline -c test.d\r\n$ objdump -d -M intel-mnemonic test.o\r\n0000000000000000 <_D4test3fooFZi>:\r\n   0:\t48 b8 01 00 00 00 00 \tmovabs rax,0x1\r\n   7:\t00 00 00 \r\n   a:\t90                   \tnop\r\n   b:\t90                   \tnop\r\n\r\n0000000000000000 <_Dmain>:\r\n   0:\t55                   \tpush   rbp\r\n   1:\t48 8b ec             \tmov    rbp,rsp\r\n   4:\te8 00 00 00 00       \tcall   9 <_Dmain+0x9>\r\n   9:\t31 c0                \txor    eax,eax\r\n   b:\t5d                   \tpop    rbp\r\n   c:\tc3                   \tret    \r\n}}}\r\n{{{\r\n$ gdmd -release -O -inline -c test.d\r\n$ objdump -d -M intel-mnemonic test.o\r\n0000000000000000 <_D4test3fooFZi>:\r\n   0:\t48 c7 c0 01 00 00 00 \tmov    rax,0x1\r\n   7:\t66 0f 1f 84 00 00 00 \tnop    WORD PTR [rax+rax*1+0x0]\r\n   e:\t00 00 \r\n\r\n0000000000000010 <_Dmain>:\r\n  10:\te8 00 00 00 00       \tcall   15 <_Dmain+0x5>\r\n  15:\t31 c0                \txor    eax,eax\r\n  17:\tc3                   \tret    \r\n}}}\r\n\r\n# gdc is not able to inline the function. I really hope we can circumvent this severe dmd restriction with gdc someday.\r\n# it also isn't able to get rid of foo (i isn't used). Marking foo as private pure doesn't change the situation.\r\n# What's that crap at the end of foo? obj2asm's output is even more weird:\r\n\r\n{{{\r\n_D4test3fooFZi:\r\n\t\tmov\tRAX,1\r\n\t\t0f1f\r\n\t\ttest\t[RAX],AL\r\n\t\tadd\t[RAX],AL\r\n\t\tadd\t[RAX],AL\r\n_Dmain:\r\n\t\tcall\t  _D4test3fooFZi@PC32\r\n\t\txor\tEAX,EAX\r\n\t\tret\r\n\r\n}}}","created_on":"2012-01-05T18:24:51.066518+00:00","user":"trass3r","updated_on":null,"issue":181,"id":929968},{"content":"1.  For now, inline asm means we can't inline, stack wouldn't be what was expected and labels emitted aren't unique.  The only improvement gdc has to offer is that if a function consists entirely of extended asm, we could allow inlining there.\r\n\r\n2. The compiler shouldn't remove functions from object file for the sake that all uses of it are inlined (this could be a library you are building here).\r\n\r\n3. Maybe a bit of the epilogue seeped through the RTL stage of compilation.  Naked will be re-written in an implementation sense soon anyway, so it becomes a GCC function attribute for x86.","created_on":"2012-01-05T20:59:23.402361+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":930577},{"content":"# Ok, I just thought it might be possible somewhere down the road of gcc's representations.\r\n# Well if it's private there shouldn't be any uses outside of the module.\r\n\r\nBut there's another point I forgot, the call is still made in _Dmain even if foo's pure. I think this is a frontend issue though. Throwing away the result of a pure function doesn't make any sense.","created_on":"2012-01-05T21:57:29.969963+00:00","user":"trass3r","updated_on":null,"issue":181,"id":930739},{"content":"> 3. What's that crap at the end of foo? obj2asm's output is even more weird: \r\n\r\nWhen compiled with -S rather than see, the function output is:\r\n\r\n{{{\r\n_D4math3fooFZi:\r\n        .cfi_startproc\r\n        movq $1, %rax\r\n        .cfi_endproc\r\n}}}\r\n\r\nSo that \"crap\" is being added by the assembler, not the compiler. Regards.","created_on":"2012-01-10T21:35:04.227501+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":947436},{"content":"> 1. gdc is not able to inline the function. I really hope we can circumvent this severe dmd restriction with gdc someday. \r\n\r\nActually, I've just checked. Extended Asm statements do not mark the function as having inline asm in, so you *can* inline functions with GCC asm, just not D IASM.","created_on":"2012-01-10T22:57:02.248125+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":947675},{"content":"Here is one example of a fault in the 64 bit IASM.\r\nIf you write a D function which contains only inline assembler instructions (no D code statements) the stack frame is not set up properly.\r\n\r\nE.g.:\r\n\r\n{{{\r\nvoid myfunc(void* a, int b) {\r\n\tversion(D_InlineAsm_X86_64) asm {\r\n\t\tpush\tRSI;\r\n\t\tmov\t\tRSI,a;\r\n\t\t\/\/ ... other code\r\n\t\tpop\t\tRSI;\r\n\t}\r\n}\r\n}}}\r\n\r\nGenerates:\r\n{{{\r\n\r\n * Dump of assembler code for function myfunc:\r\n   0x00000000004022c4 <+0>:\tpush   %rbp\r\n   0x00000000004022c5 <+1>:\tmov    %rsp,%rbp\r\n   0x00000000004022c8 <+4>:\tmov    %rdi,-0x8(%rbp)\r\n   0x00000000004022cc <+8>:\tmov    %esi,-0xc(%rbp)\r\n=> 0x00000000004022cf <+11>:\tpush   %rsi\r\n   0x00000000004022d0 <+12>:\tmov    -0x8(%rbp),%rsi\r\n   0x00000000004022d4 <+16>:\tpop    %rsi\r\n   0x00000000004022d5 <+17>:\tleaveq \r\n   0x00000000004022d6 <+18>:\tretq   \r\n}}}\r\n\r\nThe value at -0x8(%rbp) is overwritten because the stack pointer was not moved down in the function prolog before the arguments were saved in -0x8(%rbp) and -0xc(%rbp). Inline assembler code should always be able to push and pop values and the compiler should put in appropriate stack frame setup code.","created_on":"2011-10-15T19:51:10.685957+00:00","user":"GrahamC","updated_on":null,"issue":181,"id":716338},{"content":"Could be similar case to the other bug you raised.  If parameters are saved to temporaries in the codegen, that might force the backend to emit the missing set-up code from the prologue.","created_on":"2011-10-17T10:59:32.967688+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":718731},{"content":"<<changeset 651:8789c97f84ac>>","created_on":"2011-10-17T20:35:42.979174+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":720005},{"content":"IASM is no more in GDC.","created_on":"2012-07-11T07:49:59.890341+00:00","user":"ibuclaw","updated_on":null,"issue":181,"id":1652175},{"content":"Thanks for responding so quickly.\r\n\r\nMy intention in creating DLLs in D is precisely to extend the language because there are very few libraries (and number of users), which makes me \"upset\" because the power of language, and the number of possibilities it offers. I think that's the biggest barrier that prevents new developers to use.\r\n\r\nI have several projects in C++ that would like to porting them to the D language, as my 3D Game Engine (which is divided into modules, each module is a DLL \/ SO), my ToolKit (based on the WinAPI and Xlib), among other software and libraries.\r\n\r\nAnother point to note about the lack of support for Shared Libraries in D, is that the executables are extremely large. It would be very advantageous to create a library runtime for the language, to prevent huge programs.\r\n\r\nHave not given up the D language (as well as the GDC), and eagerly await the day that I can develop with \"complete freedom\" in this environment ...","created_on":"2012-06-25T16:33:06.280626+00:00","user":"arabasso","updated_on":null,"issue":352,"id":1589297},{"content":"You can use the the following when linking your Dll to output all symbols.\r\n\r\n-Wl,--export-all-symbols\r\n\r\nThis may work for you until I'm able to release an update that exports the correct symbols.\r\n\r\nA side effect of this is that you can only link against the Dll due to duplicate symbols if you generate the .a file.","created_on":"2012-06-25T22:58:07.643769+00:00","user":"venix1","updated_on":null,"issue":352,"id":1590976},{"content":"Thanks again, now compiled without problems.","created_on":"2012-06-26T01:26:09.622441+00:00","user":"arabasso","updated_on":null,"issue":352,"id":1591354},{"content":null,"created_on":"2012-06-25T11:42:07.783746+00:00","user":"arabasso","updated_on":null,"issue":352,"id":1587855},{"content":"Attempting to recreate the issue, I only receive the following error.\r\n\r\n{{{\r\nC:\\MinGW\\msys\\1.0\\home\\venix\\mingw-gdc.git\\issues\\352\/main.d:9: undefined reference to `_D7testdll4Test7__ClassZ'\r\n}}}\r\n\r\nThe ModuleInfoZ issue was discovered and corrected back in January due to how DMD exports certain symbols in comparison to GDC.  Likely ClassZ falls under this issue as well.  Based on that, there will probably be an issue with interfaces, struct, and any other Z symbol that requires linking with a DLL.\r\n\r\nI'm going to take another look at how this is done in GDC to determine if there's a fix that can hit all issues at once, or if it becomes necessary to declare Z symbol as export.\r\n\r\nI know that Dll's and classes can work with MinGW\/GDC.  However, I don't think anybody is actively using them in their projects and nobody is working on improving that area.\r\n\r\nThe biggest issue I discovered was related to exceptions not being handled properly across Dll boundaries which is also an issue with GCC C++ due to how Dll's load copies of the core types.","created_on":"2012-06-25T15:25:32.870326+00:00","user":"venix1","updated_on":null,"issue":352,"id":1588912},{"content":null,"created_on":"2012-06-27T00:16:30.928944+00:00","user":"venix1","updated_on":null,"issue":352,"id":1596292},{"content":"Fixed in [[https:\/\/github.com\/venix1\/GDC\/commit\/4968ed02226d42f27544a8679388d9b1da6fe060|4968ed0222]].\r\n\r\nJust needed to test if the class was marked export and apply the appropriate attribute.\r\n","created_on":"2012-07-07T16:45:21.471892+00:00","user":"venix1","updated_on":null,"issue":352,"id":1638256},{"content":"Can you give a firm example of where this happens?  ie: happens when building X.","created_on":"2011-12-17T13:01:02.442238+00:00","user":"ibuclaw","updated_on":null,"issue":246,"id":882004},{"content":"You can reproduce by attempting to build fcc (http:\/\/github.com\/FeepingCreature\/fcc , D1, phobos+tools) using incremental compilation (.\/build.sh). Flood of errors for me. Seems to be template-related.","created_on":"2011-12-17T14:40:34.720725+00:00","user":null,"updated_on":null,"issue":246,"id":882110},{"content":"First stab at fixing issue: <<changeset 715:bd1f89846e93>>\r\n\r\nFixes above minimised testcase.","created_on":"2011-12-24T10:49:03.361113+00:00","user":"ibuclaw","updated_on":null,"issue":246,"id":902927},{"content":"This is as far as I got my original test case reduced, but I'll need Feep to confirm that this is the same issue, as the GDC on the VM I was using is fairly old. What I'm seeing seems to involve templates used in circularly dependent modules.\n\nThe error looks like this:\n{{{\n$ gdc *.d\n`.text._D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv' referenced in section `.text' of \/tmp\/cc7UHLrs.o: defined in discarded section `.text._D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv[_D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv]' of \/tmp\/cc7UHLrs.o\n}}}\n\nThis might also be useful:\n{{{\n[wiley@Reno-VM gdc2-hg]$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nTarget: x86_64-unknown-linux-gnu\nConfigured with: ..\/gcc-4.5.1-build\/configure --prefix=\/usr --enable-languages=d --enable-threads --enable-__cxa_atexit --disable-multilib --libdir=\/usr\/lib --libexecdir=\/usr\/lib --disable-shared --disable-bootstrap\nThread model: posix\ngcc version 4.5.1 20100731 (gdc 0.30, using dmd 2.055) (GCC) \n[wiley@Reno-VM gdc2-hg]$ gcc -v\nUsing built-in specs.\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=\/usr\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.2\/lto-wrapper\nTarget: x86_64-unknown-linux-gnu\nConfigured with: \/build\/src\/gcc-4.6.2\/configure --prefix=\/usr --libdir=\/usr\/lib --libexecdir=\/usr\/lib --mandir=\/usr\/share\/man --infodir=\/usr\/share\/info --with-bugurl=https:\/\/bugs.archlinux.org\/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ --enable-shared --enable-threads=posix --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --enable-gnu-unique-object --enable-linker-build-id --with-ppl --enable-cloog-backend=isl --enable-lto --enable-gold --enable-ld=default --enable-plugin --with-plugin-ld=ld.gold --disable-multilib --disable-libssp --disable-libstdcxx-pch --enable-checking=release\nThread model: posix\ngcc version 4.6.2 (GCC) \n[wiley@Reno-VM gdc2-hg]$ ld -v\nGNU ld (GNU Binutils) 2.21.1.20110627\n}}}\n\nI'll try to get a more recent build that still shows this issue.","created_on":"2011-12-17T20:59:28.460485+00:00","user":"debio","updated_on":"2011-12-17T21:02:58.279644+00:00","issue":246,"id":882785},{"content":"The only special handling templates get are being marked decl_one_only \/ weak \/ comdat. The only thing I can think to start looking for is places were linker may discard the comdat decl.","created_on":"2011-12-17T21:38:14.873589+00:00","user":"ibuclaw","updated_on":null,"issue":246,"id":882876},{"content":"This bug is reproducible on the current trunk:\r\n{{{\r\n[wiley@Reno-VM src]$ gdc *.d\r\n`.text._D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv' referenced in section `.text' of \/tmp\/cc2hTRzV.o: defined in discarded section `.text._D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv[_D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv]' of \/tmp\/cc2hTRzV.o\r\n[wiley@Reno-VM src]$ gdc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gdc\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/gcc-4.5.3-build\/configure --prefix=\/usr --enable-languages=d --enable-threads --enable-__cxa_atexit --disable-multilib --libdir=\/usr\/lib --libexecdir=\/usr\/lib --disable-shared --disable-bootstrap\r\nThread model: posix\r\ngcc version 4.5.3 20110428 (gdc 0.30, using dmd 2.057) (GCC) \r\n}}}","created_on":"2011-12-17T21:45:09.797462+00:00","user":"debio","updated_on":null,"issue":246,"id":882879},{"content":"Breaks MinGW template generation.  Same issue as #187 involving MAKE_DECL_ONE_ONLY.  MinGW needs to set a comdat group for make_decl_one_only to have any effect.\n\nAlso reproduced it using GCC-4.6.1.  Adding -m32 didn't make a difference.\n\nReference to this issue can be found [[http:\/\/sourceware.org\/bugzilla\/show_bug.cgi?id=13252|here]].  Turns out it is a compiler issue and is related to comdat.\n\n{{{\nobjdump -Sr mod1.o\n\n# This is the outside reference to the comdat section.\n0000000000000000 <___t.0.1771>:\n   0:\t48 83 ef 10          \tsub    $0x10,%rdi\n   4:\te9 00 00 00 00       \tjmpq   9 <_D4mod117getPlayersInChunkFZC4mod214__T7HashSetTiZ7HashSet>\n\t\t\t5: R_X86_64_PC32\t.text._D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv+0xfffffffffffffffc\n...\n\n# mod1.s - Only relevant sections will be pasted.\n___t.0.1771:\n.LFB4:\n\t.cfi_startproc\n\tsubq\t$16, %rdi\n\tjmp\t.LTHUNK0\n\t.cfi_endproc\n\n.LFE5:\n\t.size\t_D4mod19__modinitFZv, .-_D4mod19__modinitFZv\n\t.section\t.ctors,\"aw\",@progbits\n\t.align 8\n\t.quad\t_D4mod19__modinitFZv\n\t.set\t.LTHUNK0,_D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv\n\t.ident\t\"GCC: (GNU) 4.6.1 20110627 (gdc 0.30, using dmd 2.057)\"\n\t.section\t.note.GNU-stack,\"\",@progbits\n}}}\n\nUsing .set in this manner doesn't save the comdat section from being discarded. However {{{jmp\t_D4mod221__T13ArrayIteratorTiZ13ArrayIterator7doStuffMFZv}}} prevents discarding and allows successful linking.\n\n","created_on":"2011-12-28T23:22:53.325175+00:00","user":"venix1","updated_on":"2011-12-28T23:23:32.436676+00:00","issue":246,"id":912046},{"content":"I have also encountered this issue. Thanks for the hint; I'll use gcc 4.6.","created_on":"2011-12-17T02:48:50.698488+00:00","user":null,"updated_on":null,"issue":246,"id":881450},{"content":"Another small test case related to this bug:\r\n\r\n{{{\r\ninterface InputStream {\r\n  void available();\r\n}\r\nclass Stream : InputStream  {\r\n  void available() { }\r\n}\r\n\r\nclass TArrayStream(Buffer): Stream {\r\n  this(Buffer buf) {}\r\n  void available () { }\r\n}\r\n\r\nclass MemoryStream: TArrayStream!(ubyte[]) {\r\n  this(ubyte[] buf) { super (buf); }\r\n}\r\n}}}\r\n\r\nReverting the commit above causes:\r\n\r\nerror: TArrayStream!(ubyte[]).TArrayStream.available causes a section type conflict","created_on":"2012-01-17T23:31:59.351168+00:00","user":"ibuclaw","updated_on":null,"issue":246,"id":972570},{"content":"Marking as resolved as version 4.5.x and 4.6.x are no longer supported and original reporter said issue only occurred for 4.5.x.","created_on":"2012-07-11T09:39:57.717569+00:00","user":"ibuclaw","updated_on":null,"issue":246,"id":1652565},{"content":"I think zlib is included in GCC.  The other two are special cases and if it's required by D's std, I'm willing to look at including them.","created_on":"2012-04-07T02:51:18.686021+00:00","user":"venix1","updated_on":null,"issue":331,"id":1273668},{"content":"I can't find the zlib library anywhere in the MinGW64\/GCC installation the instructions tell me to use (http:\/\/tdm-gcc.tdragon.net\/)\r\nThey only link to the source distribution.","created_on":"2012-04-07T09:08:57.631844+00:00","user":"TurkeyMan","updated_on":null,"issue":331,"id":1274379},{"content":"New MinGW binary release has been uploaded, marking as resolved until you are able to test to confirm otherwise.","created_on":"2012-07-11T09:45:51.170909+00:00","user":"ibuclaw","updated_on":null,"issue":331,"id":1652595},{"content":"Biggest issue is still the phobos one though.\r\nTried again to compile a Hello World with -flto (phobos been built with -flto too):\r\n\r\nStill all those warnings about not matching original declaration and now it ends with\r\n{{{\r\nlto1: internal compiler error: in ipcp_iterate_stage, at ipa-cp.c:891\r\n}}}","created_on":"2011-12-07T19:52:55.307966+00:00","user":"trass3r","updated_on":null,"issue":224,"id":849310},{"content":"The ICE also happens when trying to compile phobos2 with -flto.\r\nbtw, is configure in d\/phobos2 necessary? I modified configure.in for LTO and a new configure was generated in libphobos.","created_on":"2011-08-09T18:54:29.895668+00:00","user":"trass3r","updated_on":null,"issue":224,"id":595603},{"content":"Yes configure is necessary (not everyone has autoconf\/automake installed on their workstation - and you don't *require* them to build gdc).  Will try building with -flto and see where I get - though forewarning, LTO is not wondrously supported by many of the GCC frontends (I think just C\/C++).","created_on":"2011-08-09T20:40:18.616374+00:00","user":"ibuclaw","updated_on":null,"issue":224,"id":595877},{"content":"I think I read the Ada frontend doesn't support it, don't know about other non-C ones.\r\n\r\nNote that I use 4.6.1 though, reportedly LTO is crap in 4.5.","created_on":"2011-08-09T21:26:53.095323+00:00","user":"trass3r","updated_on":null,"issue":224,"id":595939},{"content":"Any updates for this one? :)","created_on":"2011-09-07T21:02:41.789050+00:00","user":null,"updated_on":null,"issue":224,"id":641010},{"content":"btw, libphobos fails with the following:\r\n{{{\r\ngdc\/gcc-4.6.1\/objdir\/.\/gcc\/gdc -B\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/objdir\/.\/gcc\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/bin\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/include -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/sys-include -m32 -o rt\/fpmath.o -Wall -g -frelease -O2 -flto -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/rt\/fpmath.d\r\n..\/..\/..\/..\/libphobos\/rt\/fpmath.d:1:0: internal compiler error: in write_symbol, at lto-streamer-out.c:2457\r\n}}}","created_on":"2011-09-27T23:36:38.721874+00:00","user":"trass3r","updated_on":null,"issue":224,"id":674314},{"content":"<<changeset 659:bf9d0ac53e9d>>\r\n\r\nThere's still something really hairy going on with LTO, but should start working now.","created_on":"2011-10-22T19:23:52.075225+00:00","user":"ibuclaw","updated_on":null,"issue":224,"id":731410},{"content":"Well phobos compiles with -flto now, but when I try to compile a hello world afterwards it fails.\r\nbtw, the path shown (coding\/gdc\/gcc-4.6.1...) is the directory where I built gdc and \/opt\/gdc is the install dir.\r\n{{{\r\n$ \/opt\/gdc\/bin\/gdc -flto test.d \r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:91:0: warning: type of '_D13TypeInfo_Enum7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:333:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:322:0: warning: type of '_D9Exception7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1327:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:304:0: warning: type of '_D6object9Throwable9TraceInfo11__InterfaceZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1227:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:301:0: warning: type of '_D6object9Throwable7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1224:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:112:0: warning: type of '_D25TypeInfo_AssociativeArray7__ClassZ' does not match original declaration [enabled by default]\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:112:0: warning: type of '_D25TypeInfo_AssociativeArray7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:589:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:32:0: warning: type of '_D6Object7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:54:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:101:0: warning: type of '_D14TypeInfo_Array7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:388:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:106:0: warning: type of '_D20TypeInfo_StaticArray7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:472:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:165:0: warning: type of '_D15TypeInfo_Struct7__ClassZ' does not match original declaration [enabled by default]\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:165:0: warning: type of '_D15TypeInfo_Struct7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:899:0: note: previously declared here\r\nlto1: warning: type of '_Dmodule_ref' does not match original declaration [enabled by default]\r\n......\r\nlto1: warning: type of '_Dmodule_ref' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1777:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:329:0: warning: type of '_D6object5Error7__ClassZ' does not match original declaration [enabled by default]\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:329:0: warning: type of '_D6object5Error7__ClassZ' does not match original declaration [enabled by default]\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:329:0: warning: type of '_D6object5Error7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1369:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:40:0: warning: type of '_D6Object7Monitor11__InterfaceZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:111:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:205:0: warning: type of '_D15TypeInfo_Shared7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1158:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:200:0: warning: type of '_D18TypeInfo_Invariant7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1150:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:84:0: warning: type of '_D16TypeInfo_Typedef7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:299:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:195:0: warning: type of '_D14TypeInfo_Const7__ClassZ' does not match original declaration [enabled by default]\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:195:0: warning: type of '_D14TypeInfo_Const7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:1107:0: note: previously declared here\r\n\/home\/trass3r\/coding\/gdc\/gcc-4.6.1\/libphobos\/object.di:67:0: warning: type of '_D8TypeInfo7__ClassZ' does not match original declaration [enabled by default]\r\n..\/..\/..\/libphobos\/object_.d:214:0: note: previously declared here\r\nIn file included from <built-in>:51:0,\r\n                 from :204:\r\n..\/..\/..\/libphobos\/core\/thread.d: In function 'core.thread.thread_suspendHandler':\r\n..\/..\/..\/libphobos\/core\/thread.d:622:0: error: bp cannot be used in asm here\r\nlto-wrapper: \/opt\/gdc\/bin\/gdc returned 1 exit status\r\n\/usr\/bin\/ld: lto-wrapper failed\r\ncollect2: ld returned 1 exit status\r\n}}}","created_on":"2011-10-30T20:28:56.422873+00:00","user":"trass3r","updated_on":null,"issue":224,"id":748852},{"content":"I made another test by compiling gtkD with -flto.\r\n{{{\r\n$ gdmd -flto demos\/gtkD\/TestWindow\/TestImage.o demos\/gtkD\/TestWindow\/TestScales.o demos\/gtkD\/TestWindow\/TestWindow.o demos\/gtkD\/TestWindow\/TestTreeView1.o demos\/gtkD\/TestWindow\/app.o demos\/gtkD\/TestWindow\/TestEntries.o demos\/gtkD\/TestWindow\/TestTreeView.o demos\/gtkD\/TestWindow\/TTextView.o demos\/gtkD\/TestWindow\/TestStock.o demos\/gtkD\/TestWindow\/TestAspectFrame.o demos\/gtkD\/TestWindow\/TestThemes.o demos\/gtkD\/TestWindow\/TEditableCells.o demos\/gtkD\/TestWindow\/TestDrawingArea.o demos\/gtkD\/TestWindow\/TestIdle.o demos\/gtkD\/TestWindow\/TestText.o  -ofTestWindow -L-ldl -m64 -L-L. -L-lgtkd\r\n\/opt\/gdc\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.1\/..\/..\/..\/..\/lib64\/libgphobos2.a: could not read symbols: Bad value\r\n}}}\r\nNot sure why it complains about libphobos though. It was built without -flto this time.","created_on":"2011-10-31T02:19:05.436377+00:00","user":"trass3r","updated_on":null,"issue":224,"id":749264},{"content":"Tried building phobos with -flto under latest GDC trunk using 4.8.x - unable to reproduce LTO error.","created_on":"2012-07-11T10:13:14.798148+00:00","user":"ibuclaw","updated_on":"2012-07-11T10:13:27.905890+00:00","issue":224,"id":1652706},{"content":"Ok I tested [[https:\/\/bitbucket.org\/trass3r\/cl4d\/wiki\/Home|cl4d]] (with -m32 due to <<issue 254>>) and LTO finally worked for some code, yay :)\r\n\r\nThere are some things to be noted though. The library contains a set of structs that provide automatic reference counting. So e.g. the destructor merely contains a release() call which in turn calls some extern(C) release() and does some error handling with exceptions.\r\n* Without the exceptions gdc manages to inline everything and the destructor calls are directly turned into the C release calls at the correct places in _Dmain. Yet some destructor functions (with inlined D release call) still exist and are referenced in some obscure code section.\r\n* With these exceptions release() seems to be too big to be inlined, but the destructor isn't, so it's inlined. Some destructors again exist as described above.\r\n* Then there's another destructor whose release() method is empty. The codegen resulted in 'push ebp; mov ebp, esp; pop ebp', so it does nothing and doesn't seem to be referenced anywhere either, yet it's in the executable.","created_on":"2011-11-18T19:50:54.082288+00:00","user":"trass3r","updated_on":null,"issue":224,"id":797740},{"content":"Edit: Never mind. This is the correct code and it works fine. With LTO, everything is inlined into main, then it even inlines the write call, fantastic! Nothing is left of ~this nor release().\n\n{{{\n#!d\nimport std.stdio;\n\nstruct F\n{\n\t~this()\n\t{\n\t\trelease();\n\t}\n\n\tvoid release()\n\t{\n\t\twrite(\"release()\\n\");\n\t}\n}\n\nvoid main()\n{\n\tF f;\n}\n}}}","created_on":"2011-11-18T20:30:39.112485+00:00","user":"trass3r","updated_on":"2011-11-18T20:53:03.227460+00:00","issue":224,"id":797822},{"content":"Another example from algorithm:\r\n\r\n{{{\r\n#!d\r\ntemplate filter(alias pred)\r\n{\r\n    auto filter(Range)(Range rs)\r\n    {\r\n        struct Result\r\n        {\r\n            Range _input;\r\n\r\n            this(Range r)\r\n            {\r\n                while (_input.length && !pred(_input[0]))\r\n                {}\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid main()\r\n{\r\n    int[] a = [];\r\n    int x = 10;\r\n    int overX(int a) { return a > x; }\r\n    typeof(filter!overX(a)) getFilter()\r\n    {\r\n    }\r\n}\r\n}}}\r\n{{{\r\n$ gdc -c algorithm.d\r\nalgorithm.d:1:0: error: missing callgraph edge for call stmt:\r\nD.1793 = algorithm.main.overX (D.1784, D.1781);\r\n\r\nalgorithm.main.filter!(overX).filter!(int[]).filter.Result.this\/3(1) @0x7ffe0586cb00 (asm: _D9algorithm4mainFZv45__T6filterS31_D9algorithm4mainFZv5overXMFiZiZ14__T6filterTAiZ6filterMFNaNbAiZv6Result6__ctorMFAiZS9algorithm4mainFZv45__T6filterS31_D9algorithm4mainFZv5overXMFiZiZ14__T6filterTAiZ6filterM6Result) analyzed needed reachable body finalized\r\n  called by: \r\n  calls: _d_array_bounds\/6 (1.00 per call) (can throw external) \r\n  References: \r\n  Refering this function: \r\nalgorithm.d:1:0: internal compiler error: verify_cgraph_node failed\r\n}}}","created_on":"2012-02-28T16:06:29.581396+00:00","user":"trass3r","updated_on":null,"issue":315,"id":1128849},{"content":null,"created_on":"2012-02-21T21:19:22.151246+00:00","user":"jpf","updated_on":null,"issue":315,"id":1104591},{"content":"Original testcase now produces a frontend error.   And unable to reproduce second test case on latest GDC trunk.  Marking as resolved unless can be proved still an issue otherwise.","created_on":"2012-07-11T10:06:58.873303+00:00","user":"ibuclaw","updated_on":null,"issue":315,"id":1652685},{"content":"Note, bug in the frontend (dmd 2.057 ices here too).  Can you check if this is raised upstream? Or has been fixed upstream?","created_on":"2012-01-26T21:15:00.521721+00:00","user":"ibuclaw","updated_on":null,"issue":310,"id":1003881},{"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=7588","created_on":"2012-02-25T18:32:09.881320+00:00","user":"trass3r","updated_on":null,"issue":310,"id":1118201},{"content":"Issue resolved in latest DMD frontend.","created_on":"2012-07-11T10:07:54.244228+00:00","user":"ibuclaw","updated_on":null,"issue":310,"id":1652687},{"content":"I think the stance on this is just to not build using an object.d file that is missing parts.","created_on":"2012-07-11T10:35:46.315978+00:00","user":"ibuclaw","updated_on":null,"issue":146,"id":1652800},{"content":"Turns out the iCE goes away if you initialize the ref (eg from a static module ctor).","created_on":"2012-01-06T15:53:58.667255+00:00","user":"art_","updated_on":null,"issue":304,"id":933204},{"content":null,"created_on":"2012-01-21T12:21:05.761866+00:00","user":"ibuclaw","updated_on":null,"issue":304,"id":984956},{"content":"Cannot reproduce in latest gdc trunk + 4.8.x","created_on":"2012-07-11T10:08:51.764345+00:00","user":"ibuclaw","updated_on":null,"issue":304,"id":1652689},{"content":"Same here.\r\n\r\n$ gdc -v\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=gdc\r\nCOLLECT_LTO_WRAPPER=\/opt\/gdc\/libexec\/gcc\/x86_64-unknown-linux-gnu\/4.6.2\/lto-wrapper\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --disable-bootstrap --disable-shared --disable-nls --prefix=\/opt\/gdc --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues --enable-checking=assert,runtime,misc,tree,gimple,types,rtlflag --disable-libgomp --disable-libmudflap\r\nThread model: posix\r\ngcc version 4.6.2 20111026 (gdc 0.31 - r772:2a960958c51b, using dmd 2.057) (GCC)\r\n\r\nIt compiles when using -O. This has been introduced arround commit [[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/9841510e8ba6|9841510e8ba6]], has far has I can recall.","created_on":"2012-01-20T22:56:06.464290+00:00","user":null,"updated_on":null,"issue":307,"id":983872},{"content":"Can't reproduce here, what release of gcc are you using?","created_on":"2012-01-18T21:50:01.821249+00:00","user":"ibuclaw","updated_on":null,"issue":307,"id":976332},{"content":"{{{\r\n$ gdc -v\r\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-bootstrap --disable-shared --enable-checking=yes --enable-lto --with-arch=native --disable-nls --enable-threads --with-system-zlib --disable-libgomp --disable-libmudflap --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues\r\nThread model: posix\r\ngcc version 4.6.2 20111026 (gdc 0.31 - r768:6f10e575ee76+, using dmd 2.057) (GCC)\r\n}}}","created_on":"2012-01-18T22:00:44.210860+00:00","user":"trass3r","updated_on":null,"issue":307,"id":976363},{"content":"Version 4.6.x is no longer supported.  CNR on 4.7.x and 4.8.x.","created_on":"2012-07-11T10:22:49.613259+00:00","user":"ibuclaw","updated_on":null,"issue":307,"id":1652748},{"content":"unable to reproduce on the latest GDC trunk (i386) - going to test x86_64.","created_on":"2012-07-11T10:30:18.563733+00:00","user":"ibuclaw","updated_on":null,"issue":305,"id":1652773},{"content":"Resolved","created_on":"2012-07-11T10:31:44.352268+00:00","user":"ibuclaw","updated_on":null,"issue":305,"id":1652782},{"content":"NOTE: issue is exactly the same using the C equivalent code with gcc.  So probably will be a wontfix.","created_on":"2012-07-11T10:34:02.187223+00:00","user":"ibuclaw","updated_on":null,"issue":280,"id":1652792},{"content":"wontfix as per above (also is no longer part of the testsuite).","created_on":"2013-03-06T17:44:05.868713+00:00","user":"ibuclaw","updated_on":null,"issue":280,"id":3330950},{"content":"Need to take register displacement into consideration.\r\n\r\n{{{\r\n@@ -2177,14 +2177,11 @@\r\n                         writeReg(operand->segmentPrefix);\r\n                         insnTemplate->writebyte(':');\r\n                     }\r\n-                    if ((operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0) ||\r\n+                    \/\/ Register displacement, this writes out 'x' in x[REG]\r\n+                    if ((operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0) &&\r\n                         operand->constDisplacement)\r\n                     {\r\n                         addOperand(\"%a\", Arg_Integer, newIntExp(operand->constDisplacement), asmcode);\r\n-                        if (operand->symbolDisplacement.dim)\r\n-                        {\r\n-                            insnTemplate->writebyte('+');\r\n-                        }\r\n                         operand->constDisplacement = 0;\r\n                         if (opInfo->operands[i] & Opr_Dest)\r\n                             asmcode->clobbersMemory = 1;\r\n@@ -2305,6 +2302,16 @@\r\n                                 addOperand(fmt, Arg_Memory, e, asmcode, mode);\r\n                             }\r\n                         }\r\n+                        \/\/ Symbol displacement, this writes out 'x' in [SYM]+x\r\n+                        if (operand->constDisplacement)\r\n+                        {\r\n+                            insnTemplate->writebyte('+');\r\n+                            addOperand(\"%a\", Arg_Integer, newIntExp(operand->constDisplacement), asmcode);\r\n+                            operand->constDisplacement = 0;\r\n+\r\n+                            if (opInfo->operands[i] & Opr_Dest)\r\n+                                asmcode->clobbersMemory = 1;\r\n+                        }\r\n                     }\r\n                     if (use_star)\r\n                         insnTemplate->writebyte('*');\r\n}}}\r\n\r\n\r\nTest that first. Check for any side effects, then commit.\r\n\r\nThanks.\r\n\r\n","created_on":"2011-06-20T06:55:45.995746+00:00","user":"ibuclaw","updated_on":null,"issue":213,"id":526557},{"content":"The * is used for absolute addressing, so I moved it to the top of the code block.  It appeared to me that the if statement that handles symbolDisplacement determines on it's own when to use a *.  With that in mind, I made them exclusive to each other and applying your changes came up with the following.\r\n\r\n{{{\r\ndiff -r 584a5f3a7dce d\/d-asm-i386.h\r\n--- a\/d\/d-asm-i386.h\tFri Apr 29 14:13:02 2011 +0100\r\n+++ b\/d\/d-asm-i386.h\tMon Jun 20 11:12:31 2011 -0400\r\n@@ -2186,20 +2186,19 @@\r\n                         mode = Mode_Input;\r\n \r\n                     use_star = opTakesLabel();\/\/opInfo->takesLabel();\r\n+                    if (use_star && operand->symbolDisplacement.dim == 0)\r\n+                        insnTemplate->writebyte('*');\r\n+                    \r\n \r\n                     if (operand->segmentPrefix != Reg_Invalid)\r\n                     {\r\n                         writeReg(operand->segmentPrefix);\r\n                         insnTemplate->writebyte(':');\r\n                     }\r\n-                    if ((operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0) ||\r\n+                    if ((operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0) &&\r\n                         operand->constDisplacement)\r\n                     {\r\n                         addOperand(\"%a\", Arg_Integer, newIntExp(operand->constDisplacement), asmcode);\r\n-                        if (operand->symbolDisplacement.dim)\r\n-                        {\r\n-                            insnTemplate->writebyte('+');\r\n-                        }\r\n                         operand->constDisplacement = 0;\r\n                         if (opInfo->operands[i] & Opr_Dest)\r\n                             asmcode->clobbersMemory = 1;\r\n@@ -2321,8 +2320,16 @@\r\n                             }\r\n                         }\r\n                     }\r\n-                    if (use_star)\r\n-                        insnTemplate->writebyte('*');\r\n+                    if (operand->constDisplacement)\r\n+                    {\r\n+                        if (operand->symbolDisplacement.dim)\r\n+                            insnTemplate->writebyte('+');\r\n+                        addOperand(\"%a\", Arg_Integer, newIntExp(operand->constDisplacement), asmcode);\r\n+                        operand->constDisplacement = 0;\r\n+                        if (opInfo->operands[i] & Opr_Dest)\r\n+                            asmcode->clobbersMemory = 1;                     \r\n+                    }\r\n+                    \r\n                     if (operand->baseReg != Reg_Invalid || operand->indexReg != Reg_Invalid)\r\n                     {\r\n                         insnTemplate->writebyte('(');\r\n}}}\r\n\r\nFor 32-bit code it appears to work correctly, 64-bit code has an issue with function calls attempting to use RIP relative addressing which neither GCC or GDC does on for C\/D code.  I believe it's a separate issue.\r\n\r\n{{{\r\nfoo(); \/\/ call    _D3asm3fooFZv\r\nasm\r\n{\r\n    call foo; \/\/ call _D3asm3fooFZv(%rip)\r\n    call ptr[1*4];\r\n}\r\n}}}\r\n\r\nWorking test case.\r\n{{{\r\n\/\/ gdc -g asmcall.d -m32\r\nextern (C) void*[5] ptr;\r\nextern (C) int printf(char*,...);\r\n\r\nvoid foo()\r\n{\r\n        printf(cast(char*)\"foo\\n\");\r\n}\r\n\r\n\r\nvoid main(char[][] args)\r\n{\r\n        ptr[1] = &foo;\r\n        foo();\r\n        asm\r\n        {\r\n                call foo;\r\n                call ptr[1*4];\r\n        }\r\n}\r\n}}}\r\n\r\nIf you think it looks good then I can go and commit it.\r\n\r\n\r\n","created_on":"2011-06-20T16:39:58.127086+00:00","user":"venix1","updated_on":null,"issue":213,"id":527156},{"content":"Fixed in <<changeset 572>>","created_on":"2011-07-01T00:41:42.057493+00:00","user":"venix1","updated_on":null,"issue":213,"id":541318},{"content":"Reverted in <<changeset 573>>\r\n\r\n","created_on":"2011-07-05T23:31:55.778362+00:00","user":"ibuclaw","updated_on":null,"issue":213,"id":546632},{"content":"The problem I ran in to was at line 2320 of d-asm-i386.h is that depending on the type of variable and OS, the displacement needs to be before or after the memory reference.\r\n\r\n{{{\r\ncall *%fs:ptr@tpoff+4 \/\/ linux TLS access.  displacement can only come after.\r\ncall *4+-64(%rbp) \/\/ linux local variable.  displacement cannot come after (%rbp)\r\n}}}\r\n\r\nWindows is roughly the same, the difference is that emulated TLS uses register access instead of segment offset.  ","created_on":"2011-07-06T02:44:23.115417+00:00","user":"venix1","updated_on":null,"issue":213,"id":546748},{"content":"going off the above:\n\n{{{\n@@ -2177,14 +2229,9 @@\n                         writeReg(operand->segmentPrefix);\n                         insnTemplate->writebyte(':');\n                     }\n-                    if ((operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0) ||\n-                        operand->constDisplacement)\n+                    if (operand->segmentPrefix != Reg_Invalid && operand->symbolDisplacement.dim == 0)\n                     {\n                         addOperand(\"%a\", Arg_Integer, newIntExp(operand->constDisplacement), asmcode);\n-                        if (operand->symbolDisplacement.dim)\n-                        {\n-                            insnTemplate->writebyte('+');\n-                        }\n                         operand->constDisplacement = 0;\n                         if (opInfo->operands[i] & Opr_Dest)\n                             asmcode->clobbersMemory = 1;\n@@ -2297,12 +2344,32 @@\n                             }\n                             else\n                             {\n+                                Expression * offset = newIntExp(operand->constDisplacement);\n+\n                                 if (use_star)\n                                 {\n                                     insnTemplate->writebyte('*');\n                                     use_star = false;\n                                 }\n-                                addOperand(fmt, Arg_Memory, e, asmcode, mode);\n+\n+                                if (decl->isDataseg())\n+                                {   \/\/ Displacement can only come after symbol\n+                                    addOperand(fmt, Arg_Memory, e, asmcode, mode);\n+                                    insnTemplate->writebyte('+');\n+                                    addOperand(\"%a\", Arg_Integer, offset, asmcode);\n+                                }\n+                                else\n+                                {   \/\/ Displacement cannot come after symbol.\n+                                    addOperand(\"%a\", Arg_Integer, offset, asmcode);\n+                                    addOperand(fmt, Arg_Memory, e, asmcode, mode);\n+                                }\n+                            }\n+                            if (operand->constDisplacement)\n+                            {   \/\/ If a memory reference was displaced, tell GCC to not keep\n+                                \/\/ memory values cached in registers across the instruction.\n+                                if (opInfo->operands[i] & Opr_Dest)\n+                                    asmcode->clobbersMemory = 1;\n+                                operand->constDisplacement = 0;\n                             }\n                         }\n                     }\n\n}}}\n\nFix as needed, attaching patch for the gcc-4.6 branch - which has some other things thrown in with it.\n","created_on":"2011-07-07T21:14:53.097281+00:00","user":"ibuclaw","updated_on":"2011-07-07T21:28:13.941979+00:00","issue":213,"id":549832},{"content":"The offset is being output with a 0 prepended causing gas to treat it as an octal.\r\n{{{\r\n # 205 \"c:\\mingw\\msys\\1.0\\home\\venix\\gdc-official\\dev\\gcc-4.5.2\\libphobos\\core\\atomic.d\" 1\r\n\tmovl 016(%ebp), %edx\r\n # 0 \"\" 2\r\n\t.loc 2 206 0\r\n # 206 \"c:\\mingw\\msys\\1.0\\home\\venix\\gdc-official\\dev\\gcc-4.5.2\\libphobos\\core\\atomic.d\" 1\r\n\tmovl 012(%ebp), %eax\r\n # 0 \"\" 2\r\n\t.loc 2 207 0\r\n # 207 \"c:\\mingw\\msys\\1.0\\home\\venix\\gdc-official\\dev\\gcc-4.5.2\\libphobos\\core\\atomic.d\" 1\r\n\tmovl 08(%ebp), %ecx\r\n}}}","created_on":"2011-07-09T16:50:07.454812+00:00","user":"venix1","updated_on":null,"issue":213,"id":551797},{"content":"{{{\n{   \/\/ Displacement cannot come after symbol.\n    addOperand(\"%a\", Arg_Integer, offset, asmcode);\n    if (decl->isParameter())\n    {   \/\/ Parameter may have offset that will add to this value.\n        insnTemplate->writebyte('+');\n    }\n    addOperand(fmt, Arg_Memory, e, asmcode, mode);\n}\n}}}\n\nsee <<changeset 578>>","created_on":"2011-07-09T22:47:58.668413+00:00","user":"ibuclaw","updated_on":"2011-07-09T22:49:29.809090+00:00","issue":213,"id":552080},{"content":"Testing the patch, via transplant, on the default branch still produces incorrect memory access on MinGW.\n{{{\n\/\/ other is a local variable.\n\/\/ ptr is TLS\n\n\tcall ptr+4; \/\/call *(%eax)+4 .  I think this would be correct with linux, since TLS uses segment prefix.  However, for MinGW it must be call *4+(%eax).\n\tcall other+4; \/\/call *428(%esp).  I think 428 should probably be 4+28(%esp)\n}}}\n\nTest case.\n{{{\nextern (C) void*[5] ptr;\nextern (C) int printf(char*,...);\n\n__gshared void*[5] old;\n\nvoid foo() \n{\n\tprintf(cast(char*)\"foo\\n\");\n}\n\n\nvoid main(char[][] args)\n{\n\tvoid*[5] other;\n\tother[1] = &foo;\n\told[1] = &foo;\n\tptr[1] = &foo;\n\tfoo();\n\tasm \n\t{\n\t\tcall foo;\n\t\tcall ptr[1*4];\n\t\tcall old+4;\n\t\tcall ptr+4;\n\t\tcall other+4;\n\t\t\n\t}\n}\n}}}\n\nEdit:  GAS doesn't complain about compiling the assembly file, however **call %(ebp)+4** still fails.  Correcting the errors mentioned earlier to what I felt was the proper notion allowed proper execution.","created_on":"2011-07-12T00:16:58.788941+00:00","user":"venix1","updated_on":"2011-07-12T00:22:36.397115+00:00","issue":213,"id":554561},{"content":"Here are the changes made to your patch to fix the errors mentioned earlier.  It still needs testing on Linux but look it over and see if anything should be changed.\r\n\r\n{{{\r\ndiff -r 9b0d7c8816cf d\/d-asm-i386.h\r\n--- a\/d\/d-asm-i386.h\tSat Jul 09 23:47:10 2011 +0100\r\n+++ b\/d\/d-asm-i386.h\tSat Jul 16 22:08:11 2011 -0400\r\n@@ -2319,17 +2319,24 @@\r\n                                 {\r\n                                     Expression * offset = newIntExp(operand->constDisplacement);\r\n \r\n-                                    if (decl->isDataseg())\r\n+                                    if ((decl->isDataseg() && !decl->isThreadlocal()) \r\n+                                        || (decl->isThreadlocal() && targetm.have_tls))\r\n                                     {   \/\/ Displacement can only come after symbol\r\n+                                        \/\/ If all TLS implementations don't use the segment\r\n+                                        \/\/ register a preprocessor directive may be required.\r\n                                         addOperand(fmt, Arg_Memory, e, asmcode, mode);\r\n                                         insnTemplate->writebyte('+');\r\n                                         addOperand(\"%a\", Arg_Integer, offset, asmcode);\r\n                                     }\r\n                                     else\r\n                                     {   \/\/ Displacement cannot come after symbol.\r\n+                                        \/\/ Emulated TLS has same requirement.\r\n                                         addOperand(\"%a\", Arg_Integer, offset, asmcode);\r\n-                                        if (decl->isParameter())\r\n+                                        if (decl->isParameter()\r\n+                                            || decl->toParent2()->isFuncDeclaration() != NULL\r\n+                                            || decl->isThreadlocal())\r\n                                         {   \/\/ Parameter may have offset that will add to this value.\r\n+                                            \/\/ As will local variables and emulated TLS.\r\n                                             insnTemplate->writebyte('+');\r\n                                         }\r\n                                         addOperand(fmt, Arg_Memory, e, asmcode, mode);\r\n\r\n}}}\r\n","created_on":"2011-07-17T02:10:57.027042+00:00","user":"venix1","updated_on":null,"issue":213,"id":561141},{"content":"Wrong patch got uploaded.\n\nEdit: Linux is has issues with global variables using RIP addressing still.  That is the {{{__gshared}}} variable in the test file.  It doesn't put a '+' between the offset and displacment resulting in 4-64(%rip).  Only occurs with 64-bit.\n\nEdit: Mingw gives warning about missing operand with thread local variables. So the decl->isThreadlocal() will probably need to be removed from the '+' test.","created_on":"2011-07-17T03:18:26.282907+00:00","user":"venix1","updated_on":"2011-07-17T03:33:17.349217+00:00","issue":213,"id":561162},{"content":"IASM is no more in GDC.","created_on":"2012-07-11T07:51:02.068093+00:00","user":"ibuclaw","updated_on":null,"issue":213,"id":1652178},{"content":"Reduced:\r\n\r\n{{{\r\n#!d\r\nimport std.algorithm;\r\nimport std.regex;\r\nvoid measure(string what)(void delegate() )\r\n{\r\n}\r\n\r\nint main()\r\n{\r\n\tmeasure!\"load\"({});\r\n\t\t\tmeasure!\"resultSave\"({});\r\n\treturn 0;\r\n}\r\n\r\nvoid saveResult()\r\n{\r\n\t\tmeasure!\"resultSave\"({});\r\n}\r\n\r\nbool test()\r\n{\r\n\tmeasure!\"cacheHash\"({ });\r\n\r\n\tbool diskCached(bool fallback)\r\n\t{\r\n\t\t\tmeasure!\"globalCache\"({ });\r\n\t\t\tmeasure!\"globalCache\"({ });\r\n\t\t\tmeasure!\"globalCache\"({ });\r\n\t\t\treturn fallback;\r\n\t}\r\n\r\n\tbool doTest()\r\n\t{\r\n\t\tmeasure!\"testSave\"({}); measure!\"clean\"({});\r\n\r\n\t\tbool result;\r\n\t\tmeasure!\"test\"({});\r\n\t\treturn result;\r\n\t}\r\n\r\n\treturn doTest;\r\n}\r\n\r\nvoid applyNoRemoveMagic()\r\n{\r\n}\r\n\r\nvoid applyNoRemoveRegex(string[] noRemoveStr)\r\n{\r\nmap!((string s) { return regex(s); })(noRemoveStr);\r\n\r\n}\r\n}}}","created_on":"2012-03-04T22:32:47.726253+00:00","user":"trass3r","updated_on":null,"issue":323,"id":1148316},{"content":"Unable to reproduce on current gdc trunk build.","created_on":"2012-07-11T09:47:10.697264+00:00","user":"ibuclaw","updated_on":null,"issue":323,"id":1652604},{"content":"Why would you be using EBP when the frame pointer is omitted in naked functions? Is this even legal? Is not, what does it do?","created_on":"2011-01-04T21:57:36.096620+00:00","user":"ibuclaw","updated_on":null,"issue":135,"id":331230},{"content":"In any case, bleh, the area where the ICE occurs assumes the function start has already been expanded (and all incoming parms have been setup in the backend RTL). Furthermore, it seems a bit off the mark anyway...\r\n\r\n{{{\r\nrtx r = DECL_INCOMING_RTL(decl);  \/\/ This assumes decl is a PARM_DECL\r\n\r\nif (r == NULL_RTX)\r\n    r = DECL_RTL(decl);           \/\/ Whoops, can't do this on PARM_DECLs or non-local VAR_DECLs\r\n}}}\r\n","created_on":"2011-01-05T02:40:27.158486+00:00","user":"ibuclaw","updated_on":null,"issue":135,"id":331414},{"content":"<<changeset 436>> turns ICE into an error, I'll have a play about later as to fixing this so information required is available to correctly do codegen.\r\n\r\nRegards","created_on":"2011-01-05T03:43:03.980900+00:00","user":"ibuclaw","updated_on":null,"issue":135,"id":331445},{"content":"IASM is no more in GDC.","created_on":"2012-07-11T07:51:32.688614+00:00","user":"ibuclaw","updated_on":null,"issue":135,"id":1652181},{"content":"So why can't you post example code?","created_on":"2012-03-05T13:04:02.399964+00:00","user":"trass3r","updated_on":null,"issue":324,"id":1151216},{"content":"There is not enough information here.  Closing as 4.6.x is no longer supported.","created_on":"2012-07-11T07:54:02.172117+00:00","user":"ibuclaw","updated_on":"2012-07-11T07:54:20.008058+00:00","issue":324,"id":1652184},{"content":null,"created_on":"2012-06-13T13:57:10.371019+00:00","user":"TurkeyMan","updated_on":null,"issue":350,"id":1543073},{"content":"https:\/\/github.com\/D-Programming-GDC\/GDC\/commits\/master\n\nIt's freshly baked out the oven, and hopefully fixes the last of a few lingering memory corruption bugs that prevented the ability to compile whole projects at once. :-)","created_on":"2012-06-18T19:56:19.285560+00:00","user":"ibuclaw","updated_on":"2012-06-18T19:59:20.192645+00:00","issue":350,"id":1562441},{"content":"I can not reproduce this in the 2.059 merge at least.  Though I suspect something may not quite be right with the binary release you are using.\r\n\r\nRegards","created_on":"2012-06-18T19:49:44.486508+00:00","user":"ibuclaw","updated_on":null,"issue":350,"id":1562418},{"content":"There's a 2.059 merge? O_O .. Can haz?\r\n\r\nI suspect there is something not quite right with it too ;)","created_on":"2012-06-18T19:51:43.817420+00:00","user":"TurkeyMan","updated_on":null,"issue":350,"id":1562422},{"content":"New MinGW binary release has been uploaded, marking as resolved until you are able to test to confirm otherwise.","created_on":"2012-07-11T09:43:04.283711+00:00","user":"ibuclaw","updated_on":null,"issue":350,"id":1652582},{"content":"I \/\/still\/\/ have missing ref to skipWhitespace().\nLatest binary available seems to be \n**gcc-4.6.1-tdm64-1-gdc-6a4bafe80b-20120708-D2.058.7z** (ie **058**, not **059**) \nwhere is this 059 that is mentioned !!??\nthank you","created_on":"2012-08-12T07:41:58.531301+00:00","user":"philippe_quesnel","updated_on":null,"issue":350,"id":1798534},{"content":"Adding -m32 to the command line will compile successfully.  Can't reproduce with latest release.","created_on":"2012-09-08T07:31:57.083787+00:00","user":"venix1","updated_on":"2012-09-08T07:32:11.081386+00:00","issue":359,"id":1937266},{"content":null,"created_on":"2012-09-08T07:30:06.437087+00:00","user":"venix1","updated_on":null,"issue":359,"id":1937264},{"content":"Thanks for helping.  I used old compiler.\n\nWhen I reinstalled new compiler gcc-4.6.1-tdm64-1-gdc-6a4bafe80b-20120708-D2.058.7z, then another error caused as follows:\n\n        gdc.exe -v2 -c -frelease -finline-functions -O3 -fweb -Wall -fversion=Un\nicode -fversion=Windows7   -m32 -fversion=WondersBuild -o wonders\\basetsd.o wond\ners\\basetsd.d\ngdc.exe: error: unrecognized option '-v2'\n\n** error 1 ** deleting wonders\\basetsd.o\n\nWhat is wrong?","created_on":"2012-09-12T05:42:56.023705+00:00","user":"katahiromz","updated_on":null,"issue":359,"id":1957522},{"content":"","created_on":"2012-09-04T06:01:20.542523+00:00","user":"katahiromz","updated_on":"2012-09-04T06:01:57.293129+00:00","issue":359,"id":1911351},{"content":"I can't reproduce this.  \n\nAre you using the latest version?  This is what I get using your command line.  \n\n{{{\nc:\\MinGW\\msys\\1.0\\home\\venix\\mingw-gdc.git\\issues\\359\\wonders> gdc.exe -c -frelease -finline-functions -O3 -fweb -Wall -fversion=Unicode -fversion=Windows7 -fversion=WondersBuild -o wonders\\gdiplus.o wonders\\gdiplus.d\nwonders\\winnt.d:1597: Error: undefined identifier PFLOAT128, did you mean struct\n FLOAT128?\n}}}\n\nI corrected this and a couple other issues but eventually ran into \n\n{{{wonders\\winnt.d:43: Error: static assert  \"No Target Architecture\"}}} \n\nand\n\n{{{wonders\\winnt.d:2202: Error: undefined identifier FRAME_POINTERS}}}","created_on":"2012-09-07T16:41:59.468045+00:00","user":"venix1","updated_on":"2012-09-07T16:43:56.427466+00:00","issue":359,"id":1934886},{"content":"https:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/UserDocumentation \n -fd-version=1\n\nThank you!","created_on":"2012-09-13T04:16:41.568904+00:00","user":"katahiromz","updated_on":null,"issue":359,"id":1964030},{"content":"Doesn't need to be a unittest (you can just do void main() in it's place).\r\n\r\nAlso, does this happen if you switch struct and class around?","created_on":"2012-02-28T14:39:10.203959+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":1128505},{"content":"Hmm now it's:\r\n\r\n{{{\r\n#!d\r\nclass RedBlackTree(T, alias less = \"a < b\", )\r\n{\r\n    struct Range\r\n    {\r\n        void popFront()\r\n        {\r\n        }\r\n    }\r\n}\r\n\r\nauto redBlackTree(alias less, E)()\r\n{\r\n    return new RedBlackTree!(E, less);\r\n}\r\n\r\nunittest\r\n{\r\n    auto rbt2 = redBlackTree!({}, double);\r\n}\r\n}}}\r\n{{{\r\n$ gdc -funittest -c container.d\r\ncontainer.d: In member function 'popFront':\r\ncontainer.d:5:0: internal compiler error: in toObjFile, at d\/d-glue.cc:3095\r\n}}}","created_on":"2012-02-28T14:27:04.973781+00:00","user":"trass3r","updated_on":null,"issue":316,"id":1128473},{"content":"Range => class works\n\nRange => class + RedBlackTree => struct works\n\nboth struct, also works","created_on":"2012-02-28T14:43:31.276923+00:00","user":"trass3r","updated_on":"2012-02-28T14:43:45.617655+00:00","issue":316,"id":1128514},{"content":"Yes, I'd expect both struct and both class would work due to how I implemented it. :~)\r\n\r\nI'll have a check to see what the correct code\/behaviour should be later, as I deliberately put that ICE there as I wasn't sure at the time if it could be hit.","created_on":"2012-02-28T18:03:00.498577+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":1129176},{"content":"Hmm TDPL isn't clear about this case:\r\n{{{\r\nUnlike classes nested within classes, nested structs and nested classes within\r\nstructs don't contain any hidden member outer - there is no special code generated.\r\nThe main design goal of nesting such types is to enforce the desired access control.\r\n}}}\r\nSounds like a struct doesn't have access to the outer class.. but:\r\n{{{\r\nFor conformity and consistency, D offers similar amenities to structs nested inside\r\nFUNCTIONS. A nested struct can access the enclosing function's parameters and locals\r\n}}}","created_on":"2012-02-28T21:46:25.071869+00:00","user":"trass3r","updated_on":null,"issue":316,"id":1130141},{"content":"<<changeset 802:3f532d7a9fa3>>","created_on":"2012-02-27T23:28:10.223186+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":1126176},{"content":"Will be reviewing the static chain passing codegen this weekend.","created_on":"2012-07-11T10:04:04.888953+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":1652675},{"content":null,"created_on":"2013-03-06T17:37:48.986982+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":3330879},{"content":"Closing old bug.","created_on":"2013-03-06T17:37:05.015890+00:00","user":"ibuclaw","updated_on":null,"issue":316,"id":3330865},{"content":"Closing old bug.","created_on":"2013-03-06T17:38:34.283322+00:00","user":"ibuclaw","updated_on":null,"issue":358,"id":3330888},{"content":"Marking as invalid since DMD produces the same results.   \r\n{{{\r\nargc=1, argv=00000013\r\n}}}\r\n\r\nYour problem is a misunderstanding of how D array's are stored in memory.\r\n{{{\r\nstruct GenericDArray\r\n{\r\n  size_t length;  \/\/ Offset +0\r\n  void* data; \/\/ Offset +size_t.sizeof\r\n}\r\n}}}\r\nBy sending argv directly you are sending the length instead of the data.  To send the data use the property **ptr**.\r\n{{{\r\n    return cmain(cast(int)args.length, argv.ptr); \/\/ I also had to change your function signature to be char**.\r\n}}}\r\n","created_on":"2011-08-19T22:26:46.678109+00:00","user":"venix1","updated_on":null,"issue":228,"id":612123}],"meta":{"default_milestone":null,"default_assignee":null,"default_kind":"bug","default_component":null,"default_version":null},"components":[],"issues":[{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-fdeps Doesn't Handle Multiple Source Files","reporter":"debio","component":null,"watchers":["debio","ibuclaw","JinShil"],"content":"When I call `dmd -deps=depsfile source1.d source2.d` the dependencies for both source files are written to depsfile, but `gdc -fdeps=depsfile source1.d source2.d` only writes the dependencies of source2.d.","assignee":null,"created_on":"2011-05-25T13:59:09.191428+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:17:01.197344+00:00","id":208},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"[OSX][64-bit] Missing symbols of libgphobos2.a","reporter":"dan.sanduleac","component":null,"watchers":["dan.sanduleac","ibuclaw","JinShil"],"content":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X) - {{{linking.txt}}}.\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nSince then I've recompiled with gcc-4.5.3, but am facing the same issues. I'm also attaching exactly the symbols reported as missing by ld (as the leftmost {{{missing_symbols.txt}}}).\n\n{{{\n# examples for one of the missing symbols\n\n# version just installed, compiled for x86-64\n$ nm \/opt\/usr\/local\/lib\/libgphobos2.a 2>&1 | grep _D11TypeInfo_AC6__initZ\n0000000000001f20 S __D11TypeInfo_AC6__initZ\n                 U _D11TypeInfo_AC6__initZ\n                 U _D11TypeInfo_AC6__initZ\n                 U _D11TypeInfo_AC6__initZ\n# ---   unresolved symbols start with only ONE underscore .. (like on 32-bit dmd?)\n\n# GdcMac based on GCC 4.2.1 and dmd 1.064, 64-bit (for reference)\n$ lipo -extract x86_64 \/usr\/lib\/libgphobos.a -output libgphobos-x86_64.a\n$ nm libgphobos-x86_64.a 2>&1 | grep _D11TypeInfo_AC6__initZ\n                 U __D11TypeInfo_AC6__initZ\n                 U __D11TypeInfo_AC6__initZ\n00000000000003c0 S __D11TypeInfo_AC6__initZ\n# ---   notice that all of the symbols start with TWO underscores\n\n# DMD 2.052, official binary, only 32-bit\nnm ~\/Kits\/DMD\/dmd2\/osx\/lib32\/libphobos2.a 2>&1 | grep _D11TypeInfo_AC6__initZ\n00000000 D _D11TypeInfo_AC6__initZ\n\n\n$ \/opt\/usr\/local\/bin\/gdc -v\nUsing built-in specs.\nCOLLECT_GCC=\/opt\/usr\/local\/bin\/gdc\nCOLLECT_LTO_WRAPPER=\/opt\/usr\/local\/bin\/..\/libexec\/gcc\/x86_64-apple-darwin10\/4.5.3\/lto-wrapper\nTarget: x86_64-apple-darwin10\nConfigured with: ..\/gcc-4.5.3\/configure --build=x86_64-apple-darwin10 --enable-languages=c,d --with-system-zlib --disable-nls --with-gmp=\/opt\/local --with-mpfr=\/opt\/local --with-mpc=\/opt\/local --enable-stage1-checking --enable-fully-dynamic-string --disable-multilib --disable-shared --enable-checking=release --with-local-prefix=\/opt\/local\nThread model: posix\ngcc version 4.5.3 20110428 (gdc hg, using dmd 2.052) (GCC)\n}}}","assignee":null,"created_on":"2011-05-31T20:34:25.546705+00:00","version":null,"edited_on":"2011-06-02T14:36:08.919064+00:00","milestone":null,"updated_on":"2014-03-31T15:16:46.646070+00:00","id":210},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-fsection-anchors broken on ARM","reporter":"jpf","component":null,"watchers":["jpf","ibuclaw","debio","JinShil"],"content":"When  running a program on ARM, the GC immediately enters an infinite loop. Debugging shows that the entered loop is in gcx.d line 2179:\n{{{\nfor (; p < ptop; p += size)\n{\n     (cast(List *)p).next = *b;\n     *b = cast(List *)p;\n}\n}}}\np and ptop are correct, but size is 0. size is set in line 2174:\n{{{\nsize_t size = binsize[bin];\n}}}\nbinsize is just an array of uints:\n{{{\nimmutable uint binsize[B_MAX] = [ 16,32,64,128,256,512,1024,2048,4096 ];\n}}}\nbin was 3 in my tests, a correct index value. Still the array entry lookup somehow fails.\nThis only happens with optimization turned on though: If druntime is compiled with -O0 the gc works fine.\n\n==== Testing with optimization enabled: ====\nI added code to make a copy of binsize and looked at that copy with gdb:\n{{{\n$1 = {0 <repeats 12 times>}\n}}}\nSo I looked at the binsize symbol:\n{{{\nreadelf -s -w .\/hello_d | grep binsize\n  5665: 00050c64    48 OBJECT  GLOBAL DEFAULT   14 _D2gc3gcx7binsizeyG12k\n}}}\nlets have a look at section 14:\n{{{\nreadelf -S hello_d\nThere are 41 section headers, starting at offset 0x175464:\n\nSection Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [14] .rodata           PROGBITS        00049db8 041db8 0089d0 00   A  0   0  8\n}}}\n\nDump it:\n{{{\nreadelf -x 14 hello_d\n...\n  0x00050c58 00000000 00000000 00000000 10000000 ................\n  0x00050c68 20000000 40000000 80000000 00010000  ...@...........\n  0x00050c78 00020000 00040000 00080000 00100000 ................\n  0x00050c88 00000000 00000000 00000000 00000000 ................\n  0x00050c98 00000000 00000000 00000000 00000000 ................\n}}}\n\nseems to be correct though.\n\nasm dump of function allocPage:\n{{{\nDump of assembler code for function _D2gc3gcx3Gcx9allocPageMFhZi:\n0x00042c58 <_D2gc3gcx3Gcx9allocPageMFhZi+0>:\tpush\t{r4, r5, r6, r7, r8, lr}\n0x00042c5c <_D2gc3gcx3Gcx9allocPageMFhZi+4>:\tldr\tr3, [r0, #80]\t; 0x50\n0x00042c60 <_D2gc3gcx3Gcx9allocPageMFhZi+8>:\tmov\tr5, r0\n0x00042c64 <_D2gc3gcx3Gcx9allocPageMFhZi+12>:\tcmp\tr3, #0\n0x00042c68 <_D2gc3gcx3Gcx9allocPageMFhZi+16>:\tmov\tr7, r1\n0x00042c6c <_D2gc3gcx3Gcx9allocPageMFhZi+20>:\tbeq\t0x42d08 <_D2gc3gcx3Gcx9allocPageMFhZi+176>\n0x00042c70 <_D2gc3gcx3Gcx9allocPageMFhZi+24>:\tmov\tr4, #0\n0x00042c74 <_D2gc3gcx3Gcx9allocPageMFhZi+28>:\tb\t0x42c84 <_D2gc3gcx3Gcx9allocPageMFhZi+44>\n0x00042c78 <_D2gc3gcx3Gcx9allocPageMFhZi+32>:\tldr\tr3, [r5, #80]\t; 0x50\n0x00042c7c <_D2gc3gcx3Gcx9allocPageMFhZi+36>:\tcmp\tr3, r4\n0x00042c80 <_D2gc3gcx3Gcx9allocPageMFhZi+40>:\tbls\t0x42d08 <_D2gc3gcx3Gcx9allocPageMFhZi+176>\n0x00042c84 <_D2gc3gcx3Gcx9allocPageMFhZi+44>:\tldr\tr3, [r5, #84]\t; 0x54\n0x00042c88 <_D2gc3gcx3Gcx9allocPageMFhZi+48>:\tmov\tr1, #1\n0x00042c8c <_D2gc3gcx3Gcx9allocPageMFhZi+52>:\tldr\tr6, [r3, r4, lsl #2]\n0x00042c90 <_D2gc3gcx3Gcx9allocPageMFhZi+56>:\tadd\tr4, r4, r1\n0x00042c94 <_D2gc3gcx3Gcx9allocPageMFhZi+60>:\tmov\tr0, r6\n0x00042c98 <_D2gc3gcx3Gcx9allocPageMFhZi+64>:\tbl\t0x42bfc <_D2gc3gcx4Pool10allocPagesMFkZk>\n0x00042c9c <_D2gc3gcx3Gcx9allocPageMFhZi+68>:\tcmn\tr0, #1\n0x00042ca0 <_D2gc3gcx3Gcx9allocPageMFhZi+72>:\tbeq\t0x42c78 <_D2gc3gcx3Gcx9allocPageMFhZi+32>\n0x00042ca4 <_D2gc3gcx3Gcx9allocPageMFhZi+76>:\tldr\tr3, [r6, #88]\t; 0x58\n0x00042ca8 <_D2gc3gcx3Gcx9allocPageMFhZi+80>:\tldr\tr2, [pc, #96]\t; 0x42d10 <_D2gc3gcx3Gcx9allocPageMFhZi+184>\n0x00042cac <_D2gc3gcx3Gcx9allocPageMFhZi+84>:\tstrb\tr7, [r3, r0]\n0x00042cb0 <_D2gc3gcx3Gcx9allocPageMFhZi+88>:\tldr\tr3, [r6]\n0x00042cb4 <_D2gc3gcx3Gcx9allocPageMFhZi+92>:\tldr\tr2, [r2, r7, lsl #2]\n0x00042cb8 <_D2gc3gcx3Gcx9allocPageMFhZi+96>:\tadd\tr0, r3, r0, lsl #12\n0x00042cbc <_D2gc3gcx3Gcx9allocPageMFhZi+100>:\tadd\tr5, r5, #88\t; 0x58\n0x00042cc0 <_D2gc3gcx3Gcx9allocPageMFhZi+104>:\tadd\tr12, r0, r2\n0x00042cc4 <_D2gc3gcx3Gcx9allocPageMFhZi+108>:\tldr\tr4, [r5, r7, lsl #2]\n0x00042cc8 <_D2gc3gcx3Gcx9allocPageMFhZi+112>:\tadd\tr6, r0, #4096\t; 0x1000\n0x00042ccc <_D2gc3gcx3Gcx9allocPageMFhZi+116>:\tadd\tr7, r5, r7, lsl #2\n0x00042cd0 <_D2gc3gcx3Gcx9allocPageMFhZi+120>:\tmov\tr1, r12\n0x00042cd4 <_D2gc3gcx3Gcx9allocPageMFhZi+124>:\tb\t0x42ce0 <_D2gc3gcx3Gcx9allocPageMFhZi+136>\n0x00042cd8 <_D2gc3gcx3Gcx9allocPageMFhZi+128>:\tmov\tr4, r3\n0x00042cdc <_D2gc3gcx3Gcx9allocPageMFhZi+132>:\tadd\tr12, r12, r2\n0x00042ce0 <_D2gc3gcx3Gcx9allocPageMFhZi+136>:\tadd\tr1, r1, r2\n0x00042ce4 <_D2gc3gcx3Gcx9allocPageMFhZi+140>:\trsb\tr3, r2, r1\n0x00042ce8 <_D2gc3gcx3Gcx9allocPageMFhZi+144>:\tcmp\tr6, r3\n0x00042cec <_D2gc3gcx3Gcx9allocPageMFhZi+148>:\tstr\tr4, [r0]\n0x00042cf0 <_D2gc3gcx3Gcx9allocPageMFhZi+152>:\tmov\tr3, r0\n0x00042cf4 <_D2gc3gcx3Gcx9allocPageMFhZi+156>:\tstr\tr0, [r7]\n0x00042cf8 <_D2gc3gcx3Gcx9allocPageMFhZi+160>:\tmov\tr0, r12\n0x00042cfc <_D2gc3gcx3Gcx9allocPageMFhZi+164>:\tbhi\t0x42cd8 <_D2gc3gcx3Gcx9allocPageMFhZi+128>\n0x00042d00 <_D2gc3gcx3Gcx9allocPageMFhZi+168>:\tmov\tr0, #1\n0x00042d04 <_D2gc3gcx3Gcx9allocPageMFhZi+172>:\tpop\t{r4, r5, r6, r7, r8, pc}\n0x00042d08 <_D2gc3gcx3Gcx9allocPageMFhZi+176>:\tmov\tr0, #0\n0x00042d0c <_D2gc3gcx3Gcx9allocPageMFhZi+180>:\tpop\t{r4, r5, r6, r7, r8, pc}\n0x00042d10 <_D2gc3gcx3Gcx9allocPageMFhZi+184>:\tldrdeq\tr0, [r5], -r4\n}}}\n\n==== Testing with -O0 ====\n\nasm dump, compiled with -O0\n{{{\nDump of assembler code for function _D2gc3gcx3Gcx9allocPageMFhZi:\n0x00046eb8 <_D2gc3gcx3Gcx9allocPageMFhZi+0>:\tpush\t{r11, lr}\n0x00046ebc <_D2gc3gcx3Gcx9allocPageMFhZi+4>:\tadd\tr11, sp, #4\n0x00046ec0 <_D2gc3gcx3Gcx9allocPageMFhZi+8>:\tsub\tsp, sp, #40\t; 0x28\n0x00046ec4 <_D2gc3gcx3Gcx9allocPageMFhZi+12>:\tstr\tr0, [r11, #-40]\t; 0x28\n0x00046ec8 <_D2gc3gcx3Gcx9allocPageMFhZi+16>:\tmov\tr3, r1\n0x00046ecc <_D2gc3gcx3Gcx9allocPageMFhZi+20>:\tstrb\tr3, [r11, #-41]\t; 0x29\n0x00046ed0 <_D2gc3gcx3Gcx9allocPageMFhZi+24>:\tmov\tr3, #0\n0x00046ed4 <_D2gc3gcx3Gcx9allocPageMFhZi+28>:\tstr\tr3, [r11, #-8]\n0x00046ed8 <_D2gc3gcx3Gcx9allocPageMFhZi+32>:\tmov\tr3, #0\n0x00046edc <_D2gc3gcx3Gcx9allocPageMFhZi+36>:\tstr\tr3, [r11, #-12]\n0x00046ee0 <_D2gc3gcx3Gcx9allocPageMFhZi+40>:\tmov\tr3, #0\n0x00046ee4 <_D2gc3gcx3Gcx9allocPageMFhZi+44>:\tstr\tr3, [r11, #-16]\n0x00046ee8 <_D2gc3gcx3Gcx9allocPageMFhZi+48>:\tmov\tr3, #0\n0x00046eec <_D2gc3gcx3Gcx9allocPageMFhZi+52>:\tstr\tr3, [r11, #-20]\n0x00046ef0 <_D2gc3gcx3Gcx9allocPageMFhZi+56>:\tmov\tr3, #0\n0x00046ef4 <_D2gc3gcx3Gcx9allocPageMFhZi+60>:\tstr\tr3, [r11, #-24]\n0x00046ef8 <_D2gc3gcx3Gcx9allocPageMFhZi+64>:\tmov\tr3, #0\n0x00046efc <_D2gc3gcx3Gcx9allocPageMFhZi+68>:\tstr\tr3, [r11, #-12]\n0x00046f00 <_D2gc3gcx3Gcx9allocPageMFhZi+72>:\tldr\tr3, [r11, #-40]\t; 0x28\n0x00046f04 <_D2gc3gcx3Gcx9allocPageMFhZi+76>:\tldr\tr3, [r3, #80]\t; 0x50\n0x00046f08 <_D2gc3gcx3Gcx9allocPageMFhZi+80>:\tldr\tr2, [r11, #-12]\n0x00046f0c <_D2gc3gcx3Gcx9allocPageMFhZi+84>:\tcmp\tr2, r3\n0x00046f10 <_D2gc3gcx3Gcx9allocPageMFhZi+88>:\tmovcs\tr3, #0\n0x00046f14 <_D2gc3gcx3Gcx9allocPageMFhZi+92>:\tmovcc\tr3, #1\n0x00046f18 <_D2gc3gcx3Gcx9allocPageMFhZi+96>:\tand\tr3, r3, #255\t; 0xff\n0x00046f1c <_D2gc3gcx3Gcx9allocPageMFhZi+100>:\teor\tr3, r3, #1\n0x00046f20 <_D2gc3gcx3Gcx9allocPageMFhZi+104>:\tand\tr3, r3, #255\t; 0xff\n0x00046f24 <_D2gc3gcx3Gcx9allocPageMFhZi+108>:\tcmp\tr3, #0\n0x00046f28 <_D2gc3gcx3Gcx9allocPageMFhZi+112>:\tbne\t0x46f78 <_D2gc3gcx3Gcx9allocPageMFhZi+192>\n0x00046f2c <_D2gc3gcx3Gcx9allocPageMFhZi+116>:\tldr\tr3, [r11, #-40]\t; 0x28\n0x00046f30 <_D2gc3gcx3Gcx9allocPageMFhZi+120>:\tldr\tr2, [r3, #84]\t; 0x54\n0x00046f34 <_D2gc3gcx3Gcx9allocPageMFhZi+124>:\tldr\tr3, [r11, #-12]\n0x00046f38 <_D2gc3gcx3Gcx9allocPageMFhZi+128>:\tlsl\tr3, r3, #2\n0x00046f3c <_D2gc3gcx3Gcx9allocPageMFhZi+132>:\tadd\tr3, r2, r3\n0x00046f40 <_D2gc3gcx3Gcx9allocPageMFhZi+136>:\tldr\tr3, [r3]\n0x00046f44 <_D2gc3gcx3Gcx9allocPageMFhZi+140>:\tstr\tr3, [r11, #-8]\n0x00046f48 <_D2gc3gcx3Gcx9allocPageMFhZi+144>:\tldr\tr0, [r11, #-8]\n0x00046f4c <_D2gc3gcx3Gcx9allocPageMFhZi+148>:\tmov\tr1, #1\n0x00046f50 <_D2gc3gcx3Gcx9allocPageMFhZi+152>:\tbl\t0x4898c <_D2gc3gcx4Pool10allocPagesMFkZk>\n0x00046f54 <_D2gc3gcx3Gcx9allocPageMFhZi+156>:\tmov\tr3, r0\n0x00046f58 <_D2gc3gcx3Gcx9allocPageMFhZi+160>:\tstr\tr3, [r11, #-16]\n0x00046f5c <_D2gc3gcx3Gcx9allocPageMFhZi+164>:\tldr\tr3, [r11, #-16]\n0x00046f60 <_D2gc3gcx3Gcx9allocPageMFhZi+168>:\tcmn\tr3, #1\n0x00046f64 <_D2gc3gcx3Gcx9allocPageMFhZi+172>:\tbne\t0x46f80 <_D2gc3gcx3Gcx9allocPageMFhZi+200>\n0x00046f68 <_D2gc3gcx3Gcx9allocPageMFhZi+176>:\tldr\tr3, [r11, #-12]\n0x00046f6c <_D2gc3gcx3Gcx9allocPageMFhZi+180>:\tadd\tr3, r3, #1\n0x00046f70 <_D2gc3gcx3Gcx9allocPageMFhZi+184>:\tstr\tr3, [r11, #-12]\n0x00046f74 <_D2gc3gcx3Gcx9allocPageMFhZi+188>:\tb\t0x46f00 <_D2gc3gcx3Gcx9allocPageMFhZi+72>\n0x00046f78 <_D2gc3gcx3Gcx9allocPageMFhZi+192>:\tmov\tr3, #0\n0x00046f7c <_D2gc3gcx3Gcx9allocPageMFhZi+196>:\tb\t0x4704c <_D2gc3gcx3Gcx9allocPageMFhZi+404>\n0x00046f80 <_D2gc3gcx3Gcx9allocPageMFhZi+200>:\tnop\t\t\t; (mov r0, r0)\n0x00046f84 <_D2gc3gcx3Gcx9allocPageMFhZi+204>:\tldr\tr3, [r11, #-8]\n0x00046f88 <_D2gc3gcx3Gcx9allocPageMFhZi+208>:\tldr\tr2, [r3, #88]\t; 0x58\n0x00046f8c <_D2gc3gcx3Gcx9allocPageMFhZi+212>:\tldr\tr3, [r11, #-16]\n0x00046f90 <_D2gc3gcx3Gcx9allocPageMFhZi+216>:\tadd\tr3, r2, r3\n0x00046f94 <_D2gc3gcx3Gcx9allocPageMFhZi+220>:\tldrb\tr2, [r11, #-41]\t; 0x29\n0x00046f98 <_D2gc3gcx3Gcx9allocPageMFhZi+224>:\tstrb\tr2, [r3]\n0x00046f9c <_D2gc3gcx3Gcx9allocPageMFhZi+228>:\tldrb\tr3, [r11, #-41]\t; 0x29\n0x00046fa0 <_D2gc3gcx3Gcx9allocPageMFhZi+232>:\tlsl\tr2, r3, #2\n0x00046fa4 <_D2gc3gcx3Gcx9allocPageMFhZi+236>:\tldr\tr3, [pc, #172]\t; 0x47058 <_D2gc3gcx3Gcx9allocPageMFhZi+416>\n0x00046fa8 <_D2gc3gcx3Gcx9allocPageMFhZi+240>:\tadd\tr3, r2, r3\n0x00046fac <_D2gc3gcx3Gcx9allocPageMFhZi+244>:\tldr\tr3, [r3]\n0x00046fb0 <_D2gc3gcx3Gcx9allocPageMFhZi+248>:\tstr\tr3, [r11, #-28]\n0x00046fb4 <_D2gc3gcx3Gcx9allocPageMFhZi+252>:\tldr\tr3, [r11, #-40]\t; 0x28\n0x00046fb8 <_D2gc3gcx3Gcx9allocPageMFhZi+256>:\tadd\tr2, r3, #88\t; 0x58\n0x00046fbc <_D2gc3gcx3Gcx9allocPageMFhZi+260>:\tldrb\tr3, [r11, #-41]\t; 0x29\n0x00046fc0 <_D2gc3gcx3Gcx9allocPageMFhZi+264>:\tlsl\tr3, r3, #2\n0x00046fc4 <_D2gc3gcx3Gcx9allocPageMFhZi+268>:\tadd\tr3, r2, r3\n0x00046fc8 <_D2gc3gcx3Gcx9allocPageMFhZi+272>:\tstr\tr3, [r11, #-32]\n0x00046fcc <_D2gc3gcx3Gcx9allocPageMFhZi+276>:\tldr\tr3, [r11, #-8]\n0x00046fd0 <_D2gc3gcx3Gcx9allocPageMFhZi+280>:\tldr\tr2, [r3]\n0x00046fd4 <_D2gc3gcx3Gcx9allocPageMFhZi+284>:\tldr\tr3, [r11, #-16]\n0x00046fd8 <_D2gc3gcx3Gcx9allocPageMFhZi+288>:\tlsl\tr3, r3, #12\n0x00046fdc <_D2gc3gcx3Gcx9allocPageMFhZi+292>:\tadd\tr3, r2, r3\n0x00046fe0 <_D2gc3gcx3Gcx9allocPageMFhZi+296>:\tstr\tr3, [r11, #-20]\n0x00046fe4 <_D2gc3gcx3Gcx9allocPageMFhZi+300>:\tldr\tr3, [r11, #-20]\n0x00046fe8 <_D2gc3gcx3Gcx9allocPageMFhZi+304>:\tadd\tr3, r3, #4096\t; 0x1000\n0x00046fec <_D2gc3gcx3Gcx9allocPageMFhZi+308>:\tstr\tr3, [r11, #-24]\n0x00046ff0 <_D2gc3gcx3Gcx9allocPageMFhZi+312>:\tldr\tr2, [r11, #-20]\n0x00046ff4 <_D2gc3gcx3Gcx9allocPageMFhZi+316>:\tldr\tr3, [r11, #-24]\n0x00046ff8 <_D2gc3gcx3Gcx9allocPageMFhZi+320>:\tcmp\tr2, r3\n0x00046ffc <_D2gc3gcx3Gcx9allocPageMFhZi+324>:\tmovcs\tr3, #0\n0x00047000 <_D2gc3gcx3Gcx9allocPageMFhZi+328>:\tmovcc\tr3, #1\n0x00047004 <_D2gc3gcx3Gcx9allocPageMFhZi+332>:\tand\tr3, r3, #255\t; 0xff\n0x00047008 <_D2gc3gcx3Gcx9allocPageMFhZi+336>:\teor\tr3, r3, #1\n0x0004700c <_D2gc3gcx3Gcx9allocPageMFhZi+340>:\tand\tr3, r3, #255\t; 0xff\n0x00047010 <_D2gc3gcx3Gcx9allocPageMFhZi+344>:\tcmp\tr3, #0\n0x00047014 <_D2gc3gcx3Gcx9allocPageMFhZi+348>:\tbne\t0x47048 <_D2gc3gcx3Gcx9allocPageMFhZi+400>\n0x00047018 <_D2gc3gcx3Gcx9allocPageMFhZi+352>:\tldr\tr3, [r11, #-20]\n0x0004701c <_D2gc3gcx3Gcx9allocPageMFhZi+356>:\tldr\tr2, [r11, #-32]\n0x00047020 <_D2gc3gcx3Gcx9allocPageMFhZi+360>:\tldr\tr2, [r2]\n0x00047024 <_D2gc3gcx3Gcx9allocPageMFhZi+364>:\tstr\tr2, [r3]\n0x00047028 <_D2gc3gcx3Gcx9allocPageMFhZi+368>:\tldr\tr2, [r11, #-20]\n0x0004702c <_D2gc3gcx3Gcx9allocPageMFhZi+372>:\tldr\tr3, [r11, #-32]\n0x00047030 <_D2gc3gcx3Gcx9allocPageMFhZi+376>:\tstr\tr2, [r3]\n0x00047034 <_D2gc3gcx3Gcx9allocPageMFhZi+380>:\tldr\tr3, [r11, #-28]\n0x00047038 <_D2gc3gcx3Gcx9allocPageMFhZi+384>:\tldr\tr2, [r11, #-20]\n0x0004703c <_D2gc3gcx3Gcx9allocPageMFhZi+388>:\tadd\tr3, r2, r3\n0x00047040 <_D2gc3gcx3Gcx9allocPageMFhZi+392>:\tstr\tr3, [r11, #-20]\n0x00047044 <_D2gc3gcx3Gcx9allocPageMFhZi+396>:\tb\t0x46ff0 <_D2gc3gcx3Gcx9allocPageMFhZi+312>\n0x00047048 <_D2gc3gcx3Gcx9allocPageMFhZi+400>:\tmov\tr3, #1\n0x0004704c <_D2gc3gcx3Gcx9allocPageMFhZi+404>:\tmov\tr0, r3\n0x00047050 <_D2gc3gcx3Gcx9allocPageMFhZi+408>:\tsub\tsp, r11, #4\n0x00047054 <_D2gc3gcx3Gcx9allocPageMFhZi+412>:\tpop\t{r11, pc}\n0x00047058 <_D2gc3gcx3Gcx9allocPageMFhZi+416>:\tandeq\tr4, r5, r4, lsl #20\n}}}\n\nI hope this information can help to fix this bug at some time, I don't understand the asm well enough to figure the problem out by myself.","assignee":"ibuclaw","created_on":"2010-12-04T10:42:35.846826+00:00","version":null,"edited_on":"2010-12-04T10:44:12.312052+00:00","milestone":null,"updated_on":"2014-03-31T15:15:02.802554+00:00","id":120},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"Experiencing intermittent crash in rt_init() when loading DLL","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw","venix1","JinShil"],"content":"I have a crash that only happens occasionally when loading a GDC-64 DLL. The same DLL may work or not work depending on the direction of the wind. Though it seems to crash far less often than it does.\n\nThe callstack, and various other details are visible in the image attached...\n\nIt appears to crash fetching ______blkcache_storage, a TLS variable. The code that loads it looks odd to me. A few points of interest:\n\n*How can the final mov refer to rbx when only eax was loaded? Who's to say the top bits will be zero?\n*The magic address doesn't appear to be a valid offset to me...\n*rsi is a good pointer, but it points to a bunch of string data, including source code snippets. Not what I expected... moduleinfo of some sort? debuginfo?\n*The same pattern of loading ebx and using rbx is repeated above with eax->rax, except the wild absolute magic number is dereferenced this time... (how does that even work?)\n\nI don't follow the code GDC is generating here :\/ .. Does it look okay to anyone else?\n\nThis is affecting our whole team daily... any input or ideas what might be going on would be much appreciated!","assignee":"venix1","created_on":"2012-06-18T14:51:46.723099+00:00","version":null,"edited_on":"2012-06-18T14:53:54.711583+00:00","milestone":null,"updated_on":"2014-03-31T15:14:13.420749+00:00","id":351},{"status":"resolved","priority":"minor","kind":"enhancement","content_updated_on":null,"voters":[],"title":"MinGW: stack trace on exception needs enhanced","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw","JinShil"],"content":"D introduced a stack trace feature on exceptions.  Currently, this will only list address of the function and no additional information.\r\n\r\nThis should be enhanced for MinGW 32\/64 to return better output for GDC.\r\n\r\nThe MinGW64 version would also crash upon execution of StackWalk64 after a Fiber context switch.\r\n\r\nThis occurred on the first call(suggestive that is a windows issue?) and may have been related to unapplied Windows Updates.\r\n\r\nHowever, due to the following stack disappearance with GDB this will remain disabled until it this issue has been resolved or proof that it was a Microsoft bug.\r\n{{{\r\n#0  _d_throw (obj=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/gcc\/deh.d:153\r\n#1  0x0000000000420853 in onAssertErrorMsg (file=..., line=53, msg=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/core\/exception.d:421\r\n#2  0x0000000000411382 in _d_assert_msg (msg=..., file=) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:203\r\n#3  0x0000000000401659 in D main () at issue342.d:53\r\n#4  0x00000000004126a2 in rt.dmain2._d_run_main.runMain (this=0x22fda0) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:574\r\n#5  0x0000000000411fe1 in rt.dmain2._d_run_main.tryExec (this=0x22fda0, dg=...) at ..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain2.d:549\r\n#6  0x0000000000000000 in ?? () <- This is invalid.  Where's the rest of the call stack?\r\n}}}\r\n\r\nWhen compared to the values given by StackWalk64. It's missing 4 frames of stack information lost upon calling rt.dmain2._d_run_main.tryExec. Prior to the use of Fibers. This symptom was not exhibited by MinGW32.\r\n\r\n{{{\r\n40FF74\r\n409BDB\r\n411176\r\n418F0F\r\n411382\r\n401659\r\n4126A2\r\n411FE1\r\n41271E\r\n411FE1 <- last GDB entry\r\n411D35\r\n401735\r\n4013CE\r\n4014E8\r\n}}}","assignee":null,"created_on":"2012-06-11T22:21:36.747436+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:13:11.750454+00:00","id":348},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"phobos build doesn't use CFLAGS_FOR_BUILD in most cases","reporter":"mattcaron_redlion","component":null,"watchers":["mattcaron_redlion","ibuclaw","JinShil"],"content":"If you configure the build with CFLAGS_FOR_BUILD set (not CFLAGS) as crosstool-ng-dlang (https:\/\/bitbucket.org\/xdpcx\/crosstool-ng-dlang\/) does, you won't get those flags passed in to what you're building correctly.\r\n\r\nThis is especially troublesome when trying to build with -fno-section-anchors as proscribed in the infamous issue 120 (https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/120\/fsection-anchors-broken-on-arm)\r\n\r\nThe attached patch, while inelegant, fixes the problem by liberally seasoning the build rules with CFLAGS_FOR_BUILD. It is not necessarily elegant, but illustrates the principle and actually works. It should apply cleanly to the default branch.","assignee":null,"created_on":"2012-06-06T12:24:17.377203+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:12:32.944997+00:00","id":347},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gcc-4.4.5 \/ D2.052 \/ cygwin: configure error for phobos\/__libc_stack_end","reporter":"sschuerger","component":null,"watchers":["ibuclaw","sschuerger","JinShil"],"content":"Hi,\ntried to make gcc-4.4.5 \/ gdc D2.052 in a cygwin environment, sticking to your build instructions. GCC itself configured & compiled fine, but libphobos bailed out in configure with error message:\n\n\n\n{{{\nchecking for __libc_stack_end... no\n\n  configure: error: No usable stack origin information\n\n  make[1]: *** [configure-target-libphobos] Error 1\n\n}}}\n\nAny ideas? The D1 gdc port to cygwin contained a gc_guess_stack.d, which apparently works, but the standard libc stackframe code:\n\n{{{\nint\nmain ()\n{\n\n        extern long __libc_stack_end;\n        return __libc_stack_end == 0;\n  ;\n  return 0;\n}\n}}}\n\nbreaks.\n\nRegards,\n\nStefan\n","assignee":null,"created_on":"2011-03-07T11:36:55.208215+00:00","version":null,"edited_on":"2011-03-08T08:30:03.619822+00:00","milestone":null,"updated_on":"2014-03-31T15:11:05.783592+00:00","id":162},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"improve documentation about gdc internals","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw","JinShil"],"content":"Information about gdc internals is very spare here, i.e. what exactly has been changed to transform a syntax tree from dmd's frontend into gcc intermediate representation, what files are affected (e.g. when updating to a new frontend version: which files need to be taken good care of), ...\r\n\r\nAdding these information would ease getting started for new developers.","assignee":null,"created_on":"2010-07-17T01:41:21.429635+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:10:09.950533+00:00","id":41},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"traits.rvalueOf and traits.lvalueOf do not work","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"```\r\n#!d\r\n\r\n\/\/ This is example code from the Phobos online documentation.\r\n\/\/ It compiles with dmd but not with gdc (Ubuntu\/Linaro 4.8.1-10ubuntu9).\r\n\r\nimport std.traits;\r\n\r\nint f(int);\r\nbool f(ref int);\r\n\r\nstatic assert(is(typeof(f(rvalueOf!int)) == int));\r\nstatic assert(is(typeof(f(lvalueOf!int)) == bool));\r\n\r\nvoid main() {}\r\n\r\n```\r\n","assignee":null,"created_on":"2014-02-03T09:22:46.001293+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-02-03T09:31:43.153425+00:00","id":361},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Definition of _tls_data_array with version( OSX ) in thread.d","reporter":null,"component":null,"watchers":["ibuclaw","JinShil"],"content":"Definition of _tls_data_array occurs inside a \r\n\r\nversion( DigitalMars )\r\n{\r\n    else version( OSX )\r\n    { \r\n       extern(C)\r\n       {\r\n        __gshared void[][2] _tls_data_array;\r\n       }\r\n    }\r\n}\r\n    \r\nTo compile on OSX, the _tls_data_array should be outside the version( DigitalMars ) block. Moving it to the version( OSX ) block starting at line 275 results in a successful compile with gcc-4.8-20120722.\r\n\r\nThanks,\r\n  Jon Andrew\r\n  jonfandrew@gmail.com","assignee":null,"created_on":"2012-07-24T03:23:50.055288+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:11:59.033876+00:00","id":357},{"status":"resolved","priority":"major","kind":"task","content_updated_on":null,"voters":[],"title":"MinGW binaries really out of date again","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","venix1","ibuclaw"],"content":"Any chance of a new release? Has there been stable points more recently than July?\nWe rely on a lot of cutting edge D features, and totally fail at building it ourselves.","assignee":"venix1","created_on":"2012-09-10T13:35:54.756276+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T11:15:59.885936+00:00","id":360},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"phobos %X format specifier on float variables","reporter":"GrahamC","component":null,"watchers":["GrahamC","ibuclaw"],"content":"I am not sure if it is well defined how the %X (or %x) format specifier should behave when the variable being formatted is a float.\r\n\r\nThe following code\r\n{{{\r\n\tfloat f = 0.2f;\r\n\twritefln(\"0x%X 0x%X\", f, *(cast(uint*)&f));\r\n}}}\r\n\r\ndisplays\r\n{{{\r\n0xA0000000 0x3FC99999\r\n}}}\r\n\r\nwhen compiled in 32 bit mode\r\nand\r\n{{{\r\n0x3E4CCCCD 0x3E4CCCCD\r\n}}}\r\n\r\nwhen compiled in 64 bit mode.\r\nDMD displays the latter for both code sizes.\r\n\r\nThis is on x86_64 linux, gdc built with gcc v4.5.1.\r\n\r\nThe stack looks like this just prior to the call.\r\n{{{\r\n0x0807c3d4   0x00000009    0x0806cfa8\t  0xa0000000\r\n0x3fc99999   0x3e4ccccd\r\n\r\n}}}\r\n\r\nThere is no problem formatting doubles with %X.","assignee":null,"created_on":"2011-10-20T00:13:37.369853+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T10:02:07.109749+00:00","id":250},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdmd doesn't work with response file (important for rdmd)","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"When called with a response file {{{gdmd '@\/tmp\/.rdmd....rsp'}}} gdmd complains about various switches that normally work.\r\n{{{\r\ngdc: error: unrecognized option '-d'\r\ngdc: error: unrecognized option '-version=FOO'\r\ngdc: error: unrecognized option '-vdmd'\r\ngdc: error: unrecognized option '-release'\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-30T19:46:39.728136+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T10:01:30.318452+00:00","id":271},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Problem with passing ref parameters to properties","reporter":null,"component":null,"watchers":["venix1","ibuclaw"],"content":"We are seeing a problem with passing ref parameters to properties. This bug only occurs in certain situations. Consider the following code:\r\n\r\n{{{\r\nvoid runTest()\r\n{\r\n\tThing t;\r\n\tt.vPosition = (Clock.currStdTime % 2 == 0) ? Vec(2, 2) : Vec(3, 3);\r\n\tVec v = t.vPosition;\r\n\r\n\toutputDebug(\"%d %d\\n\", v.x, v.y);\r\n}\r\n\r\nstruct Vec\r\n{\r\n\tint x;\r\n\tint y;\r\n}\r\n\r\nstruct Thing\r\n{\r\n\t@property Vec vPosition() { return mPosition; }\r\n\t@property Vec vPosition( const ref Vec value ) { return mPosition = value; }\r\n\r\nprivate:\r\n\tVec mPosition;\r\n}\r\n}}}\r\n\r\nNow, this code should output either \"2 2\" or \"3 3\" depending on the time. However, on release builds this code will output \"0 0\" every time it is run. This seems to happen regardless of the optimization level (we have tried with -O1 and -O3). Some things to note is that the bug will NOT occur if any of the following is true:\r\n\r\n- We compile the code in debug mode.\r\n- We specify a constant known at compile time (eg. \"true\") instead of the non-deterministic time value.\r\n- We save the vector into a temporary local variable before passing it to the property.\r\n- We remove the \"const ref\" from the property setter and pass the vector by value.\r\n\r\nDebugging the code reveals that the value passed to the getter is indeed 0,0, which rules out the getter as the error source.","assignee":null,"created_on":"2012-05-10T14:14:33.232260+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T10:00:04.342552+00:00","id":340},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdmd -run interferes with program arguments","reporter":"WebDrake","component":null,"watchers":["WebDrake","ibuclaw"],"content":"When gdmd -run is used to run a D file in scripting mode, it runs the compiled-on-the-fly program with an additional include argument that can interfere with the program's expected command-line argument.\n\nMinimal example attached.  If I run,\n\n   gdmd -run arguments.d\n\n... then I trigger the error written into the script, \"I didn't recognize the argument you provided: -I\/usr\/local\/include\/d2\".\n\nA verbose account reveals that gdmd -run is translating to,\n\n   \n{{{\ngdc -c arguments.d -o arguments.o\ngdc arguments.o -o arguments\n.\/arguments -I\/usr\/local\/include\/d2\/\n}}}\n\n... with the last statement triggering the error in the script.","assignee":null,"created_on":"2012-04-19T17:33:11.573896+00:00","version":null,"edited_on":"2012-04-21T03:57:46.599459+00:00","milestone":null,"updated_on":"2013-09-17T14:01:55.169762+00:00","id":335},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Separate libphobos main function from library.","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"GCC will implicitly link _main when supplied by library files.  This causes issue with MinGW when using alternate entry points DllMain or WinMain(See #195).\r\n\r\nThis proposal is to separate from dmain2.d the main function into another file dmain.d.  By leaving dmain.o out of libgphobos.a it then becomes possible to avoid the implicit linking and by modifying the specs still include it when linking normal programs.\r\n\r\nCommand line arguments -mwindows and -shared are used when utilizing MinGW's alternate entry points.","assignee":null,"created_on":"2011-09-03T20:03:15.124753+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T09:57:10.925099+00:00","id":229},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC support for NRVO","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Currently, GDC does not implement named return value optimisations in glue frontend.\r\n\r\nExample testcase that should compile and generate correct code.\r\n\r\n{{{\r\nstruct Foo { @disable this(this); }\r\nFoo makeFoo()\r\n{\r\n   Foo f;\r\n   return f;\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-10-03T22:29:12.974004+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T09:56:01.660442+00:00","id":244},{"status":"resolved","priority":"minor","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Missing debug type info for enumerator variables","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Compiling this code\r\n\r\n{{{\r\n#!D\r\nenum enum_byte   : byte   { kE1, kE2, kE3 }\r\nenum enum_ubyte  : ubyte  { kE1, kE2, kE3 }\r\nenum enum_short  : short  { kE1, kE2, kE3 }\r\nenum enum_ushort : ushort { kE1, kE2, kE3 }\r\nenum enum_int    : int    { kE1, kE2, kE3 }\r\nenum enum_uint   : uint   { kE1, kE2, kE3 }\r\nenum enum_long   : long   { kE1, kE2, kE3 }\r\nenum enum_ulong  : ulong  { kE1, kE2, kE3 }\r\n\r\nvoid main()\r\n{\r\n\tenum_byte var_byte;\r\n\tenum_ubyte var_ubyte;\r\n\tenum_short var_short;\r\n\tenum_ushort var_ushort;\r\n\tenum_int var_int;\r\n\tenum_uint var_uint;\r\n\tenum_long var_long;\r\n\tenum_ulong var_ulong;\r\n}\r\n}}}\r\n\r\nwith \"gdc -g\" does not produce correct debug information for the variables. \"objdump -g -W\" on the object file shows:\r\n\r\n{{{\r\n#!objdump\r\n...\r\n <2><f8>: Abbrev Number: 3 (DW_TAG_lexical_block)\r\n    <f9>   DW_AT_low_pc      : 0x8\t\r\n    <101>   DW_AT_high_pc     : 0x3f\t\r\n <3><109>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <10a>   DW_AT_name        : var_ulong\t\r\n    <114>   DW_AT_decl_file   : 1\t\r\n    <115>   DW_AT_decl_line   : 20\t\r\n    <116>   DW_AT_location    : 2 byte block: 91 50 \t(DW_OP_fbreg: -48)\r\n <3><119>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <11a>   DW_AT_name        : var_long\t\r\n    <123>   DW_AT_decl_file   : 1\t\r\n    <124>   DW_AT_decl_line   : 19\t\r\n    <125>   DW_AT_location    : 2 byte block: 91 58 \t(DW_OP_fbreg: -40)\r\n <3><128>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <129>   DW_AT_name        : var_uint\t\r\n    <132>   DW_AT_decl_file   : 1\t\r\n    <133>   DW_AT_decl_line   : 18\t\r\n    <134>   DW_AT_location    : 2 byte block: 91 60 \t(DW_OP_fbreg: -32)\r\n <3><137>: Abbrev Number: 5 (DW_TAG_variable)\r\n    <138>   DW_AT_name        : var_int\t\r\n    <140>   DW_AT_decl_file   : 1\t\r\n    <141>   DW_AT_decl_line   : 17\t\r\n    <142>   DW_AT_type        : <0x18b>\t\r\n    <146>   DW_AT_location    : 2 byte block: 91 64 \t(DW_OP_fbreg: -28)\r\n <3><149>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <14a>   DW_AT_name        : var_ushort\t\r\n    <155>   DW_AT_decl_file   : 1\t\r\n    <156>   DW_AT_decl_line   : 16\t\r\n    <157>   DW_AT_location    : 2 byte block: 91 6a \t(DW_OP_fbreg: -22)\r\n <3><15a>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <15b>   DW_AT_name        : var_short\t\r\n    <165>   DW_AT_decl_file   : 1\t\r\n    <166>   DW_AT_decl_line   : 15\t\r\n    <167>   DW_AT_location    : 2 byte block: 91 6c \t(DW_OP_fbreg: -20)\r\n <3><16a>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <16b>   DW_AT_name        : var_ubyte\t\r\n    <175>   DW_AT_decl_file   : 1\t\r\n    <176>   DW_AT_decl_line   : 14\t\r\n    <177>   DW_AT_location    : 2 byte block: 91 6e \t(DW_OP_fbreg: -18)\r\n <3><17a>: Abbrev Number: 4 (DW_TAG_variable)\r\n    <17b>   DW_AT_name        : var_byte\t\r\n    <184>   DW_AT_decl_file   : 1\t\r\n    <185>   DW_AT_decl_line   : 13\t\r\n    <186>   DW_AT_location    : 2 byte block: 91 6f \t(DW_OP_fbreg: -17)\r\n <1><18b>: Abbrev Number: 6 (DW_TAG_base_type)\r\n    <18c>   DW_AT_byte_size   : 4\t\r\n    <18d>   DW_AT_encoding    : 5\t(signed)\r\n    <18e>   DW_AT_name        : int\t\r\n...\r\n}}}\r\n\r\nSo, the type is missing but for var_int. In other circumstances it works for other base type aswell but I have not found a pattern yet.\r\n\r\nAs a bonus, it would be nice if the actual enumerator type with the list of constants could be emitted to the debug info.","assignee":"ibuclaw","created_on":"2012-05-11T06:49:08.693172+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-09-17T09:42:38.437835+00:00","id":341},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"SIMD multiplication using float4 doesn't work","reporter":"jkrempus","component":null,"watchers":["ibuclaw","jkrempus","venix1"],"content":"This program:\n\n{{{\nimport core.simd;\nvoid main()\n{\n    float4 a;\n    a = a * a;\n}\n}}}\n\nFails to compile with a recent MinGW release. The error message is:\n\n{{{\na.d:6: Error: incompatible types for ((a) * (a)): '__vector(float[4LU])' and '__vector(float[4LU])'. \n}}}\n\nI got the error message above with gcc-4.6.1-tdm64-1-gdc-dd401b9-20120513-D2.058.7z. The program compiles without errors with gcc-4.6.1-tdm64-1-gdc-232cd89d90b4-20120128.7z","assignee":"venix1","created_on":"2012-06-04T14:40:56.144345+00:00","version":null,"edited_on":"2012-06-04T14:41:41.694020+00:00","milestone":null,"updated_on":"2013-09-17T08:57:54.139734+00:00","id":346},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"compile d2 error(tdm+mingw+gcc 4.3.5)","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"gcc-4.3.5\/build\/.\/gcc\/gdc -B\/home\/czkkl008\/gcc-4.3.5\/build\/.\/gcc\/ -L\/home\/czkkl008\/gcc-4.3.5\/build\/i686-pc-mingw32\/winsup\/mingw -L\/home\/czkkl008\/gcc-4.3.5\/build\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/home\/czkkl008\/gcc-4.3.5\/winsup\/mingw\/include -isystem \/home\/czkkl008\/gcc-4.3.5\/winsup\/w32api\/include -B\/mingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/mingw\/i686-pc-mingw32\/include -isystem \/mingw\/i686-pc-mingw32\/sys-include -o core\/thread.o -Wall -g -frelease -O2  -nostdinc -pipe -I ..\/..\/..\/libphobos -I .\/i686-pc-mingw32  -fdeprecated -fintfc-file=core\/thread.di -c ..\/..\/..\/libphobos\/core\/thread.d\r\n{standard input}: Assembler messages:\r\n{standard input}:542: Error: bad memory operand `'\r\n{standard input}:598: Error: bad memory operand `'\r\nmake[3]: *** [core\/thread.o] Error 1\r\nmake[3]: Leaving directory `\/home\/czkkl008\/gcc-4.3.5\/build\/i686-pc-mingw32\/libphobos'\r\n\r\nany hints?\r\n\r\nbtw, I can compile d1 successfully this way,\r\nalso I tried gcc from mingw, cc1d.exe compiled but \r\ncouldn't run.","assignee":"ibuclaw","created_on":"2010-11-16T07:29:25.947007+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-23T01:06:29.118651+00:00","id":100},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"version=Posix is not defined","reporter":"klickverbot","component":null,"watchers":["klickverbot"],"content":"In versions 1.040 and 1.041 of the DMD frontend, »Posix« is regarded a reserved version and is predefined by the compiler, like it is for D2. Because this breaks compatibility with quite a few existing build systems which try to set it via command line flag, later frontend versions have been changed to allow setting it manually while still defining it automatically.\r\n\r\nWhile removing the superfluous version definitions from the build scripts to compile code with hg tip should be no problem in theory, it leads to troubles because GDC currently does not define »version=Posix«.\r\n\r\nThe following patch should fix the issue by defining »Posix« along with »Unix« if a Unix-like system is detected (do not forget to regenerate »configure« with Autoconf):","assignee":null,"created_on":"2009-10-25T23:46:13.153267+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2009-10-26T01:09:11.122282+00:00","id":3},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: non-trivial conversion at assignment","reporter":"jpf","component":null,"watchers":["ibuclaw","jpf"],"content":"Reduced from a failing std.file unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nCompiling file.d with -c -O2 and a GCC 4.6.2 compiler which was configured with --enable-checking produces this output:\n{{{\nfile.d: In function 'file.blah':\nfile.d:3:0: error: non-trivial conversion at assignment\nKeepTerminator\n<unnamed-unsigned:8>\n# .MEM_23 = VDEF <.MEM_10>\n__r780869206676602881.keepTerminator = SR.2_19;\n\nfile.d:3:0: internal compiler error: verify_stmts failed\n}}}","assignee":null,"created_on":"2012-02-21T19:15:23.093004+00:00","version":null,"edited_on":"2012-02-21T19:18:11.103949+00:00","milestone":null,"updated_on":"2012-02-25T17:23:28.463965+00:00","id":314},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Undefined reference \"__iob\" under Windows.","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"{{{\nAfter compiling gdc and phobos for the mingw platform, when attempting to compile and link an executable the following error appears.\n\nInfo: resolving __iob by linking to __imp___iob (auto-importfu000001.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000004.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000006.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000008.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000010.o:(.idata$2+0xc): undefined reference to `libmsvcrt_a_iname'\nfu000012.o:(.idata$2+0xc): more undefined references to `libmsvcrt_a_iname' follow\nnmth000000.o:(.idata$4+0x0): undefined reference to `_nm___iob)\n\nAfter investigating the error, the problem comes down to a single unidentified symbol \"_iob\".  \n\nMinGW uses \"_imp___iob\" so one must replace the references to \"_iob\" with \"_imp___iob\".  \n\nIncluded is a patch that does that.  There are three places where the change was made, in druntime, phobos, and phobos2.\n\nOnly D1(phobos) has been tested.\n}}}\n","assignee":null,"created_on":"2010-05-24T06:21:55.361806+00:00","version":null,"edited_on":"2010-05-24T06:24:06.040239+00:00","milestone":null,"updated_on":"2010-07-30T21:08:11.852000+00:00","id":21},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"FreeBSD libphobos updates","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Attached are updates to the FreeBSD-specific parts of libphobos.\r\n\r\nIncludes small update to std.c.freebsd.freebsd, and a bugfix in the configure file (if we are building for freebsd, we should be including freebsd.o as an object we build in :)\r\n\r\nRegards\r\nIain","assignee":null,"created_on":"2010-04-16T23:12:19.164192+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-21T18:37:08.945896+00:00","id":18},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"gdmd: libraries not put into -od dir","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r"],"content":"If you specify -lib, -of and -od dmd puts the final library into the specified dir (I guess at least if the -of argument is just a filename and no complete path)\r\n\r\ngdmd otoh puts the library into the working dir.","assignee":null,"created_on":"2011-12-10T18:47:22.857079+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-17T14:36:08.291686+00:00","id":283},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Errors with gcc.builtins when building libphobos on Mac OS X","reporter":"ricochet1k","component":null,"watchers":["ricochet1k"],"content":"I was trying to build gdc using gcc 4.3.1 and the latest source. The build seemed to go fine except for these errors. I can rebuild again if I need to to check for any other errors, but I wanted to check and see if there was something obvious wrong.","assignee":null,"created_on":"2009-12-15T04:36:02.207782+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2009-12-24T18:15:26.266462+00:00","id":5},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"64 bit support","reporter":null,"component":null,"watchers":[],"content":"does the compiler support 64-bit ?\r\nthe webpages seems not clearify whether it does or doesn't.\r\n\r\nI just ran into a lot of checksum errors (gcc 4.3.4 with newest pull) on my machines when checking the d build, and my instinct tells me that maybe 64-bit is a WIP..\r\n\r\nthank you for reading.","assignee":null,"created_on":"2010-04-04T18:46:10.488245+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-04-13T15:32:40.206232+00:00","id":15},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Support -deps","reporter":"cybershadow","component":null,"watchers":["cybershadow"],"content":"This is a feature request.\r\n\r\nDMD has a relatively new option \"-deps\" which outputs module dependencies. This feature is required for some build tools, such as xfbuild.","assignee":null,"created_on":"2010-03-13T11:13:10.928908+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-18T20:15:30.583933+00:00","id":10},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC fails to compile tango-0.99.8 on Windows. Template instantiating error.","reporter":"venix1","component":null,"watchers":["venix1"],"content":"GCC 4.3.1, GDC <<changeset 76:7ef3514fb27b>>\n\nRecently I tried building GDC version 1 using  TDM's GCC\/mingw32 patches, build files, and Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\n{{{\ntango\\math\\Math.d:212: Error: function tango.math.Math.min!(dchar,uint).min parameter min._param_zu is already defined\n\ntango\\math\\Math.d:2426: Error: template instance tango.math.Math.min!(dchar,uint) error instantiating\n}}}\n\nI had no issues building tango on Linux with the same changeset.\n\nAlso the second message should actually read 'tango\\text\\Regex.d:2426' but does not.\n\nThe minimal code required to produce the error is\n{{{\nvoid min(T...)(T arg)\n{}\n}}}","assignee":null,"created_on":"2010-02-16T02:14:46.104033+00:00","version":null,"edited_on":"2010-02-16T02:21:31.211860+00:00","milestone":null,"updated_on":"2010-03-15T15:22:28.400164+00:00","id":9},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"seg fault on wrong arg type","reporter":"michaelp","component":null,"watchers":[],"content":"Code that seg faults:\n\n{{{\n\nvoid f( char[] c )\n{\n}\nvoid main()\n{\n\tchar c = '2';\n\tf( c );\n}\n\n}}}\n\nError:\n\n{{{\ntoint.d:7: Error: function toint.f (char[]) does not match parameter types (char)\ntoint.d:0: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <URL:http:\/\/gcc.gnu.org\/bugs.html> for instructions.\n}}}","assignee":null,"created_on":"2010-01-28T02:12:16.932562+00:00","version":null,"edited_on":"2010-01-28T14:17:52.129318+00:00","milestone":null,"updated_on":"2010-03-15T15:14:44.678559+00:00","id":6},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"add JSON support","reporter":"michaelp","component":null,"watchers":[],"content":"There is currently no JSON support in gdc\/gdmd. (-X switch in dmd) In dmd, it was added in 1.050, but because gdc does not use the main function in mars.c, new compiler options (such as -X) are not added without a little bit more work.\r\n\r\nThere is also one thing to consider when adding the option to gdc. In dmd, you can use '-X', and the output file defaults to the name of the main source file. But, you can also use '-Xfilename' to send the output to the specified filename.\r\n\r\nHaving attempted to add support for it, it seems very difficult to have to command line switches in gdc that have different parameters to them. I think that gdc should only have '-Xfilename', and with gdmd, we decide on the correct filename from there.","assignee":null,"created_on":"2010-07-31T23:40:16.508992+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-09T22:04:55.412119+00:00","id":52},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"static assert(0) building libphobos on freebsd targets","reporter":"ibuclaw","component":null,"watchers":["ibuclaw","michaelp"],"content":"See the History log:\r\n{{{\r\n  * The version symbol for FreeBSD is now \"freebsd\"\r\n}}}\r\n\r\nD1 does not adhere to this change in certain places, causing static assert(0) errors to occur on bsd-like platforms.\r\n\r\nAttached is a patch that makes the relevant changes for libphobos to build. Though ideally libphobos should really be updated to a more recent revision.","assignee":"michaelp","created_on":"2010-03-14T11:10:19.080111+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-03-16T07:49:54.991885+00:00","id":13},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-fignore-unknown-pragmas doesn't seem to work","reporter":"Andrej08","component":null,"watchers":["ibuclaw","Andrej08"],"content":"File:\r\n{{{\r\nmodule test;\r\npragma(lib, \"kernel32.lib\");\r\nvoid main() { }\r\n}}}\r\n\r\n{{{\r\ngdmd -ignore test.d\r\ncc1d.exe: warning: pragma(lib) not implemented [-Wunknown-pragmas]\r\n\r\ngdc -fignore-unknown-pragmas test.d\r\ncc1d.exe: warning: pragma(lib) not implemented [-Wunknown-pragmas]\r\n}}}\r\n\r\nIn the GDMD file it says:\r\n{{{\r\n  -ignore        ignore unsupported pragmas\r\n}}}\r\n\r\nSo I thought it would silence the warning.\r\n","assignee":null,"created_on":"2011-12-15T14:56:36.792819+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-17T14:16:07.036233+00:00","id":286},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc doesn't know about MM and XMM registers","reporter":null,"component":null,"watchers":[],"content":"the following code:\r\n{{{\r\n#!D\r\nint main()\r\n{\r\ndouble dv = 1.0;\r\nasm\r\n{\r\nmov EAX, dv;\r\nmovq MM0, dv;\r\nmovhpd XMM0, dv;\r\n}\r\nreturn 0;\r\n}\r\n}}}\r\ncompiles fine with dmd but gdc says:\r\nasmtest_gdc.d:7: error: unknown register name ‘mm0’ in ‘asm’\r\nasmtest_gdc.d:8: error: unknown register name ‘xmm0’ in ‘asm’\r\n","assignee":null,"created_on":"2010-02-12T14:39:30.376171+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-02-28T15:28:57.487005+00:00","id":7},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC 4.5.2:  ICE when using byte","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Happens with -O -inline -release in both 32 and 64 mode:\r\n\r\n{{{\r\nbyte[] seq(T, U)(T start, U end) {\r\n    auto output = new byte[cast(size_t) ((end - start))];\r\n\r\n    size_t count = 0;\r\n    for(T i = start; i < end; i += 1) {\r\n        output[count++] = i;\r\n    }\r\n    return output;\r\n}\r\n\r\nstruct Perm {\r\n    this(byte[] input) { }\r\n}\r\n\r\nPerm perm(T...)(T stuff) {\r\n    return Perm(seq(cast(byte) 0, cast(byte) stuff[0]));\r\n}\r\n\r\nvoid main() {\r\n    \/\/ Test degenerate case of len == 0;\r\n    perm(0);\r\n}\r\n}}}\r\n\r\nError message:\r\n\r\n{{{\r\ntest.d: In function ‘perm’:\r\ntest.d:15:0: internal compiler error: in get_initial_def_for_induction, at tree-vect-loop.c:2431\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}","assignee":"ibuclaw","created_on":"2011-02-19T22:59:13.111809+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-20T20:35:23.901760+00:00","id":155},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC does not set version=Windows","reporter":"venix1","component":null,"watchers":["venix1"],"content":"On a windows system, compiling GDC doesn't set Windows version but has it reserved making it impossible to set via the command line.","assignee":null,"created_on":"2010-02-16T02:02:05.820477+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-03-15T17:25:20.909728+00:00","id":8},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"STATIC_CHAIN_EXPR not caught in estimate_num_insns_1()","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"STATIC_CHAIN_EXPR not caught in the case statement in estimate_num_insns_1()\r\n\r\nAs a result, the following code:\r\n\r\n{{{\r\n#!d\r\n\r\nstruct A (alias F) {\r\n    int f() { return F(); }\r\n}\r\n\r\nvoid main()\r\n{\r\n    int f() { return 42; }\r\n    A!(f) a;\r\n}\r\n}}}\r\n\r\nreturns an internal compiler error.\r\n\r\nThis affects all gcc versions (tested on 4.1.3 and 4.3.5), so patches need updating. :-)\r\n\r\nRegards\r\nIain","assignee":"ibuclaw","created_on":"2010-04-01T17:43:59.455119+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-30T16:19:39.723708+00:00","id":14},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Unable to compile gdc.","reporter":null,"component":null,"watchers":[],"content":"Platform: x86_64, Gentoo\r\n\r\nFollowed instructions as per wiki front page. Compilation fails with:\r\n\r\n\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/gdc -B\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o std\/file.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/file.d\r\n\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/gdc -B\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o std\/mmfile.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/mmfile.d\r\n\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/gdc -B\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o std\/path.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/path.d\r\n\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/gdc -B\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o std\/perf.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/perf.d\r\n\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/gdc -B\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -o std\/process.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/process.d\r\n..\/..\/..\/libphobos\/std\/process.d:288: static assert  is false\r\nmake[3]: *** [std\/process.o] Error 1\r\nmake[3]: Leaving directory `\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir\/x86_64-unknown-linux-gnu\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/opt\/src\/gdc\/dev\/gcc-4.3.4\/objdir'\r\nmake: *** [all] Error 2\r\n\r\nWhere should I look to resolve this issue ?\r\nthanks...","assignee":null,"created_on":"2010-04-17T23:20:20.433808+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-04-18T16:44:57.833603+00:00","id":20},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault on building phobos","reporter":"klickverbot","component":null,"watchers":["klickverbot","michaelp"],"content":"While building phobos as part of building the whole gdc, compilation of std\/file.d aborts with a compiler segfault. I have attached the output of the failing command line (with an added -v) below:\r\n\r\n{{{\r\n\/media\/build\/build\/gdc\/.\/gcc\/gdc -B\/media\/build\/build\/gdc\/.\/gcc\/ -B\/opt\/gdc\/i686-pc-linux-gnu\/bin\/ -B\/opt\/gdc\/i686-pc-linux-gnu\/lib\/ -isystem \/opt\/gdc\/i686-pc-linux-gnu\/include -isystem \/opt\/gdc\/i686-pc-linux-gnu\/sys-include -o std\/file.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe           -I ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos -I ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/internal\/gc -I .\/i686-pc-linux-gnu -c ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/std\/file.d -v\r\nReading specs from \/media\/build\/build\/gdc\/.\/gcc\/specs\r\nTarget: i686-pc-linux-gnu\r\nConfigured with: ..\/..\/src\/gdc\/dev\/gcc-4.3.4\/configure --enable-languages=d --disable-multilib --disable-shared --prefix=\/opt\/gdc\r\nThread model: posix\r\ngcc version 4.3.4 (GCC)\r\nCOLLECT_GCC_OPTIONS='-B\/media\/build\/build\/gdc\/.\/gcc\/' '-B\/opt\/gdc\/i686-pc-linux-gnu\/bin\/' '-B\/opt\/gdc\/i686-pc-linux-gnu\/lib\/' '-isystem' '\/opt\/gdc\/i686-pc-linux-gnu\/include' '-isystem' '\/opt\/gdc\/i686-pc-linux-gnu\/sys-include' '-o' 'std\/file.o' '-g' '-frelease' '-O2' '-fversion=GC_Use_Alloc_MMap' '-fversion=GC_Use_Stack_GLibC' '-fversion=GC_Use_Data_Fixed' '-nostdinc' '-pipe' '-I' '..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos' '-I' '..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/internal\/gc' '-I' '.\/i686-pc-linux-gnu' '-c' '-v' '-mtune=generic'\r\n \/media\/build\/build\/gdc\/.\/gcc\/cc1d ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/std\/file.d -quiet -dumpbase file.d -mtune=generic -auxbase-strip std\/file.o -g -O2 -version -frelease -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -iprefix \/media\/build\/build\/gdc\/gcc\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.3.4\/ -isystem \/media\/build\/build\/gdc\/.\/gcc\/include -isystem \/media\/build\/build\/gdc\/.\/gcc\/include-fixed -nostdinc -I ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos -I ..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/internal\/gc -I .\/i686-pc-linux-gnu -o - |\r\n \/media\/build\/build\/gdc\/.\/gcc\/as -V -Qy -o std\/file.o -\r\nGNU D (GCC) version 4.3.4 (i686-pc-linux-gnu)\r\n        compiled by GNU C version 4.3.4, GMP version 4.2.4, MPFR version 2.4.0.\r\nGGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072\r\nGNU assembler version 2.19.1 (i486-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.19.1\r\n..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/std\/file.d: In function ‘listdir’:\r\n..\/..\/..\/..\/src\/gdc\/dev\/gcc-4.3.4\/libphobos\/std\/file.d:1402: internal compiler error: Segmentation fault\r\n}}}","assignee":"michaelp","created_on":"2009-10-23T22:13:10.833468+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-04-06T02:03:35.925317+00:00","id":2},{"status":"wontfix","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Remove C_TARGET_OBJS from D_BORROWED_C_OBJS","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Having it there only satisfies a dependency for 1 function in the powerpc architectures, and whilst is harmless for i386 and amd64, for others it only brings in more missing dependencies. ie: for ARM, you need to bring in c-common.o, and everything that object depends on also, else it fails to build.\r\n\r\nSince all that needs changing is a macro in gcc\/config\/rs6000.h without it, I propose that we remove C_TARGET_OBJS altogether, and update the patches to fill the dependency.\r\n\r\nAttached is a patch which has the removal of C_TARGET_OBJS from gcc-4.1 and gcc-4.3 only, and an update of their corresponding patches.\r\n\r\nRegards\r\nIain","assignee":null,"created_on":"2010-04-17T10:58:08.208988+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-18T20:28:06.785943+00:00","id":19},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Constant integer generation patch - testers needed.","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This is kind of a sensitive change, but it may attack a possible problem in GDC.\r\n\r\nCurrently in the code that creates the integer constant representations for GDC >= 4.0, a comment is left stating a possible issue where \"VALUE may be given an incorrect representation for TYPE.\"\r\n\r\nExample:\r\n{{{\r\nuint x = cast(uint) -3; \/\/ becomes \"-3u\" -- value=0xfffffffffffffd type=Tuns32\r\n}}}\r\n\r\nAs a result, constant folding will not work correctly unless some hacks are done to ensure the type is force fitted.\"\r\n\r\n\r\nIf this is the case, might as well try to do it the \"right\" way. Attaching the current update I have for it, it should be heavily tested as it may cause a regression in constant TYPE representations - especially in the upper and lower bounds of these types where overflow may occur.\r\n\r\nAlso, it is kinda needed for GCC-4.4 to work. :-)\r\n\r\nSo if everyone (anyone) can stress test it against any projects you have, and report back any success \/ failures, would be grateful.\r\n\r\nRegards\r\n","assignee":"ibuclaw","created_on":"2010-08-15T20:01:33.854380+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-22T22:03:35.469211+00:00","id":55},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"immutable, ref keywords not understood by gdc","reporter":null,"component":null,"watchers":[],"content":"Thanks for your effort implementing a d compiler with gcc backend.\r\n \r\nI have downloaded gdc and followed the instructions you posted.\r\nEverything worked fine (classes, templates, etc) until I tried with a few keywords like \"immutable\" and \"ref\". gdc won't understand them. Details are below. If you need more info let me know. Any help is appreciated. \r\nThanks, \r\nG\r\n{{{\r\n#!bash\r\n$ gdc --version\r\ngdc (GCC) 4.3.4\r\n...\r\n$ cd ~\/software\/gdc\/d\r\n$ cat ChangeLog\r\n2009-01-31  Arthur Loiret  <arthur.loiret@u-psud.fr>\r\n...\r\n$ cat b.d\r\nimport std.stdio;\r\nvoid main()\r\n{\r\n        immutable int x = 3;\r\n}\r\n$ gdc b.d\r\nb.d:6: found 'int' when expecting ';' following 'statement'\r\n\r\n$ cat c.d\r\nimport std.stdio;\r\nref int foo()\r\n{\r\n        auto p = new int;\r\n        return *p;\r\n}\r\nvoid main()\r\n{\r\n        int x = foo();\r\n}\r\n$ gdc c.d\r\nc.d:3: Declaration expected, not 'ref'\r\nc.d:6: Declaration expected, not 'return'\r\nc.d:7: unrecognized declaration\r\n}}}\r\n----------------------------","assignee":null,"created_on":"2010-04-06T18:02:21.618017+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-19T20:09:50.822552+00:00","id":16},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Allow GDC to build if GNU C has execvpe() implemented","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Starting with glibc-2.11, GNU C has execvpe() implemented, the side effect of this is that GNU_Need_execvpe is not set in the configure stage, and compiling std\/process.d returns a static assert(0).\r\n\r\n2 proposed fixes.\r\n\r\nFix1) get rid of \"else version(Windows)\" and the static assert.\r\n\r\nFix2) do what upstream phobos does, and use version(Posix) instead of GNU_Need_execvpe.\r\n\r\n(edit): STUB - phobos2 does not have \"Posix\" defined, perhaps use \"Unix\" instead? - ugh. :)\r\n\r\nRegards\r\nIain\r\n\r\n(PS: trust me to find this out).","assignee":null,"created_on":"2010-04-07T22:30:01.652140+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-22T19:18:43.386969+00:00","id":17},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"array operations don't work with type float","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"Test:\r\n{{{\r\nimport std.stdio;\r\nvoid main() \r\n{\r\n\tfloat[] a = [1,1,1,1,1,1,1,1];\r\n\ta[] += 6;\r\n\tforeach( f; a )\r\n\t\twritefln( f );\r\n}\r\n}}}\r\n\r\nPrints out a column of 1s instead of a column of 7s.\r\n\r\nUsing revision 110 in repository.","assignee":null,"created_on":"2010-07-07T15:17:55.718747+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-07T21:07:53.623019+00:00","id":31},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc-4.3: ICE at dwarf2out.c:7519","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Second bug found in dwarf2out.c - this time the compiler flags that trigger it are just '-g -O2'\r\n\r\nCode\r\n{{{\r\nvoid outer(int a)\r\n{\r\n    void inner(int b)\r\n    {\r\n        while (1) {\r\n            inner(b);\r\n        }\r\n    }\r\n    inner(a);\r\n}\r\n}}}\r\n\r\nOutputs\r\n{{{\r\ninner.d:9: internal compiler error: in output_die, at dwarf2out.c:7519\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}","assignee":null,"created_on":"2010-07-11T19:18:50.426013+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-14T14:45:00.335978+00:00","id":39},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"char** null after compilation","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"In order to help keep track of bugs that date back to when David Friedman maintained GDC that have been posted in D's bugzilla, I am going post ones that I have found to still be a problem here.\r\n\r\nOriginal issue: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1751\r\n\r\nCode to reproduce the problem:\r\n\r\n{{{\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n    \/\/prints true with gdc-0.24,\r\n    \/\/and false with gdc-0.23 and dmd 1.024\r\n    writefln(test is null);\r\n    assert(test, \"test is only null in gdc 0.24\");\r\n}\r\n\r\nchar** test = [\"hello\", \"test\", \"    \"];\r\n}}}\r\n\r\nIn GDC, the assert occurs. But in DMD, it doesn't. As you can see by the comment, it was fine with GDC 0.23, but stopped working with 0.24.","assignee":null,"created_on":"2010-07-08T03:15:58.896433+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-13T19:23:32.915150+00:00","id":32},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"bad codegen with ulong + float","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"Original issue:\r\n\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1145\r\n\r\nCode to reproduce issue:\r\n\r\n{{{\r\nulong foo ()\r\n{\r\n    return cast(ulong) (cast(ulong) 1176576512 + cast(float) -2);\r\n}\r\n\r\nvoid main ()\r\n{\r\n    assert(foo()==1176576510);\r\n}\r\n}}}\r\n\r\nThe assertion fails in GDC. foo() ends up return 1176576512 instead of the expected 1176576510.\r\n\r\nIn DStress as:\r\n\r\nhttp:\/\/dstress.kuehne.cn\/compile\/o\/odd_bug_16_A.d\r\n\r\nhttp:\/\/dstress.kuehne.cn\/run\/o\/odd_bug_16_B.d","assignee":null,"created_on":"2010-07-08T03:33:10.398144+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-14T15:15:08.981392+00:00","id":34},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"struct layout not the same as dmd","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Thought I might cherry pick 3 more issues myself, so here goes.\r\n\r\nOriginally raised http:\/\/bugs.debian.org\/cgi-bin\/bugreport.cgi?bug=521622\r\n\r\ngdc on i386 inserts four bytes of padding in this struct (so that it's\r\ntotal size is 16 bytes), while gcc and dmd doesn't:\r\n\r\n{{{\r\n\r\nimport std.stdio;\r\n\r\nextern(C)\r\nstruct test {\r\n  int mode;\r\n  double mu;\r\n};\r\n\r\nvoid main()\r\n{\r\n  writefln(\"test.sizeof: \", test.sizeof);\r\n  writefln(\"test.mode.sizeof: \", test.mode.sizeof);\r\n  writefln(\"test.mu.sizeof: \", test.mu.sizeof);\r\n}\r\n}}}\r\n\r\n\r\nAccording to http:\/\/www.digitalmars.com\/d\/1.0\/abi.html, structs should\r\nconform \"to the target's C ABI struct layout\", so it looks like this\r\nis a bug.","assignee":"ibuclaw","created_on":"2010-07-08T07:12:43.675005+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-08T21:20:26.745888+00:00","id":35},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"incorrect codegen for scope(exit) inside switch","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Originally reported: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1041\n\nCode:\n\n{{{\n\nint main()\n{\n    int i = 2;\n\n    switch(3)\n    {\n        scope(exit) { i--; }\n        default:\n    }\n\n    if(i != 2){\n        assert(0);\n    }\n\n    return 0;\n}\n}}}\n\nBuilds and asserts runtime when apparently it shouldn't. I should also be noted that dmd actually cannot build this.","assignee":null,"created_on":"2010-07-08T07:40:32.744827+00:00","version":null,"edited_on":"2010-07-08T07:40:55.305853+00:00","milestone":null,"updated_on":"2010-07-17T10:13:32.139801+00:00","id":37},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Newest GDC improperly handles extern(System), extern(Windows) on Windows","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"**gcc version 4.3.5 (GDC 138:d53a8be7c0ed (DMD 1.055))**\r\n\r\nWhen attempting to compile a dummy program with GDC under windows it fails linking.  \r\n\r\nAll the missing symbols are exported as extern(C) despite being declared extern(Windows).\r\n\r\nThis was confirmed with a simple test program and inspecting the symbol names.\r\n{{{\r\nextern (Windows) int foo1(int i)\r\ngot '_foo1' expected '_foo1@4'\r\n\r\nextern (System) int foo2(int i)\r\ngot '_foo2' expected '_foo2@4'\r\n}}}","assignee":"ibuclaw","created_on":"2010-07-26T23:08:10.860648+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-02T14:25:53.420653+00:00","id":47},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"D_InlineAsm updates","reporter":"ibuclaw","component":null,"watchers":["ibuclaw","michaelp"],"content":"I was going to title this \"ASM, Speed Demons and Curveballs\", but then I thought better than that. :-)\r\n\r\nUpon reflection of a conversation with Michael, here is a rough outline for the future usage of D_InlineAsm in GDC. It shouldn't be applied immediately, and I'd expect a few talks before we have something everyone can agree on.\r\n\r\nThis sets about 3 things:\r\n# Splitting a version GNU_InlineAsm away from D_InlineAsm.\r\nThe difference being that D_InlineAsm will ensure that the MM (MMX\/3dNow) and XMM (SSE) registers are known in the GCC backend. Whilst GNU_InlineAsm will simply mean generic i686 opcodes and registers are supported.\r\nIt's not ideal, but may make a few D library maintainers happy.\r\n# Add 3dNow! opcodes to d-asm-include.h - to satisfy those AMD customers. :-). I haven't gotten round to testing it yet, however, as 3dNow opcodes return values to the MM0 register, I'd presume that it should work fine if treated the same as MMX.\r\n# Uncomment the commented out D_InlineAsm code in D1 phobos internals for testing effects of the above noted updates. Building GDC with the instructions from the wikipage will not have any affect on GDC's performance, however, if anyone wishes to make GDC compiled code faster, he\/she can do so by setting DFLAGS to include -m options to enable MMX and SSE. It builds and runs OK on GCC 4.1.2 on an Intel CPU with SSE support. You can test it yourself by building with:\r\n\r\n{{{\r\nDFLAGS='-O2 -g -frelease -march=pentium3' ..\/configure --enable-languages=d --disable-multilib --disable-shared\r\n}}}\r\n\r\n\r\nAnd with this code example\r\n{{{\r\nvoid main()\r\n{\r\n    short[] a, b;\r\n    a = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];\r\n    b = a.dup;\r\n    for (int i = 0; i < 16711425; i++)\r\n        b[] += a[];\r\n    writefln(b);\r\n}\r\n}}}\r\n\r\nHere is before building libphobos with optimisations\r\n{{{\r\n$ gdc -o array array.d\r\n$ time .\/array \r\n[-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254]\r\n\r\nreal\t0m2.752s\r\nuser\t0m2.648s\r\nsys\t0m0.012s\r\n\r\n}}}\r\n\r\nAnd after...\r\n{{{\r\n$ gdc -o array array.d\r\n$ time .\/array \r\n[-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254,-254]\r\n\r\nreal\t0m0.812s\r\nuser\t0m0.800s\r\nsys\t0m0.004s\r\n\r\n}}}\r\n\r\n\r\nMichael, I've assigned this to you so it will get into your inbox (I hope), as I'd value your thoughts first.\r\n\r\nRegards,\r\nIain","assignee":"michaelp","created_on":"2010-07-06T18:41:11.440246+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-20T17:43:35.140367+00:00","id":30},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"add working options to gdmd usage","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"While adding the -map option to gdmd, I noticed the some options that don't appear in the usage section. I suggest that we added them to the usage section to show people that they are implemented. For whatever reason, they aren't shown right now.\r\n\r\nWhat I've found:\r\n\r\n-cov is implemented on lines 232-233\r\n\r\n-lib is implemented on lines 291-294.\r\n\r\n-man is implemented on lines 358-360. (Perhaps the URL there should change. Also, the browse function doesn't work either. That would need to be changed as well.)\r\n\r\nI'm not sure if there is anymore.","assignee":null,"created_on":"2010-07-25T20:29:45.115619+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-09T22:02:35.656016+00:00","id":46},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"DMD 1.050 and libphobos cleanup.","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Firstly, updated D1 Frontend to 1.050 (patch included), and about to commit it - only a dozen revisions to go now. :-)\r\n\r\n\r\nSecondly, I noticed that there are quite a few differences between DMD's and GDC's maintained phobos library on the D1 side.\r\n\r\nThe one's I took most note of were:\r\n\r\n- Whitespace differences.\r\n\r\n- printf(\"%*s\", s.length, s.ptr)   vs   printf(\"%*s\", s);\r\n\r\n- for(p = 0, p < a.length, p++)   vs   foreach(p; a)\r\n\r\n- *.mak files that aren't needed ?\r\n\r\nSo I set about flicking through each file - trying to set aside what were _genuinely_ GDC specific alterations, and what where DMD updates that should have been applied, but for whatever reason weren't.\r\n\r\nWith that somewhat reached a finished state, I am currently testing the libphobos patch attached.\r\n\r\nThe most testing I've gotten done with it is that libphobos builds and all unittests pass 100%. Though I still consider it experimental for the time being.\r\n\r\n\r\nRegards\r\n\r\nIain","assignee":"ibuclaw","created_on":"2010-06-26T20:50:59.687218+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-02T07:38:50.250830+00:00","id":27},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE at d\/d-objfile.cc:523","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"See attachment. I couldn't reduce it further.\r\n\r\n{{{\r\n$ rdmd --force --build-only --compiler=gdmd -release -O -w -ofvectorAdd vectorAdd.d\r\nopencl\/device.d:1:0: internal compiler error: tree check: expected tree that contains 'decl common' structure, have 'error_mark' in shouldEmit, at d\/d-objfile.cc:523\r\n}}}","assignee":"ibuclaw","created_on":"2011-10-30T19:58:35.519453+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-27T22:48:29.538218+00:00","id":254},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Stack overflow in gdc-4.4","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Raising this issue for reference purposes.\r\n\r\nMinimal code to reproduce.\r\n\r\n{{{\r\nvoid main()\r\n{\r\n    int[10][7] block;\r\n    for (int x = 0; x < 2; x++)\r\n\tfor (int y = 0; y < 7; y++)\r\n\t    block[x][y] = 0;\r\n}\r\n}}}\r\n\r\nProblem is related to d_types_compatible_p(). Where t1 is a type int[][] and t2 is a type int[]. The function returns true, when it should return false.\r\n\r\nIn this instance, compiler flags matter. Is reproducible when optimizations (-O2) is turned on.","assignee":null,"created_on":"2010-08-24T10:51:20.405369+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-24T11:37:51.336231+00:00","id":58},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"duplicate symbols created for negatively initialized int template arguments","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Originally reported: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=2291\r\n\r\nCode example:\r\n{{{\r\nclass A(int startAxis1=-1){\r\n    this() {}\r\n}\r\n\r\nvoid main(){\r\n    A!() aa=new A!()();\r\n}\r\n}}}\r\n\r\nGives the error:\r\n{{{\r\n\/tmp\/cc3rSIj5.s: Assembler messages:\r\n\/tmp\/cc3rSIj5.s:111: Error: symbol `_D6struct6__T1AZ1A5_ctorMFZC6struct6__T1AZ1A' is already defined\r\n\/tmp\/cc3rSIj5.s:130: Error: symbol `_D6struct6__T1AZ1A6__initZ' is already defined\r\n\/tmp\/cc3rSIj5.s:138: Error: symbol `_D6struct6__T1AZ1A7__ClassZ' is already defined\r\n\/tmp\/cc3rSIj5.s:163: Error: symbol `_D6struct6__T1AZ1A6__vtblZ' is already defined\r\n}}}\r\n\r\nnot using the default (either by explicit instantiation or removing it), or a positive default value don't give any problem.","assignee":"ibuclaw","created_on":"2010-07-08T07:31:45.732340+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-27T19:59:50.643790+00:00","id":36},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"C-style variadic functions broken","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=937\r\n\r\nThis appears to be a bug that has slipped through the cracks, the link above describes it.  Tested against the latest DMD it also fails.  \r\n\r\nThe problem appears to be in **func.c:811**\r\n\r\n{{{\r\nif (f->linkage == LINKd || (parameters && parameters->dim))\r\n}}}\r\n\r\nLooking over the code, parameters is initialized later in the function body.  \r\n\r\nBy replacing it with the following, the bug is fixed.\r\n{{{\r\nif (f->linkage == LINKd || (f->parameters && Parameter::dim(f->parameters)))\r\n}}}","assignee":null,"created_on":"2010-08-17T23:52:59.268237+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-19T16:35:47.748105+00:00","id":57},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc\/gdmd should be able to compile .di files","reporter":"michaelp","component":null,"watchers":[],"content":".di files are not able to compiled by gdmd\/gdc.\r\n\r\nWhile right now, gdmd doesn't accept .di files at all, and prints out the usage if you try to compile one, there is an easy fix that allows .di files to be passed to gdmd. However, when this is applied, gdc fails with this message with this command with a .di file:\r\n\r\n{{{\r\ngdmd test.d -c -H\r\ngdmd test.di -c -vdmd\r\n\r\n\/opt\/gdc\/bin\/gdc -c test.di -o test.di.o\r\ngdc: test.di: linker input file unused because linking not done\r\n}}}\r\n\r\nThis is doable with dmd.\r\n\r\nIn test.d:\r\n\r\n{{{\r\nvoid foo() {}\r\n}}}\r\n\r\nGenerated file test.di:\r\n{{{\r\n\/\/ D import file generated from 'test.d'\r\nvoid foo()\r\n{\r\n}\r\n}}}","assignee":null,"created_on":"2010-07-28T03:10:18.315031+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-28T19:07:41.702113+00:00","id":48},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Change default back to D1?","reporter":"michaelp","component":null,"watchers":["michaelp","ibuclaw"],"content":"It appears that no one has been working on the D2 part of GDC as far as I can tell. \r\n\r\nShould the default for the setup-gcc.sh file be changed back to D1 as opposed to D2?","assignee":null,"created_on":"2010-06-21T19:59:49.994806+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-28T20:06:59.349775+00:00","id":26},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Tango's Thread.d fails to compile.","reporter":"venix1","component":null,"watchers":["venix1"],"content":"The problem is most noticeable with Tango's Thread.d as mentioned http:\/\/dsource.org\/projects\/tango\/ticket\/541.\n\nInspecting the output from GDC one notices a missing 0 on the first line which is where the error will always point to.\n\n{{{\n# Inline Asm\npush dword ptr FS:[0];\npush dword ptr FS:[4];\npush dword ptr FS:[8];\n\n# GDC Generated ASM\npushl\t%fs:\npushl\t%fs:4\npushl\t%fs:8\n}}}\n\nAfter spending some time digging around GDC's inline assembly code.  In the file d-asm-i386.h on line 1837, you will find where it outputs the segment registers.  Immediately followed by :.\n\nFollowing shortly after you'll find code to generate the rest of the statement, the only one that interests this is the if statement on line 1932.\n{{{\nif (operand->constDisplacement)\n}}}\nAfter studying the code for a while, I took a guess and assumed that the const value inside the brackets was directly stored inside constDisplacement and modified the if statement to resemble\n{{{\nif (operand->constDisplacement || operand->segmentPrefix != Reg_Invalid)\n}}}\nBasically telling the compiler, even if constDisplacement is 0, generate the code for it if we have a segment register.\n\nAfter recompiling gdc with the fix, it now compiles Thread.d.","assignee":null,"created_on":"2010-05-26T04:42:55.909271+00:00","version":null,"edited_on":"2010-05-26T04:43:17.301747+00:00","milestone":null,"updated_on":"2010-06-03T22:39:36.576642+00:00","id":22},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Array setting causes OutOfMemoryException.","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"{{{\n#!d\nextern (C) void printf(char*, ...);\n\nvoid main()\n{\n  byte[16] tmp;\n  byte[] utmp;\n  utmp = tmp[1..0];\n  \n  printf(\"%ud : %ud\\n\", utmp.length, tmp.length);\n}\n\n\/* Output:\n4294967295d : 16.  Forces GDC to throw OutOfMemory when trying to allocate space for the array.\n *\/\n}}}\nDMD throws an ArrayBoundsError.\n\nThis problem can be generalized to **array[n..x]** when x < n.","assignee":"ibuclaw","created_on":"2010-09-22T11:22:27.950654+00:00","version":null,"edited_on":"2010-09-22T11:47:38.235019+00:00","milestone":null,"updated_on":"2010-09-23T09:59:50.697505+00:00","id":66},{"status":"duplicate","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"DMD 2.020","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Haven't started on it yet, but as most of us know it is a *very* big change. So priorities first, what _needs_ to be sorted out before we attempt this?\r\n\r\nRegards","assignee":"ibuclaw","created_on":"2010-07-15T23:49:53.897723+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-27T21:54:52.249803+00:00","id":40},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Clean up line endings","reporter":"venix1","component":null,"watchers":["venix1"],"content":"The repository line endings are a mess.  Which makes applying patches difficult on the files with mixed endings. \r\n\r\n In addition I was apply to apply a patch from DMDv1.046 to DMDv1.047 with about 5 rejected hunks mostly due to a + in a comment left over from manually merging.\r\n\r\nAt present, I'm only aware of two solutions for mercurial.  Win32text and hg-eol.\r\n\r\n{{{\r\naccess.c:         ASCII C++ program text\r\naggregate.h:      ASCII C++ program text\r\naliasthis.c:      ASCII C++ program text, with CRLF line terminators\r\naliasthis.c.orig: ASCII C++ program text\r\naliasthis.h:      ASCII C++ program text, with CRLF line terminators\r\narray.c:          ASCII C++ program text, with CRLF, LF line terminators\r\narrayop.c:        ASCII C++ program text, with CRLF, LF line terminators\r\narraytypes.h:     ASCII C++ program text\r\nartistic.txt:     ASCII English text\r\nasync.c:          ASCII C program text, with CRLF, LF line terminators\r\nasync.h:          ASCII C++ program text, with CRLF line terminators\r\nattrib.c:         ASCII C++ program text, with CRLF, LF line terminators\r\nattrib.h:         ASCII C++ program text, with CRLF, LF line terminators\r\nbit.c:            ASCII C++ program text\r\ncast.c:           ASCII C++ program text, with CRLF, CR, LF line terminators\r\nclass.c:          ASCII C++ program text, with CRLF, LF line terminators\r\nclone.c:          ASCII C++ program text\r\ncomplex_t.h:      ASCII C++ program text\r\ncond.c:           ASCII C++ program text, with CRLF, LF line terminators\r\ncond.h:           ASCII C++ program text\r\nconstfold.c:      ASCII C++ program text, with CRLF, CR, LF line terminators\r\ndchar.c:          ASCII C++ program text\r\ndchar.h:          ASCII C++ program text\r\ndeclaration.c:    ASCII C++ program text, with CRLF, CR, LF line terminators\r\ndeclaration.h:    ASCII C++ program text, with CRLF, CR, LF line terminators\r\ndelegatize.c:     ASCII C++ program text\r\ndoc.c:            ASCII C++ program text, with CRLF, LF line terminators\r\ndoc.h:            ASCII C++ program text\r\ndsymbol.c:        ASCII C++ program text, with CRLF, LF line terminators\r\ndsymbol.h:        ASCII C++ program text, with CRLF, LF line terminators\r\ndump.c:           ASCII C++ program text\r\ne2ir.c:           ASCII C++ program text\r\nelfobj.c:         ASCII C++ program text\r\nentity.c:         ASCII C++ program text\r\nenum.c:           ASCII C++ program text, with CRLF, LF line terminators\r\nenum.h:           ASCII C++ program text, with CRLF, LF line terminators\r\nexpression.c:     ASCII C++ program text, with CRLF, LF line terminators\r\nexpression.h:     ASCII C++ program text, with CRLF, CR, LF line terminators\r\nfunc.c:           ASCII C++ program text, with CRLF, CR, LF line terminators\r\ngnuc.c:           ASCII C++ program text\r\ngnuc.h:           ASCII C program text\r\ngpl.txt:          ASCII English text\r\nhdrgen.c:         ASCII C++ program text\r\nhdrgen.h:         ASCII C++ program text\r\nhtml.c:           ASCII C++ program text\r\nhtml.h:           ASCII C++ program text\r\nidentifier.c:     ASCII C++ program text, with CRLF, CR, LF line terminators\r\nidentifier.h:     ASCII C++ program text, with CRLF, LF line terminators\r\nidgen.c:          ASCII C++ program text, with CRLF, CR, LF line terminators\r\nimpcnvgen.c:      ASCII C++ program text, with CRLF, LF line terminators\r\nimport.c:         ASCII C++ program text, with CRLF, LF line terminators\r\nimport.h:         ASCII C++ program text\r\ninit.c:           ASCII C++ program text, with CRLF, LF line terminators\r\ninit.h:           ASCII C++ program text\r\ninline.c:         ASCII C++ program text\r\ninterpret.c:      ASCII C++ program text, with CRLF, CR, LF line terminators\r\nirstate.c:        ASCII C++ program text, with CRLF line terminators\r\nirstate.h:        ASCII C++ program text, with CRLF line terminators\r\nlexer.c:          ASCII C++ program text, with CRLF, LF line terminators\r\nlexer.h:          ASCII C++ program text, with CRLF, LF line terminators\r\nlibelf.c:         ASCII C++ program text\r\nlib.h:            ASCII C++ program text\r\nlibmach.c:        ASCII C++ program text\r\nlink.c:           ASCII C++ program text, with CRLF, LF line terminators\r\nlstring.c:        ASCII C++ program text, with CRLF, LF line terminators\r\nlstring.h:        ASCII C++ program text\r\nmachobj.c:        ASCII C++ program text, with CRLF line terminators\r\nmacro.c:          ASCII C++ program text\r\nmacro.h:          ASCII C++ program text\r\nman.c:            ASCII C++ program text\r\nmangle.c:         ASCII C++ program text, with CRLF, LF line terminators\r\nmars.c:           ASCII C++ program text, with CRLF, CR, LF line terminators\r\nmars.h:           ASCII C++ program text, with CRLF, LF line terminators\r\nmem.c:            ASCII C program text\r\nmem.h:            ASCII C++ program text\r\nmodule.c:         ASCII C++ program text, with CRLF, LF line terminators\r\nmodule.h:         ASCII C++ program text, with CRLF, LF line terminators\r\nmtype.c:          ASCII C++ program text, with CRLF, CR, LF line terminators\r\nmtype.h:          ASCII C++ program text, with CRLF, LF line terminators\r\nopover.c:         ASCII C++ program text\r\noptimize.c:       ASCII C++ program text\r\nparse.c:          ASCII C++ program text, with CRLF, LF line terminators\r\nparse.h:          ASCII C++ program text\r\nport.c:           ASCII C++ program text, with CRLF, LF line terminators\r\nport.h:           ASCII C++ program text, with CRLF, LF line terminators\r\nreadme.txt:       ASCII English text\r\nrmem.c:           ASCII C program text, with CRLF, LF line terminators\r\nrmem.h:           ASCII C++ program text, with CRLF line terminators\r\nroot.c:           ASCII C++ program text, with CRLF, CR, LF line terminators\r\nroot.h:           ASCII C++ program text, with CRLF, LF line terminators\r\nscope.c:          ASCII C++ program text\r\nscope.h:          ASCII C++ program text, with CRLF, LF line terminators\r\nstatement.c:      ASCII C++ program text, with CRLF, CR, LF line terminators\r\nstatement.h:      ASCII C++ program text, with CRLF, CR, LF line terminators\r\nstaticassert.c:   ASCII C++ program text, with CRLF, LF line terminators\r\nstaticassert.h:   ASCII C++ program text\r\nstringtable.c:    ASCII C++ program text\r\nstringtable.h:    ASCII C++ program text\r\nstruct.c:         ASCII C++ program text, with CRLF, LF line terminators\r\ntemplate.c:       ASCII C++ program text, with CRLF, LF line terminators\r\ntemplate.h:       ASCII C++ program text, with CRLF, LF line terminators\r\ntocsym.c:         ASCII C++ program text, with CRLF, LF line terminators\r\ntodt.c:           ASCII C++ program text, with CRLF, LF line terminators\r\ntoir.c:           ASCII C++ program text, with CRLF, LF line terminators\r\ntoir.h:           ASCII C++ program text\r\ntoobj.c:          ASCII C++ program text, with CRLF, LF line terminators\r\ntotal.h:          ASCII C++ program text\r\ntypinf.c:         ASCII C++ program text, with CRLF, CR, LF line terminators\r\nunialpha.c:       ASCII C++ program text\r\nutf.c:            ASCII C++ program text\r\nutf.h:            ASCII C++ program text\r\nversion.c:        ASCII C++ program text\r\nversion.h:        ASCII C++ program text\r\n}}}","assignee":null,"created_on":"2010-05-27T14:09:02.084301+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-12T17:24:24.298395+00:00","id":23},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfaults with nested array allocation","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"Original issue: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1689\n\nCode to reproduce the issue:\n\n{{{\nvoid main()\n{\n     float[][] bar;\n     bar = new float[][](2,3);\n}\n}}}\n\nGDC seg faults on the line \"bar = new float[][](2,3);\".\n\nIn DStress as:\n\nhttp:\/\/dstress.kuehne.cn\/run\/a\/array_initialization_26_F.d","assignee":null,"created_on":"2010-07-08T03:29:04.135891+00:00","version":null,"edited_on":"2010-07-08T03:34:02.179805+00:00","milestone":null,"updated_on":"2010-08-10T23:23:20.968960+00:00","id":33},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"DMD 1.047","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Here are a series of patches to update GDC to DMD 1.047.  Phobos has been compiled but no executables have been ran\/generated.\r\n\r\ndmd1047_rev88.patch - Line ending patch, optional but I'm not sure the others will merge without the patch or the line endings being unified.\r\n\r\ndmd1047_rev89.patch - Patches the frontend.\r\n\r\ndmd1047_rev90.patch - Patches phobos\r\n\r\ndmd1047_rev91.patch - DMD changes some variables to use const.  This patch will change method signatures to be const void* and then drop it when saving into the dt_t structure.\r\n\r\n\r\nThere were 4 files that had no GDC equivalent;  glue.c, s2ir.c, tocvdebug.c, dwarf.c.  The license was not listed as being for personal use but I believe they are mostly backend related.\r\n\r\nI also commented out some code in statement.c that should be reviewed by someone who knows more.  There are two sections containing \"{{{#if 0 \/\/ DMD v1.047 needs reviewing}}}\".","assignee":null,"created_on":"2010-06-05T00:11:27.063654+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-12T17:27:17.651157+00:00","id":24},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault assigning const arrays.","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Steps to reproduce\r\n{{{\r\nvoid main()\r\n{\r\n    const int[]a = [1,2,3,4,5];\r\n    int[] b = a;\r\n}\r\n}}}\r\n\r\nHaving a look at where it dies, this is issue <<issue 2>> all over again, but for a different type.\r\n\r\nWill have to take another look...","assignee":null,"created_on":"2010-06-07T20:23:18.552866+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-06-19T17:18:59.313765+00:00","id":25},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"SjLj exceptions fail when thrown from catch block","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"The following code fails when GDC is compiled with --enable-sjlj-exceptions on both linux and windows.  \r\n\r\nThis error has existed since gdc 0.24.\r\n\r\n{{{\r\n#!d\r\n\r\nvoid main()\r\n{\r\n    try\r\n    {\r\n        throw new Exception(\"An exception\");\r\n    }\r\n    catch(Exception e)\r\n    {\r\n         printf(\"Caught exception\\n\");\r\n         throw e; \/\/ Causes runtime to abort.\r\n    }\r\n}\r\n}}}\r\n\r\n","assignee":"ibuclaw","created_on":"2010-07-31T13:01:59.108555+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-01T17:24:16.233318+00:00","id":50},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-Wall should not error out compiler","reporter":"ibuclaw","component":null,"watchers":["ibuclaw","michaelp"],"content":"Consider the following bad code :-)\r\n\r\n{{{\r\nvoid warning()\r\n{\r\n    return;\r\n    int a = 5;\r\n}\r\n\r\nvoid main()\r\n{\r\n    warning();\r\n}\r\n}}}\r\n\r\nWhen compiling with the flag '-Wall', a warning that the statement is not reachable is outputted, but the binary is never built. This is inconsistent to the behaviour of gcc, which builds the program anyway.\r\n\r\nWhat should instead happen is:\r\n\r\n{{{\r\n$ gdc warn.d               \/\/ No warnings, builds\r\n$ gdc warn.d -Wall         \/\/ Emits warnings, builds.\r\n$ gdc warn.d -Wall -Werror \/\/ Emits warnings, errors out.\r\n}}}\r\n\r\nRegards\r\n","assignee":"michaelp","created_on":"2010-07-17T20:12:51.707885+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-28T14:18:32.935724+00:00","id":42},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":">>> and >>>= generate wrong code","reporter":"michaelp","component":null,"watchers":["trass3r","ibuclaw"],"content":"Original issue:\r\n\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=3115\r\n\r\nThis was supposed to be fixed in 1.053, but with the front end code, it still does not work in GDC with 1.053. There is lots of useful information in the issue. The problem seemed to be in the backend, which is why it is still broken.\r\n\r\nThe issue in GDC appears to be in d-glue.cc.","assignee":"ibuclaw","created_on":"2010-07-20T16:34:45.104866+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-05T00:31:53.972785+00:00","id":43},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"1.062 outstanding issues","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"\/\/Issue 1:\/\/\r\n\r\nhttp:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=4213\r\n\r\n{{{\r\nstruct X {\r\n union {\r\n   void[] a;\r\n   void[9] b;\r\n }\r\n}\r\n}}}\r\n\r\nThis code seems to work fine, but when taking out the union code, and having a and b as direct struct members, there should be an error. However, there isn't.\r\n\r\nNote that the other piece of code mentioned in the issue is okay:\r\n\r\n{{{\r\nvoid main() {\r\n    void[1] a = void;\r\n}\r\n}}}\r\n\r\nWorks fine, but when you take away the '= void', it supposedly didn't work before. (Didn't work in 1.061 dmd, not sure about 1.061 gdc)\r\n\r\n\/\/Issue 2:\/\/\r\n\r\nMany files in phobos seemed to have had the tabs changed to spaces, as the dmd source changed in 1.058. However, I could not figure out how to fix this, so I left it for now. (I am aware of the expand command)\r\n\r\nIt doesn't seem like all the files have been changed to spaces only though, which also makes it a bit more difficult.\r\n\r\nHere is the phobos changeset where the whitespace seems to have changed:\r\n\r\nhttp:\/\/www.dsource.org\/projects\/phobos\/changeset\/1539\r\n\r\n\/\/Issue 3(?):\/\/\r\n\r\nibuclaw told me that in revisions >= <<changeset 9038432ea1ff>>, gdc did not seem to build phobos. It would fail in socket.d. It seems like on the revision I just uploaded, <<changeset 9f7927e5f551>>, phobos is built fine. The reason why I put this here is because I don't remember phobos failing before, but it could have just been because I wasn't testing well enough.","assignee":"ibuclaw","created_on":"2010-07-31T16:38:48.276867+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-22T16:20:12.310652+00:00","id":51},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Remove unused files in dmd folder?","reporter":"michaelp","component":null,"watchers":["ibuclaw","trass3r"],"content":"Attached is a list of files in currently in the d\/dmd folder of repository.\r\n\r\nBeside each one is either an N, NY, YN, or Y.\r\n\r\nLabeled Y means I found the file was used by looking through Make-lang.in.\r\n\r\nLabeled YN means I could not find that the file was used by looking through Make-lang.in, but files in the dmd directory included it.\r\n\r\nLabelled NY means the file was in Make-lang.in, just not in the standard D_DMD_OBJS place.\r\n\r\nLabelled N means I was able to remove the file from the folder and still build GDC.\r\n\r\nI think that removing these files would cause less clutter in GDC, and when patching files, it would not be necessary to apply the patches because the files are not used. However, I would like someone to look over the files because just because they aren't used not, doesn't mean they might not be used in later DMD releases.","assignee":null,"created_on":"2010-07-02T00:10:50.127462+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-08-09T17:20:49.878152+00:00","id":29},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"strange code in d-asm-i386.h","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"\r\n{{{\r\n#!c++\r\n    void doAlign() {\r\n\tExpression * e = parseAsmExp()->optimize(WANTvalue | WANTinterpret);\r\n\t#if V1\r\n\tdinteger_t align = e->toInteger();\r\n\t#else\r\n\tinteger_t align = e->toInteger();\r\n\t#endif\r\n\r\n\tif (align >= 0) {\r\n\t    \/\/ %% is this printf portable?\r\n#ifdef HAVE_GAS_BALIGN_AND_P2ALIGN \r\n\t    insnTemplate->printf(\".balign\\t%u\", (unsigned) align);\r\n#else\r\n\t    insnTemplate->printf(\".align\\t%u\", (unsigned) align);\r\n#endif\r\n\t} else {\r\n\t    stmt->error(\"alignment must be a power of 2\");\r\n\t}\r\n}}}\r\n\r\n* First of all, current dmd2 also uses dinteger_t instead of integer_t, so why does V1 have it here but not V2?\r\n* both are of type uint64_t, so the comparison >=0 is senseless and there is no need to cast\r\n* why does the else branch state \"alignment must be a power of 2\" even though there was no test for it? (or am I missing something?)","assignee":null,"created_on":"2010-07-21T00:05:45.456830+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-07-27T00:40:07.173900+00:00","id":44},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc-4.3: ICE at dwarf2out.c:5139","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"First of two GCC-4.3.x specific bugs in dwarf2out.c\n\nIn both cases, it looks like the inliner violates some invariant, and the DWARF code chokes on it.  The compiler flags matter in this example, it only happens with '-O2 -frelease -g'.\n\n{{{\nstruct Color {\n\tdouble red   = 0;\n\tdouble green = 0;\n\tdouble blue  = 0;\n\t\n\tstatic Color opCall() {\n\t\tColor instance;\n\t\treturn instance;\n\t}\n\t\n\tColor opAdd(real right){ return Color(); }\n\tvoid opAddAssign(real right){ *this = *this + right; }\n}\n}}}\n\nOutputs\n{{{\ncolor.d: In member function ‘opAddAssign’:\ncolor.d:12: internal compiler error: in decl_ultimate_origin, at dwarf2out.c:5139\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\n}}}\n\nRegards","assignee":"ibuclaw","created_on":"2010-07-11T19:11:11.160849+00:00","version":null,"edited_on":"2010-07-11T19:12:34.547688+00:00","milestone":null,"updated_on":"2011-08-08T22:29:09.802227+00:00","id":38},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE in foreach over member array in static func","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Testcase:\r\n\r\n{{{\r\nclass errors {\r\n  int[] t;\r\n  static void crash() { foreach (x; t) {} }\r\n}\r\n}}}\r\n\r\nExpected: \"Error: need 'this' to access member t\"\r\n\r\nWhat really happens:\r\n{{{\r\ntest.d:3: Error: Need 'this' to access member t\r\nIn file included from <builtin>:1:\r\ntest.d: In function ‘crash’:\r\ntest.d:3: internal compiler error: Segmentation fault\r\n}}}\r\n\r\nIs apparently a regression from GDC SVN http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1051\r\n\r\nSee http:\/\/dgcc.svn.sourceforge.net\/viewvc\/dgcc?view=revision&revision=169\r\n\r\nOther testcases that fail (from dstress).\r\n\r\n{{{\r\nclass C {\r\n        int[] i;\r\n\r\n        static void crash() {\r\n                int y = i[0];\r\n        }\r\n}\r\n}}}\r\n\r\nand\r\n\r\n{{{\r\nstruct C {\r\n        int[] i;\r\n\r\n        static void crash() {\r\n                int y = i[0];\r\n        }\r\n}\r\n}}}","assignee":null,"created_on":"2010-09-03T05:01:34.677961+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-03T10:10:35.963057+00:00","id":60},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE when goto undefined label","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Testcase:\r\n\r\n{{{\r\nvoid test()\r\n{\r\n    goto no_label;\r\n}\r\n}}}\r\n\r\nExpected: \"Error: label no_label is undefined\"\r\n\r\nWhat really happens:\r\n{{{\r\nIn file included from <builtin>:1:\r\ntest.d: In function ‘test’:\r\ntest.d:2: internal compiler error: Segmentation fault\r\n}}}\r\n\r\nProblem seems trivial - is a regression from <<changeset 198>> - 'statement' is null (getLabelTree should be able pick that out and error correctly).","assignee":null,"created_on":"2010-09-03T04:41:30.051255+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-03T22:48:43.379368+00:00","id":59},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"1.063 changes in phobos versioning + dmd backend","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"**DMD:**\r\n\r\nIn the dmd changes, there were a lot of changes in the backend to begin accommodating for 64-bit support. This made the diff for dmd 1.062 - dmd 1.063 fairly large. So, I removed all the files that have \"backendlicense.txt\" in them, since these files are never used in gdc. That made the diff a lot smaller. I'm just wondering if some of these changes could fix the loss of 64-bit support in gdc from 1.061 - 1.062. Not making these changes didn't seem to affect any of the fixed bugs though.\r\n\r\nAttached is the full dmd 62-63 diff and the 'clean' (no backend file) 62-63 diff.\r\n\r\n**Phobos:**\r\n\r\nIn the phobos 1.062-1.063 diff, there were a lot of changes made involving asm, specifically for 64 bit support.\r\nExample of a change:\r\n\r\nBefore:\r\n{{{\r\nasm\r\n{\r\n...\r\n}\r\n}}}\r\n\r\nAfter:\r\n{{{\r\nversion(D_InlineAsm_X86)\r\n{\r\n    asm\r\n    {\r\n    ...\r\n    }\r\n}\r\nelse version(D_InlineAsm_X86_X64)\r\n{\r\n    asm\r\n    {\r\n    ...\r\n    }\r\n}\r\nelse\r\n{\r\n    static assert(0);\r\n}\r\n}}}\r\n\r\nNow, because of <<issue 30>>, this would cause problems, and most likely cause assertions when D_InlineAsm_X86 isn't defined. (Which is most of the time)\r\n\r\nSo, most of these changes, I just left alone.\r\n\r\nI was wondering if maybe we should have a GNU_InlineAsm version block in these places?\r\n\r\nAttached is the patch from Phobos 1.062 - Phobos 1.063 so you can what I am talking about.","assignee":null,"created_on":"2010-08-14T00:30:17.516947+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-03T23:27:09.877071+00:00","id":54},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"remove gcc-mars.cc?","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"I was wondering if this file is still needed in GDC. I was able to build GDC without this file. (It's located in d\/gcc-mars.cc)\r\n\r\nI didn't look to see what its original purpose was, but in the ChangeLog:\r\n\r\n{{{\r\nUpdate for D 2.0:\r\n\r\n\t* Make-lang.in: Support both DMD front end version 1 and 2.\r\n\tReplace gcc-mars.cc with  d\/mars.c.\r\n\r\n\t* gcc-mars.cc: Remove file.\r\n}}}\r\n\r\n(This was on 2007-09-23 BTW)\r\n\r\nJust wondering if it can be removed to reduce the clutter a little.","assignee":null,"created_on":"2010-09-04T17:30:56.523997+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-04T18:53:04.500364+00:00","id":61},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - Wrong decimal value in error message","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Testcase:\r\n\r\n{{{\r\nubyte b = 6;\r\nshort c5 = cast(int)(b + 6.1);\r\n}}}\r\n\r\nShould output the error (or something to the effect of)\r\n{{{\r\nError: cannot implicitly convert expression (cast(int)(cast(double)cast(int)b + 6.1)) of type int to short\r\n}}}\r\n\r\nInstead we get:\r\n{{{\r\nError: non-constant expression cast(short)cast(int)(cast(double)cast(int)b + 6.0999999999999999999132638262011596452794e+0)\r\n}}}\r\n\r\nRegards","assignee":null,"created_on":"2010-10-25T23:24:59.389334+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-02T12:54:36.799346+00:00","id":79},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - Bad codegen for structs containing invariants","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Example:\r\n\r\n{{{\r\nimport core.stdc.stdio;\r\n\r\nstruct S\r\n{\r\n    this( string name )\r\n    {\r\n        printf( \"(ctor) &%.*s.x = %p\\n\", name, &x );\r\n    }\r\n    invariant() {}\r\n    int x;\r\n}\r\n\r\nvoid main()\r\n{\r\n    auto s = new S(\"s2\");\r\n    printf( \"&s2.x = %p\\n\", &s.x );\r\n}\r\n}}}\r\n\r\nCode compiles, but runtime segfaults somewhere between the printf statement and the call to invariant(). Commenting out the invariant function and all is OK.\r\n\r\nNote: the address in both printf statements should match too, else that is another codegen bug. :o)\r\n\r\nRegards","assignee":null,"created_on":"2010-10-25T23:37:34.768721+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-28T00:10:04.916469+00:00","id":80},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - compilation failed on associated array.clear()","reporter":"itecgo","component":null,"watchers":["itecgo","ibuclaw"],"content":"The following code can't compile in D2 via GDC (latest checkout).\r\n\r\n====== content of main.d: ======\r\n\r\n{{{\r\n#!d\r\n\r\nmodule main;\r\n\r\nvoid main()\r\n{\r\n\tstring[string] map;\r\n\t\r\n\tmap.clear();\r\n}\r\n}}}\r\n====== content of Makefile: ======\r\n\r\n{{{\r\n#!Makefile\r\n\r\nPROG = test_map\r\nOBJS = main.o\r\n\r\nDC  = gdc\r\n\r\nDFLAGS  = -I.\r\nLDFLAGS = \r\nLIBS =\r\n\r\nall: $(PROG)\r\n\r\n%.o: %.d\r\n\t$(DC) $(DFLAGS) -c $< -o $@\r\n\r\n$(PROG): $(OBJS)\r\n\t$(DC) $(LDFLAGS) $^ -o $@ $(LIBS)\r\n\trm -f *\/*.o\r\n\r\nclean:\r\n\trm -f $(PROG)\r\n\trm -f *\/*.o\r\n}}}\r\n\r\ncommand to compile main.d: make\r\n\r\nThe compiler errors are listed below:\r\n\r\ngdc -I. -c main.d -o main.o\r\ncc1d: ..\/..\/gcc\/d\/d-glue.cc:2573: virtual elem* StructLiteralExp::toElem(IRState*): Assertion `irs->typesSame(type->toBasetype(), sd->type->toBasetype())' failed.\r\n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc2_install\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/object.di: In function ‘clear’:\r\n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc2_install\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/object.di:459: internal compiler error: Aborted\r\nPlease submit a full bug report,\r\n","assignee":"ibuclaw","created_on":"2010-11-20T10:29:03.151549+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-21T02:13:36.795858+00:00","id":107},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"goto into a try block doesn't produce an error","reporter":"michaelp","component":null,"watchers":["ibuclaw","michaelp"],"content":"{{{\r\nvoid main()\r\n{\r\n    try\r\n    {\r\n        L1:\r\n            int i;\r\n    }\r\n    catch { }\r\n    goto L1;\r\n}\r\n}}}\r\n\r\nIn dmd, this produces:\r\n\r\n{{{\r\ntest.d(9): Error: cannot goto into try block\r\n}}}\r\n\r\nIn gdc, no error is produced.\r\n\r\nThis seems to be due to lack of error checking in the functions GotoStatement::toIR, GotoDefaultStatement::toIR, and GotoCaseStatement::toIR, as it seems like this is where the error originates in dmd.\r\n\r\nThe code needed is similar to what will be needed to fix the problem in <<issue 54>>.\r\n\r\nSomething similar to the patch for Bugzilla 1041 ( http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1041 ) may work for as well.","assignee":"michaelp","created_on":"2010-08-16T21:05:10.815466+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-15T00:16:15.301314+00:00","id":56},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"--enable-checking in configure fails","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"When configuring gdc with --enable-checking GDC fails to run.\r\n\r\n{{{\r\n<builtin>:1: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in build_function_type, at tree.c:5844\r\n}}}\r\n\r\nIt looks to occur during d_init_builtins\r\n{{{\r\n#3  0x081a308a in internal_error (\r\n    gmsgid=0x8862968 \"tree check: expected class %qs, have %qs (%s) in %s, at %s:%d\") at ..\/..\/gcc-4.3.5\/gcc\/diagnostic.c:606\r\n#4  0x0853f922 in tree_class_check_failed (node=0xb7eaf3f0, cl=tcc_type, \r\n    file=0x8862422 \"..\/..\/gcc-4.3.5\/gcc\/tree.c\", line=5844, \r\n    function=0x8861b5a \"build_function_type\")\r\n    at ..\/..\/gcc-4.3.5\/gcc\/tree.c:6915\r\n#5  0x08544245 in build_function_type (value_type=0xb7eaf3f0, \r\n    arg_types=0xb7ec8d20) at ..\/..\/gcc-4.3.5\/gcc\/tree.c:5844\r\n#6  0x0810d996 in d_init_builtins ()\r\n    at ..\/..\/gcc-4.3.5\/gcc\/builtin-types.def:310\r\n#7  0x080f588f in gcc_d_backend_init () at ..\/..\/gcc-4.3.5\/gcc\/d\/d-glue.cc:4451\r\n#8  0x080dedbd in d_init () at ..\/..\/gcc-4.3.5\/gcc\/d\/d-lang.cc:341\r\n#9  0x08382ca3 in lang_dependent_init (argc=17, argv=0xbffff2f4)\r\n    at ..\/..\/gcc-4.3.5\/gcc\/toplev.c:2127\r\n#10 do_compile (argc=17, argv=0xbffff2f4) at ..\/..\/gcc-4.3.5\/gcc\/toplev.c:2243\r\n#11 toplev_main (argc=17, argv=0xbffff2f4) at ..\/..\/gcc-4.3.5\/gcc\/toplev.c:2276\r\n#12 0x0812c55f in main (argc=144508032, argv=0x0)\r\n    at ..\/..\/gcc-4.3.5\/gcc\/main.c:35\r\n}}}\r\n\r\nThis error occurs on 4.3.x with the lastest trunk.","assignee":"ibuclaw","created_on":"2010-06-29T01:32:29.949887+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-16T18:57:07.156049+00:00","id":28},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - Bad codegen and ICEs using enums","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"In D1, Enums must be an integral type. Whereas in D2, they could be of any type, even mixed. This has been causing issue with both our glue (<<issue 73>>) and the GCC backend getting confused when it encounters an enum type that isn't integral.\r\n\r\nAs well as the problem in issue #73, there are some more creeping issues, such as:\r\n\r\n{{{\r\nenum A : real\r\n{\r\n    ONE = 1.0\r\n}\r\n\r\nauto val = A.ONE; \/\/ ICEs\r\nreal val = A.ONE; \/\/ OK\r\n}}}\r\n\r\nAnd\r\n{{{\r\nenum A : wstring\r\n{\r\n    Hello = \"World\"\r\n}\r\n\r\nassert(A.Hello == \"World\"); \/\/ Fails when compiled with -O\r\n}}}\r\n\r\nSo rather than continuing to work around these problems, I think the best option is for D2 is to just to not construct the enums fullstop, and when toCtype() is called, we return the base type of the enum.\r\n\r\nAttaching a patch to test. I can't see any regressions from it, but would like feedback before applying. :-)\r\n\r\nRegards","assignee":null,"created_on":"2010-10-26T18:01:36.525962+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-28T07:22:42.365497+00:00","id":81},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Merge DMD 1.064","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"New version of the D1 frontend is available, and should be merged into GDC - http:\/\/ftp.digitalmars.com\/dmd.1.064.zip","assignee":null,"created_on":"2010-09-17T11:55:38.013136+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-27T20:54:46.078616+00:00","id":63},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC-4.4 - enable-checking in configure fails","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Building gcc-4.4 with --enable-checking fails with D1.\r\n\r\n{{{\r\n\/home\/iain\/src\/gdc\/build44\/objdir\/.\/gcc\/gdc -B\/home\/iain\/src\/gdc\/build44\/objdir\/.\/gcc\/ -B\/usr\/local\/i686-pc-linux-gnu\/bin\/ -B\/usr\/local\/i686-pc-linux-gnu\/lib\/ -isystem \/usr\/local\/i686-pc-linux-gnu\/include -isystem \/usr\/local\/i686-pc-linux-gnu\/sys-include -o std\/socket.o -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n\t-I ..\/..\/..\/gcc-4.4.4\/libphobos -I ..\/..\/..\/gcc-4.4.4\/libphobos\/internal\/gc -I .\/i686-pc-linux-gnu -c ..\/..\/..\/gcc-4.4.4\/libphobos\/std\/socket.d\r\nIn file included from <builtin>:2:\r\n..\/..\/..\/gcc-4.4.4\/libphobos\/std\/socket.d: In member function ‘accept’:\r\n..\/..\/..\/gcc-4.4.4\/libphobos\/std\/socket.d:1: internal compiler error: in analyze_function, at ipa-reference.c:697\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}","assignee":null,"created_on":"2010-09-17T12:16:46.219375+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-17T17:53:11.494504+00:00","id":64},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 build errors - non-i386 archs not supported by druntime","reporter":"vgivanovic","component":null,"watchers":["vgivanovic","ibuclaw"],"content":"Using a recent changeset (<<changeset 244:246c6894fd6f>>) on Fedora 13 (2.6.34.6-47.fc13.x86_64) I get the following error:\r\n\r\n..\/..\/..\/libphobos\/std\/stdio.d:33: module memory cannot read file 'core\/memory.d\r\n\r\nwhich is correct, the directory 'objdir\/x86_64-unknown-linux-gnu\/libphobos\/common\/core' is empty.\r\n\r\nI'm attaching a log file of a make started after I updated my repository to <<changeset 244:246c6894fd6f>>, i.e. some files may have already been made.","assignee":"ibuclaw","created_on":"2010-09-10T03:37:40.087030+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-18T19:52:56.156402+00:00","id":62},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Move zlib out of phobos to it's own directory","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"{{{\r\n[iain@maverick d]$ diff -Naur phobos\/etc\/c\/zlib phobos2\/etc\/c\/zlib\r\n[iain@maverick d]$ \r\n}}}\r\n\r\nLooks like there is no difference whatsoever between the two maintained zlib directories.\r\n\r\nSo for the sake of saving space, would anyone object to removing one, and moving the other out of phobos? (So that we symlink the directory into libphobos as part of setup-gcc.sh).\r\n\r\nCrazy idea that came to mind, and it's OK to say no. ;-)\r\n\r\nRegards","assignee":null,"created_on":"2010-09-18T00:11:33.907857+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-27T20:55:53.973755+00:00","id":65},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Cannot cast to structs of same type size","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This should be valid:\r\n\r\n{{{\r\nstruct A { }\r\nstruct B { }\r\n\r\nvoid main()\r\n{\r\n    A a; B b;\r\n    a = cast(A)b;\r\n    b = cast(B)a;\r\n}\r\n}}}\r\n\r\nBut instead gdc errors out with:\r\n{{{\r\nerror: conversion to non-scalar type requested\r\n}}}","assignee":null,"created_on":"2010-09-28T20:12:02.684068+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-09-29T10:18:34.001368+00:00","id":68},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"array concatenation is not working","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Tested with gdc version http:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/0d65fe238221\r\ngcc version 4.4.5 and D version 2.\r\n{{{\r\n#!d\r\n\r\nimport std.stdio;\r\nvoid main(){\r\n    byte[] arr, tmp;\r\n    arr = [0, 1, 3];\r\n    tmp = [2];\r\n    arr = arr[0..2] ~ tmp ~ arr[2..$];\r\n    writeln(arr);\r\n}\r\n\r\n}}}\r\n{{{\r\n#!sh\r\n\r\ngdc test.d -o test_gdc && .\/test_gdc\r\n[10]\r\ndmd test.d -oftest_gdc && .\/test_gdc\r\n[1, 2, 3, 4]\r\n\r\n}}}\r\n","assignee":"ibuclaw","created_on":"2010-10-03T18:49:32.572892+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-05T13:17:33.964478+00:00","id":69},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - compilation failed on files importing std.xml ","reporter":"itecgo","component":null,"watchers":["itecgo","ibuclaw"],"content":"The following error ocurred during the compilation of one of my project using D2 via GDC (last checkout). One of my project file imports std.xml and use its XML handling capabilities.\n\ngdc -I. -c main.d -o main.o\ngdc  main.o -o test_xml \n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc2_install\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.5\/..\/..\/..\/libgphobos2.a(xml.o): In function `_D3std3xml3Tag14toNonEndStringMxFZAya':\n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc_v2\/dev\/gcc-4.4.5\/objdir\/i686-pc-linux-gnu\/libphobos\/..\/..\/..\/libphobos\/std\/xml.d:1148: undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi'\n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc2_install\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.5\/..\/..\/..\/libgphobos2.a(xml.o): In function `_D3std3xml7Element6__ctorMFxC3std3xml3TagZC3std3xml7Element':\n\/home\/itecgo\/Julie\/Tools\/GDC\/gdc_v2\/dev\/gcc-4.4.5\/objdir\/i686-pc-linux-gnu\/libphobos\/..\/..\/..\/libphobos\/std\/xml.d:689: undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi'\ncollect2: ld returned 1 exit status\n\n\nA simple Makefile-based project file and the error-producing main.d have been attached to reproduce the error.\n\nThanks in advance.","assignee":"ibuclaw","created_on":"2010-11-20T10:04:19.792862+00:00","version":null,"edited_on":"2010-11-20T10:09:14.720561+00:00","milestone":null,"updated_on":"2010-11-21T00:16:07.180909+00:00","id":106},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"DMD 2.021 merge","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Finished the initial merge in <<changeset 272>>\n\nOutstanding \/ Missing implemented features.\n\n* Add -safe switch.\n* Make the 'this' parameter to struct member functions a reference type, rather than a pointer.\n\nHaven't looked at -safe just yet, however currently having difficulty getting GCC to react nicely to having 'this' as a reference type, so currently this is turned off. Attaching a patch to turn it on, however please note that it is broken in a rather bad way.\n\nThis includes, but may not be limited to:\n\n# ICE in GDC glue because struct 'handle' is no longer pointer type.\n# ICE in GCC backend when building the GC.\n# SEGV in DWARF exception handling routines when running a compiled 'hello world' program.\n\n\n\nSecondly, I'm not too sure about these added features, however my presumption is that this all handled by the frontend parser.\n* scope parameter storage class means the parameter will not 'escape' the scope of the function invocation. Using this for delegate parameters will prevent some closure allocations by the calling function.\n* The lazy storage class now implies scope so that lazy arguments won't trigger a heap allocated closure.\n\n\n\nApart from the above, an optional change might be to no longer make it necessary to link in druntime separately, having it instead inserted into the libphobos.a library.\n\nNot sure if we should worry about this, however, the d-spec driver needs updating to at least allow:\n# Linking in druntime + libphobos\n# Linking in **just** druntime\n# Don't link in either.\n\nCurrently, we can either do no 1 or 3.\n\n\n\nRegards\n\n\nedit: yuck, some copy\/paste fail. Thank goodness you can edit posts. :-)","assignee":null,"created_on":"2010-09-27T21:43:55.780227+00:00","version":null,"edited_on":"2010-09-27T21:47:01.508574+00:00","milestone":null,"updated_on":"2010-10-05T13:21:15.071557+00:00","id":67},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Inline Asm errors junk `(%ebp)+4' after expression","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This valid code errors the assembler due to bad codegen:\r\n\r\n{{{\r\nvoid foo()\r\n{\r\n    uint[4] a;\r\n    asm {\r\n        mov a, EAX;\r\n        mov a+4, EBX;\r\n        mov a+8, ECX;\r\n        mov a+12, EDX;\r\n    }\r\n}\r\n}}}\r\n\r\nHaving a look at the asm.S output this is what is being generated:\r\n{{{\r\n        movl %eax, -16(%ebp)\r\n        movl %ebx, -16(%ebp)+4\r\n        movl %ecx, -16(%ebp)+8\r\n        movl %edx, -16(%ebp)+12\r\n}}}\r\n\r\nWhen really it should instead be:\r\n{{{\r\n        movl %eax, -16(%ebp)\r\n        movl %ebx, -12(%ebp)\r\n        movl %ecx,   -8(%ebp)\r\n        movl %edx,   -4(%ebp)\r\n}}}\r\n\r\nThere are likely many more bugs in GDC's inline asm, but this is a showstopper.\r\n\r\n\r\n","assignee":null,"created_on":"2010-10-07T11:09:52.332084+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-14T07:10:00.838716+00:00","id":70},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Gentoo x64: ptrdiff_t is long in libgphobos but not in programs","reporter":"cybershadow","component":null,"watchers":["cybershadow","ibuclaw"],"content":"When trying to compile a program that uses std.string.find\/rfind, for example:\r\n\r\n{{{\r\n#!d\r\nimport std.string;\r\n\r\nint main()\r\n{\r\n        return find(\"foo\", \"bar\");\r\n}\r\n}}}\r\n\r\nCompiler output:\r\n{{{\r\nwnbot@ns27462 ~\/wahostbot $ gdmd test2.d\r\ntest2.o: In function `_Dmain':\r\ntest2.d:(.text+0x39): undefined reference to `_D3std6string4findFAaAaZi'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\n\r\nJudging by the mangled symbol names, the library seems to contain versions which return \"long\" instead of \"int\":\r\n\r\n{{{\r\nwnbot@ns27462 ~\/gdc\/usr\/local\/lib64 $ nm libgphobos.a | grep 3std6string4find\r\n                 U _D3std6string4findFAawZl\r\n0000000000004990 T _D3std6string4findFAaAaZl\r\n0000000000004c80 T _D3std6string4findFAawZl\r\n0000000000000090 t _D3std6string4findFAawZl14__foreachbody1MFKlKwZi\r\n                 U _D3std6string4findFAawZl\r\n}}}\r\n","assignee":null,"created_on":"2010-03-14T11:00:27.778178+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-29T00:12:45.126491+00:00","id":12},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Multilib support is partially broken","reporter":"opticron","component":null,"watchers":["opticron","ibuclaw"],"content":"I know the build instructions say to build with multilib disabled, but it works for the most part.  Very basic hello world programs will build without issue.  The only real failing I've found so far is the probing and detection of data types by the \"x3\" code that generates the files in gcc\/config.  When building normally, it works as expected and gets the types correct but uses the exact same types for the 32-bit part of the multilib build (which is obviously not going to work in some cases).  \r\n\r\nThe workaround (for x86_64 systems wanting to build x86 binaries on linux):\r\nOnce you've built with multilib enabled, you'll need to tweak some files in the 32bit gcc\/config directory.  For me, this was located here:\r\nobjdir\/x86_64-unknown-linux-gnu\/32\/libphobos\/x86_64-unknown-linux-gnu\/gcc\/config\r\n\r\nunix.d and libc.d are your primary targets, though I'm sure all files in this directory could do with some tweaking.  Really, you could just rip all the files in this directory from a build on a 32bit system.\r\n\r\nIn unix.d, you'll want to change the type of pthread_t to uint to get threading working properly.\r\n\r\nIn libc.d, you'll want to change the following to uint or int: off_t, time_t, clock_t, tm_gmtoff.\r\n\r\nThese changes got threading and time working for me on 32 bit builds.  If I get the time, I'll post a tarball of the whole directory from a 32bit build.\r\n\r\n\r\nUnfortunately, I'm not quite sure how the x3 code could be reworked to generate these files properly under multilib.","assignee":null,"created_on":"2010-10-12T14:06:28.926321+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-13T01:11:06.925088+00:00","id":71},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - 'this' in nested structs cannot access frame of outer function","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"GDC fails to compile valid D2 code:\r\n\r\n{{{\r\nvoid outer()\r\n{\r\n    int member = 0;\r\n    struct inner\r\n    {\r\n        this(int val)\r\n        {\r\n            member = val;\r\n        }\r\n    }\r\n\r\n    inner a = inner(4);\r\n    assert(member == 4);\r\n}\r\n}}}\r\n\r\nErrors with message:\r\n{{{\r\nIn file included from <builtin>:2:\r\nstruct1.d: In member function ‘__ctor’:\r\nstruct1.d:6: error: cannot access frame of function 'outer' from 'this'\r\n}}}\r\n","assignee":null,"created_on":"2010-10-13T15:56:17.244246+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-16T12:23:01.996675+00:00","id":72},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - ICE declaring string enums","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Testcase:\r\n\r\n{{{\r\nenum B : string\r\n{\r\n    a = \"123\",\r\n    b = \"234\"\r\n}\r\n}}}\r\n\r\nICEs with message:\r\n\r\n{{{\r\ncc1d: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n\r\nYikes! =)\r\n\r\nRegards\r\nIain\r\n","assignee":null,"created_on":"2010-10-13T16:00:13.279637+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-19T11:56:16.709067+00:00","id":73},{"status":"duplicate","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Support for gcc 4.5","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Please support gcc 4.5","assignee":null,"created_on":"2010-10-16T17:54:33.607228+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-16T18:24:18.673527+00:00","id":75},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"D2 - Phobos for 2.029","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Because of the large amount of changes in the current merge from 2.028 -> 2.029 and having a small peak ahead of what is to come; I feel that maintaining D2 Phobos in it's current state has become rather unethical. So I propose that the 'std' modules should undergo a huge refresh and be directly replaced with that of DMD's maintained library.\r\n\r\nThis will mean starting from scratch all GDC-specific changes, both arch and OS-specific. But given that we know Phobos\/Druntime will become Solaris; *BSD aware, and that by the time of the eventual catch-up with upstream, 64bit compatibility should be well and truly in place. Hopefully in the long run it should pay off better.\r\n\r\nWe should also use this opportunity to shed light on already known quirks of GDC and address solutions for, rather than work around them.\r\n\r\nNot pointing at anything in particular though. ( *cough* inline asm, stdarg *cough* ;)\r\n\r\n\r\nAny thoughts on the matter?\r\n\r\nRegards\r\n\r\n","assignee":null,"created_on":"2010-10-13T19:13:15.695295+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-22T17:07:15.132724+00:00","id":74},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Port D2 Phobos to amd64","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Attaching patch here because I'm on a different computer.","assignee":"ibuclaw","created_on":"2010-10-24T23:52:00.970898+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-10-25T01:23:05.990769+00:00","id":77},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"odd error message when casting between non-convertable types","reporter":"michaelp","component":null,"watchers":["ibuclaw"],"content":"Code:\n\n{{{\nvoid main()\n{\n\tchar c = cast(char)\" \";\n}\n}}}\n\nError message:\n\n{{{\nIn file included from <builtin>:1:\nstringtocharcast.d: In function ‘main’:\nstringtocharcast.d:3: error: aggregate value used where an integer was expected\n}}}\n\nWhat's expected:\n\n{{{\nstringtocharcast.d(3): Error: cannot cast \" \" of type char[1u] to type char\n}}}\n\nIn DMD, this error checking code in CastExp::ToElem in e2ir.c. The message that GDC gives in gcc\/convert.c,  line 780, looking at GCC 4.4.5. A backtrace from that error message:\n\n{{{\nBreakpoint 1, convert_to_integer (type=0xb7bc82d8, expr=0xb7c4fad4)\n    at ..\/..\/gcc\/convert.c:780\n780\t      error (\"aggregate value used where an integer was expected\");\n(gdb) bt\n#0  convert_to_integer (type=0xb7bc82d8, expr=0xb7c4fad4)\n    at ..\/..\/gcc\/convert.c:780\n#1  0x08104124 in d_convert_basic (type=0xb7bc82d8, expr=0xa)\n    at ..\/..\/gcc\/d\/d-convert.cc:115\n#2  0x080f46d7 in IRState::convertTo (this=0x88f92c0, exp=0xb7c4fad4, exp_type=\n    0x88f8de0, target_type=0x88e4050) at ..\/..\/gcc\/d\/d-codegen.cc:474\n#3  0x080f567b in IRState::convertTo (this=0x88f92c0, exp=0x88f8e90, \n    target_type=0x88e4050) at ..\/..\/gcc\/d\/d-codegen.cc:242\n#4  0x080fa272 in CastExp::toElem (this=0x88f8eb8, irs=0x88f92c0)\n    at ..\/..\/gcc\/d\/d-glue.cc:1313\n#5  0x080f5664 in IRState::convertTo (this=0x88f92c0, exp=0x88f8eb8, \n    target_type=0x88e4578) at ..\/..\/gcc\/d\/d-codegen.cc:242\n#6  0x080fa272 in CastExp::toElem (this=0x88f8ee0, irs=0x88f92c0)\n    at ..\/..\/gcc\/d\/d-glue.cc:1313\n#7  0x080f51ef in IRState::convertForAssignment (this=0x88f92c0, \n    exp=0x88f8ee0, target_type=0x88e4578) at ..\/..\/gcc\/d\/d-codegen.cc:575\n#8  0x080f540e in IRState::assignValue (this=0xb7c52548, e=0x88f87f8, v=\n    0x88e9218) at ..\/..\/gcc\/d\/d-codegen.cc:2083\n#9  0x080f55e1 in IRState::emitLocalVar (this=0x88f92c0, v=0x88e9218, \n    no_init=0 '\\000') at ..\/..\/gcc\/d\/d-codegen.cc:85\n#10 0x080f9e42 in d_gcc_emit_local_variable (v=0x88e9218)\n    at ..\/..\/gcc\/d\/d-glue.cc:1697\n#11 0x080fbd00 in DeclarationExp::toElem (this=0x88e92b0, irs=0x88f92c0)\n}}}","assignee":null,"created_on":"2010-10-24T23:30:55.267972+00:00","version":null,"edited_on":"2010-10-24T23:31:24.518258+00:00","milestone":null,"updated_on":"2010-11-01T19:38:40.579534+00:00","id":76},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"x64_64 - wrong TypeInfo_Struct name outputted","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This code fails on x86_64 programs (thanks tn_ for spotting it).\r\n\r\n{{{\r\n\r\nmodule my;\r\nstruct Struct {}\r\n\r\nvoid main()\r\n{\r\n    assert(typeid(Struct).toString == \"my.Struct\");\r\n}\r\n\r\n}}}\r\n\r\nOn further inspection, the ptr for the name of the struct is off by 4 bytes.\r\n\r\nThis prints the correct string:\r\n{{{\r\n\r\nprintf(\"%s\\n\", typeid(Struct).toString.ptr + 4);\r\n\r\n}}}\r\n\r\nRegards","assignee":null,"created_on":"2010-11-01T20:10:12.232998+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-02T23:30:31.714300+00:00","id":83},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Drop Support for GCC 3.4 and 4.0","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This is a proposal. I see no great reason or benefit to keep support for these versions of GCC around.\n\nAnyone got any reasons to object?\n\nRegards","assignee":null,"created_on":"2010-11-02T10:29:02.076090+00:00","version":null,"edited_on":"2010-11-02T10:29:33.317032+00:00","milestone":null,"updated_on":"2011-01-28T14:57:54.819474+00:00","id":84},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Template functions not inlined","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Template functions are not inlined even if similar non-template functions are. This happens for both D1 and D2.\r\n\r\nExample:\r\n{{{\r\nimport std.stdio;\r\n\r\nint fun1(int x) {\r\n\treturn x + 1;\r\n}\r\n\r\nT fun2(T)(T x) {\r\n\treturn x + 1;\r\n}\r\n\r\nint fun3(T)(int x) {\r\n\treturn x + 1;\r\n}\r\n\r\n\r\nvoid main() {\r\n\tstatic int x = 1;\r\n\tx = fun1(x);           \/\/ inlined\r\n\tx = fun2(x);           \/\/ not inlined\r\n\tx = fun3!(double)(x);  \/\/ not inlined\r\n\twriteln(x);\r\n}\r\n}}}\r\n\r\nCompiled with:\r\n{{{gdc -O3 test.d -S -o test.asm}}}","assignee":"ibuclaw","created_on":"2010-11-02T17:29:11.448015+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-13T13:27:21.331300+00:00","id":85},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"postincrement offering value after modification","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"This assertion fails in gdc and not in dmd.\r\n{{{\r\n#!D\r\nint x = 0;\r\nx = x++;\r\nassert(x == 0);\r\n}}}","assignee":null,"created_on":"2011-04-20T06:10:24.540819+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-20T09:01:25.045232+00:00","id":197},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"struct is wrong size when real data type used.","reporter":null,"component":null,"watchers":[],"content":"Works w\/dmd1, gdc2, dmd2.\r\nFails w\/gdc1.\r\n\r\nstruct C_ST_y\r\n {\r\n double c;\r\n real d;\r\n } ;\r\n\/\/static assert ((C_ST_y).sizeof == 20);\r\n\r\nvoid main () {\r\n writefln (\"y:%d\", C_ST_y.sizeof);\r\n writefln (\"y.c:s:%d\", C_ST_y.c.sizeof);\r\n writefln (\"y.d:s:%d\", C_ST_y.d.sizeof);\r\n writefln (\"y.c:o:%d\", C_ST_y.c.offsetof);\r\n writefln (\"y.d:o:%d\", C_ST_y.d.offsetof);\r\n}\r\n\r\ny:24\r\ny.c:s:8\r\ny.d:s:12\r\ny.c:o:0\r\ny.d:o:8\r\n\r\ngdc (Ubuntu 1:1.046-4.3.4-3ubuntu1) 4.3.4","assignee":null,"created_on":"2011-02-14T23:11:31.813193+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-20T11:31:01.286251+00:00","id":152},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"GDC source code - remove tabs, any trailing spaces","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Well, I've hit Changset 428 with D2, and now all code is tab free and trailing spaces removed.\r\n\r\nI recall Michael mentioned something about doing the same for GDC, well, now is a better time to do it if ever. Could probably run a script on the source to fix the code convention to match DMD's too. Rather than the mixed K&R\/GNU thing we've got currently going on. :~)\r\n\r\nRegards","assignee":null,"created_on":"2010-11-06T21:48:36.385813+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-07T12:21:59.710034+00:00","id":86},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - assertion failure comparing structs for equality","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This only happens when compiling with optimizations enabled (-O2) or with -fomit-frame-pointer\n\nTestcase:\n{{{\nstruct S\n{\n    long x;\n    char y;\n    long z;\n}\n\nvoid callfunc()\n{\n    S a = S(1,2,3);\n    S b = S(1,2,3);\n    assert(a == b);\n    assert(a == b);\n}\n\nvoid main()\n{\n    callfunc;\n}\n}}}\n\nThis seems to be a regression from GCC-4.3.\n\nIt's hard to slim it down further, because the it depends on what elements are inside the struct, and how many asserts there are in the called function.\n\nRegards","assignee":null,"created_on":"2010-11-18T21:30:13.935531+00:00","version":null,"edited_on":"2010-11-18T21:31:35.999350+00:00","milestone":null,"updated_on":"2011-01-02T19:31:50.602097+00:00","id":105},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc-4.4 [D2] ICE with struct and variant","reporter":"jordirovira","component":null,"watchers":["jordirovira"],"content":"Trying to compile the following d2 code with the latest version (349) results in an internal compiler error:\r\n\r\n{{{\r\nmodule attributeset;\r\n\r\nimport std.variant;\r\n\r\nstruct V \r\n{\r\n  float x;\r\n}\r\n\r\nalias Algebraic!(V) VALUE;\r\n}}}\r\n\r\nI compile on a x86 ubuntu 10.10 linux using:\r\n\r\n**$ gdc -c attributeset.d**\r\n\r\nand get\r\n\r\n**\/home\/jordi\/d2\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.4\/..\/..\/..\/..\/include\/d2\/4.4.4\/object.di: In member function ‘values’:\r\n\/home\/jordi\/d2\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.4\/..\/..\/..\/..\/include\/d2\/4.4.4\/object.di:360: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n**","assignee":null,"created_on":"2010-11-09T15:58:36.923723+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-14T03:21:36.521996+00:00","id":88},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - Error initialising struct with static array","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"This code doens't compile:\r\n\r\n{{{\r\nstruct Foo\r\n{\r\n    double val[2];\r\n}\r\n\r\nvoid main()\r\n{\r\n    Foo f = {1};\r\n}\r\n}}}\r\n\r\nWith the message:\r\n{{{\r\nerror: conversion to non-scalar type requested\r\n}}}\r\n\r\n\r\nSimilar examples that do work however:\r\n{{{\r\nstruct Foo\r\n{\r\n    double val[2];\r\n}\r\n\r\nstruct Bar\r\n{\r\n    Foo f = {1};  \/\/ Field OK\r\n}\r\n\r\nFoo f = {1};  \/\/ Globals OK\r\n}}}\r\n\r\nRegards\r\n","assignee":null,"created_on":"2010-11-11T19:18:08.312741+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-18T09:37:38.689228+00:00","id":89},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"GDC - need better control over global version identifiers we emit.","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"On an i386 compiler, we emit the following version identifiers to the D environment. ( warning, long list :)\r\n\r\nGNU, GNU_InlineAsm, GNU_error, GNU_line, GNU_undef, GNU_unassert, GNU_warning, GNU_ifdef, GNU_defined, GNU_include, GNU_unix, GNU_ELF, GNU_system, GNU_machine, GNU_import, GNU_pop_macro, GNU_ident, GNU_cpu, GNU_dependency, GNU_include_next, GNU_system_header, GNU_linux, GNU_VA_ARGS, GNU_endif, GNU_false, GNU_poison, GNU_assert, GNU_gnu_linux, GNU_GCC, GNU_#cpu, GNU_elif, GNU_sccs, GNU_push_macro, GNU_ifndef, GNU_else, GNU_pragma, GNU_true, GNU_#machine, GNU_posix, GNU_#system, GNU_once, GNU_i386, GNU_if, GNU_define.\r\n\r\nWhich is at least 32 identifiers far too many (and the ones with a '#' aren't even valid) !!!\r\n\r\nThere should definitely be a way we can slim this down, even if there are one or two ugly string ends. :~)\r\n\r\nRegards\r\nIain\r\n","assignee":"ibuclaw","created_on":"2010-11-09T11:28:58.452717+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-12T18:35:05.470375+00:00","id":87},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - destructor not called on array of structs","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"From DMD testsuite: runnable\/sdtor.d\r\n\r\n{{{\r\nint sdtor8;\r\n\r\nstruct S8\r\n{\r\n   ~this()\r\n   {\r\n        sdtor8++;\r\n   }\r\n}\r\n\r\nvoid main()\r\n{\r\n    S8[] s = new S8[3];\r\n    delete s;\r\n    assert(sdtor8 == 3);\r\n}\r\n}}}\r\n\r\nFor D1, replace 'struct' with 'class'.\r\n\r\nRegards","assignee":"ibuclaw","created_on":"2010-11-16T16:25:19.750489+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-19T01:25:25.474350+00:00","id":103},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"select.d fails to compile on 64 bits Linux","reporter":"jmb","component":null,"watchers":["jmb","ibuclaw"],"content":"{{{select.d}}} fails to compile on 64bits Linux with the following message:\n\n{{{\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/x86_64-unknown-linux-gnu\/sys-include -o core\/sys\/posix\/sys\/select.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc -nostdinc -pipe  -fdeprecated \\\n\t-I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/sys\/posix\/sys\/select.d\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/core\/sys\/posix\/sys\/select.d:78: Error: cannot implicitly convert expression (cast(long)cast(int)((*fdset).fds_bits[__FDELT(fd)]) & __FDMASK(fd)) of type long to int\n}}}\n\n\nThis error concerns the {{{FD_ISSET}}} function. On my system, the C version returns: {{{((__FDS_BITS (set)[__FDELT (d)] & __FDMASK (d)) != 0)}}}. So shouldn't this function return {{{bool}}}?\n\n\nAnyway, changing the definition of {{{FD_ISSET}}} to:\n\n{{{\nextern (D) int FD_ISSET( int fd, fd_set* fdset )\n{\n    return (fdset.fds_bits[__FDELT( fd )] & __FDMASK( fd )) != 0;\n}\n}}}\n\nEnables it to compile.","assignee":"ibuclaw","created_on":"2010-11-13T13:30:29.710989+00:00","version":null,"edited_on":"2010-11-13T13:31:29.630562+00:00","milestone":null,"updated_on":"2010-11-13T14:24:40.001184+00:00","id":90},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"rt\/lifetime.d fails to compile on 64 bits linux","reporter":"jmb","component":null,"watchers":["jmb","ibuclaw"],"content":"{{{rt\/lifetime.d}}} fails to compile on 64bits Linux with the following messages:\r\n{{{\r\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/x86_64-unknown-linux-gnu\/sys-include -o rt\/lifetime.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc -nostdinc -pipe  -fdeprecated \\\r\n\t-I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:531: Error: function rt.lifetime._d_arraysetcapacity no return exp; or assert(0); at end of function\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:1448: Error: cannot implicitly convert expression (offset + 17LU - info.size) of type ulong to int\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:1569: Error: function gcc.bitmanip.bsr (uint v) is not callable using argument types (ulong)\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/rt\/lifetime.d:1569: Error: cannot implicitly convert expression (newcap) of type ulong to uint\r\n}}}\r\n\r\nAdding {{{assert(0)}}} on line 532 as suggested by the error and changing the type to {{{auto}}} on line 1448 fix the two first errors. I don't know the right way to fix the third one.","assignee":"ibuclaw","created_on":"2010-11-13T13:43:05.503475+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-13T18:01:47.397293+00:00","id":91},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std\/array.d fails to compile on 64 bits Linux","reporter":"jmb","component":null,"watchers":["jmb","ibuclaw"],"content":"{{{std\/array.d}}} fails to compile on 64 bits Linux with the following messages:\r\n{{{\r\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/x86_64-unknown-linux-gnu\/sys-include -o std\/file.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc -nostdinc -pipe  -fdeprecated \\\r\n\t-I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/file.d\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/array.d:743: Error: shift by 40 is outside the range 0..32\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/array.d:743: Error: shift by 48 is outside the range 0..32\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/array.d:744: Error: shift by 56 is outside the range 0..32\r\n}}}\r\n\r\nChangeing lines 741:745 to the following appears to work:\r\n{{{\r\n{\r\n    return cast(ulong)p[7] + (cast(ulong)p[8] << 8) + (cast(ulong)p[9] << 16) + (cast(ulong)p[10] << 24)\r\n        + (cast(ulong)p[11] << 32) + (cast(ulong)p[12] << 40) + (cast(ulong)p[13] << 48) +\r\n        (cast(ulong)p[14] << 56);\r\n}\r\n}}}\r\n","assignee":"ibuclaw","created_on":"2010-11-13T14:04:31.018101+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-13T18:02:02.285362+00:00","id":92},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std\/format.d fails to compile on 64 bits Linux","reporter":"jmb","component":null,"watchers":["jmb","ibuclaw"],"content":"{{{std\/format.d}}} fails to compile on 64 bits Linux with the following messages:\r\n{{{\r\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/x86_64-unknown-linux-gnu\/sys-include -o std\/format.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -I ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gc -nostdinc -pipe  -fdeprecated \\\r\n\t-I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/format.d\r\n..\/..\/..\/gcc-4.4.5-build\/libphobos\/std\/format.d:2547: Error: cannot implicitly convert expression (cast(ulong)field_width - (strlen(prefix) + toUCSindex(s,(s.length)))) of type ulong to int\r\n}}}\r\n\r\nReplacing the types on lines 2545:2547 from {{{int}}} to {{{size_t}}} fixes this issue but triggers a similar messages for other lines.\r\n\r\nEach time, changing the type of the relevant variable to {{{size_t}}} appears to fix the issue.","assignee":"ibuclaw","created_on":"2010-11-13T14:11:49.579796+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-13T18:02:18.031692+00:00","id":93},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"64-bit builds should still generate 32-bit druntime and phobos","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"When GDC2 is compiled for x64, it should still generate 32-bit druntime and phobos in the default build.  People might want to build 32-bit binaries either for distribution to 32-bit systems or because they are in some cases more memory efficient.  It appears that only 64-bit Phobos and druntime are built by default.","assignee":null,"created_on":"2010-11-13T18:29:01.838612+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-13T22:28:41.312546+00:00","id":94},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 - 64bit WIP","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"To all you eager D2 users wanting to try out a 64bit compiler ( I know I've seen some buzz from you recently :), just sending a note out to be patient for the time being, as it is currently WIP.\r\n\r\nThe last stable + working D2 64bit compiler was the 2.039 merge.\r\n\r\nSee: <<changeset 339>>\r\n\r\nSince then, several FE changes have sent things off on wild tangents, but am working on bisecting the changes to get programs working again.\r\n\r\nSo it is my suggestion you use that changeset unless you really want to use a broken compiler (patches are very welcome).\r\n","assignee":"ibuclaw","created_on":"2010-11-13T20:28:00.785864+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-14T17:58:25.706828+00:00","id":95},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - cannot perform floating-point modulo division on creal","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"From DMD testsuite: runnable\/complex.d\r\n{{{\r\nvoid main()\r\n{\r\n    real x = 3;\r\n    creal b = (2 + 4i) % x;\r\n}\r\n}}}\r\n\r\nErrors with message:\r\n{{{\r\ntest.d: In function ‘main’:\r\ntest.d:4: error: tried to perform floating-point modulo division on creal\r\n}}}\r\n","assignee":null,"created_on":"2010-11-16T00:21:07.800070+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-16T19:18:35.001292+00:00","id":98},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - error using opCmp operator","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"From DMD testsuite: runnable\/opover.d\r\n\r\n{{{\r\nclass A5\r\n{\r\n    int opCmp(int j)     { return 34; }\r\n}\r\n\r\nvoid test5()\r\n{\r\n    A5 a = new A5();\r\n    int i = a <>= 1;\r\n}\r\n}}}\r\n\r\n\r\nFails to build with error:\r\n{{{\r\nopover.d: In function ‘test5’:\r\nopover.d:9: error: void value not ignored as it ought to be.\r\n}}}\r\n\r\nType is bool, and target conversion type is int.\r\n\r\nRegards\r\n","assignee":null,"created_on":"2010-11-16T16:08:03.976755+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-17T02:33:40.518227+00:00","id":102},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"crash when compiling declaration of a big array","reporter":"eldar","component":null,"watchers":["eldar","ibuclaw"],"content":"Compiling the attached file crashes. If you remove one element from the big array declared in the file, compile succeeds, which probably means that there is some sort of a limit in a compiler. dmd compiles it fine.","assignee":"ibuclaw","created_on":"2010-11-21T04:16:19.907904+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-22T20:39:55.204947+00:00","id":108},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"hash","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Hello,\r\n\r\nif i try to compile\r\n\r\nimport std.stdio;                                                                                                                                                            \r\nimport std.string;                                                                                                                                                           \r\n                                                                                                                                                                             \r\nint main() {                                                                                                                                                                 \r\n·   string[string] hash;                                                                                                                                                     \r\n·   hash[\"en\"] = \"Hello, world!\";                                                                                                                                            \r\n·   hash[\"es\"] = \"Hola, mundo!\";                                                                                                                                             \r\n·   hash[\"de\"] = \"Hallo Welt!\";·                                                                                                                                             \r\n                                                                                                                                                                             \r\n·   foreach ( string key; hash.keys ){                                                                                                                                       \r\n·   ·   if (hash[key] == \"Hello, world!\") {                                                                                                                                  \r\n·   ·   ·   writefln(\"%s\",hash[key]);                                                                                                                                        \r\n·   ·   }·                                                                                                                                                                   \r\n·   }·                                                                                                                                                                       \r\n·   return 0;                                                                                                                                                                \r\n}·             \r\n\r\ngdc -o hash hash.d\r\nI get \r\n\/tmp\/ccTsK3rj.o: In function `_Dmain':\r\nhash.d:(.text+0xe0): undefined reference to `_D6object30__T16AssociativeArrayTAyaTAyaZ16AssociativeArray4keysMFNdZAAya'\r\ncollect2: ld returned 1 exit status\r\n\r\nLinux Pardus 2009.2. The gdc snapshot is from  today. \r\n\r\nGet you the sam error message?","assignee":null,"created_on":"2010-11-01T13:21:13.910095+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-23T08:41:10.303849+00:00","id":82},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"fail compiling commit 380 on linux gdc  d 2","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"fail to compile gdc with d2 on ubuntu with\r\n..\/..\/gcc\/d\/d-lang.cc:1975: error: ‘STATIC_CHAIN_DECL’ was not declared in this scope\r\n","assignee":null,"created_on":"2010-11-24T01:48:57.517465+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-07T20:21:51.528776+00:00","id":111},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Pure Nothrow Functions Not Called","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"This is probably related to forgetting to update something for the new purity rules that came into existence as of 2.050:\r\n{{{\r\nstruct Foo {\r\n    uint num = 0;\r\n\r\n    void incNum() pure nothrow{\r\n        num++;\r\n    }\r\n}\r\n\r\nvoid main() {\r\n    Foo foo;\r\n    foo.incNum();\r\n    assert(foo.num == 1);  \/\/ Fails\r\n}\r\n}}}\r\nThis bug can only be reproduced when incNum() is annotated as both pure and nothrow.","assignee":null,"created_on":"2010-11-24T01:43:37.305029+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-26T22:32:30.740355+00:00","id":110},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"TraceHandler not beeing called upon exception construction","reporter":"Ingrater","component":null,"watchers":["Ingrater","ibuclaw"],"content":"If you set a trace handler with Runtime.traceHandler(...) it is not beeing called upon exception construction. In fact it is not beeing called at all.\r\n\r\nSee Attachment for testcase and patch.","assignee":"ibuclaw","created_on":"2010-11-24T07:07:27.700748+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-25T01:45:46.207977+00:00","id":112},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - bogus this pointer in nested functions","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Example from DMD testsuite (many others in this file fail): runnable\/inner.d\r\n{{{\r\nclass C16\r\n{\r\n    int w = 3;\r\n\r\n    void iterator()\r\n    {\r\n        class Foo\r\n        {\r\n            void current()\r\n            {\r\n                assert(w == 3);\r\n            }\r\n        }\r\n\r\n        Foo f = new Foo();\r\n        f.current();\r\n    }\r\n}\r\n\r\nvoid main()\r\n{\r\n    C16 s = new C16();\r\n    s.iterator();\r\n}\r\n\r\n}}}\r\n\r\nAsserts runtime. The value of the 'this' pointer given to the function is bogus.\r\n\r\nRegards","assignee":"ibuclaw","created_on":"2010-11-16T15:20:04.312628+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-26T01:09:31.410092+00:00","id":101},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault in isNew():  32-bit x86 only","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"This one only happens on -m32 builds.\n\nTest case:\n\n{{{\nimport std.stdio;  \/\/ This needs to be imported to reproduce the bug.\n\nvoid main() {\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    stderr.writeln(\"AAA\");  \/\/ Prove that we got to here before the segfault.\n}\n\n}}}\n\nBacktrace:\n\n{{{\n#0  0x080728c7 in isNew (this=...) at ..\/..\/..\/..\/libphobos\/object_.d:1431\n#1  0x08072efc in _moduleTlsDtor () at ..\/..\/..\/..\/libphobos\/object_.d:2008\n#2  0x08084285 in runAll () at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:508\n#3  0x08083fdf in tryExec (dg=...) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:438\n#4  0x0808418c in main (argc=1, argv=0xffffd464)\n    at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:515\n}}}\n\n\n**Surprising reproduction preventers:**\n\n* Allocating smaller arrays.\n\n* Not importing std.stdio.","assignee":null,"created_on":"2010-11-28T01:07:28.659762+00:00","version":null,"edited_on":"2010-11-28T01:07:41.282454+00:00","milestone":null,"updated_on":"2010-11-28T20:23:13.150419+00:00","id":116},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Merge SVN Phobos, druntime","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Even with the patches that GDC uses, the 2.050 versions of Phobos and druntime are virtually unusable on 64-bit because of a huge multitude of minor bugs.  Most if not all of these are fixed upstream in SVN.  Therefore, until 2.051 is released, I recommend distributing GDC with the SVN versions of Phobos and druntime.","assignee":null,"created_on":"2010-11-28T17:40:53.627745+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-22T01:02:56.879063+00:00","id":117},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault on string compare, 32-bit only","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code produces a segfault in an ASM string comparison routine that is used only in 32-bit mode:\r\n\r\n{{{\r\nvoid main() {\r\n    auto result = isLess(\"abcd\", \"abcd\");\r\n}\r\n\r\n\/\/ Must be in separate function to reproduce this bug.\r\nbool isLess(string lhs, string rhs) {\r\n    return lhs < rhs;\r\n}\r\n\r\n\r\n}}}\r\n\r\nThis happens on revision 387 + gcc 4.4.5, regardless of compler flags.  It seems to happen only if both strings are at least four letters long and are identical.  \r\n\r\nI'm guessing this is some kind of bug in the inline assembler.  A good temporary workaround would be to just use the portable string compare routine for now, since this seems to work on 64-bit.\r\n\r\nThe GDB output, which seems pretty useful, is as follows:\r\n\r\n{{{\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n_adCmpChar (a1=..., a2=...) at ..\/..\/..\/..\/libphobos\/rt\/adi.d:542\r\n542\t        mov    EAX,a1[4+ESP]    ;\r\n(gdb) backtrace\r\n#0  _adCmpChar (a1=..., a2=...) at ..\/..\/..\/..\/libphobos\/rt\/adi.d:542\r\n#1  0x00000001 in ?? ()\r\n#2  0xffffd464 in ?? ()\r\n#3  0x080495a6 in D main ()\r\n#4  0x08058b1b in runMain () at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:493\r\n#5  0x0805877f in tryExec (dg=...) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:438\r\n#6  0x08058a54 in runAll () at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:505\r\n#7  0x0805877f in tryExec (dg=...) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:438\r\n#8  0x0805892c in main (argc=1, argv=0x8063cf3) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:515\r\n(gdb) \r\n\r\n}}}","assignee":"ibuclaw","created_on":"2010-11-30T03:09:14.656243+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-11-30T14:13:36.953926+00:00","id":118},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Weird memory corruption error w\/ TLS, GC","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Test case:\n\n{{{\nimport core.memory, std.stdio;\n\nclass C {\n    uint num;\n}\n\nC c;\n\nvoid main() {\n    c = new C;\n    c.num = 31415;\n\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    foreach(arr; arrs) {\n        auto startAddr = arr.ptr;\n        auto endAddr = arr.ptr + arr.length;\n\n        auto cAddr = cast(void*) c;\n        if(cAddr >= startAddr && cAddr <= endAddr) {\n\n            \/\/ Surprisingly, this never fires.  It looks like the process of \n            \/\/ overwriting c is somewhat indirect.\n            writeln(startAddr, \"  \", cAddr, \"  \", endAddr);\n\n        }\n    }\n\n    writeln(c.num);  \/\/ Prints 0.  Should print 31415.\n}\n\n}}}\n\n**Surprising things that prevent reproduction:**\n\n* Changing c to a {{{__gshared}}} variable instead of thread-local.\n\n* Allocate smaller arrays instead of the current huge ones.\n\n* Store a reference to c on the stack.","assignee":"ibuclaw","created_on":"2010-11-28T00:40:03.140616+00:00","version":null,"edited_on":"2010-11-28T00:41:25.586369+00:00","milestone":null,"updated_on":"2011-01-29T20:44:40.835176+00:00","id":115},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Cannot generate a mingw gdc","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"i686-w64-mingw32-gcc  -g -O2 -D__USE_MINGW_ACCESS -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -Wl,--stack,8388608 -o cc1-dummy.exe c-lang.o stub-objc.o attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o c-aux-info.o c-common.o c-opts.o c-format.o c-semantics.o c-ppoutput.o c-cppbuiltin.o c-objc-common.o c-dump.o c-pch.o c-parser.o i386-c.o msformat-c.o c-gimplify.o tree-mudflap.o c-pretty-print.o c-omp.o dummy-checksum.o \\\r\n  main.o  libbackend.a ..\/libcpp\/libcpp.a ..\/libdecnumber\/libdecnumber.a ..\/libcpp\/libcpp.a   ..\/libiberty\/libiberty.a ..\/libdecnumber\/libdecnumber.a   -L\/home\/vrichomme\/opt\/nat_win32\/lib -L\/home\/vrichomme\/opt\/nat_win32\/lib -lmpfr -lgmp\r\ni686-w64-mingw32-gcc  -g -O2 -D__USE_MINGW_ACCESS -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -Wl,--stack,8388608 -o cc1plus-dummy.exe \\\r\n      cp\/cp-lang.o stub-objc.o cp\/call.o cp\/decl.o cp\/expr.o cp\/pt.o cp\/typeck2.o cp\/class.o cp\/decl2.o cp\/error.o cp\/lex.o cp\/parser.o cp\/ptree.o cp\/rtti.o cp\/typeck.o cp\/cvt.o cp\/except.o cp\/friend.o cp\/init.o cp\/method.o cp\/search.o cp\/semantics.o cp\/tree.o cp\/repo.o cp\/dump.o cp\/optimize.o cp\/mangle.o cp\/cp-objcp-common.o cp\/name-lookup.o cp\/cxx-pretty-print.o cp\/cp-gimplify.o tree-mudflap.o attribs.o c-common.o c-format.o c-pragma.o c-semantics.o c-lex.o c-dump.o i386-c.o winnt-cxx.o msformat-c.o c-pretty-print.o c-opts.o c-pch.o incpath.o c-ppoutput.o c-cppbuiltin.o prefix.o c-gimplify.o c-omp.o dummy-checksum.o main.o  libbackend.a ..\/libcpp\/libcpp.a ..\/libdecnumber\/libdecnumber.a ..\/libcpp\/libcpp.a   ..\/libiberty\/libiberty.a ..\/libdecnumber\/libdecnumber.a   -L\/home\/vrichomme\/opt\/nat_win32\/lib -L\/home\/vrichomme\/opt\/nat_win32\/lib -lmpfr -lgmp\r\ni686-w64-mingw32-g++ -g -O2 -D__USE_MINGW_ACCESS -DIN_GCC -W -Wall -Wwrite-strings -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings -DHAVE_CONFIG_H -I. -I. -I..\/..\/gcc44-svn\/gcc -I..\/..\/gcc44-svn\/gcc\/. -I..\/..\/gcc44-svn\/gcc\/..\/include -I..\/..\/gcc44-svn\/gcc\/..\/libcpp\/include -I\/home\/vrichomme\/opt\/nat_win32\/include -I\/home\/vrichomme\/opt\/nat_win32\/include -I..\/..\/gcc44-svn\/gcc\/..\/libdecnumber -I..\/..\/gcc44-svn\/gcc\/..\/libdecnumber\/dpd -I..\/libdecnumber    -I. -I. -I..\/..\/gcc44-svn\/gcc -I..\/..\/gcc44-svn\/gcc\/. -I..\/..\/gcc44-svn\/gcc\/..\/include -I..\/..\/gcc44-svn\/gcc\/..\/libcpp\/include -I\/home\/vrichomme\/opt\/nat_win32\/include -I\/home\/vrichomme\/opt\/nat_win32\/include -I..\/..\/gcc44-svn\/gcc\/..\/libdecnumber -I..\/..\/gcc44-svn\/gcc\/..\/libdecnumber\/dpd -I..\/libdecnumber   -I..\/..\/gcc44-svn\/gcc\/d -I..\/..\/gcc44-svn\/gcc\/d\/dmd2 -Id -D_GNU_SOURCE=1 -D_DH=1 -DD_NO_TRAMPOLINES=1 -DELFOBJ=1 -DLIBPHOBOS=\\\"-lgphobos2\\\" -DLIBPHOBOS_PROFILE=\\\"-lgphobos2\\\" -DLIBDRUNTIME=\\\"-lgdruntime\\\" -DLIBDRUNTIME_PROFILE=\\\"-lgdruntime\\\" -DD_GCC_VER=44 -Wno-missing-braces -Wno-format -Wno-missing-field-initializers -fno-strict-aliasing -fmessage-length=0 -Wl,--stack,8388608 -o cc1d.exe \\\r\n\td\/id.gen.o d\/impcnvtab.gen.o attribs.o cppdefault.o stub-objc.o prefix.o i386-c.o msformat-c.o gimplify.o tree-iterator.o  d\/aav.dmd.o d\/access.dmd.o d\/aliasthis.dmd.o d\/array.dmd.o d\/arrayop.dmd.o d\/async.dmd.o d\/attrib.dmd.o d\/cast.dmd.o d\/class.dmd.o d\/clone.dmd.o d\/cond.dmd.o d\/constfold.dmd.o d\/dchar.dmd.o d\/declaration.dmd.o d\/delegatize.dmd.o d\/doc.dmd.o d\/dsymbol.dmd.o d\/dump.dmd.o d\/entity.dmd.o d\/enum.dmd.o d\/expression.dmd.o d\/func.dmd.o d\/gnuc.dmd.o d\/hdrgen.dmd.o d\/html.dmd.o d\/identifier.dmd.o d\/imphint.dmd.o d\/import.dmd.o d\/init.dmd.o d\/inline.dmd.o d\/interpret.dmd.o d\/json.dmd.o d\/lexer.dmd.o d\/lstring.dmd.o d\/macro.dmd.o d\/mangle.dmd.o d\/mars.dmd.o d\/mtype.dmd.o d\/module.dmd.o d\/opover.dmd.o d\/optimize.dmd.o d\/parse.dmd.o d\/rmem.dmd.o d\/root.dmd.o d\/scope.dmd.o d\/speller.dmd.o d\/statement.dmd.o d\/staticassert.dmd.o d\/stringtable.dmd.o d\/struct.dmd.o d\/template.dmd.o d\/todt.dmd.o d\/toobj.dmd.o d\/typinf.dmd.o d\/unialpha.dmd.o d\/utf.dmd.o d\/unittests.dmd.o d\/version.dmd.o d\/builtin.dmd.o d\/traits.dmd.o d\/d-lang.glue.o d\/d-decls.glue.o d\/d-codegen.glue.o d\/d-objfile.glue.o d\/d-irstate.glue.o d\/d-glue.glue.o d\/d-convert.glue.o d\/d-todt.glue.o d\/d-gcc-real.glue.o d\/d-gt.cglue.o d\/d-builtins.cglue.o d\/d-misc.cglue.o d\/d-builtins2.glue.o d\/symbol.glue.o d\/asmstmt.glue.o d\/dt.glue.o d\/d-cppmngl.glue.o d\/d-c-stubs.cglue.o main.o  libbackend.a ..\/libcpp\/libcpp.a ..\/libdecnumber\/libdecnumber.a   -L\/home\/vrichomme\/opt\/nat_win32\/lib -L\/home\/vrichomme\/opt\/nat_win32\/lib -lmpfr -lgmp ..\/libcpp\/libcpp.a   ..\/libiberty\/libiberty.a ..\/libdecnumber\/libdecnumber.a\r\nmsformat-c.o:msformat-c.c:(.rdata+0x230): undefined reference to `_c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.rdata+0x560): undefined reference to `_c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.rdata+0x608): undefined reference to `_c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.rdata+0x794): undefined reference to `_c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.rdata+0x7dc): undefined reference to `_c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.rdata+0x884): more undefined references to `_c_global_trees' follow\r\ncollect2: ld returned 1 exit status\r\nmake[2]: *** [cc1d.exe] Erreur 1\r\n","assignee":null,"created_on":"2010-12-01T17:35:45.684224+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-19T12:12:30.490429+00:00","id":119},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std.math:  cos\/sin forward declaration issue","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Test case:\n\n{{{\nimport std.math;\n\ndouble kernelFun(alias kernel)(double x) {\n    return kernel(x);\n}\n\nvoid main() {\n    auto num = kernelFun!sin(2);\n}\n\n}}}\n\nError message:\n{{{\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/math.d: Error: function alias std.math.__builtin_sinl forward declaration\n\ngdcTest.d:8: Error: template instance gdcTest.kernelFun!(__builtin_sinl) error instantiating\n}}}\nEnvironment:\n\nGDC revision 385, D2\n\nGCC 4.4.5\n\nUbuntu 10.10 64-bit\n\nHappens regardless of whether I compile with -m32 \nor -m64.\n\n**NOTE:**  Basically the same thing happens if I instantiate kernelFun with cos instead of sin.","assignee":null,"created_on":"2010-11-27T23:25:29.189425+00:00","version":null,"edited_on":"2010-11-28T02:23:00.340031+00:00","milestone":null,"updated_on":"2010-12-07T19:32:21.376297+00:00","id":113},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gimple_rhs_has_side_effects","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"I got a cryptic error trying to compile dallegro(note have to use gdmd -d).\r\nerror interno del compilador(internal error): in gimple_rhs_has_side_effects, in gimple.c:2343\r\n\r\nfrom here:\r\n{{{\r\n#!d\r\n\r\n\r\n\r\nint get_midi()\r\n{\r\n   int ret;\r\n\r\n   volatile {\r\n      if (midi_buffer_head == midi_buffer_tail)\r\n         return -1;\r\n\r\n      ret = midi_buffer[midi_buffer_head];\r\n      midi_buffer_head++;\r\n      if (midi_buffer_head >= MIDI_BUFFER_SIZE)\r\n         midi_buffer_head = 0;\r\n   }   \r\n   return ret; \r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2010-12-07T20:39:23.173299+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-09T00:16:28.820236+00:00","id":121},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std.thread missing in D2?","reporter":null,"component":null,"watchers":["ricochet1k","ibuclaw"],"content":"Is there a reason that D2 doesn't have std.thread? I can't find any mention of it anywhere, and it is definitely missing from the repository.","assignee":null,"created_on":"2011-03-02T03:05:59.812365+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-02T13:48:38.705112+00:00","id":157},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Thread.sleep will block forever(64 bit linux, gdc2)","reporter":"qyli","component":null,"watchers":["qyli","ibuclaw"],"content":"import std.stdio;\r\nimport core.thread;\r\n\r\nvoid main()\r\n{\r\nThread.sleep(1);\r\nwriteln(1);\r\n}\r\n\r\nwill never print 1 on console.","assignee":null,"created_on":"2010-12-10T01:38:37.908803+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-27T18:40:18.355854+00:00","id":122},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"exception in thread not work","reporter":"qyli","component":null,"watchers":["qyli","ibuclaw"],"content":"import std.stdio;\r\nimport core.thread;\r\n\r\nvoid func()\r\n{\r\n  while(1) {throw new Exception(\"exception\"); }\r\n}\r\n\r\nvoid main()\r\n{\r\n  auto f = new Thread(&func);\r\n  f.start();\r\n  writeln(1);\r\n\r\n  while(1) { }\r\n}\r\n\r\nthe program will print 1 and hang, exception can't output.\r\n","assignee":null,"created_on":"2010-12-10T01:53:31.085758+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-11T11:22:49.304184+00:00","id":123},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Overloading an operator breaks when using typeof(this)","reporter":"akb825","component":null,"watchers":["akb825","ibuclaw"],"content":"If you overload an operator and use tyepof(this) as the type of the parameter, the compiler will throw an error about incompatible types.  See the attached d source file for an example.\r\n\r\nThis can be worked around by using the struct\/class name instead of typeof(this) for the parameter. If you're defining the operator in a template mixin (the case where I originally noticed the bug), you will need to pass the type as a template argument.\r\n\r\nI am using gdc 2.051 from changeset 459:9a6d77ad18f2. This is compiled against gcc version 4.5.2 on an x64 Linux system running Debian Squeeze.","assignee":null,"created_on":"2011-02-06T03:29:40.642456+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-06T20:18:55.416778+00:00","id":150},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Optimization breaks condition variables","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code deadlocks when compiled with -O in either 32-bit or 64-bit mode, using Revision 553 with GCC 4.5.2.  It works fine without the -O flag.  Although there's concurrency involved, this one looks deterministic.\r\n\r\n{{{\r\nimport core.sync.mutex, core.sync.condition, std.stdio, core.thread,\r\n    core.atomic;\r\n\r\n__gshared Condition condition;\r\n__gshared Mutex mutex;\r\n__gshared int nWaiting;\r\n\r\nvoid useCondition() {\r\n    mutex.lock();\r\n    atomicOp!\"+=\"(nWaiting, 1);\r\n    condition.wait();\r\n    mutex.unlock();\r\n    stderr.writeln(\"Woken up.\");\r\n}\r\n    \r\n\r\nvoid main() {\r\n    mutex = new Mutex;\r\n    condition = new Condition(mutex);\r\n\r\n    auto t = new Thread(&useCondition);\r\n    t.start();\r\n\r\n    \/\/ Wait for lock to be taken.\r\n    while(atomicOp!\"+=\"(nWaiting, 0) == 0) {\r\n        Thread.sleep(100_000);\r\n    }\r\n\r\n    condition.notify();\r\n}  \r\n}}}","assignee":null,"created_on":"2011-04-25T23:56:06.032917+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-26T06:12:24.992181+00:00","id":200},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE on inlining nested struct member functions","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"**Test Case:**\r\n\r\n{{{\r\nvoid iterate(R)(R range) {\r\n    foreach(elem; range) {}\r\n}\r\n\r\nvoid main() {\r\n    struct Count {\r\n        uint num;\r\n        uint upTo;\r\n        @property size_t front() {\r\n            return num;\r\n        }\r\n        void popFront() {\r\n            num++;\r\n        }\r\n        @property bool empty() {\r\n            return num >= upTo;\r\n        }\r\n    }\r\n\r\n    iterate(Count.init);\r\n}\r\n}}}\r\n\r\n**Command:**\r\n\r\ngdmd -O gdctest.d\r\n\r\n\r\n**Error message:**\r\n\r\ngdctest.d: In function 'iterate':\r\n\r\ngdctest.d:2: internal compiler error: in initialize_inlined_parameters, at tree-inline.c:2212\r\n\r\n**Small changes that prevent this bug from being exposed:**\r\n\r\n* Changing Count to a static or non-nested struct.\r\n* Getting rid of the -O flag.\r\n* \"Manually inlining\" iterate()","assignee":"ibuclaw","created_on":"2010-11-17T01:05:07.731891+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-13T12:35:27.878067+00:00","id":104},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE building gdc with gcc-4.4.5","reporter":"john_i_","component":null,"watchers":["john_i_","ibuclaw"],"content":"I'm trying to build gdc with gcc-4.4.5, following the instructions on the wiki, and it is failing while compiling libphobos with an internal compiler error.\r\n\r\nIf it makes any difference I am building on an x86_64 system. \r\n\r\nI am using the 'hg clone' from 20101212.  399:d804e40bb245.\r\n\r\n\r\nHere is the error:\r\n\r\n\/home\/johnm\/Projects\/gdc\/build\/gdc\/dev\/gcc-4.4.5\/build\/.\/gcc\/gdc -B\/home\/johnm\/Projects\/gdc\/build\/gdc\/dev\/gcc-4.4.5\/build\/.\/gcc\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/bin\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/include -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/sys-include -o std\/string.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe   \\\r\n\r\n        -I ..\/..\/..\/libphobos -I ..\/..\/..\/libphobos\/internal\/gc -I .\/x86_64-unknown-linux-gnu -c ..\/..\/..\/libphobos\/std\/string.d\r\n\r\n..\/..\/..\/libphobos\/std\/string.d:3175: Warning: implicit conversion of expression (cast(long)cast(uint)nextt + n + 1L) of type long to dchar can cause loss of data\r\n\r\n..\/..\/..\/libphobos\/std\/string.d: In function 'isNumeric':\r\n\r\n..\/..\/..\/libphobos\/std\/string.d:3443: internal compiler error: in stabilize_va_list, at builtins.c:4721\r\n\r\nPlease submit a full bug report,\r\n\r\nwith preprocessed source if appropriate.\r\n\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for\r\n \r\ninstructions.\r\n\r\nmake[3]: *** [std\/string.o] Error 1\r\n\r\nmake[3]: Leaving directory `\/home\/johnm\/Projects\/gdc\/build\/gdc\/dev\/gcc-4.4.5\/build\/x86_64-unknown-linux-gnu\/libphobos'\r\n\r\nmake[2]: *** [all] Error 2\r\n\r\n","assignee":null,"created_on":"2010-12-13T23:27:22.273439+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-14T00:57:32.051560+00:00","id":125},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Wrong Repeat!(T).opIndex argument type","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"When I try to compile the following code with a 64 bit gcc\r\n\r\n{{{\r\nimport std.stdio;\r\nimport std.range;\r\nimport std.array;\r\n\r\nvoid main()\r\n{\r\n  auto arr = array(take(repeat(1.0),5));\r\n  writeln(arr);\r\n}\r\n}}}\r\n\r\nI get compiler output:\r\n\r\n{{{\r\n\r\n\/opt\/usr\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/range.d:2160: \r\nError: function std.range.Repeat!(double).Repeat.opIndex (uint _param_0) is not callable using argument types (ulong)\r\n\/opt\/usr\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/range.d:2160: \r\nError: cannot implicitly convert expression (this.length() - 1LU) of type ulong to uint\r\n\/opt\/usr\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/range.d:2168: \r\nError: function std.range.Repeat!(double).Repeat.opIndex (uint _param_0) is not callable using argument types (ulong)\r\n\/opt\/usr\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/range.d:2168: \r\nError: cannot implicitly convert expression (index) of type ulong to uint\r\n}}}\r\n\r\n\r\nIt works if I change the argument type of Repeat!(T).opIndex from uint to size_t, as it is in the current dmd phobos. \r\n\r\nRegards","assignee":null,"created_on":"2010-12-15T15:29:08.848377+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-15T19:45:32.505306+00:00","id":126},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Merge 2.051","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"IMHO merging DMD 2.051 should be given a high priority, as there are tons of 64 bit related fixes for Phobos and Druntime in this release.  This will make it possible to test GDC64 much more deeply without constantly running into Phobos\/Druntime issues.","assignee":"ibuclaw","created_on":"2010-12-21T14:53:34.794235+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-27T18:37:24.107577+00:00","id":127},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"lazy arg causing ICE in gimple_expand_cfg, at cfgexpand.c:4063","reporter":"art_","component":null,"watchers":["art_","ibuclaw"],"content":"Just ran into this:\r\n{{{\r\nimport std.xml;\r\n\r\nvoid enforce(lazy string s) {}\r\n\r\nclass C {\r\n   int[] a;\r\n   void M() {\r\n      auto dg = (in Element e)\r\n         {\r\n            enforce(e.tag.toString());\r\n\t    a ~= 1;\r\n         };\r\n   }\r\n}\r\n\r\nvoid main() {}\r\n}}}\r\n\r\n{{{\r\n$ gdc bugcfgexp4063.d -o bugcfgexp4063\r\nbugcfgexp4063.d: In member function 'bugcfgexp4063.C.M.__dgliteral1.__dgliteral830':\r\nbugcfgexp4063.d:12:0: internal compiler error: in gimple_expand_cfg, at cfgexpand.c:4063\r\n}}}\r\nlinux\/x86 and a couple days old hg gdc build.\r\n\r\ngcc version 4.6.3 20111223 (prerelease gdc 0.30, using dmd 2.057","assignee":null,"created_on":"2011-12-28T21:57:47.093488+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-29T00:12:38.697283+00:00","id":302},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"core.thread build error","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"..\/..\/..\/..\/libphobos\/core\/thread.d:1077: Error: undefined identifier Duration\r\n..\/..\/..\/..\/libphobos\/core\/thread.d:1077: Error: Duration is used as a type\r\n\r\nHappens after 2.051 merge.","assignee":null,"created_on":"2010-12-23T00:35:07.906153+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-23T13:45:38.462053+00:00","id":128},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Object build errors","reporter":"dsimcha","component":null,"watchers":["dsimcha","tomp","ibuclaw"],"content":"{{{\r\n..\/..\/..\/libphobos\/object_.d:489: Error: function rt.util.string.intToString called with argument types:\r\n\t((char[20LU],ulong))\r\nmatches both:\r\n\trt.util.string.intToString(char[] buf, ulong val)\r\nand:\r\n\trt.util.string.intToString(char[] buf, ulong val)\r\n..\/..\/..\/libphobos\/object_.d:1271: Error: function rt.util.string.intToString called with argument types:\r\n\t((char[20LU],ulong))\r\nmatches both:\r\n\trt.util.string.intToString(char[] buf, ulong val)\r\nand:\r\n\trt.util.string.intToString(char[] buf, ulong val)\r\n..\/..\/..\/libphobos\/object_.d:2269: Error: template core.atomic.atomicOp(string op,T,V1) if (is(NakedType!(V1) == NakedType!(T))) does not match any function template declaration\r\n..\/..\/..\/libphobos\/object_.d:2269: Error: template core.atomic.atomicOp(string op,T,V1) if (is(NakedType!(V1) == NakedType!(T))) cannot deduce template function from argument types !(\"+=\")(shared(ulong),ulong)\r\n..\/..\/..\/libphobos\/object_.d:2269: Error: template instance errors instantiating template\r\n..\/..\/..\/libphobos\/object_.d:2295: Error: template core.atomic.atomicOp(string op,T,V1) if (is(NakedType!(V1) == NakedType!(T))) does not match any function template declaration\r\n..\/..\/..\/libphobos\/object_.d:2295: Error: template core.atomic.atomicOp(string op,T,V1) if (is(NakedType!(V1) == NakedType!(T))) cannot deduce template function from argument types !(\"-=\")(shared(ulong),ulong)\r\n..\/..\/..\/libphobos\/object_.d:2295: Error: template instance errors instantiating template\r\n}}}","assignee":null,"created_on":"2010-12-23T01:49:54.594334+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2010-12-23T12:57:14.888175+00:00","id":129},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"multiple definition of `onAssertError' : need weak symbols","reporter":"eestieve","component":null,"watchers":["eestieve","ibuclaw"],"content":"with gdc (GCC) 4.4.5 20101001 (gdc hg, using dmd 2.051),\r\nif you add the following code in a D file:\r\n\r\n{{{\r\nextern(C) void onAssertErrorMsg( string file, size_t line, string msg )\r\n{\r\n  \/\/ log error but don't throw, as it would be in release\r\n  \/\/ ...\r\n}\r\n}}}\r\n\r\nGDC says:\r\n{{{\r\n\/opt\/gdc-4.4.5\/usr\/local\/bin\/..\/lib\/gcc\/i686-pc-linux-gnu\/4.4.5\/..\/..\/..\/libgdruntime.a(exception.o): In function `onAssertErrorMsg':\r\n\/tmp\/gdc\/gdc\/dev\/gcc-4.4.5\/objdir\/i686-pc-linux-gnu\/libphobos\/..\/..\/..\/libphobos\/core\/exception.d:183: multiple definition of `onAssertErrorMsg'\r\ngdc\/obj\/dbg.o:dbg.d:(.text+0x11e): first defined here\r\n}}}\r\n\r\n(DMD 2.0.51 compiles and calls the functions when an assert is triggered).\r\n\r\nObviously the onAssertError and onAssertErrorMsg should be weak in gphobos2, allowing the user to override the default (throwing) implementations.\r\n\r\n","assignee":null,"created_on":"2011-01-03T13:22:42.401728+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-01T23:50:28.889469+00:00","id":130},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Please document the gdc version identifiers","reporter":"eestieve","component":null,"watchers":["eestieve","ibuclaw"],"content":"I expected something like\r\n{{{\r\nversion(GDC)\r\n{ \/* gdc is the compiler *\/ }\r\n}}}\r\nwould work, but it doesn't, like it would\r\nfor \"version(DigitalMars)\".\r\n\r\nIs there such a version identifier, and could it be documented ?\r\n\r\nfor now I rely on an extra arg passed to gdc:\r\n-fversion=GDC - but this is not really clean.\r\n\r\n(gdc (GCC) 4.4.5 20101001 (gdc hg, using dmd 2.051))\r\n\r\nCheers","assignee":null,"created_on":"2011-01-03T13:56:57.338316+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-03T14:20:21.433480+00:00","id":131},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Strange unresolved external with string.format","reporter":"eestieve","component":null,"watchers":["eestieve","ibuclaw"],"content":"\r\nwith gdc (GCC) 4.4.5 20101001 (gdc hg, using dmd 2.051) - on debian unstable 32 bits\r\n\r\nConsider file:\r\n{{{\r\nimport std.socket;\r\nimport std.string;\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n  socket_t h = 1234;\r\n  string zz = format( \"fd %d\",  h );\r\n  writeln( zz );\r\n}\r\n}}}\r\n{{{\r\n$gdc sock.d\r\n\/tmp\/cc0VHtsG.o:(.data._D30TypeInfo_T3std6socket8socket_t6__initZ[_D30TypeInfo_T3std6socket8socket_t6__initZ]+0x18): undefined reference to `___s.1707'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\ncasting the socket_t as an int before passing it to format makes gdc happy...\r\n\r\ndmd 2.0.51 compiles and run properly.\r\n\r\n\r\n","assignee":"ibuclaw","created_on":"2011-01-03T14:56:41.226139+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-03T18:03:02.124430+00:00","id":132},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault On AA Foreach","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code segfaults on GDC but not DMD.  I can't seem to reduce it any further.\r\n\r\n{{{\r\nimport std.array;\r\n\r\nint[][int] byCategory(int[] values, int[] categories) {\r\n    Appender!(int[], int)[int] aa;\r\n    while(!values.empty && !categories.empty) {\r\n        scope(exit) {\r\n            values.popFront();\r\n            categories.popFront();\r\n        }\r\n\r\n        auto category = categories.front;\r\n        auto ptr = category in aa;\r\n        if(ptr is null) {\r\n            aa[category] = typeof(aa[category]).init;\r\n            ptr = category in aa;\r\n        }\r\n\r\n        ptr.put(values.front);\r\n    }\r\n\r\n    int[][int] ret;\r\n    foreach(k, v; aa) {\r\n        ret[k] = v.data;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nvoid main() {\r\n    int[] nums = [1,2,3,4,5,6,7,8,9];\r\n    int[] categories = [0,1,2,0,1,2,0,1,2];\r\n\r\n    auto result = byCategory(nums, categories);\r\n}\r\n\r\n}}}","assignee":"ibuclaw","created_on":"2011-01-04T00:49:42.889773+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-04T05:40:53.086316+00:00","id":133},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"struct sizeof","reporter":"ariovistus","component":null,"watchers":["ariovistus","ibuclaw"],"content":"32 bit gdc and gcc produce the same result (12) in the following code. 64 bit gdc and gcc produce different results (16 and 12), and I believe this is preventing me from being able to use a 64 bit C library from D.\r\n\r\ngdc (GCC) 4.4.5 20101001 (gdc hg, using dmd 2.050)\r\n\r\n{{{\r\n#!d\r\n\/\/tok.d\r\nimport std.stdio;\r\nstruct x {\r\n    ulong aa;\r\n    ushort zz;\r\n}\r\n\r\nvoid main(){\r\n    writeln(x.sizeof);\r\n}\r\n}}}\r\n\r\n{{{\r\n#!c\r\n\/\/tok.c\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n\r\nstruct x {\r\n    uint64_t aa;\r\n    uint16_t zz;\r\n};\r\n\r\nvoid main(){\r\n    printf(\"%d\\n\", sizeof(struct x));\r\n} \r\n}}}","assignee":null,"created_on":"2011-01-04T20:00:30.898920+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-09T19:40:53.885542+00:00","id":134},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Can't Build D2 on GDC 4.5.2","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"cc1plus: error: unrecognised debug output level \"toggle\"\r\nmake[3]: *** [d\/id.gen.o] Error 1\r\n","assignee":null,"created_on":"2011-01-05T01:00:39.626072+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-27T00:38:43.354880+00:00","id":136},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std.mathspecial.betaIncomplete broken for 64-bit builds","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"{{{\r\nimport std.mathspecial, std.stdio;\r\n\r\nvoid main() {\r\n    writeln(betaIncomplete(950, 51, 0.96));\r\n}\r\n}}}\r\n\r\nResults (-m32):  0.950936  (This is correct.)\r\n\r\nResults (-m64):  -nan","assignee":null,"created_on":"2011-01-05T04:05:57.694363+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-16T04:17:54.521575+00:00","id":140},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault:  Probably wrong code","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code causes a segfault on gcc 4.4.5, only on -m32 -O -inline builds.\r\n\r\n{{{\r\nimport std.math;\r\n\r\nversion(unittest) {\r\n    void main(){\r\n    }\r\n}\r\n\r\ndouble useless(double x, double v) {\r\n    immutable logX = log(x);\r\n    immutable numerator = logX * (0.5 * v - 1) - 0.5 * x;\r\n    return exp(numerator);\r\n}\r\n\r\nunittest {\r\n    assert( useless(1, 2) != 2);\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-01-05T04:22:21.196849+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-12T00:06:11.029712+00:00","id":141},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2 -isystem \/ -iprefix \/ -isysroot do nothing ","reporter":"eestieve","component":null,"watchers":["eestieve","ibuclaw"],"content":"\r\nD2 -isystem \/ -iprefix \/ -isysroot do nothing\r\n\r\nI expected the following would locate object.d properly:\r\n\r\n{{{\r\nmkdir tmpdir && cd tmpdir\r\nmkdir rt && touch rt\/object.d\r\ntouch test.d\r\ngdc -nostdinc -isystem rt -c test.d\r\n\r\nobject.d: Error: module object is in file 'object.d' which cannot be read\r\n}}}\r\n(and possibly even without -nostdinc)\r\n\r\nstrace shows that the object.d is not looked up in rt, as it should \r\n{{{\r\n$ strace -f gdc -nostdinc -isystem rt -c test.d |& grep object.d\r\n[pid  2746] stat64(\"object.di\", 0xbf9decec) = -1 ENOENT (No such file or directory)\r\n[pid  2746] stat64(\"object.d\", 0xbf9decec) = -1 ENOENT (No such file or directory)\r\n[pid  2746] open(\"object.d\", O_RDONLY)  = -1 ENOENT (No such file or directory)\r\n}}}\r\n(Same thing when specifying an absolute -isystem path)\r\n\r\nI also tried with -iprefix and -isysroot, but without success:\r\n{{{\r\n$ strace -f gdc -nostdinc -iprefix \/kkobject.d -isysroot \/zzobject.d -isystem wwobject.d -c test.d |& grep object.d \r\nexecve(\"\/usr\/local\/bin\/gdc\", [\"gdc\", \"-nostdinc\", \"-iprefix\", \"\/kkobject.d\", \"-isysroot\", \"\/zzobject.d\", \"-isystem\", \"wwobject.d\", \"-c\", \"test.d\"], [\/* 59 vars *\/]) = 0\r\n[pid 24110] stat64(\"object.di\", 0xbfacef8c) = -1 ENOENT (No such file or directory)\r\n[pid 24110] stat64(\"object.d\", 0xbfacef8c) = -1 ENOENT (No such file or directory)\r\n[pid 24110] open(\"object.d\", O_RDONLY)  = -1 ENOENT (No such file or directory)\r\n}}}\r\n\r\nThe strace output clearly shows that -isystem, -isysroot and -iprefix do _nothing_ at all. \r\n\r\nWork-around: This is working with:\r\n{{{\r\ngdc -nostdinc -I rt -c test.d\r\n}}}\r\n(of course ther is an ICE after because object.d is empty, but it is another problem,\r\nlogged in a separate bug)\r\nBut I think that -I should not be used to specify the runtime include path,\r\nor this should be documented.\r\n","assignee":null,"created_on":"2011-01-05T13:43:08.720223+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-06T01:06:51.063495+00:00","id":142},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Compiler segfault when not Object class not defined","reporter":"tbone","component":null,"watchers":["tbone","ibuclaw"],"content":"**myrt\/object.d**:\r\n----\r\n{{{\r\nmodule object;\r\n}}}\r\n----\r\n\r\n**foo.d**:\r\n----\r\nvoid main() { }\r\n----\r\n\r\n**gdc -Imyrt -nostdinc -nodefaultlibs foo.d**\r\n----\r\n{{{\r\ncc1d: internal compiler error: Segmentation fault: 11\r\nPlease submit a full bug report, with preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n----\r\nThe segfault is in d-codegen.h, getObjectType() as it dereferences ClassDeclaration::object which is null.\r\n\r\nIt is suppose to be initialized in class.c, ClassDeclaration::ClassDeclaration\r\n\r\n\r\n\r\nAlso, -iprefix doesn't seem to be working, as it still passes in the hard coded iprefix.","assignee":null,"created_on":"2011-01-06T04:48:07.896107+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-06T13:52:16.557578+00:00","id":144},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Fixed array passed as parameter does not follow value semantic, in fact it is a memory corruption ","reporter":"tbolsh","component":null,"watchers":["tbolsh","ibuclaw"],"content":"\n{{{\n#!d\n\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    workaroundTbolshBug1( [ 0, 1, 2, 3, 4, 5 ] );\n    showTbolshBug1( [ 0, 1, 2, 3, 4, 5 ] );\n} \n\n\/\/ works fine on dmd ver. D2: 2.051, asserts in gdc D2: 2.051\n\/\/ should be considered serious, because severely corrupts memory!\n\n}}}\n\n","assignee":null,"created_on":"2011-01-12T17:41:16.949917+00:00","version":null,"edited_on":"2011-01-12T17:46:40.564100+00:00","milestone":null,"updated_on":"2011-01-12T19:18:14.651994+00:00","id":147},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdmd does not have --main parameter, but it is convenient","reporter":"tbolsh","component":null,"watchers":["tbolsh","ibuclaw"],"content":"","assignee":null,"created_on":"2011-01-12T17:50:01.704645+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-12T19:16:04.674772+00:00","id":148},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdc 4.5.2 fails to bootstrap","reporter":"jlquinn","component":null,"watchers":["jlquinn","ibuclaw"],"content":"gcc 4.5.2 tarball\r\nDebian testing x86_64\r\nbootstrap compiler gcc 4.4.3\r\n\r\njlquinn@wyvern:~\/gcc\/gdc\/d$ hg identify\r\n330bd9e6077b tip\r\n\r\ntar jxf \/home\/jlquinn\/Downloads\/gcc-4.5.2.tar.bz2\r\n\r\ncd gcc-4.5.2\/\r\n\r\nln -s ..\/..\/..\/d gcc\/d\r\n\r\n.\/gcc\/d\/setup-gcc.sh -v2\r\n\r\ncd ..\/build\/\r\n\r\n..\/gcc-4.5.2\/configure --enable-languages=d --disable-shared --enable-checking=release\r\n\r\nmake\r\n\r\n...\r\n\r\ng++ -g -O2 -gtoggle -DIN_GCC -W -Wall -Wwrite-strings -Wcast-qual -DHAVE_CONFIG_H -I. -Id -I..\/..\/gcc-4.5.2\/gcc -I..\/..\/gcc-4.5.2\/gcc\/d -I..\/..\/gcc-4.5.2\/gcc\/..\/include -I..\/..\/gcc-4.5.2\/gcc\/..\/libcpp\/include  -I..\/..\/gcc-4.5.2\/gcc\/..\/libdecnumber -I..\/..\/gcc-4.5.2\/gcc\/..\/libdecnumber\/bid -I..\/libdecnumber     -Id -I..\/..\/gcc-4.5.2\/gcc\/d\/dmd2 -I..\/..\/gcc-4.5.2\/gcc\/d -D_GNU_SOURCE=1 -D_DH=1 -DD_NO_TRAMPOLINES=1 -DELFOBJ=1 -DLIBPHOBOS=\\\"-lgphobos2\\\" -DLIBPHOBOS_PROFILE=\\\"-lgphobos2\\\" -DLIBDRUNTIME=\\\"-lgdruntime\\\" -DLIBDRUNTIME_PROFILE=\\\"-lgdruntime\\\" -DD_GCC_VER=45 -Wno-missing-braces -Wno-format -Wno-missing-field-initializers -fno-strict-aliasing -fmessage-length=0  -o d\/id.gen.o -c d\/id.c\r\ncc1plus: error: unrecognised debug output level \"toggle\"\r\nmake[3]: *** [d\/id.gen.o] Error 1\r\nmake[3]: Leaving directory `\/home\/jlquinn\/gcc\/gdc\/dev\/build\/gcc'\r\nmake[2]: *** [all-stage2-gcc] Error 2\r\nmake[2]: Leaving directory `\/home\/jlquinn\/gcc\/gdc\/dev\/build'\r\nmake[1]: *** [stage2-bubble] Error 2\r\nmake[1]: Leaving directory `\/home\/jlquinn\/gcc\/gdc\/dev\/build'\r\n","assignee":null,"created_on":"2011-01-26T12:53:36.528980+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-26T15:53:16.827623+00:00","id":149},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Weird segfault in memcpy()","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code causes a segfault on GDC Revision 380 using GCC 4.4.5.  This occurs in both 32-bit and 64-bit modes, in memcpy().  The test case is reduced from my dstats library, hence the context and function names.\r\n\r\nCode:\r\n{{{\r\n\r\n\/\/ Dummy stub for std.conv.text().  Seems necessary for reproducing the bug.\r\nstring text(int x) {  return \"\"; }\r\n\r\nvoid dstatsEnforce(T, string file = __FILE__, int line = __LINE__)\r\n(T value, lazy const(char)[] msg = null) {\r\n    if(!value) {\r\n        const(char)[] lazyMsg = msg;\r\n        auto exceptMsg = (lazyMsg !is null) ? lazyMsg.idup : \"Invalid argument.\";\r\n        throw new Exception(file ~ \" (\" ~ text(line) ~ \") :  \" ~  exceptMsg);\r\n    }\r\n}\r\n\r\nvoid frqBin(uint nbin) {\r\n    dstatsEnforce(nbin <= 255, \"Cannot bin into \" ~\r\n        text(nbin) ~ \" bins and store the results in a \" ~\r\n        \"ubyte\" ~ \".\");\r\n}\r\n\r\nvoid main() {\r\n    frqBin(512);\r\n}\r\n\r\n}}}\r\n\r\nStack Trace (From GDB):\r\n\r\n{{{\r\n#0  0x00007ffff763fcc7 in memcpy () from \/lib\/libc.so.6\r\n#1  0x00000000004075dc in _d_arraycatnT (ti=<value optimized out>, n=5) at ..\/..\/..\/libphobos\/rt\/lifetime.d:1765\r\n#2  0x0000000000401b72 in gdcTest.frqBin() ()\r\n#3  0x0000000000401c87 in gdcTest.__T13dstatsEnforceTbVAyaa9_676463546573742e64Vi14Z.dstatsEnforce() ()\r\n#4  0x0000000000401bff in gdcTest.frqBin() ()\r\n#5  0x0000000000401c0f in D main ()\r\n#6  0x000000000040fd7d in runMain () at ..\/..\/..\/libphobos\/rt\/dmain2.d:493\r\n#7  0x000000000040f98d in tryExec (dg=...) at ..\/..\/..\/libphobos\/rt\/dmain2.d:438\r\n#8  0x000000000040fcb0 in runAll () at ..\/..\/..\/libphobos\/rt\/dmain2.d:505\r\n#9  0x000000000040f98d in tryExec (dg=...) at ..\/..\/..\/libphobos\/rt\/dmain2.d:438\r\n#10 0x000000000040fb6a in main (argc=<value optimized out>, argv=0x7fffffffe338) at ..\/..\/..\/libphobos\/rt\/dmain2.d:515\r\n}}}","assignee":"ibuclaw","created_on":"2010-11-24T01:28:30.192867+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-01-29T20:46:39.660813+00:00","id":109},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Using Associative Arrays:  \"Aborted\"","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code terminates with the (very terse) error message \"Aborted\".  This happens with both -m32 and -m64 builds, using GCC 4.4.5, and regardless of whether -O, -inline, and\/or -release is used.\r\n\r\n{{{\r\nvoid main() {\r\n    uint[uint] aa;\r\n\r\n    foreach(index; 0..1_000_000) {\r\n        aa[index] = index;\r\n    }\r\n\r\n    assert(0);  \/\/ Just to show that the end of main() isn't being reached.\r\n}\r\n}}}","assignee":null,"created_on":"2011-01-05T01:47:42.596250+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-16T04:52:32.250627+00:00","id":137},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"exp() not computed to full 80-bit precision in 64-bit mode","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"std.math.exp seems to only be computed to double precision.  This is a problem, since some code in Phobos (std.mathspecial) seems to rely on it being computed to full 80-bit real precision.  Arguably this is a bug in Phobos and not GDC, but it would still be nice to have 80-bit precision exp in GDC to avoid inconsistency between 32 and 64 bit floating point results and between DMD and GDC.\r\n\r\n{{{\r\n\r\nimport std.math, std.stdio;\r\n\r\nvoid main() {\r\n    real x = 950;\r\n    stderr.writeln(exp(x));\r\n    stderr.writeln(cast(double) exp(x));\r\n}\r\n}}}\r\n\r\nPrints in 32-bit mode:\r\n\r\n3.79977e+412\r\n\r\n-nan\r\n\r\nPrints in 64-bit mode:\r\n\r\ninf\r\n\r\ninf\r\n","assignee":"ibuclaw","created_on":"2011-02-16T04:23:49.223373+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-27T17:56:25.227040+00:00","id":153},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"MinGW-w64: recent GDC does not build w\/ recent GCC","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Hi, I ran into a linking issue while trying to build the latest GDC (459:9a6d77ad18f2, D2) with vanilla GCC v4.5.2 using MinGW-w64 TDM v4.5.1 and up-to-date MSYS. Building w\/o GDC front-end (--enable-languages=c) works.\r\n\r\nconfiguration:\r\n{{{\r\n--prefix=\/mingw --build=x86_64-w64-mingw32 --enable-languages=d --enable-sjlj-exceptions --disable-symvers --disable-werror --disable-nls --disable-win32-registry --enable-version-specific-runtime-libs --enable-threads --with-pkgversion=\"GDC 459:9a6d77ad18f2 (20110202)\" --disable-bootstrap\r\n}}}\r\n\r\nerror:\r\n{{{\r\ng++  -g -O2 -DIN_GCC   -W -Wall -Wwrite-strings -Wcast-qual -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I..\/..\/gcc -I..\/..\/gcc\/. -I..\/..\/gcc\/..\/include -I..\/..\/gcc\/..\/libcpp\/include -I\/c\/gcc-4.5.2\/build\/.\/gmp -I\/c\/gcc-4.5.2\/gmp -I\/c\/gcc-4.5.2\/build\/.\/mpfr -I\/c\/gcc-4.5.2\/mpfr -I\/c\/gcc-4.5.2\/mpc\/src  -I..\/..\/gcc\/..\/libdecnumber -I..\/..\/gcc\/..\/libdecnumber\/dpd -I..\/libdecnumber     -I. -I. -I..\/..\/gcc -I..\/..\/gcc\/. -I..\/..\/gcc\/..\/include -I..\/..\/gcc\/..\/libcpp\/include -I\/c\/gcc-4.5.2\/build\/.\/gmp -I\/c\/gcc-4.5.2\/gmp -I\/c\/gcc-4.5.2\/build\/.\/mpfr -I\/c\/gcc-4.5.2\/mpfr -I\/c\/gcc-4.5.2\/mpc\/src  -I..\/..\/gcc\/..\/libdecnumber -I..\/..\/gcc\/..\/libdecnumber\/dpd -I..\/libdecnumber    -I..\/..\/gcc\/d -I..\/..\/gcc\/d\/dmd2 -Id -D_GNU_SOURCE=1 -D_DH=1 -DD_NO_TRAMPOLINES=1 -DELFOBJ=1 -DLIBPHOBOS=\\\"-lgphobos2\\\" -DLIBPHOBOS_PROFILE=\\\"-lgphobos2\\\" -DLIBDRUNTIME=\\\"-lgdruntime\\\" -DLIBDRUNTIME_PROFILE=\\\"-lgdruntime\\\" -DD_GCC_VER=45 -Wno-missing-braces -Wno-format -Wno-missing-field-initializers -fno-strict-aliasing -fmessage-length=0 -Wl,--stack,8388608 -o cc1d.exe \\\r\n\t\td\/id.gen.o d\/impcnvtab.gen.o attribs.o cppdefault.o stub-objc.o prefix.o i386-c.o msformat-c.o  d\/aav.dmd.o d\/access.dmd.o d\/aliasthis.dmd.o d\/array.dmd.o d\/arrayop.dmd.o d\/async.dmd.o d\/attrib.dmd.o d\/cast.dmd.o d\/class.dmd.o d\/clone.dmd.o d\/cond.dmd.o d\/constfold.dmd.o d\/dchar.dmd.o d\/declaration.dmd.o d\/delegatize.dmd.o d\/doc.dmd.o d\/dsymbol.dmd.o d\/dump.dmd.o d\/entity.dmd.o d\/enum.dmd.o d\/expression.dmd.o d\/func.dmd.o d\/gnuc.dmd.o d\/hdrgen.dmd.o d\/html.dmd.o d\/identifier.dmd.o d\/imphint.dmd.o d\/import.dmd.o d\/init.dmd.o d\/inline.dmd.o d\/interpret.dmd.o d\/json.dmd.o d\/lexer.dmd.o d\/lstring.dmd.o d\/macro.dmd.o d\/mangle.dmd.o d\/mars.dmd.o d\/mtype.dmd.o d\/module.dmd.o d\/opover.dmd.o d\/optimize.dmd.o d\/parse.dmd.o d\/rmem.dmd.o d\/root.dmd.o d\/scope.dmd.o d\/speller.dmd.o d\/statement.dmd.o d\/staticassert.dmd.o d\/stringtable.dmd.o d\/struct.dmd.o d\/template.dmd.o d\/todt.dmd.o d\/toobj.dmd.o d\/typinf.dmd.o d\/unialpha.dmd.o d\/utf.dmd.o d\/unittests.dmd.o d\/version.dmd.o d\/argtypes.dmd.o d\/builtin.dmd.o d\/traits.dmd.o d\/d-lang.glue.o d\/d-decls.glue.o d\/d-codegen.glue.o d\/d-objfile.glue.o d\/d-irstate.glue.o d\/d-glue.glue.o d\/d-convert.glue.o d\/d-todt.glue.o d\/d-gcc-real.glue.o d\/d-gt.cglue.o d\/d-builtins.cglue.o d\/d-misc.cglue.o d\/d-builtins2.glue.o d\/symbol.glue.o d\/asmstmt.glue.o d\/dt.glue.o d\/d-cppmngl.glue.o d\/d-c-stubs.cglue.o main.o  libbackend.a ..\/libcpp\/libcpp.a ..\/libdecnumber\/libdecnumber.a   -L\/c\/gcc-4.5.2\/build\/.\/gmp\/.libs -L\/c\/gcc-4.5.2\/build\/.\/mpfr\/.libs -L\/c\/gcc-4.5.2\/build\/.\/mpc\/src\/.libs -lmpc -lmpfr -lgmp   -L..\/zlib -lz  ..\/libcpp\/libcpp.a   ..\/libiberty\/libiberty.a ..\/libdecnumber\/libdecnumber.a \r\nmsformat-c.o:msformat-c.c:(.data+0x318): undefined reference to `c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.data+0x950): undefined reference to `c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.data+0xa98): undefined reference to `c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.data+0xda0): undefined reference to `c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.data+0xe28): undefined reference to `c_global_trees'\r\nmsformat-c.o:msformat-c.c:(.data+0xf70): more undefined references to `c_global_trees' follow\r\n}}}\r\n\r\nc_global_trees resides in the c-common.c module; simply hacking the Makefile to include c-common.o does not work (new linking errors).\r\n(Incomplete) issue #119 seems to be related; http:\/\/www.digitalmars.com\/d\/archives\/D\/gnu\/Building_an_ARM_cross_compiler_3744.html may be too.","assignee":"ibuclaw","created_on":"2011-02-11T02:18:16.839357+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-23T07:19:14.750859+00:00","id":151},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Array appending broken","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Array appending appears to have been broken by a recent commit.\r\n\r\n{{{\r\nvoid main() {\r\n    uint[] foo;\r\n    foo ~= 1;\r\n}\r\n}}}\r\n\r\nResult, regardless of flags, in both 32 and 64 builds:\r\n\r\nMemory allocation failed","assignee":null,"created_on":"2011-02-19T17:09:21.581149+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-02-19T23:56:42.049511+00:00","id":154},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"msvcrt is not ANSI-compliant","reporter":null,"component":null,"watchers":["venix1","ibuclaw"],"content":"The standard signature for vswprintf is\r\n{{{\r\n#!d\r\nint vswprintf(wchar_t* s, size_t n, in wchar_t* format, va_list arg);\r\n}}}\r\nMS has\r\n{{{\r\n#!d\r\nint vswprintf(wchar_t* s, in wchar_t* format, va_list arg);\r\n}}}\r\nand\r\n{{{\r\n#!d\r\nint _vsnwprintf (wchar_t* dest, size_t maxlen, in wchar_t* format, va_list);\r\n}}}\r\n{{{\r\n#!c\r\n\/* These differ from the ISO C prototypes, which have a maxlen parameter like snprintf.  *\/\r\n#ifndef __STRICT_ANSI__\r\n_CRTIMP int __cdecl __MINGW_NOTHROW\tswprintf (wchar_t*, const wchar_t*, ...);\r\n_CRTIMP int __cdecl __MINGW_NOTHROW\tvswprintf (wchar_t*, const wchar_t*, __VALIST);\r\n#endif\r\n}}}","assignee":"venix1","created_on":"2011-04-19T18:51:16.441071+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-29T01:52:10.436737+00:00","id":196},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"[patch]using GDC freely on Windows","reporter":"heromyth","component":null,"watchers":["heromyth","venix1","ibuclaw"],"content":"This patch makes it possible that running GDC on different diskdrive or placing it into any sub-directory.\r\n\r\nTested with MingW GCC 4.5.2 + CMD Shell on Windows XP SP3.","assignee":null,"created_on":"2011-03-03T08:29:26.570439+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-11T21:17:24.538726+00:00","id":158},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Verify MinGW build instructions.","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Some people were having trouble compiling GDC for windows.  I managed to get GDC to compile and documented the procedure at http:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/MinGWCompile.\r\n\r\nI would like anyone interested to attempt it and leave any feedback on the issue.  So that GDC can officially support windows again.","assignee":null,"created_on":"2010-07-29T01:19:01.426196+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-22T02:56:58.621401+00:00","id":49},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"-fproperty implies -frelease","reporter":"art_","component":null,"watchers":["art_"],"content":"While refactoring code i managed to trigger an assert(), and got just a cryptic \"Aborted\", instead of the expected error msg. \r\n\r\nFirst suspects were the gc-sections options, as assert used to work before i turned them on. But removing them from the app build didn't change things, and not wanting to rebuild gdc, i decided to bisect all other gdc flags... Turns out i had added '-fproperty'  to DFLAGS in the Makefile at the same time, and this one was causing the problem, by also turning on '-frelease'...\r\n{{{\r\n--- d-lang.cc.org\t2011-12-19 13:07:52.373371793 +0000\r\n+++ d-lang.cc\t2011-12-23 01:09:59.937934903 +0000\r\n@@ -717,6 +717,7 @@\r\n #if V2\r\n         case OPT_fproperty:\r\n             global.params.enforcePropertySyntax = 1;\r\n+            break;\r\n #endif\r\n         case OPT_frelease:\r\n             global.params.useInvariants = ! value;\r\n\r\n}}}\r\n(Completely untested, as i cannot rebuild gdc right now.)","assignee":null,"created_on":"2011-12-23T01:33:55.690391+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-23T02:02:16.442975+00:00","id":296},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-noboundscheck doesn't work with GDMD","reporter":"Andrej08","component":null,"watchers":["Andrej08","ibuclaw"],"content":"{{{\r\nC:\\MinGW\\msys\\1.0\\crossdev\\Mingw32\\mingw\\bin>gdmd -release -noboundscheck test.d\r\ncc1d.exe: error: unrecognized command line option \"-fnobounds-check\"\r\n}}}\r\n\r\ngdmd is my batch file which runs\r\n{{{\r\nperl gdmd %*\r\n}}}","assignee":"ibuclaw","created_on":"2011-03-06T17:09:26.887414+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-06T22:37:42.410785+00:00","id":161},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault with nested range struct + nested function","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code segfaults GDC revision 488, compiled with GCC 4.4.5, at compile time.  This happens regardless of whether the flags -O, -inline, -release, or -m32\/-m64 are set.\n\n\n{{{\nvoid fun(R)(R range) {\n    void inner() {}\n\n    foreach(elem; range) {\n        inner();\n    }\n}\n\nvoid main() {\n    struct Range {\n        @property size_t front() { return 1; }\n        void popFront() {}\n        @property bool empty() { return true; }\n    }\n\n    fun(Range.init);\n}\n}}}\n\nError message:\n\ngdcTest.d: In function ‘fun’:\ngdcTest.d:5: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\n","assignee":"ibuclaw","created_on":"2011-03-12T22:56:30.400348+00:00","version":null,"edited_on":"2011-03-12T22:57:15.025245+00:00","milestone":null,"updated_on":"2011-06-19T11:29:20.471130+00:00","id":163},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Weird code gen bug","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"{{{\r\nimport std.algorithm, std.array;\r\n\r\nvoid doPopping(F)(F stuff) {\r\n    while(!stuff.empty) {\r\n        stuff.popFront();\r\n    }\r\n}\r\n\r\nvoid main() {\r\n    int[] nums = [1,2,3,4,5,6,7,8,9];\r\n    auto filtered = filter!\"a == a\"(map!\"a % 2 == 0\"(nums));\r\n    doPopping(filtered);\r\n}\r\n}}}\r\n\r\ncore.exception.AssertError@\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/array.d(282): Attempting to popFront() past the end of an array of int\r\n\r\nOnly happens with -m64 -O -inline.  -m32 builds ICE instead (see Issue 138).  With either -O or -inline omitted, the code appears to run correctly.","assignee":null,"created_on":"2011-01-05T03:52:25.870791+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-16T08:24:23.508757+00:00","id":139},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE emit_move_insn","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"{{{\r\nimport std.algorithm;\r\n\r\nvoid main() {\r\n    int[] nums = [1,2,3,4,5,6,7,8,9];\r\n    int[] categories = [0,1,2,0,1,2,0,1,2];\r\n\r\n    auto categories2 = filter!\"a == a\"(map!\"a % 2 == 0\"(nums));\r\n}\r\n}}}\r\n\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/algorithm.d:177: internal compiler error: in emit_move_insn, at expr.c:3405\r\n\r\nHappens on GDC builds using GCC 4.4.5, only with the compiler switches -O, -inline, and -m32 all enabled.\r\n","assignee":null,"created_on":"2011-01-05T03:32:59.353134+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-16T03:06:34.884351+00:00","id":138},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE:  Nested Template Functions Passed to Map","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Test Case:\r\n\r\n{{{\r\nimport std.algorithm;\r\n\r\nvoid outer(double[][] dataIn) {\r\n    static double[] lambda(R)(R range) {\r\n        return range;\r\n    }\r\n\r\n    auto data = map!lambda(dataIn);\r\n}\r\n\r\nvoid main() {\r\n    double[][] mat = [[3,6,2,4], [3,6,8,8], [6,7,5,3], [0,9,3,1]];\r\n    outer(mat);\r\n}\r\n\r\n}}}\r\n\r\nResult:\r\n\r\n{{{\r\n\r\ncc1d: ..\/..\/gcc\/d\/d-decls.cc:596: virtual Symbol* FuncDeclaration::toSymbol(): Assertion `outer_sym->outputStage != Finished' failed.\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/algorithm.d: In member function ‘fillCacheBack’:\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/std\/algorithm.d:132: internal compiler error: Aborted\r\n\r\n}}}\r\n\r\n**Non-obvious things that will prevent this from being reproduced:**\r\n\r\n* Change lambda() to a non-templated function.\r\n* Move lambda() from being nested in outer() to being a top-level function.","assignee":null,"created_on":"2010-11-27T23:51:58.315542+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-16T03:12:30.746672+00:00","id":114},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Weird Link Failure W\/ Templates","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code fails to link for no apparent reason (error message below):\r\n\r\n{{{\r\n\/\/ gdcTest.d:\r\n\r\nimport std.functional, std.range;\r\n\r\nversion(unittest) {\r\n    void main (){}\r\n}\r\n\r\nRet[] rank(alias compFun = \"a < b\", Ret = double, T)(T input, Ret[] buf = null) {\r\n    if(input.length < 8) {\r\n        return rankSort!(compFun, Ret)( input, buf);\r\n    } else {\r\n        return rankUsingIndex!(compFun, Ret)(input, buf);\r\n    }\r\n}\r\n\r\nprivate Ret[] rankUsingIndex(alias compFun, Ret, T)(T input, Ret[] buf) {\r\n    Ret[] ret;\r\n    return ret;\r\n}\r\n\r\nRet[] rankSort(alias compFun = \"a < b\", Ret = double, T)(T input, Ret[] buf = null) {\r\n    Ret[] ranks;\r\n    return ranks;\r\n}\r\n\r\nunittest {\r\n    uint[] test = [3, 5, 3, 1, 2];\r\n    double[] dummy2;\r\n    assert(rankUsingIndex!(\"a < b\", double)(test, dummy2) == [3.5, 5, 3.5, 1, 2]);\r\n    uint[] test2 = [3,3,1,2];\r\n    assert(rank(test2) == [3.5,3.5,1,2]);\r\n}\r\n}}}\r\n\r\n\r\nGDC build:  Revision 494, using GCC 4.4.5.\r\n\r\nBuild command and output:\r\n\r\n{{{\r\n$ gdmd -O -inline -release -unittest gdcTest.d\r\ngdcTest.o: In function `_D7gdcTest31__T4rankVAyaa5_61203c2062TdTAkZ4rankFAkAdZAd':\r\ngdcTest.d:(.text._D7gdcTest31__T4rankVAyaa5_61203c2062TdTAkZ4rankFAkAdZAd[_D7gdcTest31__T4rankVAyaa5_61203c2062TdTAkZ4rankFAkAdZAd]+0x41): undefined reference to `_D7gdcTest42__T14rankUsingIndexVAyaa5_61203c2062TdTAkZ14rankUsingIndexFAkAdZAd.1'\r\ncollect2: ld returned 1 exit status\r\n}}}","assignee":null,"created_on":"2011-03-17T02:34:31.414327+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-17T19:28:31.681221+00:00","id":165},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"(ICE:fold-const.c:2792) using std.range.zip","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"This code segfaults GDC revision 488 using GCC 4.5.2 with the flags -O -inline -release -unittest:\r\n\r\n{{{\r\nimport std.range;\r\n\r\nvoid main() {\r\n    uint[] a, b;\r\n    zip(a, b);\r\n}\r\n}}}\r\n\r\nError message:\r\n{{{\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5.2\/std\/format.d: In function ‘__unittest1308’:\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.5.2\/..\/..\/..\/..\/include\/d2\/4.5.2\/std\/format.d:630:0: internal compiler error: in fold_convert_loc, at fold-const.c:2792\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n","assignee":"ibuclaw","created_on":"2011-03-13T01:14:10.297005+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-08T20:54:41.522761+00:00","id":164},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Assembler error:  Already defined","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code produces an assembler error when compiled with GDC revision 496, using GCC 4.4.5.  The flags -unittest, -O, -inline, -release, and -m32\/-m64 seem to have no effect either way.\r\n\r\nCode:\r\n\r\n{{{\r\n\/\/ gdcTest.d\r\nimport std.traits, core.stdc.time : time;\r\n\r\nvoid main (){\r\n    uint[] test = [3, 5, 3, 1, 2];\r\n    rankSort(test);\r\n    uint[] test2 = [3,3,1,2];\r\n    rank(test2);\r\n}\r\n\r\n\/\/ This is a stub of a dependency that the original code had.\r\nT[] newStack(T)(size_t n) {\r\n    \/\/ If this function is nothrow, the bug can no longer be reproduced.\r\n    if(n == 666) throw new Exception(\"\");\r\n    return null;\r\n}\r\n\r\nRet[] rank(alias compFun = \"a < b\", Ret = double, T)(T input, Ret[] buf = null) {\r\n    return rankSort!(compFun, Ret)(input, buf);\r\n}\r\nRet[] rankSort(alias compFun = \"a < b\", Ret = double, T)(T input, Ret[] buf = null) {\r\n    \/\/ If some scope(exit) that calls a function isn't here, then the bug won't\r\n    \/\/ be reproduced.  Using time() as a dummy function that can't be inlined.\r\n    scope(exit) time(null);\r\n\r\n    Ret[] ranks;\r\n    if(buf.length < input.length) {\r\n        ranks = newStack!(Ret)(input.length);\r\n    } else {\r\n        ranks = buf[0..input.length];\r\n    }\r\n\r\n    size_t[] perms = newStack!(size_t)(input.length);\r\n\r\n    foreach(i; 0..perms.length)  {\r\n        ranks[perms[i]] = i + 1;\r\n    }\r\n\r\n    static if(!isIntegral!Ret) {\r\n        averageTies(input, ranks, perms);\r\n    }\r\n\r\n    return ranks;\r\n}\r\n\r\nprivate void averageTies(T, U)(T sortedInput, U[] ranks, size_t[] perms) {\r\n    assert(0);\r\n}\r\n\r\n}}}\r\n\r\nError message:\r\n{{{\r\n$ gdmd gdcTest.d \r\n\/tmp\/cc0KOS39.s: Assembler messages:\r\n\/tmp\/cc0KOS39.s:509: Error: symbol `_D7gdcTest35__T8rankSortVAyaa5_61203c2062TdTAkZ8rankSortFAkAdZAd' is already defined\r\n\r\n}}}\r\n","assignee":"ibuclaw","created_on":"2011-03-18T00:25:16.819031+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-18T20:19:19.250751+00:00","id":167},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Can't compile std.datetime in 32 mode","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"Using GCC 4.4.5, the following error message comes out of the GDC build process:\r\n\r\n{{{\r\n\/home\/dsimcha\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/gdc -B\/home\/dsimcha\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/local\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/include -isystem \/usr\/local\/x86_64-unknown-linux-gnu\/sys-include -m32 -o std\/datetime.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/std\/datetime.d\r\n..\/..\/..\/..\/libphobos\/std\/datetime.d:1: internal compiler error: in output_die, at dwarf2out.c:8193\r\n\r\n}}}","assignee":null,"created_on":"2011-03-19T00:36:27.514500+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-21T20:41:46.803000+00:00","id":168},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: in extract_range_from_binary_expr, at tree-vrp.c:2294","reporter":null,"component":null,"watchers":["art_","ibuclaw"],"content":"{{{\r\nvoid main(string[] args) {\r\n   string outfilename;\r\n\r\n   bool delegate(string arg) eatarg;\r\n   foreach(arg; args[1..$]) {\r\n      if (eatarg) {\r\n         eatarg(arg);\r\n\t continue;\r\n      }\r\n      eatarg = (string arg) { outfilename = arg; return true; };\r\n   }\r\n}\r\n}}}\r\n\r\nTrying to compile this program (which is a much simplified version of the real arg parsing code, obviously) results in an ICE:\r\n\r\n{{{\r\n$ gdc -m32 -O2 gdcdelbug1.d  -o gdcdelbug1\r\ngdcdelbug1.d: In function 'D main':\r\ngdcdelbug1.d:1:0: internal compiler error: in extract_range_from_binary_expr, at tree-vrp.c:2294\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\n}}}\r\n\r\nUsing '-O1' instead of ''-O2\" seems to work, so i guess i can use that as a temp workaround...","assignee":"ibuclaw","created_on":"2011-12-15T18:16:28.605352+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-20T14:53:08.693895+00:00","id":289},{"status":"on hold","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"pragma(attribute, __dllimport__)","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"While investigating the auto import issue, I came across an old test case demonstrating the problem.  What happens is that {{{FOO}}} exports 2 undefined symbols.  The incorrect {{{_FOO}}} and correct {{{__imp_FOO}}}.  Moving the assignment statement into main exports only the correct symbol.\r\n\r\n{{{\r\n#!d\r\nextern (C)\r\n{\r\n    pragma(attribute, __dllimport__) \r\n        private extern shared int[5] FOO;\r\n\r\n    extern (C) int printf(const char*, ...);\r\n    shared int* a = &FOO[0];\r\n}\r\n\r\nvoid main()\r\n{\r\n    printf(\"%d\", FOO[0]);\r\n}\r\n}}}\r\n","assignee":"venix1","created_on":"2011-03-23T02:33:16.144517+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-20T18:55:41.397116+00:00","id":172},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"writeln() hangs with more than one argument","reporter":null,"component":null,"watchers":["venix1"],"content":"In D2 (gdc -v2 [r499]), doing for example\r\n\r\n{{{\r\n    writeln(\"x=\", 3);\r\n}}}\r\n\r\nHangs after writing \"x=3\" and no new line is sent. The same with more arguments, but works fine if there is only one.\r\n\r\nOTOH, the equivelent:\r\n\r\n{{{\r\n    write(\"x=\", 3, \"\\n\");\r\n}}}\r\n\r\nworks fine.\r\n","assignee":null,"created_on":"2011-03-25T22:02:06.284185+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-26T00:12:04.734220+00:00","id":173},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Which GCC versions to officially support?","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6)\n\nThis brings the list of supported versions (known to me) to be GCC 3.4.6, GCC 4.1.2, and GCC 4.3.5\n\nThis brings me to the following question: Which versions should we strive to support for the near\/mid-term, and which ones should be just ignore and drop completely?\n\nSome things to note.\n* Cygwin now uses GCC-3.4.4 (used to be 3.4.1 - which is still noted in the code)\n* SkyOS now uses GCC-4.1.1 (used to be 3.4.0 - which is still noted in the code) - having a look on their website, the project seems to be dead in the water anyway.\n* A GCC-4.2 port was made, however proved to be too buggy at the time.\n* The most recent version of GCC is 4.5.0 (though a 4.5.1 prerelease is in the works)\n","assignee":null,"created_on":"2010-08-08T13:23:30.643095+00:00","version":null,"edited_on":"2010-08-09T10:05:25.082792+00:00","milestone":null,"updated_on":"2011-03-26T22:36:35.412216+00:00","id":53},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"varargs in GDC","reporter":"yarf","component":null,"watchers":["yarf","ibuclaw"],"content":"GDC varargs don't behave correctly (for D) requiring some ugly work-arounds (see tango.text.convert.Layout for an example). I forget the exact details, but the ldc folks resolved it for their compiler","assignee":null,"created_on":"2009-10-12T18:36:04.490187+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-27T14:10:52.034107+00:00","id":1},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault in _d_arraycatnT","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"I get the following segfault on GDC commit 509 using GCC 4.4.5, only in 64-bit mode.  I haven't reduced this yet and don't imagine it will be easy, but I will reduce it if necessary.\r\n\r\n{{{\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000000000043851c in _d_arraycatnT (ti=..., n=5)\r\n    at ..\/..\/..\/libphobos\/rt\/lifetime.d:1908\r\n1908\t        auto b = va_arg!(byte[])(va);\r\n}}}","assignee":"ibuclaw","created_on":"2011-03-27T20:14:03.775035+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-07T02:13:12.949557+00:00","id":174},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D attempts to use 64-bit registers in 32-bit mode.","reporter":"venix1","component":null,"watchers":["venix1"],"content":"Attempting to rebuild MinGW using the <<changeset 509>> fails when compiling inline assembly.\n\nWhen compiling D1's std.math the following errors occur.\n{{{\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d: In function 'scalbn':\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:1615:0: error: unknown register name 'r8b' in 'asm'\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:1615:0: error: unknown register name 'r9b' in 'asm'\n...\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:1615:0: error: unknown register name 'tr6' in 'asm'\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:1615:0: error: unknown register name 'tr7' in 'asm'\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d: In function 'poly':\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:3190:0: error: unknown register name 'fs' in 'asm'\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d:3190:0: error: unknown register name 'gs' in 'asm'\n}}}\n\nThe unknown register warnings will go away if the -m64 flag is used to enable access to 64-bit registers.\n\nregisters.error contains the full list of all unknown registers.","assignee":null,"created_on":"2011-03-28T17:12:36.306305+00:00","version":null,"edited_on":"2011-03-28T17:14:53.617924+00:00","milestone":null,"updated_on":"2011-03-28T18:41:24.199154+00:00","id":175},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC is requiring unnecessary Symbols","reporter":"venix1","component":null,"watchers":["venix1"],"content":"At <<changeset 499>> GDC would not require a ModuleInfo symbol from modules that contained no code.\r\n\r\nAs of <<changeset 510>> this is no longer true and GDC will require ModuleInfo from all imported modules.\r\n\r\nPhobos2 made use of this feature by not compiling {{{std.stdint}}} and possibly other modules. \r\n\r\n{{{\r\n$ nm \/gdcr499\/lib\/libgphobos2.a | grep _D3std6stdint12__ModuleInfoZ\r\nResult: Nothing.\r\n\r\n# \/c\/mingw32\/ Contains r510.\r\n$ nm  \/c\/mingw32\/lib\/libgphobos2.a | grep _D3std6stdint12__ModuleInfoZ\r\n         U __D3std6stdint12__ModuleInfoZ\r\n         U __D3std6stdint12__ModuleInfoZ\r\n}}}","assignee":null,"created_on":"2011-03-29T00:35:39.610211+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-03-29T01:01:01.094614+00:00","id":176},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ArrayLiteralExp::toElem incorrectly sets TREE_STATIC = 1","reporter":"venix1","component":null,"watchers":["venix1","jordirovira","ibuclaw"],"content":"Continued from [[https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/170\/problems-relating-to-windows-binaries#comment-448541|issue 170]].\n\nThe erroneous GIMPLE code is a result of ArrayLiteralExp::toElem always setting TREE_STATIC on the constructor.\n\nIn the event that the expression is not static, this will, with MinGW, generate {{{ICE: in expand_expr_real_1, at expr.c:8481}}}.\n\nThis occurs because when translated to GIMPLE an optimization is perfomed which believes that the array **is** statically initialized.\n{{{\nstatic void * C.0[3] = {a, 0B, a};\n\n}}}\n\n* When TREE_STATIC = 1; is commented out.  The ICE disappears.\n* I do not know how Linux avoids the issue.  Is it done in GDC or GCC?\n\nFrom my current understanding of the front end, TREE_STATIC should only be set if the destination variable is static.\n\nAny theories as to why this doesn't happen on Linux?\n\n","assignee":null,"created_on":"2011-04-29T01:30:10.007939+00:00","version":null,"edited_on":"2011-04-29T01:31:20.232333+00:00","milestone":null,"updated_on":"2011-04-29T21:11:29.949011+00:00","id":203},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Errors in array initializers with more than 2 non constant elements","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"DMD works fine in all of these cases, but GDC 4.5.1 r510 (D2) does this:\r\n\r\nIn case of int[]:\r\n{{{\r\n#!D\r\n\r\nint x;\r\nauto a = [x];                   \/\/ OK\r\nauto multiples = [x, 2*x];      \/\/ OK\r\nauto multiples = [x, 2*x, 3*x]; \/\/ ICE !!\r\n}}}\r\n\r\nIn case of float[]:\r\n{{{\r\n#!D\r\n\r\nfloat x;\r\nauto powes = [x, x^^2];         \/\/ OK\r\nauto powers = [x, x^^2, x^^3];  \/\/ Error:\r\n\r\n}}}\r\nThe error is in a strange \"1:0\" line (?):\r\n\r\nprog.d:1:0: error: initializer for floating value is not a floating constant\r\n\r\nOnly for more than 2 elements.\r\n\r\nDMD 2.052 is OK.\r\n","assignee":null,"created_on":"2011-04-03T19:19:01.454305+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-03T20:03:52.593019+00:00","id":177},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault involving exp2, 32-bit only","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code segfaults at runtime on GDC revision 500 compiled with GCC 4.4.5, only in -m32 mode.  This happens regardless of -O, -inline, -release.\r\n\r\n{{{\r\nimport std.math : exp2;\r\n\r\nstruct GeometricMean {\r\n    double num;\r\n\r\n    void put(double element) {\r\n        num = element;\r\n    }\r\n\r\n    double geoMean() {\r\n        \/\/ This exp2 call is key.  If it's removed the bug is not reproduced.\r\n        \/\/ However, calling exp2 doesn't cause a segfault in other contexts.\r\n        return exp2(num);\r\n    }\r\n}\r\n\r\ndouble geometricMean(T)(T data) {\r\n    GeometricMean m;\r\n    foreach(elem; data) {\r\n        m.put(elem);\r\n    }\r\n    return m.geoMean;\r\n}\r\n\r\nvoid main() {\r\n    \/\/ Static array to avoid heap activity, thus ruling out GC issues.\r\n    uint[1] data = 1;\r\n    auto result = geometricMean(data[]);\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-03-22T01:01:16.214428+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-03T20:04:36.139185+00:00","id":169},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"cc1d: internal compiler error: in hwi2toli, at d\/d-codegen.cc:938","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"When i try to build gdc on x86-64 linux, i get the error\r\n\"cc1d: internal compiler error: in hwi2toli, at d\/d-codegen.cc:938\"\r\nwhen gdc, is compiling std.boxer.\r\nI have tested with gcc-4.4.5 and gcc-4.5.2. Both fail.\r\nThis happens for D1 and D2.\r\n","assignee":null,"created_on":"2011-04-05T16:12:09.589594+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-05T17:16:07.148368+00:00","id":178},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Floating Point Exception","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code produces a \"Floating point exception\" non-deterministically (about 1\/2 of the time) when compiled with -O -inline -release on GDC using GCC 4.4.5.\r\n\r\n{{{\r\nimport std.random;\r\n\r\nvoid main() {\r\n    foreach(i; 0..1_000) {\r\n        uint len = uniform(0, 1000);\r\n        int k = uniform(0, len);\r\n    }\r\n}\r\n\r\n}}}","assignee":"ibuclaw","created_on":"2011-01-06T03:38:09.376590+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-06T00:17:30.499632+00:00","id":143},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"adler32.c error","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"I get this gigantic error message when trying to build revision 520 with GCC 4.4.5.\r\n\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:8:19: error: zutil.h: No such file or directory\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:12: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘adler32_combine_’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:60: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘ZEXPORT’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:62: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘*’ token\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:63: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘len’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:64: error: expected identifier or ‘(’ before ‘{’ token\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:131: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘adler32_combine_’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:133: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘adler2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:134: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘len2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:135: error: expected identifier or ‘(’ before ‘{’ token\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:155: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘ZEXPORT’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:157: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘adler2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:158: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘len2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:159: error: expected identifier or ‘(’ before ‘{’ token\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:163: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘ZEXPORT’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:165: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘adler2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:166: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘len2’\r\n..\/..\/..\/..\/libphobos\/zlib\/adler32.c:167: error: expected identifier or ‘(’ before ‘{’ token\r\nmake[5]: *** [zlib\/adler32.o] Error 1\r\n","assignee":"ibuclaw","created_on":"2011-04-06T00:13:15.092600+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-06T07:43:23.604148+00:00","id":179},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - bad value casting float to int","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"From DMD testsuite: runnable\/constfold.d\r\n\r\n{{{\r\nvoid main()\r\n{\r\n    float f = float.infinity;\r\n    assert(cast(int)(f) == cast(int)(float.infinity));\r\n}\r\n}}}\r\n\r\nProgram asserts runtime, 'f' is incorrectly cast to int (somehow ends up turning into -2147483648 when it should be -1).","assignee":null,"created_on":"2010-11-16T00:44:39.966940+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-06T16:26:53.409383+00:00","id":99},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"using std.string.format(...) on linux gives segfault, possible va_arg bug","reporter":"ricochet1k","component":null,"watchers":["ibuclaw"],"content":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..\/..\/libphobos\/std\/format.d:3682\n#1  0x000000000042b8c8 in bug2479format (arguments=..., argptr=0x3000000008)\n    at ..\/..\/..\/libphobos\/std\/string.d:2090\n#2  0x000000000042b97e in format (_arguments_typeinfo=<value optimized out>)\n    at ..\/..\/..\/libphobos\/std\/string.d:2140\n#3  0x0000000000403db9 in D main ()\n}}}\n\nThis didn't happen in an older version of the compiler I had built. I believe the old version was <<changeset 9a8cbe47da29>>. Just FYI, I also tried this with gcc-4.4.5 and gcc-4.5.2 with no difference.\n\nOddly enough, writefln works just fine. It's just format that has the problem.","assignee":"ibuclaw","created_on":"2011-04-07T02:14:37.699604+00:00","version":null,"edited_on":"2011-04-07T02:45:03.350730+00:00","milestone":null,"updated_on":"2011-04-07T16:17:04.708304+00:00","id":180},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"GCC 4.6 Support","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw","MatthiasFauconneau"],"content":"GCC 4.6 is out.  I doubt it's filtered down to any Linux distributions yet (IIUC Ubuntu 11.04 will be using 4.5) but eventually it needs to be supported by GDC.  Not sure where this should be prioritized, though.","assignee":null,"created_on":"2011-04-09T17:57:16.277350+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-24T15:26:14.395754+00:00","id":183},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Ref returns not supported?","reporter":"Andrej08","component":null,"watchers":["Andrej08","ibuclaw"],"content":"{{{\r\nmodule test;\r\n\r\nstruct Foo { }\r\nFoo foo;\r\n\r\nref Foo test()\r\n{\r\n    return foo;\r\n}\r\n\r\nvoid main()\r\n{\r\n}\r\n}}}\r\n\r\n\r\nErrors:\r\n{{{\r\ntest.d:8: Declaration expected, not 'ref'\r\ntest.d:11: unrecognized declaration\r\n}}}","assignee":null,"created_on":"2011-04-09T19:10:02.268793+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-09T20:23:46.421650+00:00","id":184},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"add cmpxchg16b instruction for x86-64","reporter":"nischu7","component":null,"watchers":["nischu7"],"content":"The **cmpxchg16b** instruction proves advantageous for the implementation of lock-free algorithms in terms of ABA avoidance (using tags\/stamps).","assignee":null,"created_on":"2011-04-30T14:05:01.858768+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-06-05T19:58:54.299480+00:00","id":204},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Intrinsics cause ICE on MinGW","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\nError:\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{BUILT_IN_SQRTL}}}) form of {{{BUILT_IN_SQRT}}}.\n\nInspecting the table {{{implicit_built_in_decls}}} shows only {{{BUILT_IN_SQRT}}} as defined.\n\nInspecting {{{built_in_decls}}} shows {{{BUILT_IN_SQRT, BUILT_IN_SQRTF, BUILT_IN_SQRTL}}} as being defined.\n\nGCC uses the macro {{{TARGET_C99_FUNCTION}}} to determine if c99 functions are put into the {{{implicit_built_in_decls}}}.  On linux this defined by glibc support, since there is no explicit definition for MinGW it defaults to 0.\n","assignee":"ibuclaw","created_on":"2011-04-11T08:28:06.404000+00:00","version":null,"edited_on":"2011-04-11T08:44:31.823500+00:00","milestone":null,"updated_on":"2011-04-16T20:57:31.581164+00:00","id":185},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC\/DMD cross compilers","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Can GDC (or DMD) be built as a cross compiler ??  e.g. targeting ARM or MIPS or PowerPC, etc ??  I'm presuming this should be no problem for GCC ??\r\n\r\nMy development\/host platforms are OS X and Debian Linux.\r\nAre there any prebuilt binaries for such cross-compilers ??\r\n\r\nBTW, does GDC generate C++ code for GCC to compile, or does it directly generate object code ??  I'm presuming the latter.\r\n\r\nCan D be used in low-level drivers for Linux or other RTOS (e.g. freertos) ??","assignee":null,"created_on":"2011-04-12T11:07:14.797146+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-12T11:29:20.562126+00:00","id":186},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2: -J option ignored","reporter":"ibuclaw","component":null,"watchers":["ibuclaw","venix1"],"content":"Stopped working after <<changeset 533>>\r\n\r\nSimple test program: (quine.d)\r\n{{{\r\nimport std.stdio;\r\nvoid main()\r\n{\r\n    writefln(import(\"quine.d\"));\r\n}\r\n}}}\r\n","assignee":"venix1","created_on":"2011-04-13T16:57:55.061975+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-14T23:07:45.161682+00:00","id":188},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"sqrt(integer) causes ICE in maybeExpandSpecialCall","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Hi,\r\n\r\nwhen trying to call sqrt using an integer value, GDC quits with an ICE. The following code snippet produces the error:\r\n\r\n{{{\r\nimport std.math;\r\nvoid main() {\r\nsqrt(1);\r\n}\r\n}}}\r\n\r\nOutput:\r\n{{{\r\ntest.d: In function ‘main’:\r\ntest.d:3: internal compiler error: in maybeExpandSpecialCall, at d\/d-codegen.cc:1779\r\n}}}\r\n\r\nA call to sqrt(1.0) just works fine.\r\n\r\nRegards,\r\nAndré","assignee":null,"created_on":"2011-04-14T20:56:20.429601+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-15T10:19:37.774700+00:00","id":189},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Multiple definition of TypeInfo with MinGW","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Attempting to compile a couple test files with the lastest revision of GDC produces the following errors.\n{{{\n\/\/ D1, gdc hg r535:0066ecfe85f1\nvoid main()\n{\n}\n\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aaA.o):aaA.d:(.data+0x110): multiple definition of `_D15TypeInfo_DFPvZi6__initZ'\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aApply.o):aApply.d:(.data+0x0): first defined here\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aaA.o):aaA.d:(.data+0x138): multiple definition of `_D17TypeInfo_DFPvPvZi6__initZ'\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aApply.o):aApply.d:(.data+0x28): first defined here\n}}}\n\n---\n\n{{{\n\/\/ D2, gdc hg r535:0066ecfe85f1\nimport std.math;\nimport std.stdio;\n\nvoid main()\n{\n    writeln(\"%s\", sqrt(1024f));\n}\n\nError.\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(stdio.o):stdio.d:(.data$_D47TypeInfo_S3std6traits15__T8DemangleTkZ8Demangle6__initZ[__D47TypeInfo_S3std6traits15__T8DemangleTkZ8Demangle6__initZ]+0x0): multiple definition of `_D47TypeInfo_S3std6traits15__T8DemangleTkZ8Demangle6__initZ'\nC:\\Users\\venix\\AppData\\Local\\Temp\\LaunchyPortableTemp\\ccdUwIsS.o:dummy.d:(.data+0x20): first defined here\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(string.o):string.d:(.data$_D54TypeInfo_S3std6format19__T10FormatSpecTyaZ10FormatSpec6__initZ[__D54TypeInfo_S3std6format19__T10FormatSpecTyaZ10FormatSpec6__initZ]+0x0): multipledefinition of `_D54TypeInfo_S3std6format19__T10FormatSpecTyaZ10FormatSpec6__initZ'\nC:\\Users\\venix\\AppData\\Local\\Temp\\LaunchyPortableTemp\\ccdUwIsS.o:dummy.d:(.data+0x80): first defined here\n}}}\n\n\n","assignee":null,"created_on":"2011-04-12T22:15:45.826899+00:00","version":null,"edited_on":"2011-04-12T22:16:13.459430+00:00","milestone":null,"updated_on":"2011-04-15T11:53:11.265929+00:00","id":187},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Add ARM version blocks in Phobos","reporter":"debio","component":null,"watchers":["debio","ibuclaw"],"content":"I'm attaching a series of patches that make Phobos compile on ARM (they mostly consist of adding version blocks identical to Linux\/x86, as the Linux data structures are the same).","assignee":null,"created_on":"2011-04-17T22:08:47.723141+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-20T00:13:07.458591+00:00","id":193},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ARM Compilation Fails When Including gcc.intrinsics","reporter":null,"component":null,"watchers":["debio","ibuclaw"],"content":"Compiling GDC on ARM fails with this error:\r\n{{{\r\n\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/armv5tel-unknown-linux-gnueabi\/bin\/ -B\/usr\/armv5tel-unknown-linux-gnueabi\/lib\/ -isystem \/usr\/armv5tel-unknown-linux-gnueabi\/include -isystem \/usr\/armv5tel-unknown-linux-gnueabi\/sys-include -o gcc\/unwind_arm.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/gcc-4.4.5-build\/libphobos -I .\/armv5tel-unknown-linux-gnueabi  -c ..\/..\/..\/gcc-4.4.5-build\/libphobos\/gcc\/unwind_arm.d\r\n\/home\/debio\/build\/gdc2-hg\/src\/gcc-4.4.5-build\/libphobos\/gcc\/builtins.d: Error: struct gcc.builtins.__va_list conflicts with struct gcc.builtins.__va_list at \/home\/debio\/build\/gdc2-hg\/src\/gcc-4.4.5-build\/libphobos\/gcc\/builtins.d\r\nmake[3]: *** [gcc\/unwind_arm.o] Error 1\r\nmake[3]: Leaving directory `\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/armv5tel-unknown-linux-gnueabi\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/home\/debio\/build\/gdc2-hg\/src\/gcc-build\/armv5tel-unknown-linux-gnueabi\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/home\/debio\/build\/gdc2-hg\/src\/gcc-build'\r\nmake: *** [all] Error 2\r\n}}}\r\n\r\nThis was tested with GDC built on top of GCC 4.5.2 and 4.4.5. Platform is an ARMv5te Sheevaplug, although identical behavior was observed on an ARMv7l Beagleboard.","assignee":null,"created_on":"2011-04-17T06:11:23.390976+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-04-17T14:18:32.488897+00:00","id":192},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: GDC 557, with GCC 4.4.4 Linux, using phobos sort","reporter":"jordirovira","component":null,"watchers":["jordirovira","ibuclaw"],"content":"I get an ICE when compiling with optimisations:\n\n{{{\n\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\n\n}}}\n\nwhere bug.d is :\n\n{{{\n\nmodule bug;\n\nimport std.algorithm;\n\nclass Sam\n{\n}\n\nvoid foo()\n{\n\tSam[] sams;\n\n\tbool c( const Sam a, const Sam b )\n\t{\n\t\treturn false;\n\t}\n\n\tsort!(c)( sams );\n}\n\n}}}\n\nGDC version is repository's 557, built with GCC-4.4.4, under linux.\nWithout optimisations it works fine.","assignee":"ibuclaw","created_on":"2011-05-04T11:59:43.051613+00:00","version":null,"edited_on":"2011-05-04T12:02:22.690231+00:00","milestone":null,"updated_on":"2011-08-07T16:51:09.257295+00:00","id":205},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Win64 Support","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"GDC has been built for MinGW64.   The instructions can be found [[https:\/\/bitbucket.org\/goshawk\/gdc\/wiki\/MinGW64|here]].  Attached are the patches required to compile Phobos1, Phobos2 and druntime.\r\n\r\n\r\n\r\n","assignee":"venix1","created_on":"2011-05-13T01:24:49.398325+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-28T05:09:25.602057+00:00","id":206},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Build Error W\/ GDC Tip, GCC 4.5.2","reporter":"dsimcha","component":null,"watchers":["dsimcha","venix1"],"content":"Seems like there's some small regression in the build system.\r\n\r\nmake[3]: Entering directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.5.2\/objdir\/gcc'\r\n..\/..\/gcc\/d\/Make-lang.in:82: *** D_LANGUAGE_VERSION not defined.  Stop.\r\nmake[3]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.5.2\/objdir\/gcc'\r\nmake[2]: *** [all-stage1-gcc] Error 2\r\nmake[2]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.5.2\/objdir'\r\nmake[1]: *** [stage1-bubble] Error 2\r\nmake[1]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.5.2\/objdir'\r\nmake: *** [all] Error 2\r\n","assignee":null,"created_on":"2011-07-28T02:42:03.038951+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-28T20:51:34.928104+00:00","id":219},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-fdeps Doesn't Handle Multiple Source Files","reporter":null,"component":null,"watchers":[],"content":"When I call `dmd -deps=depsfile source1.d source2.d` the dependencies for both source filesare written to depsfile, but `gdc -fdeps=depsfile source1.d source2.d` only writes the dependencies of source2.d.","assignee":null,"created_on":"2011-05-25T13:54:13.927636+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-05-25T18:18:57.277203+00:00","id":207},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"stage3: cc1d gets duplicate dependencies resulting in linking error","reporter":"dan.sanduleac","component":null,"watchers":["dan.sanduleac"],"content":"Hi,\r\n\r\nI'm trying to compile gdc with D2 on top of gcc-4.4.6 (vanilla source) for {{{target x86_64-apple-darwin10}}}. Patching of gcc finished without errors, but during stage3 of make, it seems that {{{cc1d}}} acquires both an object ({{{cppdefault.o}}}) and a static lib already containing that object ({{{libbackend.a}}}) as dependencies, so I get a linker error about duplicate symbols.\r\n\r\nI'm using gcc-4.4.5 x86_64-apple-darwin10 on Mac OS X 10.6.6, built from MacPorts.","assignee":null,"created_on":"2011-05-31T15:29:01.044647+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-06-02T01:43:02.066162+00:00","id":209},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Internal compiler error","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan"],"content":"{{{\r\nmodule remedy.m.matrix;\r\n\r\nstruct Vector4\r\n{\r\n\tfloat x = 0.0f;\r\n\tfloat y = 0.0f;\r\n\tfloat z = 0.0f;\r\n\tfloat w = 0.0f;\r\n\r\n\tstatic immutable zero =\t\tVector4( 0.0f, 0.0f, 0.0f, 0.0f );\r\n\tstatic immutable one =\t\tVector4( 1.0f, 1.0f, 1.0f, 1.0f );\r\n\tstatic immutable right =\tVector4( 1.0f, 0.0f, 0.0f, 0.0f );\r\n\tstatic immutable up =\t\tVector4( 0.0f, 1.0f, 0.0f, 0.0f );\r\n\tstatic immutable forward =\tVector4( 0.0f, 0.0f, 1.0f, 0.0f );\r\n\tstatic immutable origin =\tVector4( 0.0f, 0.0f, 0.0f, 0.0f );\r\n\tstatic immutable identity =\tVector4( 0.0f, 0.0f, 0.0f, 1.0f );\r\n}\r\n\r\nstruct Matrix4\r\n{\r\n\tunion\r\n\t{\r\n\t\tstruct\r\n\t\t{\r\n\t\t\tVector4 x = Vector4.right;\r\n\t\t\tVector4 y = Vector4.up;\r\n\t\t\tVector4 z = Vector4.forward;\r\n\t\t\tVector4 t = Vector4.zero;\r\n\t\t}\r\n\t\tfloat[16] m;\r\n\t\tVector4[4] v;\r\n\t}\r\n\r\n\tstatic immutable Matrix4 identity = Matrix4.init;\r\n}\r\n}}}\r\n\r\nThis line causes the error:\r\n{{{\r\nstatic immutable Matrix4 identity = Matrix4.init;\r\n}}}\r\nRemove the initialisation ( = Matrix4.init), and it works fine.\r\n\r\ngdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)","assignee":null,"created_on":"2012-04-11T14:12:52.204489+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-04-13T00:06:52.099014+00:00","id":332},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"4.6 Build Error","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Got this error trying test out 4.6.  I used the exact same script I had been using to completely automate the build process, except using a GCC 4.6 tarball instead of 4.5 or 4.4.\r\n\r\n{{{\r\nconfig.status: creating as\r\nconfig.status: creating collect-ld\r\nconfig.status: creating nm\r\nconfig.status: creating Makefile\r\nconfig.status: creating ada\/gcc-interface\/Makefile\r\nconfig.status: creating ada\/Makefile\r\nconfig.status: creating auto-host.h\r\nconfig.status: executing default commands\r\nmake[3]: Entering directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.6.0\/objdir\/gcc'\r\n..\/..\/gcc\/d\/Make-lang.in:76: *** D_LANGUAGE_VERSION not defined.  Stop.\r\nmake[3]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.6.0\/objdir\/gcc'\r\nmake[2]: *** [all-stage1-gcc] Error 2\r\nmake[2]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.6.0\/objdir'\r\nmake[1]: *** [stage1-bubble] Error 2\r\nmake[1]: Leaving directory `\/home\/dsimcha\/gdc\/dev\/gcc-4.6.0\/objdir'\r\nmake: *** [all] Error 2\r\n}}}","assignee":null,"created_on":"2011-06-09T22:42:24.837222+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-06-10T01:55:50.027092+00:00","id":211},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE With Map, dotProduct","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code (largely reduced from various parts of Phobos) segfaults the compiler, using GDC commit 567, GCC 4.6.  This seems to happen regardless of how any flags are set.\r\n\r\n{{{\r\nbool empty(T)(in T[] arr) { return !arr.length; }\r\n\r\ntemplate map(alias _fun)\r\n{\r\n    auto map(Range)(Range r)\r\n    {\r\n        struct Result\r\n        {\r\n            alias Range R;\r\n            R _input;\r\n\r\n            this(R input)\r\n            {\r\n                _input = input;\r\n            }\r\n\r\n            @property bool empty()\r\n            {\r\n                return _input.empty;\r\n            }\r\n        }\r\n\r\n        return Result(r);\r\n    }\r\n}\r\n\r\nvoid dotProduct(Range1, Range2)(Range1 a, Range2 b)\r\n{\r\n    enforce(b.empty);\r\n}\r\n\r\nT enforce(T, string file = __FILE__, int line = __LINE__)\r\n    (T value, lazy const(char)[] msg = null)\r\n{\r\n    if (!value) bailOut(file, line, msg);\r\n    return value;\r\n}\r\n\r\nprivate void bailOut(string file, int line, in char[] msg)\r\n{\r\n    throw new Exception(msg ? msg.idup : \"Enforcement failed\", file, line);\r\n}\r\n\r\ndouble square(double a) { return a * a; }\r\n\r\nvoid main() {\r\n    double[] foo = [1.0, 2, 3, 4, 5];\r\n    double[] bar = [1.0, 2, 3, 4, 5];\r\n    dotProduct(foo, map!square(bar));\r\n}\r\n}}}\r\n\r\nError message:\r\n\r\n{{{\r\ntest.d: In function ‘dotProduct’:\r\ntest.d:1:0: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}","assignee":null,"created_on":"2011-06-10T03:37:38.783142+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-06-19T09:59:18.201707+00:00","id":212},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"current hg gdc does not build (D2)","reporter":"art_","component":null,"watchers":["art_","ibuclaw"],"content":"{{{\r\n[...]\r\nmake[2]: Leaving directory `d\/BUILD\/gdc\/dev\/gcc-4.6.1\/objdir\/i686-pc-linux-gnu\/libquadmath'\r\nChecking multilib configuration for libphobos...\r\nConfiguring in i686-pc-linux-gnu\/libphobos\r\nconfigure: error: cannot find sources (move-if-change) in ..\/..\/..\/libphobos\r\nmake[1]: *** [configure-target-libphobos] Error 1\r\nmake[1]: Leaving directory `d\/BUILD\/gdc\/dev\/gcc-4.6.1\/objdir'\r\nmake: *** [all] Error 2\r\n}}}\r\n\r\nfirst suspect is https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/b3200b086277, but i haven't verified that yet.","assignee":null,"created_on":"2011-12-25T16:50:03.074366+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-26T10:56:39.805622+00:00","id":299},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Casting between array types is broken","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Consider:\r\n\r\n{{{\r\nvoid main(){\r\n    void[] v = new byte[4];\r\n    int[] x = cast(int[])v;\r\n    assert(x.length == 1);\r\n}\r\n}}}\r\nThis valid program terminates with an assertion failure when compiled with GDC. \r\n\r\n","assignee":null,"created_on":"2011-12-15T16:49:28.565878+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-23T20:27:30.673455+00:00","id":287},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"in\/out contracts can't access super class variables","reporter":"Marenz","component":null,"watchers":["Marenz","ibuclaw"],"content":"this function fails to compile\r\nhttp:\/\/dsource.org\/projects\/tango\/browser\/branches\/dmd-1.067\/tango\/io\/vfs\/ZipFolder.d?rev=5628#L637\r\n\r\nsaying \r\n\r\n.\/tango\/io\/vfs\/ZipFolder.d:639: Error: function tango.io.vfs.ZipFolder.ZipFolder.close cannot get frame pointer to __require\r\n","assignee":"ibuclaw","created_on":"2011-04-15T20:12:31.330135+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-30T16:14:03.887679+00:00","id":190},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault on nested functions","reporter":"klickverbot","component":null,"watchers":["klickverbot","ibuclaw"],"content":"GDC from current tip (fd532d8a5181) crashes on the following file:\r\n{{{\r\n#!d\r\n\r\nvoid main() {\r\n  mixin({\r\n    string foo() {\r\n      return \"\";\r\n    }\r\n\r\n    string bar()() {\r\n      return foo();\r\n    }\r\n\r\n    return bar();\r\n  }());\r\n}\r\n}}}\r\n\r\n{{{\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x000000000091010f in build_pointer_type (to_type=0x0) at ..\/..\/gcc\/tree.c:6993\r\n6993\t  addr_space_t as = to_type == error_mark_node? ADDR_SPACE_GENERIC\r\n(gdb) bt\r\n#0  0x000000000091010f in build_pointer_type (to_type=0x0) at ..\/..\/gcc\/tree.c:6993\r\n#1  0x00000000005b7033 in IRState::getFrameRef (this=0x13c7c40, outer_func=0x1336920) at ..\/..\/gcc\/d\/d-codegen.cc:3439\r\n#2  0x00000000005b8d23 in IRState::call (this=0x13c7c40, expr=0x13c2830, arguments=0x13c1da0) at ..\/..\/gcc\/d\/d-codegen.cc:1060\r\n#3  0x00000000005c0961 in CallExp::toElem (this=0x13c1dd0, irs=<value optimized out>) at ..\/..\/gcc\/d\/d-glue.cc:1737\r\n#4  0x00000000005c09e1 in Expression::toElemDtor (this=<value optimized out>, irs=0x13c7c40) at ..\/..\/gcc\/d\/d-glue.cc:1761\r\n#5  0x00000000005c8a83 in ReturnStatement::toIR (this=0x13c1e20, irs=0x13c7c40) at ..\/..\/gcc\/d\/d-glue.cc:4382\r\n#6  0x00000000005c960b in CompoundStatement::toIR (this=0x13c28b0, irs=0x13c7c40) at ..\/..\/gcc\/d\/d-glue.cc:4866\r\n#7  0x00000000005c5ff3 in FuncDeclaration::toObjFile (this=0x13c1b30) at ..\/..\/gcc\/d\/d-glue.cc:3111\r\n#8  0x000000000059ad5a in toObjFile (this=0x13c1740, multiobj=<value optimized out>) at ..\/..\/gcc\/d\/dmd2\/template.c:5084\r\n#9  TemplateInstance::toObjFile (this=0x13c1740, multiobj=<value optimized out>) at ..\/..\/gcc\/d\/dmd2\/template.c:5069\r\n#10 0x00000000005c6c7a in Module::genobjfile (this=0x1335f40, multiobj=0) at ..\/..\/gcc\/d\/d-glue.cc:3322\r\n#11 0x00000000005af61b in d_parse_file () at ..\/..\/gcc\/d\/d-lang.cc:1133\r\n#12 0x00000000007fa16c in compile_file (argc=12, argv=0x7fffffffe998) at ..\/..\/gcc\/toplev.c:579\r\n#13 do_compile (argc=12, argv=0x7fffffffe998) at ..\/..\/gcc\/toplev.c:1900\r\n#14 toplev_main (argc=12, argv=0x7fffffffe998) at ..\/..\/gcc\/toplev.c:1963\r\n#15 0x00007ffff5d2817d in __libc_start_main () from \/lib\/libc.so.6\r\n#16 0x00000000004faa49 in _start ()\r\n}}}","assignee":null,"created_on":"2011-07-30T10:28:10.847325+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-30T16:05:17.380107+00:00","id":220},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segmentation fault on linux","reporter":"longch","component":null,"watchers":["longch","ibuclaw"],"content":"I build a project with gdc \r\n\r\ngdc -v\r\nUsing built-in specs.\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --enable-checking=release --disable-shared\r\nThread model: posix\r\ngcc version 4.4.5 20101001 (gdc hg, using dmd 2.052) (GCC)\r\n\r\nThe gdc version is r500 , the early gdc also report this error .\r\n\r\ngdb report:\r\n\r\nrt_finalize (p=0xf7d24000, det=false)\r\n    at ..\/..\/..\/..\/libphobos\/rt\/lifetime.d:1122\r\n1122\t            ClassInfo c = **pc;\r\n\r\n\r\nI can't reduce this error,  the follow package include a execute file and all d source  .\r\n\r\nhttp:\/\/gool.googlecode.com\/files\/jade.tar.bz2\r\n","assignee":null,"created_on":"2011-03-22T07:52:22.722058+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-30T16:08:13.696347+00:00","id":171},{"status":"wontfix","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"ubuntu natty package: gcc 4.4-> gcc 4.5.1","reporter":"axeoth","component":null,"watchers":["axeoth","ibuclaw"],"content":"hi,\r\n\r\n Ian, this is somewhat unrelated to gdc itself, but I have no idea were to post it. The Ubuntu Natty uses gcc 4.5.2, while the packages gdc (http:\/\/packages.ubuntu.com\/natty\/gdc) & gdc-4.4 (http:\/\/packages.ubuntu.com\/natty\/gdc-4.4) require installing gcc-4.4. I see that u are the maintainer of those.\r\nCould the gdc package be updated to gcc 4.5.1 (i.e. the underlying gcc version in Natty)?\r\n\r\nthanks.","assignee":null,"created_on":"2011-04-09T16:27:03.463189+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-07-30T16:10:01.404052+00:00","id":182},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2 - in\/out contract inheritance","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"These tests should compile and not call assert during runtime:\r\n\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_10_A.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_A.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_B.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_C.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_D.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_E.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_F.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_G.d\r\n* http:\/\/dstress.kuehne.cn\/run\/i\/in_out_body_11_H.d\r\n\r\n\r\nCurrently, they all fail with a compiler messages like:\r\n{{{\r\nError: function dstress.run.i.in_out_body_11_H.Derived.test cannot get frame pointer to __require\r\n}}}\r\n\r\nRegards","assignee":"ibuclaw","created_on":"2010-10-25T22:42:40.187097+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-30T20:28:31.364583+00:00","id":78},{"status":"wontfix","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"Let GDC invoke D1 or D2","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw","debio","jcrapuchettes"],"content":"A single GDC installation cannot use D1 and D2.  One must be chosen when configuring.  I would like to see this issue resolved in the near future and have no issue with doing it myself.  \r\n\r\nHowever, information on why D versions are separated the way they are and any ideas on how to merge them would be useful.\r\n\r\nMy thoughts about it are:\r\n* GDC is the driver program and where the most work would be done.\r\n* Can the driver choose which executable to run? cc1d1 or cc1d2 depending on command line switches.\r\n* Expand the makefile to compile d1\/d2 compiler and phobos.","assignee":null,"created_on":"2011-03-03T19:08:55.333549+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-15T22:25:48.449270+00:00","id":159},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"segmentation fault when compiling Hello World","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n\n{{{\n\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRAPPER=\/opt\/gdc\/libexec\/gcc\/x86_64-unknown-linux-gnu\/4.6.1\/lto-wrapper\nTarget: x86_64-unknown-linux-gnu\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-shared --disable-bootstrap --enable-checking=release --enable-lto --enable-version-specific-runtime-libs --disable-nls --enable-threads --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues\nThread model: posix\ngcc version 4.6.1 20110627 (gdc hg, using dmd 2.054) (GCC)\n}}}\n\n{{{\n\n(gdb) run test.d\nStarting program: \/opt\/gdc\/bin\/gdc test.d\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000404484 in process_command (decoded_options_count=5, decoded_options=0x653490) at ..\/..\/gcc\/gcc.c:3934\n3934\t      switches[n_switches].part1 = \"pthread\";\n(gdb) backtrace\n#0  0x0000000000404484 in process_command (decoded_options_count=5, decoded_options=0x653490) at ..\/..\/gcc\/gcc.c:3934\n#1  0x000000000040b150 in main (argc=2, argv=0x7fffffffe248) at ..\/..\/gcc\/gcc.c:6246\n}}}","assignee":"ibuclaw","created_on":"2011-07-25T13:18:46.828155+00:00","version":null,"edited_on":"2011-07-25T13:21:31.507851+00:00","milestone":null,"updated_on":"2011-08-01T19:26:18.706655+00:00","id":218},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"An internal compiler error","reporter":"heromyth","component":null,"watchers":["heromyth","venix1","ibuclaw"],"content":"I try to build GDC (based on the last source codes) with MingW GCC 2.5.2 + MSYS On Windows server 2008, and got this error messages seen belown:\n\n\/home\/Administrator\/build\/gcc\/.\/gcc\/gdc -B\/home\/Administrator\/build\/gcc\/.\/gcc\/ -\nL\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/winsup\/mingw -L\/home\/Administrato\nr\/build\/gcc\/i686-pc-mingw32\/winsup\/w32api\/lib -isystem \/home\/Administrator\/gcc-4\n.5.2\/winsup\/mingw\/include -isystem \/home\/Administrator\/gcc-4.5.2\/winsup\/w32api\/i\nnclude -B\/mingw\/i686-pc-mingw32\/bin\/ -B\/mingw\/i686-pc-mingw32\/lib\/ -isystem \/min\ngw\/i686-pc-mingw32\/include -isystem \/mingw\/i686-pc-mingw32\/sys-include -o std\/fi\nle.o -Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/gcc-4.5\n.2\/libphobos -I .\/i686-pc-mingw32  -c ..\/..\/..\/..\/gcc-4.5.2\/libphobos\/std\/file.d\n\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\/std\/file.d: In member function 'stepIn':\n..\/..\/..\/..\/gcc-4.5.2\/libphobos\/std\/file.d:2866:0: internal compiler error: in fold_convert_loc, at fold-const.c:2792","assignee":"ibuclaw","created_on":"2011-07-25T03:26:48.529413+00:00","version":null,"edited_on":"2011-07-25T03:27:53.459389+00:00","milestone":null,"updated_on":"2011-08-06T21:10:40.958411+00:00","id":217},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE with -flto and -g","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"{{{\r\n#!d\r\nvoid main()\r\n{\r\n}\r\n}}}\r\n{{{\r\n$ gdmd -vdmd -flto -g test2.d\r\ngdc -flto -g -c test2.d -o test2.o\r\ngdc -flto -g test2.o -o test2\r\nlto1: internal compiler error: Segmentation fault\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-29T22:54:49.447186+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-02T04:13:12.282586+00:00","id":268},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"undefined references in libgphobos2 (specifically, in core\/thread.d)","reporter":"Zeex","component":null,"watchers":["Zeex"],"content":"When I link against libgphobos2 using https:\/\/bitbucket.org\/goshawk\/gdc\/downloads\/gcc-4.5.2-tdm-1-gdc-r575-20110723.zip and TDM GCC 4.5.2 32-bit:\r\n\r\n{{{\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `D4core6thread6Thread6__ctorMFZC4core6thread6Thread':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `thread_entryPoint@4':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:173: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:173: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:173: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `D4core6thread6Thread6__ctorMFZC4core6thread6Thread':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `thread_attachThis':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1957: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `D4core6thread6Thread6__ctorMFZC4core6thread6Thread':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `thread_attachByAddrB':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:2048: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `D4core6thread18thread_getTLSBlockFZAv':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:2632: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:2632: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:2632: undefined reference to `__emutls_v._tlsstart'\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos2.a(thread.o): In function `D4core6thread6Thread6__ctorMFZC4core6thread6Thread':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsend'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.5.2\/libphobos\/core\/thread.d:1363: undefined reference to `__emutls_v._tlsstart'\r\n}}}","assignee":null,"created_on":"2011-08-02T08:14:28.227596+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-04T23:29:34.686238+00:00","id":221},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: constant not recomputed when ADDR_EXPR changed","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"{{{\r\n#!d\r\nclass ApiProvider\r\n{\r\n\timmutable(ReflectionInfo)* reflection;\r\n\t\r\n\tvoid _sitemap()\r\n\t{\r\n\t\tstring[string] handled;\r\n\t\tforeach(obj; reflection.objects)\r\n\t\t\thandled[obj.name] = obj.name;\r\n\t}\r\n}\r\n\r\nstruct ReflectionInfo\r\n{\r\n\tconst(ReflectionInfo)*[] objects; \r\n\tstring name; \r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -c web.d\r\nweb.d: In member function 'web.ApiProvider._sitemap':\r\nweb.d:1:0: error: constant not recomputed when ADDR_EXPR changed\r\n&obj_18->name\r\nweb.d:9:0: note: in statement\r\nD.1650_19 = &obj_18->name;\r\n\r\nweb.d:1:0: internal compiler error: verify_stmts failed\r\n\r\n$ gdc -v\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-bootstrap --disable-shared --enable-checking=yes\r\ngcc version 4.6.1 20110627 (gdc 0.30, using dmd 2.055) (GCC) \r\n}}}","assignee":"ibuclaw","created_on":"2011-11-15T13:51:36.220185+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-16T02:27:24.418818+00:00","id":259},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: tree check: expected class 'type', have 'exceptional'","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"It's really hard to reduce it, here's what I have so far:\r\n\r\n{{{\r\n#!d\r\nimport std.string;\r\nimport std.exception;\r\nimport std.stdio;\r\nimport std.conv;\r\n\r\nclass Cgi\r\n{\r\n\tenum RequestMethod { HEAD }\r\n\r\n\tthis()\r\n\t{\r\n\t\tauto parts = split(\"aa\");\r\n\t\tRequestMethod requestMethod = to!RequestMethod(parts[0]);\r\n\t\tauto terminator = indexOf(\"bb\", \";\");\r\n\r\n\t\tstring[string] ga;\r\n\t\tget = assumeUnique(ga);\r\n\t}\r\n\tubyte[] outputBuffer;\r\n\tvoid close() {\r\n\t\twrite(outputBuffer, ); \r\n\t}\r\n\timmutable(string[string]) get;\r\n}\r\n\r\nvoid bae()\r\n{\r\n\tauto path = lastIndexOf(\"cc\", \"\/\");\r\n}\r\n}}}\r\n{{{\r\n$ gdc -c cgi.d \r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/string.d: In member function 'endsWith':\r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/string.d:747:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (H�߽\u0001) in get_qualified_type, at tree.c:5630\r\n$ gdc -v\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-bootstrap --disable-shared --enable-checking=yes\r\ngcc version 4.6.2 20111026 (gdc 0.30, using dmd 2.055) (GCC)\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-16T01:38:46.187127+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-21T23:08:54.748510+00:00","id":260},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Array Cast Misalignment","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Trunk commit 593.  \r\n{{{\r\nvoid main() {\r\n    uint[] foo;\r\n    foo ~= 5;\r\n}\r\n}}}\r\n\r\nAt runtime:\r\n\r\nobject.Exception@..\/..\/..\/libphobos\/rt\/arraycast.d(32): array cast misalignment\r\n\r\n","assignee":null,"created_on":"2011-08-06T21:11:29.872921+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-06T21:30:33.442394+00:00","id":222},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"undefined reference to `_d_arrayappendcTp'","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"I receive this error message while compiling a large program.  I haven't reduced it yet, since this is the kind of thing where a test case may not be necessary.","assignee":null,"created_on":"2011-08-06T23:23:07.238689+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-07T00:15:13.371033+00:00","id":223},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"assoc array - keys","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"The following doesn't compile:\n\n{{{\nimport std.stdio; void main(){\n  auto a = [1:10, 2:20].keys;\n  writeln(123,456,a);\n}\n}}}\n\n.\/gdmd A.d produces\n\nA.d: In function ‘main’:\nA.d:2: internal compiler error: in toElem, at d\/d-glue.cc:2480\n\ngdc - mercurial revision 3cf208768d86\nUnuntu 64bit","assignee":null,"created_on":"2011-04-22T14:06:04.447553+00:00","version":null,"edited_on":"2011-04-22T21:48:35.508134+00:00","milestone":null,"updated_on":"2011-08-07T16:52:28.313583+00:00","id":198},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Compiler segfault when not AssociativeArray struct not defined","reporter":"tbone","component":null,"watchers":["tbone","ibuclaw"],"content":"Another unlikely corner case causing gdc to explode!\r\n\r\nIf the template struct AssociativeArray(Key, Value) (found in object.d) isn't defined, gdc segfaults:\r\n\r\n{{{\r\n#0  TemplateInstance (this=0x801c6a100, loc={filename = 0x80187dbf0 \"unittest.d\", linnum = 27}, td=0x0, tiargs=0x801c69310) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/template.c:3673\r\n#1  0x000000000047d51c in TypeAArray::getImpl (this=0x8018209c0) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/mtype.c:4088\r\n#2  0x000000000047d7c1 in TypeAArray::dotExp (this=0x801c6a180, sc=0x0, e=0x1b, ident=0x0) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/mtype.c:4216\r\n#3  0x000000000044e938 in DotIdExp::semantic (this=0x8018197c0, sc=0x801c61900, flag=<value optimized out>) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/expression.c:6118\r\n#4  0x000000000049da4b in ExpStatement::semantic (this=0x80181e790, sc=0x801c61900) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/statement.c:272\r\n#5  0x00000000004a6736 in CompoundStatement::semantic (this=0x801c692b0, sc=0x801c61900) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/statement.c:499\r\n#6  0x00000000004a2b90 in ForStatement::semantic (this=0x801c63b00, sc=0x801c61900) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/statement.c:1223\r\n#7  0x00000000004a58d9 in ForeachStatement::semantic (this=0x8018753a0, sc=0x801c61800) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/statement.c:1759\r\n#8  0x00000000004a6736 in CompoundStatement::semantic (this=0x80181e820, sc=0x801c61700) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/statement.c:499\r\n#9  0x00000000004563f7 in FuncDeclaration::semantic3 (this=0x801892e00, sc=0x801c61600) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/func.c:1257\r\n#10 0x0000000000482e3b in Module::semantic3 (this=0x801892400) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/dmd2\/module.c:879\r\n#11 0x00000000004be0a0 in d_parse_file () at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/d\/d-lang.cc:1231\r\n#12 0x00000000006bd402 in toplev_main (argc=<value optimized out>, argv=0x0) at \/usr\/home\/tbone\/builds\/gdc\/dev\/gcc-4.4.5\/gcc\/toplev.c:970\r\n#13 0x00000000004048ae in _start ()\r\n}}}\r\n","assignee":null,"created_on":"2011-01-07T11:11:45.655606+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-07T18:02:52.465170+00:00","id":145},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC-4.4 - ICE in output_die, at dwarf2out.c:8193","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Simple testcase:\r\n{{{\r\nvoid main()\r\n{\r\n    class T\r\n    {   int x;\r\n        void xyz()\r\n        {\r\n            int bar()\r\n            {\r\n                return x;\r\n            }\r\n        }\r\n    }\r\n}\r\n}}}\r\n\r\nICEs compiler:\r\n{{{\r\nIn file included from <builtin>:1:\r\nclosure.d:9: internal compiler error: in output_die, at dwarf2out.c:8193\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <file:\/\/\/usr\/share\/doc\/gdc-4.4\/README.Bugs> for instructions.\r\n}}}\r\n\r\nIs as regression from GCC-4.3, and in this case the compiler flags matter. Requires debugging turned on and optimisations off to reproduce:\r\n\r\n{{{\r\ngdc-4.4 -g -O0 closure.d\r\n}}}\r\n\r\nRegards","assignee":null,"created_on":"2010-11-15T21:05:09.867414+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-07T20:56:15.335447+00:00","id":97},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC-4.4 - ICE missing callgraph edge for call stmt","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"Definitely a regression from GDC-4.1 at the very least:\r\n\r\n{{{\r\nauto getA()\r\n{\r\n    struct A\r\n    {\r\n        this(int b) {}\r\n    }\r\n    return A(0);\r\n}\r\n}}}\r\n\r\nICEs with message:\r\n{{{\r\nbug.d:1: error: missing callgraph edge for call stmt:\r\nD.1672 = __ctor (&__ctmp1, 0);\r\n\r\ngetA\/1(0): 17 insns needed body finalized\r\n  called by: \r\n  calls: \r\nbug.d:1: internal compiler error: verify_cgraph_node failed\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n\r\nRegards","assignee":null,"created_on":"2010-12-13T13:52:08.753760+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-07T20:57:31.200263+00:00","id":124},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D1\/D2: SEGV(gimple.c:2624) - getting array ref of incomplete type","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"'export' matters here. The core problem here is that all aggregates are made to be completed types regardless of whether or not they really are (see: TypeStruct::toCtype).\r\n\r\nThis behaviour should be smartened up in the future.\r\n\r\n{{{\r\nextern struct foo;\r\nextern export foo[5] bar;\r\n\r\nvoid main()\r\n{\r\n    auto a = &bar[0];\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-04-16T11:15:07.209330+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-09T00:54:18.123898+00:00","id":191},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Regression:  Bad\/No Dead Code Elimination In Object Files","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"With the addition of parallel library building with the -lib switch, GDC now complains about undefined references to symbols only referred to from dead code.  This didn't used to happen, and doesn't happen with DMD either.  Example:\r\n\r\n{{{\r\n\/\/ lib\/file1.d:\r\nint doNothing();\r\n\r\nvoid callDoNothing() {\r\n    doNothing();\r\n}\r\n\r\n\/\/ lib\/file2.d:\r\nmodule lib.file2;\r\n\r\nimport std.stdio;\r\n\r\nvoid sayHello() {\r\n    writeln(\"Hello, world.\");\r\n}\r\n\r\n\/\/ main.d:\r\nimport lib.file2;\r\n\r\nvoid main() {\r\n    sayHello();\r\n} \r\n\r\n}}}\r\n\r\n{{{\r\ndsimcha@debian:~\/gdcTest$ gdmd -lib -ofliblib.a lib\/*.d\r\ndsimcha@debian:~\/gdcTest$ gdmd main.d -Lliblib.a\r\nliblib.a(file1.o): In function `_D5file113callDoNothingFZv':\r\nfile1.d:(.text+0x5): undefined reference to `_D5file19doNothingFZi'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\n\r\nNote that `doNothing()` is undefined, but the code should link properly anyhow since `doNothing()` is only referenced from `callDoNothing()`, which is dead code.","assignee":null,"created_on":"2011-12-18T04:58:52.130519+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-18T05:31:33.654865+00:00","id":292},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault involving closures","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code segfaults with Revision 553 using GCC 4.5.2, only if compiled with -m32 -O.\r\n\r\n{{{\r\ndouble normalPDF(double x, double mean = 0, double sd = 1) {\r\n    return 42;  \/\/ This doesn't need to be right to reproduce the big\r\n}\r\n\r\ndouble delegate(double) parametrize(double mean, double sd) {\r\n\r\n    double calculate(double x) {\r\n        return normalPDF(x, mean, sd);\r\n    }\r\n\r\n    return &calculate;\r\n}\r\n\r\nvoid fun(double delegate(double) kernel, double[] range) {\r\n    double[] arr;\r\n    kernel(0);  \/\/ This call is needed to reproduce the bug.\r\n    arr[] \/= sum(arr);\r\n}\r\n\r\nT sum(T)(T[] data) {\r\n    T[8] sum = 0;\r\n    assert(0);\r\n}\r\n\r\nvoid main() {\r\n    fun(parametrize(0, 1), [0]);\r\n}\r\n}}}","assignee":null,"created_on":"2011-04-25T23:23:12.367289+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-11T20:51:57.263407+00:00","id":199},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"_arrayExpSliceMulSliceMinass_f should be COMDAT","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"I don't have a reasonably small test case for this one because it's a very hard to reproduce linker error.  However, a similar problem occurred in DMD a few months back and was solved by making array op expressions COMDAT.  Here's the error message from a project I was working on:\r\n\r\n{{{\r\nsinglegene.o: In function `_arrayExpSliceMulSliceMinass_f':\r\nsinglegene.d:(.text+0x23e0): multiple definition of `_arrayExpSliceMulSliceMinass_f'\r\nmultipredictor.o:multipredictor.d:(.text+0x1f90): first defined here\r\nutil.o: In function `_arrayExpSliceMulSliceMinass_f':\r\nutil.d:(.text+0x780): multiple definition of `_arrayExpSliceMulSliceMinass_f'\r\nmultipredictor.o:multipredictor.d:(.text+0x1f90): first defined here\r\n}}}","assignee":null,"created_on":"2011-08-15T17:51:50.995095+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-15T19:41:13.110683+00:00","id":225},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"MinGW64 Builds Broken","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"I get the following error msg when I follow the MinGW64 build instructions:\r\n\r\n{{{\r\n..\/..\/gcc\/d\/d-glue.cc: In member function 'virtual void FuncDeclaration::toObjFi\r\nle(int)':\r\n..\/..\/gcc\/d\/d-glue.cc:3024:11: error: 'struct function' has no member named 'nak\r\ned'\r\nmake[2]: *** [d\/d-glue.glue.o] Error 1\r\n}}}","assignee":null,"created_on":"2011-11-12T04:25:24.148733+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-12T14:55:00.132316+00:00","id":257},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"forward reference error with algorithm.find","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"dsplit.d:\r\n\r\n{{{\r\n#!d\r\nimport std.string;\r\nstruct Entity\r\n{\r\n\tstring head;\r\n}\r\n}}}\r\n\r\n{{{\r\n#!d\r\nimport std.algorithm;\r\nimport std.regex;\r\nimport dsplit;\r\n\r\nvoid applyNoRemoveRegex(string[] noRemoveStr)\r\n{\r\n\tauto noRemove = map!regex(noRemoveStr);\r\n\r\n\tvoid scan(Entity[] set)\r\n\t{\r\n\t\tforeach (ref e; set)\r\n\t\t\tif (canFind!((a){return !match(e.head, a).empty;})(noRemove))\r\n\t\t\t{\r\n\t\t\t}\r\n\t}\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc dsplit.d dustmite.d -o DustMite\r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/algorithm.d:3324: Error: function dustmite.applyNoRemoveRegex.scan.find!(__dgliteral1,Result).find forward reference to frame of scan\r\n}}}\r\nCouldn't put dsplit content into dustmite.d, also couldn't remove the import of std.string. Only happens if compiled in this order.","assignee":"ibuclaw","created_on":"2011-11-19T13:50:31.322891+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-21T00:02:00.094298+00:00","id":263},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"build error libphobos\/core\/sys\/windows\/stacktrace.d","reporter":null,"component":null,"watchers":[],"content":"..\/..\/..\/gcc-4.5.1-build\/libphobos\/core\/sys\/windows\/stacktrace.d:302: \r\n\r\nError: cannot implicitly convert expression (symbolSize) of type ulong to uint\r\n\r\n\r\nbuilding by http:\/\/aur.archlinux.org\/packages\/gdc2-hg\/PKGBUILD\r\n(all build process is in build() and package())","assignee":null,"created_on":"2011-08-19T00:34:00.793878+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-19T09:33:34.196899+00:00","id":227},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: tree check in lookup_decl_die","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r","jpf"],"content":"{{{\r\n#!d\r\nunittest\r\n{\r\n    struct Test2_WorkaroundForBug2986 {\r\n        interface J {}\r\n        class B : J {}\r\n    }\r\n}\r\n}}}\r\n{{{\r\n$ gdc -g -funittest -c traits.d\r\ntraits.d:1:0: internal compiler error: tree check: expected tree that contains 'decl minimal' structure, have 'record_type' in lookup_decl_die, at dwarf2out.c:8145\r\n}}}","assignee":"ibuclaw","created_on":"2012-02-21T22:26:47.374661+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-27T19:37:10.731047+00:00","id":318},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"__libc_stack_end on Cygwin","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"When trying to build GDC2 on Cygwin:\n\n{{{\nchecking for __libc_stack_end... no\nrm: cannot remove `core': Is a directory\nconfigure: error: No usable stack origin information\nrm: cannot remove `core': Is a directory\nmake[1]: *** [configure-target-libphobos] Error 1\n}}}","assignee":null,"created_on":"2011-11-09T02:09:08.224015+00:00","version":null,"edited_on":"2011-11-09T02:09:41.324952+00:00","milestone":null,"updated_on":"2011-11-09T02:10:56.202398+00:00","id":256},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: tree check: expected record_type or union_type or qual_union_type, have array_type in delegateVal","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"Tried to compile [[https:\/\/github.com\/adamdruppe\/misc-stuff-including-D-programming-language-web-stuff|Adam's web stuff]].\r\n{{{\r\n$ gdc -c arsd\/html.d \r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/string.d: In member function 'find':\r\n\/opt\/gdc\/include\/d2\/4.6.2\/std\/string.d:551:0: internal compiler error: tree check: expected record_type or union_type or qual_union_type, have array_type in delegateVal, at d\/d-codegen.cc:2316\r\n}}}\r\n\r\nI reduced it with DustMite. It's still too much code but that's it for the moment.","assignee":"ibuclaw","created_on":"2011-11-16T20:18:40.242086+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-21T00:53:14.488047+00:00","id":261},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"make install-strip fails to install gdmd","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"","assignee":"ibuclaw","created_on":"2011-11-22T20:33:21.516560+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-24T21:53:01.214652+00:00","id":266},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: invalid conversion in gimple call","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"Tried to compile https:\/\/github.com\/cybershadow\/dustmite\/wiki.\r\nHere's what DustMite reduced its own source code to:\r\n{{{\r\n#!d\r\nstruct Entity\r\n{\r\n\tstring head;\r\n\tEntity[] children;\r\n}\r\n\r\nvoid postProcessD(ref Entity[] entities)\r\n{\r\n[Entity(null, entities.dup, )];\r\n}\r\n}}}\r\n{{{\r\n$ gdc -v\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-bootstrap --disable-shared --enable-checking=yes --enable-lto --disable-nls --enable-threads --with-system-zlib --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues\r\nThread model: posix\r\ngcc version 4.6.1 20110627 (gdc 0.30, using dmd 2.055) (GCC)\r\n\r\n$ gdmd -release -O -inline -c dsplit.d\r\ndsplit.d: In function 'postProcessD':\r\ndsplit.d:7:0: error: invalid conversion in gimple call\r\nstruct \r\n\r\nstruct \r\n\r\nD.1644[0].children = _adDupT (&_D25TypeInfo_AS6dsplit6Entity6__initZ, *entities);\r\n\r\ndsplit.d:7:0: internal compiler error: verify_gimple failed\r\n}}}","assignee":"ibuclaw","created_on":"2011-10-31T14:20:14.027185+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-16T23:52:43.409473+00:00","id":255},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC bug","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw"],"content":"Doesn't happen in DMD:\r\n{{{\r\nstring RegisterMixin( alias S )()\r\n{\r\n\tforeach( m; __traits( allMembers, S ) ) \/\/ ** comment this line and it works fine\r\n\t{\r\n\t}\r\n\treturn \"int x;\";\r\n}\r\n\r\nstruct Thing\r\n{\r\n\tmixin( RegisterMixin!Thing() );\r\n}\r\n}}}\r\n{{{\r\nAssertion failed!\r\n\r\nProgram: c:\\mingw64\\bin\\..\\libexec\\gcc\\x86_64-w64-mingw32\\4.6.1\\cc1d.exe\r\nFile: ..\/..\/gcc-4.6.1\/gcc\/d\/dmd2\/dsymbol.c, Line 1052\r\n\r\nExpression: members\r\n}}}\r\ngdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)\r\n\r\nWe really need a GDC update ASAP :\/ .. There are too many of these sorts of bugs that don't seem to happen (anymore) in DMD.","assignee":null,"created_on":"2012-04-18T16:07:05.620717+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-27T11:31:15.977056+00:00","id":334},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault Allocating from Shared Static C'tor","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code segfaults inside the garbage collector, using commit 568, GCC 4.6.  This happens regardless of the -O, -inline, -release and -m32\/-m64 flags.\r\n\r\n{{{\r\nshared static this() {\r\n    new double[10_000];\r\n}\r\n\r\nvoid main() {}\r\n}}}\r\n\r\nGDB stack trace:\r\n\r\n{{{\r\n#0  rt_processGCMarks (tls=...) at ..\/..\/..\/..\/libphobos\/rt\/lifetime.d:438\r\n#1  0x08054752 in thread_processGCMarks ()\r\n    at ..\/..\/..\/..\/libphobos\/core\/thread.d:2628\r\n#2  0x08059bbf in fullcollect (this=..., stackTop=0xffffd06c)\r\n    at ..\/..\/..\/..\/libphobos\/gc\/gcx.d:2578\r\n#3  0x0805a1a4 in fullcollectshell (this=...)\r\n    at ..\/..\/..\/..\/libphobos\/gc\/gcx.d:2375\r\n#4  0x0805acb2 in bigAlloc (this=..., size=80017, poolPtr=0xffffd0fc, \r\n    alloc_size=0xffffd168) at ..\/..\/..\/..\/libphobos\/gc\/gcx.d:2062\r\n#5  0x0805ae4f in mallocNoSync (this=..., size=80017, bits=10, \r\n    alloc_size=0xffffd168) at ..\/..\/..\/..\/libphobos\/gc\/gcx.d:512\r\n#6  0x0805b0d2 in malloc (this=..., size=80017, bits=10, alloc_size=0xffffd168)\r\n    at ..\/..\/..\/..\/libphobos\/gc\/gcx.d:438\r\n#7  0x08057b75 in gc_qalloc (sz=80017, ba=10)\r\n    at ..\/..\/..\/..\/libphobos\/gc\/gc.d:207\r\n#8  gc_qalloc (sz=80017, ba=10) at ..\/..\/..\/..\/libphobos\/gc\/gc.d:202\r\n#9  0x0804f738 in _d_newarrayiT (ti=..., length=10000)\r\n    at ..\/..\/..\/..\/libphobos\/rt\/lifetime.d:852\r\n#10 0x08049c15 in test._sharedStaticCtor1() ()\r\n#11 0x0804d29e in _moduleCtor () at ..\/..\/..\/..\/libphobos\/object_.d:1941\r\n#12 0x0805c7d7 in runAll () at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:568\r\n#13 0x0805c779 in tryExec (dg=...) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:531\r\n#14 0x0805cd68 in _d_run_main (argc=1, argv=0xffffd3b4, \r\n    main_func=0x8049c1a <D main>) at ..\/..\/..\/..\/libphobos\/rt\/dmain2.d:581\r\n#15 0x08049983 in main (argc=1, argv=0xffffd3b4)\r\n    at ..\/..\/..\/..\/libphobos\/rt\/cmain.d:5\r\n}}}\r\n","assignee":"ibuclaw","created_on":"2011-06-22T23:41:23.762931+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-12T22:47:36.173368+00:00","id":214},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: can't convert between bool and enum : bool","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"{{{\r\n#!d\r\nenum GCScan : bool\r\n{\r\n\tyes = true\r\n}\r\n\r\nvoid main()\r\n{\r\n    GCScan s;\r\n    bool _gcScanned = s;\r\n}\r\n}}}\r\n{{{\r\n$ gdc -c regionallocator.d\r\nregionallocator.d: In function 'main':\r\nregionallocator.d:6:0: error: non-trivial conversion at assignment\r\nGCScan\r\nbool\r\ns = 1;\r\n\r\nregionallocator.d:6:0: error: non-trivial conversion at assignment\r\nbool\r\nGCScan\r\n_gcScanned = s;\r\n\r\nregionallocator.d:6:0: internal compiler error: verify_gimple failed\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-20T15:09:34.797556+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-21T00:02:32.296724+00:00","id":264},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: weird segfault when -o option is used","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"Another weird one. Also a pain to reduce, put up the current code anyway, maybe it helps.\r\n{{{\r\n$ gdc -c *.d\r\n  fine\r\n$ gdc *.d\r\n  just lots of undefined refs as expected\r\n$ gdc -c *.d -o foo\r\ndustmite.d: In function 'test':\r\ndustmite.d:157:0: internal compiler error: Segmentation fault\r\n$ gdc *.d -o foo\r\ndustmite.d: In function 'test':\r\ndustmite.d:157:0: internal compiler error: Segmentation fault\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-17T07:47:36.598643+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-19T13:52:15.180214+00:00","id":262},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Any ideas? The error message tells me to bug it...","reporter":null,"component":null,"watchers":["ibuclaw","venix1"],"content":"Code:\n\n{{{\nstring GetPublicMembers()\n{\n\tstring members;\n\tforeach(m; __traits(allMembers, remedy.testmodule))\n\t{\n\t\tmembers ~= m;\n\t}\n\n\tstatic assert(0, members);\n\n\treturn members;\n}\n}}}\n\n{{{\nDMD2:\nC:\\Users\\venix\\projects\\fusion\\fail>c:\\dmd2\\windows\\bin\\dmd.exe issue328.d\nAssertion failure: 'members' on line 1052 in file 'dsymbol.c'\n\nabnormal program termination\n\n\nLinux GDC head:\n\ncc1d: ..\/..\/gcc-4.7.0\/gcc\/d\/dfrontend\/dsymbol.c:1052: static int ScopeDsymbol::foreach(Dsymbols*, ScopeDsymbol::ForeachDg, void*, size_t*)\n\nMinGW:\n\ngdc.exe failed with errors:\n\nThis application has requested the Runtime to terminate it in an unusual way.\nPlease contact the application's support team for more information.\nAssertion failed!\n\nProgram: c:\\mingw64\\bin\\..\\libexec\\gcc\\x86_64-w64-mingw32\\4.6.1\\cc1d.exe\nFile: ..\/..\/gcc-4.6.1\/gcc\/d\/dmd2\/dsymbol.c, Line 1052\n\nExpression: members\ncc1d.exe: internal compiler error: Aborted\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\n}}}","assignee":null,"created_on":"2012-04-02T15:11:59.432668+00:00","version":null,"edited_on":"2012-04-03T15:21:14.003847+00:00","milestone":null,"updated_on":"2012-06-27T11:27:21.390011+00:00","id":328},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Caller of naked function marked as naked.","reporter":"venix1","component":null,"watchers":["ibuclaw","venix1"],"content":"Giving the following snippet, the naked attribute will apply to naked_caller as well.\r\n{{{\r\nversion( Naked )\r\n\tpragma(set_attribute, naked_callee, naked);\r\n\r\nvoid naked_callee(void*, void *)\r\n{\r\n}\r\n\r\nvoid naked_caller()\r\n{\r\n\tvoid * v1, v2;\r\n\tnaked_callee(v1, v2);\r\n}\r\n\r\nvoid main()\r\n{\r\n\tnaked_caller();\r\n}\r\n}}}\r\n\r\nThis can be verified by the generated assembly\r\n{{{\r\n\/\/ gdc -S naked.d -fversion=Naked\r\n_D5naked12naked_calleeFPvPvZv:\r\n\t.seh_endprologue\r\n\tmovq\t%rcx, -120(%rbp)\r\n\tmovq\t%rdx, -112(%rbp)\r\n\t.seh_endproc\r\n\t.globl\t_D5naked12naked_callerFZv\r\n\t.def\t_D5naked12naked_callerFZv;\t.scl\t2;\t.type\t32;\t.endef\r\n\t.seh_proc\t_D5naked12naked_callerFZv\r\n_D5naked12naked_callerFZv:\r\n\t.seh_endprologue\r\n\tmovq\t$0, -144(%rbp)\r\n\tmovq\t$0, -152(%rbp)\r\n\tmovq\t-152(%rbp), %rdx\r\n\tmovq\t-144(%rbp), %rax\r\n\tmovq\t%rax, %rcx\r\n\tcall\t_D5naked12naked_calleeFPvPvZv\r\n\tnop\r\n\t.seh_endproc\r\n}}}\r\n\r\nas compared to without naked.\r\n\r\n{{{\r\n\/\/ gdc -S naked.d\r\n_D5naked12naked_calleeFPvPvZv:\r\n\tpushq\t%rbp\r\n\t.seh_pushreg\t%rbp\r\n\tmovq\t%rsp, %rbp\r\n\t.seh_setframe\t%rbp, 0\r\n\t.seh_endprologue\r\n\tmovq\t%rcx, 16(%rbp)\r\n\tmovq\t%rdx, 24(%rbp)\r\n\tpopq\t%rbp\r\n\tret\r\n\t.seh_endproc\r\n\r\n_D5naked12naked_callerFZv:\r\n\tpushq\t%rbp\r\n\t.seh_pushreg\t%rbp\r\n\tmovq\t%rsp, %rbp\r\n\tsubq\t$48, %rsp\r\n\t.seh_stackalloc\t48\r\n\t.seh_setframe\t%rbp, 48\r\n\t.seh_endprologue\r\n\tmovq\t$0, -8(%rbp)\r\n\tmovq\t$0, -16(%rbp)\r\n\tmovq\t-16(%rbp), %rdx\r\n\tmovq\t-8(%rbp), %rax\r\n\tmovq\t%rax, %rcx\r\n\tcall\t_D5naked12naked_calleeFPvPvZv\r\n\tnop\r\n\taddq\t$48, %rsp\r\n\tpopq\t%rbp\r\n\tret\r\n\t.seh_endproc\r\n}}}\r\n\r\nLooking at the following in a debugger, it appears that naked is being applied to the calling function in this block as well.\r\n{{{\r\nconfig\/i386\/i386.c (init_cumulative_args)\r\n...\r\n  if (fndecl && ix86_function_naked (fndecl))\r\n    cfun->machine->naked = true;\r\n...\r\n}}}\r\n\r\nHere we have two calls that test positive for being naked.  However, one is marked as a callee and the other the caller.  \r\n\r\nI believe the important parts are the value of cfun, the value of fndecl, and that caller **is** set.  This suggests that testing for !caller in the if statement should solve the issue as well.\r\n{{{\r\nBreakpoint 1, init_cumulative_args (cum=0x4bcfb50, fntype=0x6346a80, \r\n    libname=0x0, fndecl=0x63cb100, caller=0)\r\n    at ..\/..\/gcc-4.6.1\/gcc\/config\/i386\/i386.c:5954\r\n5954        cfun->machine->naked = true;\r\n(gdb) p cfun\r\n$4 = (struct function *) 0x63200b0\r\n\r\nBreakpoint 1, init_cumulative_args (cum=0x4bcf974, fntype=0x6346a80, \r\n    libname=0x0, fndecl=0x63cb100, caller=1)\r\n    at ..\/..\/gcc-4.6.1\/gcc\/config\/i386\/i386.c:5954\r\n5954        cfun->machine->naked = true;\r\n(gdb) p cfun\r\n$5 = (struct function *) 0x63201b8\r\n}}}\r\n\r\n","assignee":null,"created_on":"2012-06-12T23:26:55.674006+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-27T11:24:14.343813+00:00","id":349},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"64 bit structure sizes don't match C language","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"Using debian gdc-4.6.2-4\n\n{{{\nbll-desktop:bll$ cat x1.c\n#include <stdio.h>\n#include <stdlib.h>\n\nunion a {\n  long double a1;\n  char        ac[20];\n};\n\nstruct b {\n  long double b1;\n  char        bc[20];\n};\n\nint\nmain (int argc, char *argv[]) {\n  union a a;\n  struct b b;\n  printf (\"C\\n\");\n  printf (\"sizeof a: %d\\n\", sizeof (a));\n  printf (\"sizeof a.a1: %d\\n\", sizeof (a.a1));\n  printf (\"sizeof a.ac: %d\\n\", sizeof (a.ac));\n  printf (\"offsetof a.ac: %d\\n\", (int) ((char *) &a.ac - (char *) &a.a1));\n  printf (\"sizeof b: %d\\n\", sizeof (b));\n  printf (\"sizeof b.b1: %d\\n\", sizeof (b.b1));\n  printf (\"sizeof b.bc: %d\\n\", sizeof (b.bc));\n  printf (\"offsetof b.bc: %d\\n\", (int) ((char *) &b.bc - (char *) &b.b1));\n  return 0;\n}\n}}}\n\n{{{\nbll-desktop:bll$ cat x1.d\nimport std.stdio;\n\nunion ua {\n  real     a1;\n  char     ac[20];\n};\n\nstruct sa {\n  real     b1;\n  char     bc[20];\n};\n\nint\nmain (string argv[]) {\n  ua a;\n  sa b;\n  writefln (\"D\");\n  writefln (\"sizeof a: %d\", a.sizeof);\n  writefln (\"sizeof a.a1: %d\", a.a1.sizeof);\n  writefln (\"sizeof a.ac: %d\", a.ac.sizeof);\n  writefln (\"offsetof a.ac: %d\", a.ac.offsetof);\n  writefln (\"sizeof b: %d\", b.sizeof);\n  writefln (\"sizeof b.b1: %d\", b.b1.sizeof);\n  writefln (\"sizeof b.bc: %d\", b.bc.sizeof);\n  writefln (\"offsetof b.bc: %d\", b.bc.offsetof);\n  return 0;\n}\n}}}\n\n{{{\nbll-desktop:bll$ cc -o x1c x1.c\nbll-desktop:bll$ gdc -o x1d x1.d\nbll-desktop:bll$ .\/x1c\nC\nsizeof a: 32\nsizeof a.a1: 16\nsizeof a.ac: 20\noffsetof a.ac: 0\nsizeof b: 48\nsizeof b.b1: 16\nsizeof b.bc: 20\noffsetof b.bc: 16\nbll-desktop:bll$ .\/x1d\nD\nsizeof a: 20\nsizeof a.a1: 16\nsizeof a.ac: 20\noffsetof a.ac: 0\nsizeof b: 36\nsizeof b.b1: 16\nsizeof b.bc: 20\noffsetof b.bc: 16\n}}}","assignee":null,"created_on":"2012-01-24T02:10:37.276328+00:00","version":null,"edited_on":"2012-01-24T08:47:17.214635+00:00","milestone":null,"updated_on":"2012-01-29T17:06:06.391497+00:00","id":309},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"GC from spawned threads segfaults on 64-bit","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Using GCC 4.6.1 and GDC tip.  Happens only in 64-bit mode:\r\n\r\n{{{\r\n\r\nimport std.concurrency;\r\n\r\nvoid mallocStuff() {\r\n    new byte[8192];\r\n}\r\n\r\nvoid main() {\r\n    foreach(i; 0..50) {\r\n        spawn(&mallocStuff);\r\n    }\r\n}\r\n\r\n}}}\r\n\r\n{{{\r\n$ gdmd test.d -m64 && .\/test\r\nSegmentation fault\r\n}}}\r\n\r\nGDB info:\r\n\r\n{{{\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7ffff6bb0700 (LWP 18706)]\r\nmark (this=..., pbot=<value optimized out>, ptop=0x7ffff7ecb800) at ..\/..\/..\/libphobos\/gc\/gcx.d:2278\r\n2278                auto p = cast(byte *)(*p1);\r\n(gdb) bt\r\n#0  mark (this=..., pbot=<value optimized out>, ptop=0x7ffff7ecb800) at ..\/..\/..\/libphobos\/gc\/gcx.d:2278\r\n#1  0x0000000000411cef in thread_scanAll (scan=..., curStackTop=0x7ffff6baef08) at ..\/..\/..\/libphobos\/core\/thread.d:2597\r\n#2  0x000000000041dedc in _D2gc3gcx3Gcx11fullcollectMFPvZm (this=..., stackTop=0x7ffff6baef08)\r\n    at ..\/..\/..\/libphobos\/gc\/gcx.d:2502\r\n#3  0x000000000041e38d in fullcollectshell (this=..., size=8209, poolPtr=0x7ffff6baefc0, alloc_size=0x7ffff6baf018)\r\n    at ..\/..\/..\/libphobos\/gc\/gcx.d:2391\r\n#4  _D2gc3gcx3Gcx8bigAllocMFmPPS2gc3gcx4PoolPmZPv (this=..., size=8209, poolPtr=0x7ffff6baefc0, alloc_size=0x7ffff6baf018)\r\n    at ..\/..\/..\/libphobos\/gc\/gcx.d:2078\r\n#5  0x000000000042167b in _D2gc3gcx2GC12mallocNoSyncMFmkPmZPv (this=..., size=8209, bits=10, alloc_size=0x7ffff6baf018)\r\n    at ..\/..\/..\/libphobos\/gc\/gcx.d:515\r\n#6  _D2gc3gcx2GC6mallocMFmkPmZPv (this=..., size=8209, bits=10, alloc_size=0x7ffff6baf018) at ..\/..\/..\/libphobos\/gc\/gcx.d:438\r\n#7  0x0000000000416c04 in gc_qalloc (sz=<value optimized out>, ba=10) at ..\/..\/..\/libphobos\/gc\/gc.d:210\r\n#8  gc_qalloc (sz=<value optimized out>, ba=10) at ..\/..\/..\/libphobos\/gc\/gc.d:205\r\n#9  0x000000000040ac7c in _d_newarrayT (ti=..., length=8192) at ..\/..\/..\/libphobos\/rt\/lifetime.d:819\r\n#10 0x0000000000403bbb in _D4test11mallocStuffFZv ()\r\n#11 0x0000000000403c60 in _D3std11concurrency11__T6_spawnZ6_spawnFbPFZvZS3std11concurrency3Tid4execMFZv ()\r\n#12 0x0000000000413957 in _D4core6thread6Thread3runMFZv (arg=0x7ffff7ecba00) at ..\/..\/..\/libphobos\/core\/thread.d:1395\r\n#13 thread_entryPoint (arg=0x7ffff7ecba00) at ..\/..\/..\/libphobos\/core\/thread.d:457\r\n#14 0x00007ffff773b9ca in start_thread (arg=<value optimized out>) at pthread_create.c:300\r\n#15 0x00007ffff749870d in clone () at ..\/sysdeps\/unix\/sysv\/linux\/x86_64\/clone.S:112\r\n#16 0x0000000000000000 in ?? ()\r\n(gdb) \r\n}}}","assignee":"ibuclaw","created_on":"2011-08-15T20:26:30.648598+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-24T14:23:14.864318+00:00","id":226},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Error building Cross Compiler under MinGW","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"<<issue http:\/\/ximages.net\/images\/09696746189765607497.bmp>>","assignee":null,"created_on":"2011-09-08T22:53:51.996203+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-10T22:39:22.612890+00:00","id":230},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"errno conflict in std.file","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"\/home\/dsimcha\/apps\/gdc\/include\/d2\/4.6.1\/std\/file.d:254: Error: core.thread.getErrno at \/home\/dsimcha\/apps\/gdc\/include\/d2\/4.6.1\/x86_64-linux-gnu\/core\/thread.di:141 conflicts with core.stdc.errno.getErrno at \/home\/dsimcha\/apps\/gdc\/include\/d2\/4.6.1\/x86_64-linux-gnu\/core\/stdc\/errno.di:3\r\n\/home\/dsimcha\/apps\/gdc\/include\/d2\/4.6.1\/std\/file.d:254: Error: function thread.getErrno is not accessible from file\r\n\r\nJust adding alias core.stdc.errno.getErrno getErrno at the top of std.file seems to fix this one.","assignee":null,"created_on":"2011-12-18T00:07:21.458988+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-18T15:21:23.869320+00:00","id":290},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC does not honor -mwindows","reporter":"venix1","component":null,"watchers":["venix1"],"content":"From http:\/\/www.digitalmars.com\/d\/2.0\/windows.html\r\n\r\n{{{\r\n\/\/gdc -v2 WinMain.d -mwindows\r\nimport core.runtime;\r\nimport std.c.windows.windows;\r\n\r\nextern (Windows)\r\nint WinMain(HINSTANCE hInstance,\r\n\tHINSTANCE hPrevInstance,\r\n\tLPSTR lpCmdLine,\r\n\tint nCmdShow)\r\n{\r\n    int result;\r\n\r\n    void exceptionHandler(Throwable e)\r\n    {\r\n        throw e;\r\n    }\r\n\r\n    try\r\n    {\t\r\n        Runtime.initialize(&exceptionHandler);\r\n\r\n        result = myWinMain(hInstance, hPrevInstance, lpCmdLine, nCmdShow);\r\n\r\n        Runtime.terminate(&exceptionHandler);\r\n    }\r\n\r\n    catch (Throwable o)\t\t\/\/ catch any uncaught exceptions\r\n    {\r\n        MessageBoxA(null, cast(char *)o.toString(), \"Error\",\r\n                MB_OK | MB_ICONEXCLAMATION);\r\n        result = 0;\t\t\/\/ failed\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nint myWinMain(HINSTANCE hInstance,\r\n\tHINSTANCE hPrevInstance,\r\n\tLPSTR lpCmdLine,\r\n\tint nCmdShow)\r\n{\r\n    \/* ... insert user code here ... *\/\r\n    return 0;\r\n}\r\n\r\n\/* Gives the following error\r\nlibgphobos2.a(cmain.o): In function `main':\r\nlibphobos\/rt\/cmain.d:5: undefined reference to `_Dmain'\r\n *\/\r\n}}}\r\n\r\nThe option -mwindows should remove the linking of cmain.o 'main' function yet it does not.\r\n\r\nUpon inspection this looks like an issue with the way the GCC handles main.  Phobos is built with cmain.o, which defines main, included.  I believe if GCC sees main it will use that as the entry point.","assignee":"venix1","created_on":"2011-04-18T19:42:25.072746+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-10T20:35:09.438001+00:00","id":195},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE w\/ delegate in class","reporter":null,"component":null,"watchers":["ibuclaw","art_"],"content":"{{{\r\n#!D\r\nclass C {\r\n   void delegate () M = () {\r\n   };\r\n}\r\n}}}\r\n\r\nwhen compiled with \"gdc -O2 -g ice02.d -o ice02\"\r\nresults in \r\n\r\ncc1d: internal compiler error: Segmentation fault\r\n\r\nCompiling without the \"-g\" option gives the expected:\r\n\r\nError: non-constant expression cast(void delegate())delegate pure nothrow @safe void(){}\r\n\r\nhg gdc: gcc version 4.6.3 20111204 (prerelease gdc 0.30, using dmd 2.056\r\nTarget: i686-pc-linux-gnu","assignee":null,"created_on":"2011-12-10T17:05:13.164614+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-02T04:04:19.172006+00:00","id":281},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"add shared lib support","reporter":null,"component":null,"watchers":["ibuclaw","siretty","zorael","JinShil"],"content":"I build a dynamic project,    the libgphobos.a, libgdruntime.a is not build with -fPIC, \r\n\r\nI think we should create a  libgphobos_shared.a and libgdruntime_shared.a .\r\n","assignee":null,"created_on":"2011-03-17T04:47:10.493923+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:15:59.180677+00:00","id":166},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"libgphobos2 doesn't respect the --enable-shared","reporter":"mrgojira","component":null,"watchers":["mrgojira"],"content":"I was trying to build a shared lib with a 64 bit d2 installation from the current codebase and I'm running into what looks to be an error related to libghpobos2 not being built as a shared lib (or more pointedly I haven't been able to enable PIC in the lib.\r\n\r\nAre shared libs supported at this point?  I remember being able to build them with the original gdc.\r\n\r\nHere's the output:\r\ngdc -shared -fPIC -o libtestlib2.so testlib2\/dylib.d \r\n\/usr\/bin\/ld: \/home\/bkropf\/Development\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.3.4\/..\/..\/..\/..\/lib64\/libgphobos2.a(deh.o): relocation R_X86_64_32 against `_D39TypeInfo_AS3gcc3deh18OurUnwindException6__initZ' can not be used when making a shared object; recompile with -fPIC\r\n\/home\/bkropf\/Development\/local\/bin\/..\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.3.4\/..\/..\/..\/..\/lib64\/libgphobos2.a: could not read symbols: Bad value\r\n","assignee":null,"created_on":"2009-12-13T03:34:16.604699+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-12T21:13:16.875931+00:00","id":4},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Build Error Linux 64 dt.cc","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"I can't build GDC Tip using the GCC 4.6.1 sources and GCC 4.4.3 64-bit binaries as my C++ compiler on Ubuntu 10.04 64-bit.  Error message:\r\n\r\n..\/..\/gcc\/d\/dt.cc: In function ‘size_t dt_size(dt_t*)’:\r\n..\/..\/gcc\/d\/dt.cc:130: error: new declaration ‘size_t dt_size(dt_t*)’\r\n..\/..\/gcc\/d\/dt.h:71: error: ambiguates old declaration ‘unsigned int dt_size(dt_t*)’\r\n","assignee":null,"created_on":"2011-09-12T23:07:32.246918+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-15T17:31:05.268025+00:00","id":231},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"sqrt(3) == 2.15118e-4930","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"GDC Tip, GCC 4.6.1.\r\n\r\n{{{\r\nimport std.stdio;\r\nimport std.math;\r\n\r\nvoid main() {\r\n    ulong num = 3;\r\n    writeln(sqrt(num));\r\n}\r\n}}}\r\n\r\nPrints:\r\n 2.15118e-4930","assignee":null,"created_on":"2011-09-13T12:55:47.858206+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-13T21:22:46.953531+00:00","id":232},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Null pointer deref in _d_arrayappendcTp","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw","art_"],"content":"I don't have a test case to trigger this because it's non-deterministic and happens in the context of a fairly large program.  However, from what I've been able to glean from GDB, I occasionally get a segfault at \n\n{{{\n0x00000000005d16a9 in _d_arrayappendcTp (ti=..., px=..., n=<value optimized out>)\n    at ..\/..\/..\/libphobos\/rt\/lifetime.d:1738\n}}}\n\non instruction \n\n{{{\n=> 0x00000000005d16a9 <+393>:   cmp    (%rax),%r9\n}}}\n\nwith rax == 0.","assignee":"ibuclaw","created_on":"2011-12-21T19:31:12.287099+00:00","version":null,"edited_on":"2011-12-21T19:31:32.520516+00:00","milestone":null,"updated_on":"2012-01-02T23:28:02.377983+00:00","id":295},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Segfault in GC w\/ Appender + Multithreading","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"This code segfaults in the GC, using GDC Tip, GCC 4.6.1, -m64 builds only.  -o, -inline, -release have no effect.\r\n\r\n{{{\r\nimport std.stdio, std.array, std.concurrency;\r\n\r\nvoid doStuff() {\r\n    while(1) {\r\n        auto app = appender!(string[])();\r\n        foreach(i; 0..10_000) {\r\n            app.put(\"foo\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nvoid main() {\r\n    spawn(&doStuff);\r\n    doStuff();\r\n}\r\n}}}","assignee":null,"created_on":"2011-09-14T14:28:55.537694+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-15T16:46:27.392787+00:00","id":233},{"status":"resolved","priority":"minor","kind":"task","content_updated_on":null,"voters":[],"title":"dmd.conf equivalent","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"To make GDC with the gdmd script a complete drop-in replacement for DMD, I'd like to see a way to create a set of automatically passed-in command line arguments for gdmd in some way comparable to what dmd.conf does for dmd.  I'm not sure what the best way is to do this, though.","assignee":"ibuclaw","created_on":"2011-09-14T18:10:31.808032+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-27T05:01:53.633802+00:00","id":234},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"internal compiler error: in toCtype","reporter":null,"component":null,"watchers":[],"content":"This code\r\n\r\n\r\n{{{\r\n#!d\r\n\r\n    import std.conv;\r\n\r\n    enum FOO { A = octal!2000000 }\r\n\r\n}}}\r\n\r\nresults in this output.\r\n\r\ncc1d: internal compiler error: in toCtype, at d\/d-glue.cc:3597\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n\r\n\r\n","assignee":null,"created_on":"2012-02-27T00:35:38.889952+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-27T19:36:51.981848+00:00","id":321},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE in feep's tools library","reporter":"opticron","component":null,"watchers":["opticron"],"content":"Sadly, I haven't had time to minimize this error.\r\ntest.d:\r\nmodule test;\r\nimport tools.downloader;\r\nvoid main() {}\r\n\r\nCompile:\r\ngdc test.d -o test tools\/downloader.d\r\n\r\nICE:\r\ntools\/downloader.d: In function 'tools.downloader.download':\r\ntools\/downloader.d:1:0: internal compiler error: Segmentation fault\r\n\r\nYou can get feep's tools library here:\r\nhttp:\/\/svn.dsource.org\/projects\/scrapple\/trunk\/tools\/tools","assignee":null,"created_on":"2011-09-17T23:56:35.481516+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-23T21:41:33.740445+00:00","id":235},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-M\/-MM, -MF, -MT options to generate dependencies like gcc","reporter":"aljen","component":null,"watchers":["ibuclaw","aljen"],"content":"To ease using gdc with makefiles.","assignee":"ibuclaw","created_on":"2011-09-18T09:19:05.613159+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-19T01:41:46.790667+00:00","id":236},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Error: cannot access frame with contract inheritance","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"{{{\r\n#!d\r\nclass Element\r\n{\r\n\tElement appendChild(Element e)\r\n\tout (ret)\r\n\t{\r\n\t\tassert(e is ret);\r\n\t}\r\n\tbody\r\n\t{\r\n\t\treturn e;\r\n\t}\r\n\r\n}\r\n\r\nclass TextNode : Element\r\n{\r\n\toverride Element appendChild(Element e)\r\n\t{\r\n\t\tassert(0, \"Cannot append to a text node\");\r\n\t}\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -c dom.d\r\ndom.d:17: Error: function dom.TextNode.appendChild cannot access frame of appendChild\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-15T02:40:08.622750+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-27T22:14:04.037293+00:00","id":258},{"status":"duplicate","priority":"trivial","kind":"bug","content_updated_on":null,"voters":[],"title":"build a shared library, cannot read symbols","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"gdc revision goshawk-gdc-17da3d28ba17. I've already done a configuration with shared libs enabled. gcc used 4.6.1\r\n\r\n> gdc -shared -fPIC sumar.d -o libsumar.so\r\n\/usr\/bin\/ld: \/usr\/lib\/x86_64-linux-gnu\/gcc\/x86_64-linux-gnu\/4.4.5\/libgphobos.a(deh.o): relocation R_X86_64_32 against `_D39TypeInfo_AS3gcc3deh18OurUnwindException6__initZ' can not be used when making a shared object; recompile with -fPIC\r\n\/usr\/lib\/x86_64-linux-gnu\/gcc\/x86_64-linux-gnu\/4.4.5\/libgphobos.a: could not read symbols: Bad value\r\n","assignee":null,"created_on":"2011-09-25T12:27:15.630115+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-25T15:02:30.089653+00:00","id":238},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Multilib builds broken","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The fixincludes directory apparently doesn't exist.  This error happens only on --enable-multilib builds.\r\n\r\n{{{\r\nconfigure: creating .\/config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating testsuite\/Makefile\r\nconfig.status: creating config.h\r\nconfig.status: executing default commands\r\nmake[2]: Leaving directory `\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir'\r\nmake[1]: *** [stage2-bubble] Error 2\r\nmake[1]: Leaving directory `\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir'\r\nmake: *** [all] Error 2\r\nmake[1]: Entering directory `\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir'\r\n\/bin\/bash ..\/mkinstalldirs \/home\/dsimcha\/apps\/gdc \/home\/dsimcha\/apps\/gdc\r\n\/bin\/bash: line 3: cd: .\/fixincludes: No such file or directory\r\nmake[1]: *** [install-fixincludes] Error 1\r\nmake[1]: Leaving directory `\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir'\r\nmake: *** [install] Error 2\r\n\r\n}}}","assignee":null,"created_on":"2011-09-24T18:32:26.820247+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-25T15:10:05.425068+00:00","id":237},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Filter + Closure = Segfault","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following program segfaults on GDC Tip using GCC 4.6.1, both -m64 and -m32 builds, regardless of -O, -inline and -release flags:\r\n\r\n{{{\r\nimport std.algorithm;\r\n\r\nvoid main() {\r\n    auto foo = [\"foo\":[1, 2, 3], \"bar\":[8], \"baz\": [3, 1]];    \r\n\r\n    bool lam(string s) { return foo[s].length > 1; }\r\n\r\n    auto bar = filter!(lam)(foo.keys);\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-09-26T15:56:17.335551+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-27T04:59:18.044539+00:00","id":239},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Stack traces","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"Unless I'm missing something, GDC currently does not print stack traces on exceptions, even when the -g and -L--export-dynamic flags are set.","assignee":"ibuclaw","created_on":"2011-09-26T18:50:23.364474+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-03T00:33:27.341661+00:00","id":240},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Simple template instantiation with inheritance does not work","reporter":"alexrp","component":null,"watchers":["alexrp","ibuclaw"],"content":"Code:\n\n{{{\n#!d\nclass Foo()\n{\n}\n\nvoid main()\n{\n    auto x = new B!Foo();\n}\n\nclass A(T)\n{\n}\n\nclass B(T) : A!T\n{\n}\n}}}\n\nError:\n\nfoo.d:7: Error: template instance B!(Foo) does not match template declaration B(T)\nfoo.d:7: Error: B!(Foo) is used as a type","assignee":"ibuclaw","created_on":"2011-11-30T04:06:43.277381+00:00","version":null,"edited_on":"2011-11-30T14:11:03.126142+00:00","milestone":null,"updated_on":"2011-11-30T23:16:09.913135+00:00","id":269},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Another lambda segfault","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"This one happens only with -O enabled, on both -m32 and -m64.\r\n\r\n{{{\r\nimport std.array, std.algorithm, std.range;\r\n\r\nvoid main() {\r\n    auto bar = [1, 2, 3, 4, 5];\r\n\r\n    auto foo = array(\r\n        map!((size_t i) { return i \/ (bar.length - 1.0); })(iota(bar.length))\r\n    );\r\n}\r\n}}}","assignee":"ibuclaw","created_on":"2011-09-27T14:38:20.799692+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-11-14T00:27:16.411499+00:00","id":242},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"dmd.conf DFLAGS doesn't work with -version= flags, -L-lsomelib flags","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"-version=someVersion produces:\r\n\r\ngdc: error: unrecognized option ‘-version=someVersion’\r\n\r\nLinking to a library, e.g. -L-lsomelib seems to be simply ignored.  If I put that in my DFLAGS, I get linker errors that indicate that the library was not linked.  If I add the same flag manually to the command line, everything works.","assignee":null,"created_on":"2011-09-27T13:42:06.480755+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-09-27T18:28:16.300182+00:00","id":241},{"status":"wontfix","priority":"minor","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Parallel Builds when Multiple Files Passed to gdmd?","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"It seems that when multiple files are passed to gdmd, it translates all the arguments to gdc syntax and then compiles each one to an object serially, since GDC doesn't support building multiple files in one process like DMD does.  This results in some pretty big slowdowns.  Since I don't imagine that building multiple files in one process is an easy feature to add to GDC, the next best thing would be to make gdmd at least compile the files in parallel.","assignee":null,"created_on":"2011-09-27T17:01:55.486221+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-04T16:27:44.612336+00:00","id":243},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE depending on source file path passed to gdc","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r"],"content":"Really weird.\n\nDustMite has a really tough time reducing it, so here's the original: https:\/\/github.com\/adamdruppe\/misc-stuff-including-D-programming-language-web-stuff\/tree\/e5573750bd600b8ac88b54042a7793768ce58351\n\n{{{\n$ gdc -c arsd\/web.d\narsd\/web.d: In member function 'wrapper':\narsd\/web.d:1921:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (H�߽\u0001) in build_pointer_type, at tree.c:6994\n\n$ gdc -c .\/arsd\/web.d\n.\/arsd\/web.d: In member function 'wrapper':\n.\/arsd\/web.d:2011:0: internal compiler error: in call, at d\/d-codegen.cc:1126\n}}}","assignee":"ibuclaw","created_on":"2011-12-06T12:33:43.942088+00:00","version":null,"edited_on":"2011-12-06T12:35:04.467324+00:00","milestone":null,"updated_on":"2011-12-27T23:25:34.253712+00:00","id":278},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"cannot get frame pointer to __require","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"{{{\r\nclass C {}\r\n\r\nabstract class Base {\r\n    C data;\r\n\r\n    void foo()\r\n    in {\r\n        assert(data);\r\n    } body {}\r\n}\r\n\r\n\r\nclass Derived : Base {\r\n\r\n    override void foo()\r\n     in {\r\n        assert(data);\r\n    } body {\r\n    }\r\n}\r\n\r\n}}}\r\n\r\nCompiled without -release:\r\n\r\ntest.d:15: Error: function test.Derived.foo cannot get frame pointer to __require\r\n","assignee":null,"created_on":"2011-10-04T16:18:08.182397+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-04T16:28:34.036559+00:00","id":245},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Does not compile with Gcc 4.4.5 on Ubuntu 11.04 64bit","reporter":"Raahul_Kumar","component":null,"watchers":["Raahul_Kumar","ibuclaw"],"content":"When trying to compile GDC rev 2011-04-23  commit 553\r\n 7861f5acdf6  with Gcc 4.5.2, the compilation fails. The flags used to compile the .\/configure \r\n\r\nIn file included from \/usr\/include\/bits\/errno.h:25,\r\n                 from \/usr\/include\/errno.h:36,\r\n                 from ..\/..\/..\/libgcc\/..\/gcc\/tsystem.h:93,\r\n                 from ..\/..\/..\/libgcc\/..\/gcc\/libgcc2.c:29:\r\n\/usr\/include\/linux\/errno.h:4:23: error: asm\/errno.h: No such file or directory\r\n\r\nTo make it clear 4.5.2 is the compiler that comes with Natty. I am using 4.5.2 to compile 4.4.5 source, but same error message is received if using 4.5.2 sources as well.\r\n\r\nI used this setting for configure:\r\n..\/configure --enable-languages=d --enable-checking=release --disable-shared --disable-multilib CC=$(which gcc)\r\n","assignee":null,"created_on":"2011-04-26T05:24:57.107091+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-04T23:44:08.004531+00:00","id":201},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE with wrong interface implementation","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"\"immutable\" in the following program is an error, but causes the compiler to segfault:\n\n------------------------------------------------------------\n{{{\ninterface I\n{\n   void m(int arg);\n}\n\nclass C : I\n{\n   void m(immutable int arg) {}\n}\n\nvoid run() {\n   I[string] aa;\n}\n\nvoid main(string[] args) {}\n}}}\n------------------------------------------------------------\ngdc -m64 -O2 -Wall -g -fdebug-c ice01.d -o ice01\nice01.d:7: Error: class ice01.C interface function I.m isn't implemented\nice01.d:16:0: internal compiler error: Segmentation fault\n\ngcc version 4.6.3 20111204 (prerelease gdc 0.30, using dmd 2.055) (GCC) \n\n","assignee":"ibuclaw","created_on":"2011-12-04T21:01:51.983112+00:00","version":null,"edited_on":"2011-12-04T21:58:05.980394+00:00","milestone":null,"updated_on":"2011-12-05T02:09:40.868768+00:00","id":275},{"status":"duplicate","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"RefCounted D'tor\/Postblit Weirdness","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"{{{\r\nimport std.stdio, core.stdc.stdlib;\r\n\r\nstruct PackedStorage {\r\n    alias RefCounted!CowArray ContainerRef;    \r\n    ContainerRef containerRef_;\r\n    \r\n    this(A...)( A args ) {\r\n        containerRef_ = ContainerRef( args );\r\n    }\r\n\r\n    this( this ) {\r\n        containerRef_ = ContainerRef(5);\r\n    }\r\n}\r\n\r\nstruct CowArray {\r\n    this()( size_t newLength ) {}\r\n}\r\n\r\nPackedStorage doIt() {\r\n    writeln(\"Enter doIt\");  \r\n    scope(exit) writeln(\"Leave doIt\");\r\n    PackedStorage ret;\r\n    ret = PackedStorage(5);\r\n    return ret;\r\n}   \r\n\r\nvoid main() {\r\n    auto m = doIt();\r\n\r\n    \/\/ 1 in DMD, and LDC, 0 in GDC:\r\n    writeln(\"In main:  \", m.containerRef_.RefCounted._store._count);\r\n}\r\n\r\nstruct RefCounted(T)\r\n{\r\n    struct _RefCounted\r\n    {\r\n        struct Store { T _payload; size_t _count; }\r\n        private Store* _store;\r\n\r\n        private void initialize(A...)(A args)\r\n        {\r\n            const sz = (*_store).sizeof;\r\n            auto p = malloc(sz)[0 .. sz];\r\n            _store = cast(typeof(_store)) p.ptr;\r\n            _store._count = 1;\r\n            _store._payload = T.init;\r\n         }\r\n\r\n        @property bool isInitialized() const\r\n        {\r\n            return _store !is null;\r\n        }\r\n\r\n        void ensureInitialized()\r\n        {\r\n            if (!isInitialized) initialize();\r\n        }\r\n\r\n    }\r\n    _RefCounted RefCounted;\r\n\r\n    this(A...)(A args) if (A.length > 0)\r\n    {\r\n        RefCounted.initialize(args);\r\n    }\r\n\r\n    this(this)\r\n    {\r\n        if (!RefCounted.isInitialized) return;\r\n        ++RefCounted._store._count;\r\n        writeln(\"Bumped refCount to \", RefCounted._store._count);\r\n    }\r\n\r\n    ~this()\r\n    {\r\n        if (!RefCounted._store) return;\r\n        assert(RefCounted._store._count > 0);  \/\/ FAILS in GDC\r\n        if (--RefCounted._store._count)\r\n        {\r\n            writeln(\"Decremented refCount to \", RefCounted._store._count);\r\n            return;\r\n        }\r\n    }\r\n\r\n    void opAssign(typeof(this) rhs)\r\n    {\r\n        swap(RefCounted._store, rhs.RefCounted._store);\r\n    }\r\n\r\n    void opAssign(T rhs)\r\n    {\r\n        RefCounted._store._payload = rhs;\r\n    }\r\n\r\n    alias refCountedPayload this;\r\n\r\n    @property ref T refCountedPayload()\r\n    {\r\n        RefCounted.ensureInitialized();  \r\n        return RefCounted._store._payload;\r\n    }\r\n}\r\n\r\nvoid swap(T)(ref T a, ref T b) {\r\n    T temp = a;\r\n    a = b;\r\n    b = temp;\r\n}\r\n}}}\r\n\r\n{{{\r\ndsimcha@debian:~$ gdc -o test test.d && .\/test\r\nEnter doIt\r\nBumped refCount to 2\r\nDecremented refCount to 1\r\nLeave doIt\r\nIn main:  0\r\ncore.exception.AssertError@test.d(79): Assertion failure\r\ndsimcha@debian:~$ dmd test.d && .\/test\r\nEnter doIt\r\nLeave doIt\r\nIn main:  1\r\ndsimcha@debian:~$ ldc2 test.d && .\/test\r\nEnter doIt\r\nLeave doIt\r\nIn main:  1\r\n}}}","assignee":null,"created_on":"2011-12-18T03:32:10.015135+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-19T00:57:49.259280+00:00","id":291},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"DMD 2.056","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"DMD 2.056 is out.  This is an enhancement request for a frontend\/phobos\/druntime merge.  I decided to file an issue just in case the GDC maintainers don't read D.announce regularly and weren't aware of the new release.","assignee":null,"created_on":"2011-10-29T19:16:23.181190+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-08T14:37:39.892815+00:00","id":253},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"undefined reference to `.LDASM1' (issue #747 on the old listing)","reporter":"mafm","component":null,"watchers":["ibuclaw"],"content":"http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=747\r\n\r\nIt continues to happen for version 'C' of the tests (A and B work fine) with Debian GNU\/Linux unstable:\r\n---------------------------------------------------------------------------------\r\n$ dpkg -l gdc-4.6 | grep ii\r\nii  gdc-4.6                            0.29.1-4.6.1-14              GNU D compiler, based on the GCC backend\r\n\r\n$ uname -a\r\nLinux mafm-laptop 3.0.0-2-amd64 #1 SMP Fri Oct 7 20:48:45 UTC 2011 x86_64 GNU\/Linux\r\n---------------------------------------------------------------------------------\r\n\r\nSince Iain said that \"Thus I deduce that this is not really an issue for us. However I may report a bug upstream in GCC\", I figured out that it would be interesting to keep track of it here in the new issue list.  Please correct me otherwise.\r\n\r\nAlso, if it's not a problem with DMD's front-end, maybe it should be closed in the other issue list?\r\n","assignee":null,"created_on":"2011-10-11T13:44:12.683380+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-22T17:32:10.283813+00:00","id":247},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"Ability to disable Phobos building in favour of Tango","reporter":"zyxist","component":null,"watchers":["zyxist","ibuclaw"],"content":"I want to use GDC with Tango instead of Phobos. However, the standard GDC installation procedure compiles Phobos, too, and what is more - includes it into the standard linking options. This produces enormous problems when I try to link programs against Tango.\r\n\r\nI think GDC should provide an option to select the standard library we want to use (or at least simple ability to disable Phobos either on building or linking). This issue should be also documented.\r\n\r\nNote: Tango compiles well with current versions of GDC. The problem lies in linking. Although I managed to compile and link a simple \"Hello world\" program, more complex one crashed the building process.","assignee":"ibuclaw","created_on":"2010-11-15T08:35:46.527783+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-11T19:00:50.876765+00:00","id":96},{"status":"wontfix","priority":"minor","kind":"proposal","content_updated_on":null,"voters":[],"title":"-ffunction-sections\/-fdata-sections for phobos\/druntime","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw","art_"],"content":"Shouldn't Phobos and druntime be built with -ffunction-sections and -fdata-sections so that --gc-sections can be used at link time for a smaller binary?","assignee":null,"created_on":"2011-12-19T05:30:02.121293+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-25T19:04:27.615808+00:00","id":293},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Can't link with WinMain","reporter":"Andrej08","component":null,"watchers":["Andrej08","ibuclaw","venix1"],"content":"test.d:\r\n{{{\r\n#!D\r\nmodule test;\r\n\r\nimport core.runtime;\r\nimport std.c.windows.windows;\r\nimport std.string;\r\n\r\nextern(Windows)\r\nint WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int iCmdShow)\r\n{\r\n    int result;\r\n    void exceptionHandler(Throwable e) { throw e; }\r\n\r\n    try\r\n    {\r\n        Runtime.initialize(&exceptionHandler);\r\n        \/\/ ... code\r\n        Runtime.terminate(&exceptionHandler);\r\n    }\r\n    catch (Throwable e)\r\n    {\r\n        MessageBoxA(null, e.toString().toStringz, \"Error\", MB_OK | MB_ICONEXCLAMATION);\r\n        result = 0;\r\n    }\r\n\r\n    return result;\r\n}\r\n}}}\r\n\r\nCompiled with:\r\n{{{\r\ngdc -v2 -mwindows test.d\r\n}}}\r\n{{{\r\nd:\/mingw32\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.6.1\/..\/..\/..\/libgphobos2.a(dmain2.o): In function `rt.dmain2._d_run_main.runMain':\r\nC:\\crossdev\\gdc\\v2\\build\\i686-pc-mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/rt\/dmain2.d:557: undefined reference to `_Dmain'\r\n}}}\r\n\r\nDo I require any other special commands? Maybe a .def file?","assignee":"venix1","created_on":"2011-12-13T00:03:36.306658+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-15T14:35:51.173220+00:00","id":285},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE compiling gtkD TextBuffer.d","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"{{{\r\ngdc -O2 -m32 -Isrc -c src\/gtk\/TextBuffer.d -o src\/gtk\/TextBuffer.o\r\nsrc\/gtk\/TextBuffer.d: In member function 'insertWithTags':\r\nsrc\/gtk\/TextBuffer.d:283:0: internal compiler error: in gimplify_expr, at gimplify.c:7521\r\n}}}\r\n\r\n\r\nSimplified  compiler-segfaulting program:\r\n\r\n{{{\r\nimport core.vararg;\r\n\r\nvoid insertWithTags(int iter, string text, ... ) {\r\n   for (int i = 0; (i<_arguments.length); i++)\r\n      int tag = va_arg!(int)(_argptr);\r\n}\r\n}}}\r\n\r\ngcc version 4.6.3 20111204 (prerelease gdc 0.30, using dmd 2.055)","assignee":null,"created_on":"2011-12-05T16:22:10.330131+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-05T20:58:50.557720+00:00","id":276},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Inline assembler generates wrong argument size for FILD instruction","reporter":"GrahamC","component":null,"watchers":["GrahamC","ibuclaw"],"content":"The inline assembler has a problem with the following code:\r\n\r\n{{{\r\nimport std.stdio;\r\n\r\nvoid main() {\r\n\tshort s = 0x1234;\r\n\tint i = 0x12345678;\r\n\tlong l = 0x1234567801234567L;\r\n\treal s_value, i_value, l_value;\r\n\r\n\tasm {\r\n\t\tfild\ts;\r\n\t\tfstp\ts_value;\r\n\t\tfild\ti;\r\n\t\tfstp\ti_value;\r\n\t\tfild\tl;\r\n\t\tfstp\tl_value;\r\n\t}\r\n\twritefln(\"%f 0x%X\", s_value, cast(long)s_value);\r\n\twritefln(\"%f 0x%X\", i_value, cast(long)i_value);\r\n\twritefln(\"%f 0x%X\", l_value, cast(long)l_value);\r\n}\r\n\r\n}}}\r\n\r\nThis displays:\r\n\r\n{{{\r\n4660.000000 0x1234\r\n305419896.000000 0x12345678\r\n17767.000000 0x4567\r\n}}}\r\n\r\n\r\nwhen compiled with gdc, the third fild instruction is loading a 16 bit integer instead of a 64 bit integer.\r\n\r\nI don't know if this is a gdc or a gcc issue.\r\n\r\nI have compiled gdc with gcc v4.5.1 and the gcc v4.5.1 sources as this is the default compiler version on my system.\r\n\r\n{{{\r\n\/opt\/gdc\/bin\/gdc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=\/opt\/gdc\/bin\/gdc\r\nCOLLECT_LTO_WRAPPER=\/opt\/gdc\/libexec\/gcc\/x86_64-unknown-linux-gnu\/4.5.1\/lto-wrapper\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: ..\/configure --enable-languages=d --disable-shared --prefix=\/opt\/gdc --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues --enable-checking=release\r\nThread model: posix\r\ngcc version 4.5.1 20100731 (gdc 0.30, using dmd 1.070) (GCC) \r\n\r\n}}}","assignee":null,"created_on":"2011-10-15T13:30:24.798027+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-17T20:35:02.593274+00:00","id":248},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: in gimple_expand_cfg","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"from dmd testsuite runnable\/nested.d:\r\n\r\n{{{\r\n#!d\r\nclass Foo36\r\n{\r\n    int x = 42;\r\n    this()\r\n    {\r\n\tint y = 43;\r\n        new class Object\r\n        {\r\n            this()\r\n\t    {\r\n\t\t\/\/writefln(\"x = %s\", x);\r\n\t\t\/\/writefln(\"y = %s\", y);\r\n\t\tassert(x == 42);\r\n\t\tassert(y == 43);\r\n\t    }\r\n        };\r\n    }\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -c nested.d \r\nnested.d: In member function 'nested.Foo36.this.__anonclass1.this':\r\nnested.d:11:0: internal compiler error: in gimple_expand_cfg, at cfgexpand.c:4063\r\n}}}","assignee":"ibuclaw","created_on":"2011-12-09T03:06:08.562878+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-19T01:00:30.249432+00:00","id":279},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"gdmd multithreaded -lib implementation?","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r"],"content":"If you compile with gdmd and the -lib switch it compiles every module separately with gdc.\r\n\r\nWould it be possible to use multiple threads for this?","assignee":null,"created_on":"2011-12-10T18:39:09.030341+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-17T14:43:47.438123+00:00","id":282},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"--fmultilib-dir is broken","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"Building GDC with the following configure string:\r\n\r\n{{{\r\n..\/configure -v --disable-bootstrap --enable-languages=d --prefix=\/gdc --disable-shared --enable-multiarch --with-multiarch-defaults=i386-linux-gnu --enable-linker-build-id --with-system-zlib --without-included-gettext --enable-threads=posix --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-plugin --enable-targets=all --with-arch-32=i586 --with-tune=generic --enable-checking=release --build=i486-linux-gnu --host=i486-linux-gnu --target=i486-linux-gnu\r\n}}}\r\n\r\nLeads to a GDC error message when trying to compile a 64-bit binary:\r\n\r\n{{{\r\n$ gdc -o hello hello.d -m64\r\ncc1d: error: unrecognized command line option ‘-fmultilib-dir=64’\r\n}}}\r\n\r\nI assume this is a bug because it didn't used to happen until a recent (in the last few days) commit and -fmultilib-dir seems to be a legitimate flag.  ","assignee":null,"created_on":"2011-10-23T22:56:09.930083+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-24T11:29:00.950852+00:00","id":251},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"dll_helper.d doesn't work with TLS emulation","reporter":"venix1","component":null,"watchers":["venix1"],"content":"The following code fragment from core\/dll_helper.d doesn't mesh well with GDC's TLS emulation for MinGW.\r\n\r\n{{{\r\n#!d\r\n\r\n    extern (C)\r\n    {\r\n        extern __gshared void* _tlsstart;\r\n        extern __gshared void* _tlsend;\r\n        extern __gshared int   _tls_index;\r\n        extern __gshared void* _tls_callbacks_a;\r\n    }\r\n}}}\r\n\r\nI was hoping to get some suggestions on how to deal with this issue.  \r\n\r\nSome notable points are.\r\n* Emulated TLS prefixes symbols with 'emultls_'\r\n* GDC doesn't output _tls_callbacks_a. A Windows feature.\r\n* MinGW's runtime would need weak aliasing of their symbols. _tls_start, _tls_end, _xl_a\r\n* The module  may be redundant if MinGW's runtime already handles this case.\r\n\r\n\r\n","assignee":"venix1","created_on":"2011-04-18T18:35:59.520205+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-06T00:28:07.542702+00:00","id":194},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Problems relating to Windows Binaries.","reporter":"venix1","component":null,"watchers":["venix1","jordirovira","ibuclaw"],"content":"The simpleness of this issue system leaves something to be desired. \r\n\r\nAny issues relating to the current TDM-GDC binaries post here.","assignee":"venix1","created_on":"2011-03-22T02:56:22.089542+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-06T00:29:44.784042+00:00","id":170},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Error: suffix or operands invalid for `jc'","reporter":"dsimcha","component":null,"watchers":["dsimcha"],"content":"While building GDC tip with GCC 4.6.1:\r\n\r\n{{{\r\n\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir\/.\/gcc\/gdc -B\/var\/tmp\/gdcStuff\/gdc\/dev\/gcc-4.6.1\/objdir\/.\/gcc\/ -B\/gdc\/x86_64-unknown-linux-gnu\/bin\/ -B\/gdc\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/gdc\/x86_64-unknown-linux-gnu\/include -isystem \/gdc\/x86_64-unknown-linux-gnu\/sys-include -o rt\/lifetime.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu  -c ..\/..\/..\/libphobos\/rt\/lifetime.d\r\n..\/..\/..\/libphobos\/rt\/lifetime.d: Assembler messages:\r\n..\/..\/..\/libphobos\/rt\/lifetime.d:806: Error: suffix or operands invalid for `jc'\r\n..\/..\/..\/libphobos\/rt\/lifetime.d:878: Error: suffix or operands invalid for `jc'\r\n..\/..\/..\/libphobos\/rt\/lifetime.d:1240: Error: suffix or operands invalid for `jc'\r\n..\/..\/..\/libphobos\/rt\/lifetime.d:1428: Error: suffix or operands invalid for `jc'\r\nmake[3]: *** [rt\/lifetime.o] Error 1\r\n}}}","assignee":null,"created_on":"2011-10-24T19:29:42.271481+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-10-25T23:40:10.728191+00:00","id":252},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"libcloog-0.dll missing","reporter":"Andrej08","component":null,"watchers":["Andrej08"],"content":"I can't get the Windows binaries on the download page to work. They seem to have some kind of libcloog-0.dll dependency which I can't find anywhere. It's not in the TDM packages, and it's not in the MinGW packages as far as I can tell.\r\n\r\nThe only reference I found was this:\r\nhttp:\/\/cygwin.com\/packages\/libcloog0\/libcloog0-0.15.7-1\r\n\r\nI didn't have this issue when I was compiling GDC from source, but that was many months ago.","assignee":null,"created_on":"2011-12-03T21:03:55.294634+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-03T21:15:05.908515+00:00","id":273},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC Acquires Locks Twice in Synchronized Member Methods","reporter":"debio","component":null,"watchers":["debio","ibuclaw"],"content":"An example:\n{{{\nimport core.sync.mutex;\nimport std.stdio;\n\nclass DebugMutex : Mutex {\n    this() {}\n    this(Object o) {\n        super(o);\n    }\n    override void lock() {\n        super.lock();\n        writeln(\"lock\");\n    }\n    override void unlock() {\n        super.unlock();\n        writeln(\"unlock\");\n    }\n    override bool tryLock() {\n        writeln(\"tryLock\");\n        return super.tryLock();\n    }\n}\n\nclass Dummy {\n    this() {\n        auto lock = new DebugMutex(this);\n    }\n\n    synchronized void doStuff() {\n        writeln(\"doStuff\");\n    }\n}\n\nvoid main() {\n    auto test = new shared(Dummy)();\n    test.doStuff();\n}\n}}}\n\nDMD Output:\n{{{\nlock\ndoStuff\nunlock\n}}}\n\nGDC Output:\n{{{\nlock\nlock\ndoStuff\nunlock\nunlock\n}}}\n\nThis isn't usually a problem, but it breaks condition variables in situations like this:\n{{{\nclass Queue2 {\nprivate:\n   bool _work;\n   Condition _cond;\npublic:\n   this() {\n       auto lock = new Mutex(this); \/\/ initialize the monitor\n       \/\/ explicitly so we can reuse the lock\n       _cond = new Condition(lock); \/\/ for this condition variable\n       _work = false;\n   }\n   synchronized void doWork() {\n       while(!_work) (cast()_cond).wait();\n       _work = false;\n       writeln(\"did work\");\n       return;\n   }\n   synchronized void addWork() {\n       _work = true;\n       (cast()_cond).notify();\n       writeln(\"added work\");\n   }\n}\n}}}\n\nIn this situation, when a thread calls _cond.wait(), a deadlock results because the lock is unlocked once, not twice.\n\nThis bug seems to be specific to member functions, as this is fine:\n{{{\nvoid doStuff() {\n    auto lock = new DebugMutex();\n    synchronized(lock) {\n        writeln(\"doStuff\");\n    }\n}\n}}}\n\nWhich correctly prints:\n{{{\nlock\ndoStuff\nunlock\n}}}","assignee":null,"created_on":"2011-12-24T05:02:50.479141+00:00","version":null,"edited_on":"2011-12-24T05:04:44.512221+00:00","milestone":null,"updated_on":"2011-12-24T11:06:39.641799+00:00","id":297},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Array Range Functions Don't Get Inlined","reporter":"dsimcha","component":null,"watchers":["dsimcha","art_","ibuclaw"],"content":"The lack of inlining of array range functions causes egregious performance problems in range-based code:\r\n\r\ntest2.d:\r\n\r\n{{{\r\nimport std.array;\r\n\r\nvoid main() {\r\n    double[] arr;\r\n    auto a = arr.front;\r\n    arr.popFront();\r\n    bool e = arr.empty;\r\n    auto arr2 = arr.save;\r\n}\r\n}}}\r\n\r\nBuild command:\r\n\r\ngdc -S -O3 -finline-functions -frelease test2.d -otest2.asm\r\n\r\nDisassembly of Dmain:\r\n\r\n{{{\r\n_Dmain:\r\n.LFB0:\r\n    .cfi_startproc\r\n    pushl   %ebp\r\n    .cfi_def_cfa_offset 8\r\n    .cfi_offset 5, -8\r\n    movl    %esp, %ebp\r\n    .cfi_def_cfa_register 5\r\n    pushl   %ebx\r\n    subl    $52, %esp\r\n    movl    $0, -16(%ebp)\r\n    movl    -16(%ebp), %eax\r\n    movl    $0, -12(%ebp)\r\n    movl    -12(%ebp), %edx\r\n    movl    %eax, (%esp)\r\n    movl    %edx, 4(%esp)\r\n    .cfi_offset 3, -12\r\n    call    _D3std5array12__T5frontTdZ5frontFNcAdZd\r\n    leal    -16(%ebp), %eax\r\n    movl    %eax, (%esp)\r\n    call    _D3std5array16__T8popFrontTAdZ8popFrontFKAdZv\r\n    movl    -12(%ebp), %edx\r\n    movl    -16(%ebp), %eax\r\n    movl    %edx, 4(%esp)\r\n    movl    %eax, (%esp)\r\n    call    _D3std5array12__T5emptyTdZ5emptyFNaNbNdNfxAdZb\r\n    movl    -12(%ebp), %ebx\r\n    leal    -32(%ebp), %eax\r\n    movl    -16(%ebp), %ecx\r\n    movl    %eax, (%esp)\r\n    movl    %ebx, 8(%esp)\r\n    movl    %ecx, 4(%esp)\r\n    call    _D3std5array11__T4saveTdZ4saveFNaNbNdNfAdZAd\r\n    xorl    %eax, %eax\r\n    movl    -4(%ebp), %ebx\r\n    subl    $4, %esp\r\n    leave\r\n    .cfi_restore 5\r\n    .cfi_def_cfa 4, 4\r\n    .cfi_restore 3\r\n    ret\r\n    .cfi_endproc\r\n.LFE0:\r\n}}}\r\n","assignee":null,"created_on":"2011-12-24T20:15:43.426069+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-26T11:02:07.779544+00:00","id":298},{"status":"wontfix","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"Array empty function does not get inlined - \"in\" parm class prevents it","reporter":"art_","component":null,"watchers":["art_","ibuclaw"],"content":"This is inspired by https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/298\/array-range-functions-dont-get-inlined , but as i'm not sure it's really related, and involves LTO, i'll file it separately.\n\nAs in #298, gdc currently does a very bad job inlining non-local functions, so i did a few tests with LTO. LTO is not the answer, at least not yet, but i played with it a bit, and, while it breaks things for larger stuff, for the testcase from #298 it does actually work and eliminates _all_ of the dead code:\n{{{\n08049ac0 <_Dmain>:\n 8049ac0:       55                      push   %ebp\n 8049ac1:       31 c0                   xor    %eax,%eax\n 8049ac3:       89 e5                   mov    %esp,%ebp\n 8049ac5:       5d                      pop    %ebp\n 8049ac6:       c3                      ret    \n}}}\nBut if we add a \"extern (C) void exit(int, ...);exit(e, a, arr2);\" line before main() returns (to make the code un-dead), something strange happens: gdc will apparently inline front(), popFront() and save(), but will refuse to inline the trivial empty() function.\n{{{\n08049b00 <_Dmain>:\n 8049b00:       55                      push   %ebp\n 8049b01:       ba 08 00 00 00          mov    $0x8,%edx\n 8049b06:       b8 ff ff ff ff          mov    $0xffffffff,%eax\n 8049b0b:       89 e5                   mov    %esp,%ebp\n 8049b0d:       83 ec 38                sub    $0x38,%esp\n 8049b10:       dd 05 00 00 00 00       fldl   0x0\n 8049b16:       dd 5d e8                fstpl  -0x18(%ebp)\n 8049b19:       e8 d2 ff ff ff          call   8049af0 <pure nothrow @property @safe bool std.array.empty!(double).empty(const(double[])).2009>\n 8049b1e:       c7 44 24 10 08 00 00    movl   $0x8,0x10(%esp)\n 8049b25:       00 \n 8049b26:       dd 45 e8                fldl   -0x18(%ebp)\n 8049b29:       0f b6 c0                movzbl %al,%eax\n 8049b2c:       c7 44 24 0c ff ff ff    movl   $0xffffffff,0xc(%esp)\n 8049b33:       ff \n 8049b34:       89 04 24                mov    %eax,(%esp)\n 8049b37:       dd 5c 24 04             fstpl  0x4(%esp)\n 8049b3b:       e8 10 f8 ff ff          call   8049350 <exit@plt>\n 8049b40:       31 c0                   xor    %eax,%eax\n 8049b42:       c9                      leave  \n 8049b43:       c3                      ret    \n}}}\n\nHmm. But if we change std.array module from:\n{{{\n@property bool empty(T)(in T[] a) @safe pure nothrow\n{\n    return !a.length;\n}\n}}}\nto \n{{{\n@property bool empty(T)(T[] a) @safe pure nothrow\n{\n    return !a.length;\n}\n}}}\nthen it has no problem inlining it all:\n{{{\n08049af0 <_Dmain>:\n 8049af0:       55                      push   %ebp\n 8049af1:       89 e5                   mov    %esp,%ebp\n 8049af3:       83 ec 28                sub    $0x28,%esp\n 8049af6:       c7 44 24 10 08 00 00    movl   $0x8,0x10(%esp)\n 8049afd:       00 \n 8049afe:       c7 44 24 0c ff ff ff    movl   $0xffffffff,0xc(%esp)\n 8049b05:       ff \n 8049b06:       dd 05 00 00 00 00       fldl   0x0\n 8049b0c:       c7 04 24 00 00 00 00    movl   $0x0,(%esp)\n 8049b13:       dd 5c 24 04             fstpl  0x4(%esp)\n 8049b17:       e8 34 f8 ff ff          call   8049350 <exit@plt>\n 8049b1c:       31 c0                   xor    %eax,%eax\n 8049b1e:       c9                      leave  \n 8049b1f:       c3                      ret    \n}}}\n","assignee":null,"created_on":"2011-12-26T03:27:40.620378+00:00","version":null,"edited_on":"2011-12-26T03:28:59.213571+00:00","milestone":null,"updated_on":"2011-12-26T10:55:37.896942+00:00","id":300},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"Error linking libquadmath DLL","reporter":null,"component":null,"watchers":["jay3d","ibuclaw","venix1"],"content":"While compiling GDC for MinGW64, all goes fine until it reaches linking quadmath DLL:\r\n\r\nlibtool: link: \/home\/WaWaMa\/gcc-4.6.1\/build\/.\/gcc\/xgcc -B\/home\/WaWaMa\/gcc-4.6.1\/build\/.\/gcc\/ -L\/mingw\/x86_64-w64-mingw32\/lib -L\/mingw\/mingw\/lib -isystem \/mingw\/x86_64-w64-mingw32\/include -isystem \/mingw\/mingw\/include -B\/mingw\/x86_64-w64-mingw32\/bin\/ -B\/mingw\/x86_64-w64-mingw32\/lib\/ -isystem \/mingw\/x86_64-w64-mingw32\/include -isystem \/mingw\/x86_64-w64-mingw32\/sys-include    -shared  math\/.libs\/acoshq.o math\/.libs\/fmodq.o math\/.libs\/acosq.o math\/.libs\/frexpq.o math\/.libs\/rem_pio2q.o math\/.libs\/asinhq.o math\/.libs\/hypotq.o math\/.libs\/remainderq.o math\/.libs\/asinq.o math\/.libs\/rintq.o math\/.libs\/atan2q.o math\/.libs\/isinfq.o math\/.libs\/roundq.o math\/.libs\/atanhq.o math\/.libs\/isnanq.o math\/.libs\/scalblnq.o math\/.libs\/atanq.o math\/.libs\/j0q.o math\/.libs\/scalbnq.o math\/.libs\/cbrtq.o math\/.libs\/j1q.o math\/.libs\/signbitq.o math\/.libs\/ceilq.o math\/.libs\/jnq.o math\/.libs\/sincos_table.o math\/.libs\/complex.o math\/.libs\/ldexpq.o math\/.libs\/sincosq.o math\/.libs\/copysignq.o math\/.libs\/lgammaq.o math\/.libs\/sincosq_kernel.o math\/.libs\/coshq.o\r\nmath\/.libs\/llroundq.o math\/.libs\/sinhq.o math\/.libs\/cosq.o math\/.libs\/log10q.o math\/.libs\/sinq.o math\/.libs\/cosq_kernel.o math\/.libs\/log1pq.o math\/.libs\/sinq_kernel.o math\/.libs\/erfq.o math\/.libs\/logq.o math\/.libs\/sqrtq.o math\/.libs\/expm1q.o math\/.libs\/lroundq.o math\/.libs\/tanhq.o math\/.libs\/expq.o math\/.libs\/modfq.o math\/.libs\/tanq.o math\/.libs\/fabsq.o math\/.libs\/nanq.o math\/.libs\/tgammaq.o math\/.libs\/finiteq.o\r\nmath\/.libs\/nextafterq.o math\/.libs\/truncq.o math\/.libs\/floorq.o math\/.libs\/powq.o math\/.libs\/fmaq.o math\/.libs\/cacoshq.o math\/.libs\/cacosq.o math\/.libs\/casinhq.o math\/.libs\/casinq.o math\/.libs\/catanhq.o math\/.libs\/catanq.o math\/.libs\/cimagq.o math\/.libs\/conjq.o math\/.libs\/cprojq.o math\/.libs\/crealq.o math\/.libs\/fdimq.o math\/.libs\/fmaxq.o math\/.libs\/fminq.o math\/.libs\/ilogbq.o math\/.libs\/llrintq.o math\/.libs\/log2q.o math\/.libs\/lrintq.o math\/.libs\/nearbyintq.o math\/.libs\/remquoq.o printf\/.libs\/addmul_1.o printf\/.libs\/add_n.o printf\/.libs\/cmp.o printf\/.libs\/divrem.o printf\/.libs\/flt1282mpn.o printf\/.libs\/fpioconst.o printf\/.libs\/lshift.o printf\/.libs\/mul_1.o printf\/.libs\/mul_n.o printf\/.libs\/mul.o printf\/.libs\/printf_fphex.o printf\/.libs\/printf_fp.o printf\/.libs\/quadmath-printf.o printf\/.libs\/rshift.o printf\/.libs\/submul_1.o printf\/.libs\/sub_n.o strtod\/.libs\/strtoflt128.o strtod\/.libs\/mpn2flt128.o strtod\/.libs\/tens_in_limb.o\r\n  -L\/mingw\/x86_64-w64-mingw32\/lib -L\/mingw\/mingw\/lib  -Wl,--version-script=..\/..\/..\/libquadmath\/quadmath.map   -o .libs\/libquadmath_64-0.dll -Wl,--enable-auto-image-base -Xlinker --out-implib -Xlinker .libs\/libquadmath_64.dll.a\r\nCreating library file: .libs\/libquadmath_64.dll.a\r\nprintf\/.libs\/printf_fp.o: In function `__quadmath_printf_fp':\r\nC:\\MSYS\\home\\WaWaMa\\gcc-4.6.1\\build\\x86_64-w64-mingw32\\libquadmath\/..\/..\/..\/libquadmath\/printf\/printf_fp.c:902: undefined reference to `hack_digit.5817'\r\nC:\\MSYS\\home\\WaWaMa\\gcc-4.6.1\\build\\x86_64-w64-mingw32\\libquadmath\/..\/..\/..\/libquadmath\/printf\/printf_fp.c:926: undefined reference to `hack_digit.5817'\r\nC:\\MSYS\\home\\WaWaMa\\gcc-4.6.1\\build\\x86_64-w64-mingw32\\libquadmath\/..\/..\/..\/libquadmath\/printf\/printf_fp.c:938: undefined reference to `hack_digit.5817'\r\ncollect2: ld returned 1 exit status\r\nmake[3]: *** [libquadmath.la] Error 1\r\nmake[3]: Leaving directory `\/home\/WaWaMa\/gcc-4.6.1\/build\/x86_64-w64-mingw32\/libquadmath'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/home\/WaWaMa\/gcc-4.6.1\/build\/x86_64-w64-mingw32\/libquadmath'\r\nmake[1]: *** [all-target-libquadmath] Error 2\r\nmake[1]: Leaving directory `\/home\/WaWaMa\/gcc-4.6.1\/build'\r\nmake: *** [all] Error 2\r\n\r\nAny help fixing this issue?\r\n\r\nCheers!\r\nJay","assignee":null,"created_on":"2011-10-19T09:19:15.158265+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-27T10:46:56.345334+00:00","id":249},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC 2.055 TDM 4.5.1 linking error","reporter":"Andrej08","component":null,"watchers":["ibuclaw","debio","Andrej08","venix1"],"content":"Used http:\/\/sourceforge.net\/projects\/tdm-gcc\/files\/TDM-GCC%20Installer\/tdm-gcc-4.6.1.exe\/download\r\n\r\nand https:\/\/bitbucket.org\/goshawk\/gdc\/downloads\/gcc-4.6.1-tdm-1-gdc-7e22befef29c-20111205.7z\r\n\r\n{{{\r\nD:\\MinGW32\\bin>gdc -v2 test.d\r\n\r\nd:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.6.1\/..\/..\/..\/libgphobos2.a(bitmanip.o): In function `D3std8bitmanip8BitArray7opIndexMxFkZb':\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: undefined reference to `__sync_fetch_and_add_4'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: undefined reference to `__sync_fetch_and_add_4'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: undefined reference to `__sync_fetch_and_add_4'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: undefined reference to `__sync_fetch_and_add_4'\r\nC:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: undefined reference to `__sync_fetch_and_add_4'\r\nd:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.6.1\/..\/..\/..\/libgphobos2.a(bitmanip.o):C:\\crossdev\\gdc\\v2\\build\\mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/bitmanip.d:410: more undefined references to `__sync_fetch_and_add_4' follow\r\ncollect2: ld returned 1 exit status\r\n}}}","assignee":"venix1","created_on":"2011-12-06T01:07:48.289851+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-28T21:28:14.012882+00:00","id":277},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC no longer defines MinGW version identifier","reporter":"alexrp","component":null,"watchers":["alexrp","venix1"],"content":"See: http:\/\/dlang.org\/version.html\r\n\r\nIt's fine for GDC to define MinGW32 and MinGW64 if this is desired (although I would *strongly* recommend using just MinGW and D_LP64), but MinGW needs to be defined to be consistent with the spec.","assignee":"venix1","created_on":"2012-02-26T14:50:16.238821+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-26T16:17:48.690326+00:00","id":320},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ref return funcs returning wrong reference","reporter":"art_","component":null,"watchers":["ibuclaw","art_"],"content":"> This can be raised separately.\r\n{{{\r\nstruct S\r\n{\r\n   int x = 0;\r\n   ref int mX() { return x; }\r\n}\r\n\r\nvoid main(string[] argv) {\r\n   S s;\r\n   s.mX() += 4;   \/\/ Does not assign to s.x\r\n   assert(s.x == 4);\r\n}\r\n}}}\r\n\r\nFrom https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/298\/array-range-functions-dont-get-inlined .\r\n\r\nWhile https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/f9217ce815ea made the inlining work (for the lto \".empty\" case too, btw), it introduced this bug. Which is much worse than the missed optimization as it results in silent data corruption.\r\n\r\n(sorry, if this is known\/worked on, but i wanted a bug for blocking gdc upgrades here; the one where this appeared is marked as resolved)","assignee":null,"created_on":"2011-12-26T15:42:26.473273+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-12-31T00:27:47.808730+00:00","id":301},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Postblit on Return:  Wrong Postblit Called","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"This one's related to Issue 291, but the reason why lack of NRVO breaks code so severely is because the wrong postblit is apparently called.  Even if NRVO isn't implemented properly it shouldn't break ref counting.  The postblit for the struct that's about the be *destroyed* is called, not the postblit for the one that was just *created*.\r\n\r\n{{{\r\nimport core.stdc.stdio;\r\n\r\nstruct S {\r\n    this(this) {\r\n        printf(\"Postblit %p\\n\", &this);\r\n    }\r\n\r\n    ~this() {\r\n        printf(\"D'tor %p\\n\", &this);\r\n    }\r\n}\r\n\r\nS doIt() {\r\n    S s;\r\n    printf(\"s lives at %p in doIt.\\n\", &s);\r\n    printf(\"Return from doIt\\n\");\r\n    return s;\r\n}\r\n\r\nvoid main() {\r\n    printf(\"Call doIt\\n\");\r\n    auto s = doIt();\r\n    printf(\"s lives at %p in main.\\n\", &s);\r\n    printf(\"Return from main\\n\");\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -o test test.d && .\/test\r\nCall doIt                                                                                                 \r\ns lives at 0x7fff272566ff in doIt.                                                                        \r\nReturn from doIt                                                                                          \r\nPostblit 0x7fff272566ff                                                                                   \r\nD'tor 0x7fff272566ff                                                                                      \r\ns lives at 0x7fff2725673f in main.                                                                        \r\nReturn from main                                                                                          \r\nD'tor 0x7fff2725673f \r\n}}}","assignee":null,"created_on":"2011-12-19T16:59:15.150620+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-01T15:57:36.444116+00:00","id":294},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"DLL sample for GDC","reporter":"Andrej08","component":null,"watchers":["ibuclaw","venix1","Andrej08","JinShil"],"content":"Since this will probably be an often-asked question, I think it would be nice to package a DLL sample in some \"Samples\" directory or maybe on the wiki page. Here's a preliminary sample that works:\r\n\r\nmydll.d:\r\n{{{\r\nmodule mydll;\r\n\r\nimport std.c.windows.windows;\r\n\r\nversion (Windows)\r\n{\r\n    extern (C) bool rt_init( void delegate( Exception ) dg = null );\r\n    extern (C) bool rt_term( void delegate( Exception ) dg = null ); \r\n    \r\n    \/\/ Globals\r\n    static HINSTANCE    g_hInst;     \r\n    \r\n    extern (Windows)\r\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\r\n    {\r\n        int argc;\r\n        char** argv;\r\n        \r\n        switch (ulReason)\r\n        {\r\n            case DLL_PROCESS_ATTACH:\r\n                rt_init();\r\n                break;\r\n            case DLL_PROCESS_DETACH:\r\n                rt_term();\r\n                break;\r\n            case DLL_THREAD_ATTACH:\r\n            case DLL_THREAD_DETACH:\r\n                return false;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        g_hInst = hInstance;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport extern(D) int sum(int x, int y)\r\n{\r\n    return x + y;\r\n}\r\n}}}\r\n\r\nmain.d:\r\n{{{\r\nmodule main;\r\n\r\nimport mydll;\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n    int x = 1;\r\n    int y = 2;\r\n    writefln(\"The sum of %s and %s is %s.\", x, y, sum(x, y));\r\n}\r\n}}}\r\n\r\nbuild.bat:\r\n{{{\r\n@echo off\r\ngdc -fintfc -v2 -fsyntax-only -H mydll.d\r\ngdc -v2 -shared -o mydll.dll mydll.d -Wl,--out-implib,implibmydll.a\r\ngdc -v2 -o main.exe main.d implibmydll.a\r\n}}}\r\n\r\nUnfortunately this isn't reliable since I'm not doing extra work when threads get involved. I had to prototype rt_init and rt_term because I can't import **import core.sys.windows.dll** and use **dll_process_attach and dll_process_detach** due to linking errors.\r\n\r\nExample:\r\n{{{\r\nmodule mydll;\r\n\r\nimport std.c.windows.windows;\r\nimport core.sys.windows.dll;\r\n\r\n__gshared HINSTANCE g_hInst;\r\n\r\nversion (Windows)\r\n{\r\n    extern (Windows)\r\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\r\n    {\r\n        switch (ulReason)\r\n        {\r\n            case DLL_PROCESS_ATTACH:\r\n                dll_process_attach( hInstance, true );\r\n                break;\r\n            case DLL_PROCESS_DETACH:\r\n                dll_process_detach( hInstance, true );\r\n                break;\r\n            case DLL_THREAD_ATTACH:\r\n                dll_thread_attach( true, true );\r\n                break;\r\n            case DLL_THREAD_DETACH:\r\n                dll_thread_detach( true, true );\r\n                return false;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        g_hInst = hInstance;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport extern(D) int sum(int x, int y)\r\n{\r\n    return x + y;\r\n}\r\n}}}\r\n\r\n{{{\r\ngdc -v2 -shared -o mydll.dll mydll.d -Wl,--out-implib,implibmydll.a\r\n}}}\r\n\r\n{{{\r\nCreating library file: implibmydll.a\r\nd:\/mingw32\/bin\/..\/lib\/gcc\/i686-pc-mingw32\/4.6.1\/..\/..\/..\/libgphobos2.a(dll.o): In function `D4core3sys7windows3dll18dll_process_attachFPvbZb':\r\nC:\\crossdev\\gdc\\v2\\build\\i686-pc-mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/core\/sys\/windows\/dll.d:386: undefined reference to `_tls_callbacks_a'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\n\r\nThere **is** a workaround, I can define a dummy symbol called **_tls_callbacks_a**:\r\n\r\n{{{\r\nmodule mydll;\r\n\r\nimport std.c.windows.windows;\r\nimport core.sys.windows.dll;\r\n\r\n__gshared HINSTANCE g_hInst;\r\n\r\nextern(C) int _tls_callbacks_a;\r\n\r\nversion (Windows)\r\n{\r\n    extern (Windows)\r\n    BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\r\n    {\r\n        switch (ulReason)\r\n        {\r\n            case DLL_PROCESS_ATTACH:\r\n                dll_process_attach( hInstance, true );\r\n                break;\r\n            case DLL_PROCESS_DETACH:\r\n                dll_process_detach( hInstance, true );\r\n                break;\r\n            case DLL_THREAD_ATTACH:\r\n                dll_thread_attach( true, true );\r\n                break;\r\n            case DLL_THREAD_DETACH:\r\n                dll_thread_detach( true, true );\r\n                return false;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        g_hInst = hInstance;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport extern(D) int sum(int x, int y)\r\n{\r\n    return x + y;\r\n}\r\n}}}\r\n\r\nThis will successfully compile the DLL. The other problem is an issue with DMD's front-end (I think so anyway, and GDC is based on that front-end AFAIK), where using a .di file will create a dependency on a symbol \"ModuleInfoZ\". I've discussed this in Issue 6019 (http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=6019), essentially the linker error after the last call here:\r\n{{{\r\ngdc -v2 -shared -o mydll.dll mydll.d -Wl,--out-implib,implibmydll.a\r\ngdc -fintfc -v2 -fsyntax-only -H mydll.d\r\ngdc -v2 -o main.exe main.d implibmydll.a\r\n}}}\r\n\r\nis:\r\n{{{\r\nC:\\DOCUME~1\\Andrej\\LOCALS~1\\Temp\\ccMiZJOR.o:main.d:(.data+0xc): undefined reference to `_D5mydll12__ModuleInfoZ'\r\n}}}\r\n\r\nTo work around that, another dummy symbol must be added to main.d:\r\n{{{\r\nmodule main;\r\n\r\nimport mydll;\r\nimport std.stdio;\r\n\r\nextern(C) int _D5mydll12__ModuleInfoZ;\r\n\r\nvoid main()\r\n{\r\n    int x = 1;\r\n    int y = 2;\r\n    writefln(\"The sum of %s and %s is %s.\", x, y, sum(x, y));\r\n}\r\n}}}\r\n\r\nAnyway I just thought this info would be useful here.","assignee":"venix1","created_on":"2011-12-15T17:43:14.594029+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2014-03-31T15:16:27.547748+00:00","id":288},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: getopt with delegate literal","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r"],"content":"{{{\r\n#!d\r\nimport std.exception;\r\nimport std.getopt;\r\n\r\nvoid main(string[] args)\r\n{\r\n    void dashOh(string key, string value)\r\n    {\r\n            enforce(false, \"Unrecognized option: \"~key~value);\r\n    }\r\n\r\n    bool bailout;\r\n    getopt(args,\r\n            \"help\", { bailout = true; }\r\n            ,\"o\", &dashOh \/\/ comment out this line and it works with -O2 or above\r\n            );\r\n}\r\n}}}\r\n{{{\r\n$ gdc -c rdmd.d\r\nrdmd.d: In member function 'rdmd.main.dashOh.__dgliteral1321':\r\nrdmd.d:8:0: internal compiler error: in make_decl_rtl, at varasm.c:1156\r\n$ gdc -O2 -c rdmd.d\r\nrdmd.d: In member function 'rdmd.main.dashOh.__dgliteral1321':\r\nrdmd.d:1:0: internal compiler error: in visit_ref_for_mod_analysis, at ipa-prop.c:1456\r\n}}}","assignee":"ibuclaw","created_on":"2011-12-01T23:58:23.637295+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-02T03:12:44.983307+00:00","id":272},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE in a delegate involving pointers to shared data and lazy template arguments","reporter":"debio","component":null,"watchers":["debio","ibuclaw"],"content":"Reduced testcase:\r\n{{{\r\n#!D\r\nclass Server {\r\n    private:\r\n    shared(bool) _stopFlag;\r\n\r\n    public:\r\n    void member() {\r\n        auto dg = {\r\n            try                 serverIOLoop(&_stopFlag);\r\n            catch(Throwable t)                  write(t);\r\n        };\r\n    }\r\n}\r\nvoid serverIOLoop(shared(bool)* stopFlag) {}\r\nvoid write(T...)(lazy T args){}\r\n}}}\r\n\r\nCompiler output:\r\n{{{\r\n#!console\r\nfile.d: In member function ‘file.Server.member.__dgliteral1.__dgliteral4’:\r\nfile.d:9:0: internal compiler error: in expand_expr_real_1, at expr.c:8500\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <http:\/\/gcc.gnu.org\/bugs.html> for instructions.\r\n}}}\r\n\r\nI've verified that the ICE does not occur if:\r\n* the arguments to write aren't lazy\r\n* write isn't called from a catch block to write the exception\r\n* write isn't called from within a delegate\r\n* the delegate isn't created from a member function","assignee":null,"created_on":"2011-12-04T13:06:55.276337+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-02T03:14:06.578381+00:00","id":274},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"get rid of -hg option for setup-gcc.sh","reporter":"trass3r","component":null,"watchers":["trass3r","venix1","ibuclaw"],"content":"I suggest we get rid of the -hg option.\nIf hg is installed it should automatically extract the revision.\nThen you don't have to reconfigure every time just to get a gdc with a proper hg revision in the -v output (which is extremely helpful for bug reports)\n\nOf course one would have to invoke 'setup-gcc.sh --update' after each pull but I think that's a good idea anyway, isn't it?\nI guess one could also do this via some hook:\nhttp:\/\/www.selenic.com\/mercurial\/hgrc.5.html#hooks\n\n{{{\n#!sh\n# 0.5. Find out what GDC and DMD version this is\nif ! command -v hg &> \/dev\/null; then\n    # mercurial isn't installed\n    gdc_ver=`cat gcc\/d\/gdc-version`\nelse\n    gdc_ver=`hg --cwd gcc\/d tip --template \"hg r{rev}:{node|short}\"  2> \/dev\/null`\nfi\n}}}","assignee":"ibuclaw","created_on":"2011-07-14T23:00:59.327299+00:00","version":null,"edited_on":"2011-07-14T23:03:24.523395+00:00","milestone":null,"updated_on":"2012-01-02T03:33:14.013046+00:00","id":216},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"GDC align keyword broken","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"It's reasonable to expect that the following struct definitions should be identical.  However A.sizeof = 48 and B.sizeof = 64.\r\n\r\n**align from D specification**\r\n\r\n{{{align by itself sets it to the default, which matches the default member alignment of the companion C compiler.}}}\r\n\r\nSince **struct B** is not 48 bytes in size, **align:** is not restoring default alignment.\r\n\r\n{{{\r\n#!d\r\nstruct A\r\n{\r\n        char* _ptr;\r\n        int   _cnt;\r\n        char* _base;\r\n        int   _flag;\r\n        int   _file;\r\n        int   _charbuf;\r\n        int   _bufsiz;\r\n        char* __tmpnum;\r\n}\r\n\r\nstruct B\r\n{\r\n    align:\r\n        char* _ptr;\r\n        int   _cnt;\r\n        char* _base;\r\n        int   _flag;\r\n        int   _file;\r\n        int   _charbuf;\r\n        int   _bufsiz;\r\n        char* __tmpnum;\r\n}\r\n\r\nvoid main()\r\n{\r\n    printf(\"%d == %d\\n\", A.sizeof, B.sizeof);\r\n    assert(A.sizeof == B.sizeof);\r\n}\r\n\r\n\/* Output:\r\n   48 == 64\r\n *\/\r\n}}}","assignee":null,"created_on":"2012-01-29T06:56:12.864800+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-29T17:12:25.871837+00:00","id":311},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"merge in Friedman's manual","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\n\nI think it would be a good idea to include (updated) information from that manual in the wiki, it took me some time to find that place again.\n\nIt's the only source explaining GNU {{{__attribute__}}}s in GDC, extended assembler etc. \\\\\nThe Usage section is quite interesting and an updated status section would be great.","assignee":"ibuclaw","created_on":"2010-07-25T20:04:15.096085+00:00","version":null,"edited_on":"2010-07-25T20:08:41.716327+00:00","milestone":null,"updated_on":"2012-01-25T19:00:20.087272+00:00","id":45},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"[Debian testing 64 bits, GCC 4.4.5] parallelism.d:1: internal compiler error","reporter":"rbouqueau","component":null,"watchers":["rbouqueau","ibuclaw"],"content":"Build is broken under Debian 6.0.3 64 bits \/ testing (full log is attached):\r\n{{{\r\n\/home\/bouqueau\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/gdc -B\/home\/bouqueau\/gdc\/dev\/gcc-4.4.5\/objdir\/.\/gcc\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/bin\/ -B\/opt\/gdc\/x86_64-unknown-linux-gnu\/lib\/ -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/include -isystem \/opt\/gdc\/x86_64-unknown-linux-gnu\/sys-include -m32 -o std\/parallelism.o -Wall -g -frelease -O2 -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_GLibC -fversion=GC_Use_Data_Fixed -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I .\/x86_64-unknown-linux-gnu -m32 -c ..\/..\/..\/..\/libphobos\/std\/parallelism.d\r\n..\/..\/..\/..\/libphobos\/std\/parallelism.d:1: internal compiler error: in output_constant, at varasm.c:4603\r\n}}}\r\n\r\ngcc version:\r\n\r\n{{{\r\nbouqueau@debian:~\/gdc\/dev\/gcc-4.4.5\/objdir$ gcc -v\r\nUsing built-in specs.\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ..\/src\/configure -v --with-pkgversion='Debian 4.4.5-8' --with-bugurl=file:\/\/\/usr\/share\/doc\/gcc-4.4\/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=\/usr --program-suffix=-4.4 --enable-shared --enable-multiarch --enable-linker-build-id --with-system-zlib --libexecdir=\/usr\/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=\/usr\/include\/c++\/4.4 --libdir=\/usr\/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-objc-gc --with-arch-32=i586 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 4.4.5 (Debian 4.4.5-8)\r\n}}}","assignee":"ibuclaw","created_on":"2011-11-20T21:45:37.128172+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-25T18:52:30.869386+00:00","id":265},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Alignment of struct members wrong on ARM","reporter":"jpf","component":null,"watchers":["jpf","ibuclaw","debio"],"content":"GDC currently doesn't follow the ARM EABI specifications for datatype alignment. According to the AAPCS a 64bit data type must have a 8-byte alignment, but gdc produces 4-byte alignments.\r\n\r\nFor alignment details, see: http:\/\/infocenter.arm.com\/help\/topic\/com.arm.doc.ihi0042d\/IHI0042D_aapcs.pdf page 11\r\n\r\nhttp:\/\/wiki.debian.org\/ArmEabiPort#A64-bit_data_type_alignment\r\n\r\nTestcases attached, compile like this:\r\n\r\n{{{\r\n#!bash\r\n$ gdc stat.d -otest-d\r\n$ gcc stat.c -otest-c -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE\r\n\r\n$ .\/test-d                                                               \r\nstat64: 96 0\r\nstat64.st_dev: 8 0\r\nstat64.__pad1: 4 8\r\nstat64.__st_ino: 4 12\r\nstat64.st_mode: 4 16\r\nstat64.st_nlink: 4 20\r\nstat64.st_uid: 4 24\r\nstat64.st_gid: 4 28\r\nstat64.st_rdev: 8 32\r\nstat64.__pad2: 4 40\r\nstat64.st_size: 8 44\r\nstat64.st_blksize: 4 52\r\nstat64.st_blocks: 8 56\r\nstat64.st_atime: 4 64\r\nstat64.st_atimensec: 4 68\r\nstat64.st_mtime: 4 72\r\nstat64.st_mtimensec: 4 76\r\nstat64.st_ctime: 4 80\r\nstat64.st_ctimensec: 4 84\r\nstat64.st_ino64: 8 88\r\n\r\n$.\/test-c\r\nsizeof(stat64): 104 0\r\nsizeof(stat64.st_dev): 8 0\r\nsizeof(stat64.__pad1): 4 8\r\nsizeof(stat64.__st_ino): 4 12\r\nsizeof(stat64.st_mode): 4 16\r\nsizeof(stat64.st_nlink): 4 20\r\nsizeof(stat64.st_uid): 4 24\r\nsizeof(stat64.st_gid): 4 28\r\nsizeof(stat64.st_rdev): 8 32\r\nsizeof(stat64.__pad2): 4 40\r\nsizeof(stat64.st_size): 8 48\r\nsizeof(stat64.st_blksize): 4 56\r\nsizeof(stat64.st_blocks): 8 64\r\nsizeof(stat64.st_atim): 8 72\r\nsizeof(stat64.st_mtim): 8 80\r\nsizeof(stat64.st_ctim): 8 88\r\nsizeof(stat64.st_ino): 8 96\r\n}}}\r\n\r\nTested with gdc da6076ff5ade (frontend: 2.052, gcc-backend: 4.5.3) and the debian gcc (4.4.5)\r\n\r\n(Let's hope this is the cause for all ARM issues with gdc)","assignee":"ibuclaw","created_on":"2011-07-06T10:15:58.760985+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-25T18:51:36.137860+00:00","id":215},{"status":"invalid","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"environment corruption","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"I have very strange bug: if I set \"LDFLAGS=--sort-common,--\" and then do listdir for directory with 255 files or more, I don't see LDFLAGS any more. Possibly problems in gcc or in glibc. But i can't reproduce it in pure c or with dmd. It looks like some memory corruption and possibly have other case.\r\n\r\nCan some reproduce this?\r\n\r\n{{{\r\nimport std.file;\r\nimport std.process;\r\n\r\nvoid main() {\r\n\/\/putenv(std.string.toStringz(\"LDFLAGS=-Wl,--sort-common,--enable-new-dtags,--as-needed,--hash-style=gnu,-O1,-s\"));\r\nputenv(std.string.toStringz(\"LDFLAGS=--sort-common,--\"));\r\nsystem(\"set\");\r\nlistdir(\"\/usr\/bin\");\r\nsystem(\"set\");\r\n}\r\n\r\nextern (C): int putenv(immutable(char) *string);\r\n}}}\r\n\r\n\r\n\r\ngdc test.d && .\/a.out |grep LDFLAGS\r\n","assignee":null,"created_on":"2012-02-27T02:39:35.776555+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-27T22:38:19.137675+00:00","id":322},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: in shouldEmit, at d\/d-objfile.cc:525","reporter":"art_","component":null,"watchers":["art_","ibuclaw"],"content":"{{{\r\nstruct S {\r\n   void F() {\r\n      extern (C) void CF();\r\n      CF();\r\n   }\r\n}\r\n\r\nvoid main(string argv[]) {\r\n}\r\n}}}\r\n=>\r\n{{{\r\nnested_cfunc.d: In member function 'F':\r\nnested_cfunc.d:3:0: internal compiler error: in shouldEmit, at d\/d-objfile.cc:525\r\nPlease submit a full bug report,\r\n}}}\r\n\r\nMoving the extern C declaration outside F() seems to be enough to avoid the ICE.","assignee":null,"created_on":"2012-01-05T17:22:10.742073+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-05T20:36:22.459269+00:00","id":303},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Nested in\/out ICE.","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Included is the reduced testcase from the DMD testsuite and a description of why the problem occurs.\r\n\r\n* Comment out either contract and the ICE disappears.\r\n* Lookup get_static_chain in tree-nested.c.  Included is the excerpt were the problem lies.\r\n\r\n{{{\r\ninfo->context = '<function_decl 0x7ffff5a25900 testcontracts_out.B.foo'\r\n\r\ntarget_context = '<function_decl 0x7ffff5a25900 testcontracts_out.A.foo'\r\n\r\n  if (info->context == target_context) \/\/ This is false\r\n  { ... }\r\n  else\r\n  {\r\n  \/* ICE occurs here because info->chain_decl and info->outer are null. *\/\r\n    x = get_chain_decl (info); \/\/ ICE within.\r\n  ... }\r\n}}}\r\n* get_static_chain seems to expect B.foo to link to A.foo.  ","assignee":"ibuclaw","created_on":"2012-01-18T04:06:15.615282+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-21T02:00:43.949231+00:00","id":306},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"Hello world in MinGW Release. D2.058 x86-64","reporter":null,"component":null,"watchers":["venix1"],"content":"I can't compile hello world with the new release.\n\nCode\n{{{\nimport std.stdio;\n\nint main(string[] args)\n{\n    writeln(\"Hello, world!\");\n    return 0;\n}\n\nError message is\n\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x82): undefined reference to `_Dmodule_ref'\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x97): undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\\dmain.o: In function `dmain._D5dmain9__modinitFZv':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain.d:1: undefined reference to `_Dmodule_ref'\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/dmain.d:1: undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\/libgphobos2.a(object_.o): In function `object._D6object9__modinitFZv':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/object_.d:1: undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\/libgphobos2.a(object_.o):C:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/object_.d:1: more undefined references to `_Dmodule_ref' follow\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\/libgphobos2.a(minfo.o): Infunction `_D2rt5minfo14getModuleInfosFZAPS6object10ModuleInfo':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc4.6.1\/libphobos\/libdruntime\/rt\/minfo.d:206: undefined reference to `_minit'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\/libgphobos2.a(minfo.o): In function `rt.minfo._D2rt5minfo9__modinitFZv':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/minfo.d:1: undefined reference to `_Dmodule_ref'\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/minfo.d:1: undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/..\/lib\/libgphobos2.a(monitor_.o):\nIn function `rt.monitor_._D2rt8monitor_9__modinitFZv':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/monitor_.d:1: undefined reference to `_Dmodule_ref'\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/rt\/monitor_.d:1: undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/.\/lib\/libgphobos2.a(exception.o):\n In function `core.exception._D4core9exception9__modinitFZv':\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/core\/exception.d:1: undefined reference to `_Dmodule_ref'\nc:\/dev\/gdc64\/bin\/..\/lib\/gcc\/x86_64-w64-mingw32\/4.6.1\/..\/..\/..\/.\/lib\/libgphobos2.a(exception.o):\nC:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\\libdruntime\/..\/..\/..\/..\/gcc-4.6.1\/libphobos\/libdruntime\/core\/exception.d:1: more undefined references to `_Dmodule_ref' follow\ncollect2: ld returned 1 exit status\n}}}","assignee":"venix1","created_on":"2012-04-27T04:17:43.369454+00:00","version":null,"edited_on":"2012-04-27T18:59:00.694323+00:00","milestone":null,"updated_on":"2012-05-14T04:11:14.645806+00:00","id":338},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"segfault building libphobos with gdc-4.3 on freebsd-amd64 targets","reporter":"ibuclaw","component":null,"watchers":["ibuclaw"],"content":"gdc-4.3 ices  whilst building libphobos std\/socket.d\n\nThe output received:\n{{{\nsocket.d: In member function 'getHostByAddr':\nsocket.d:577: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <file:\/\/\/usr\/share\/doc\/gdc-4.3\/README.Bugs> for instructions.\n}}}\n\nThe command used:\n{{{\n\/home\/iain\/gdc-1.043.4.3.4\/build\/.\/gcc\/cc1d ..\/..\/..\/src\/libphobos\/std\/socket.d -quiet -dumpbase socket.d -mtune=generic -auxbase-strip std\/socket.o -g -O2 -frelease -fversion=GC_Use_Alloc_MMap -fversion=GC_Use_Stack_FreeBSD -fversion=GC_Use_Data_Fixed -iprefix \/home\/iain\/gdc-1.043.4.3.4\/build\/gcc\/..\/lib\/gcc\/x86_64-kfreebsd-gnu\/4.3.4\/ -isystem \/home\/iain\/gdc-1.043.4.3.4\/build\/.\/gcc\/include -isystem \/home\/iain\/gdc-1.043.4.3.4\/build\/.\/gcc\/include-fixed -nostdinc -I ..\/..\/..\/src\/libphobos -I ..\/..\/..\/src\/libphobos\/internal\/gc -I .\/x86_64-kfreebsd-gnu -o -\n}}}\n\nThe backtrace:\n{{{\nProgram received signal SIGSEGV, Segmentation fault.\nlookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:596\n596\t  while (table->high_bits != high_bits)\n(gdb) bt\n#0  lookup_page_table_entry (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:596\n#1  ggc_set_mark (p=0x2789) at ..\/..\/src\/gcc\/ggc-page.c:1284\n#2  0x00000000004a2b25 in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:50\n#3  0x000000000059f033 in gt_ggc_mx_tree_statement_list_node (x_p=<value optimized out>) at gtype-desc.c:506\n#4  0x00000000004a34da in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:434\n#5  0x000000000059f357 in gt_ggc_mx_tree_bb_info (x_p=<value optimized out>) at gtype-desc.c:190\n#6  0x00000000005a4fe5 in gt_ggc_mx_basic_block_def (x_p=<value optimized out>) at gtype-desc.c:746\n#7  0x00000000005a50a5 in gt_ggc_mx_tree_ann_d (x_p=<value optimized out>) at gtype-desc.c:657\n#8  0x00000000004a374d in gt_ggc_mx_lang_tree_node (x_p=<value optimized out>) at .\/gtype-d.h:361\n#9  0x000000000059f5a1 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:127\n#10 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#11 0x000000000059f585 in gt_ggc_mx_cgraph_edge (x_p=<value optimized out>) at gtype-desc.c:125\n#12 0x000000000059f409 in gt_ggc_mx_cgraph_node (x_p=<value optimized out>) at gtype-desc.c:151\n#13 0x000000000059f69e in gt_ggc_m_P11cgraph_node4htab (x_p=<value optimized out>) at gtype-desc.c:1863\n#14 0x000000000058fbdf in ggc_mark_roots () at ..\/..\/src\/gcc\/ggc-common.c:117\n#15 0x00000000004c1b79 in ggc_collect () at ..\/..\/src\/gcc\/ggc-page.c:1906\n#16 0x00000000005d737d in execute_todo (flags=132099) at ..\/..\/src\/gcc\/passes.c:1013\n#17 0x00000000005d754a in execute_one_pass (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1145\n#18 0x00000000005d7690 in execute_pass_list (pass=0xe3de80) at ..\/..\/src\/gcc\/passes.c:1176\n#19 0x00000000005d76a5 in execute_pass_list (pass=0xe39400) at ..\/..\/src\/gcc\/passes.c:1177\n#20 0x000000000068c934 in tree_rest_of_compilation (fndecl=0x801f84680) at ..\/..\/src\/gcc\/tree-optimize.c:404\n#21 0x00000000007a0b02 in cgraph_expand_function (node=0x801f94d00) at ..\/..\/src\/gcc\/cgraphunit.c:1166\n#22 0x00000000007a25e4 in cgraph_expand_all_functions () at ..\/..\/src\/gcc\/cgraphunit.c:1229\n#23 cgraph_optimize () at ..\/..\/src\/gcc\/cgraphunit.c:1436\n#24 0x00000000004896ee in d_write_global_declarations () at ..\/..\/src\/gcc\/d\/d-lang.cc:737\n#25 0x000000000065200c in compile_file (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:1055\n#26 do_compile (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2244\n#27 toplev_main (argc=<value optimized out>, argv=0x0) at ..\/..\/src\/gcc\/toplev.c:2276\n#28 0x0000000801c60f29 in __libc_start_main () from \/lib\/libc.so.0.1\n#29 0x0000000000404d2c in _start ()\n}}}","assignee":null,"created_on":"2010-03-14T10:57:36.436972+00:00","version":null,"edited_on":"2010-03-14T10:59:39.590608+00:00","milestone":null,"updated_on":"2012-01-21T12:23:17.076629+00:00","id":11},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC-4.5.0 - ICE(tree-sra.c:1405): when building Phobos","reporter":"Andrej08","component":null,"watchers":["Andrej08","ibuclaw"],"content":"GDC changeset 475, using GCC 4.5.0 with\r\napplied TDM-GCC 4.5.0 patches, with built gmp, mpc and mpftr. The\r\nWindows build documentation needs an update (I'll fix it myself given\r\nthe chance).\r\n\r\nThe log file is in the attachment. If you need anything else let me know.","assignee":"ibuclaw","created_on":"2011-02-21T01:03:29.403053+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-21T12:27:36.564423+00:00","id":156},{"status":"resolved","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"ABI: extern(D) calling convention should be reverse args","reporter":"dsimcha","component":null,"watchers":["dsimcha","ibuclaw"],"content":"The following code (isolated from std.algorithm) produces off-by-one answers with GDC revision 555 compiled against GCC 4.5.2, regardless of how any switches.  It's probably related to a bug in how the comma operator is handled at the bottom of this snippet ({{{return reduce(r.front, (r.popFront(), r)); }}}), since writing this piece of code slightly differently makes this bug go away.\r\n\r\n{{{\r\nimport std.stdio : writeln;\r\n\r\nuint addInts(uint a, uint b) { return a + b; }\r\n\r\nvoid main() {\r\n    uint[] numbers = new uint[1_000];\r\n    uint ans;\r\n\r\n    foreach(i; 0..numbers.length) {\r\n        numbers[i] = cast(uint) i;\r\n        ans += i;\r\n    }\r\n\r\n    auto ans2 = reduce!addInts(numbers);\r\n    writeln(ans, ' ', ans2);\r\n}\r\n\r\nref T front(T)(T[] arr) @property { return arr[0]; }\r\nvoid popFront(T)(ref T[] arr) { arr = arr[1..$]; }\r\nbool empty(T)(const T[] arr) @property { return arr.length == 0; }\r\n  \r\ntemplate reduce(fun...)\r\n{\r\n    auto reduce(Args...)(Args args)\r\n    {\r\n        static if (Args.length == 2)\r\n        {\r\n            alias args[0] seed;\r\n            alias args[1] r;\r\n            Args[0] result = seed;\r\n            for (; !r.empty; r.popFront)\r\n            {\r\n                 result = fun[0](result, r.front);\r\n            }\r\n            return result;\r\n        }\r\n        else\r\n        {\r\n            alias args[0] r;\r\n            return reduce(r.front, (r.popFront(), r));\r\n        }\r\n    }\r\n}\r\n}}}\r\n\r\n","assignee":"ibuclaw","created_on":"2011-04-26T23:37:21.977518+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-21T16:16:23.026006+00:00","id":202},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: tree check: in build_function_type","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r","jpf"],"content":"{{{\r\n#!d\r\ntemplate curry(alias fun, alias arg)\r\n{\r\n        auto curry(Ts args2)\r\n        {\r\n                return fun(arg, args2);\r\n        }\r\n}\r\n\r\nunittest\r\n{\r\n    static struct TCallable\r\n    {\r\n        auto opCall(A, )(A a, B b)\r\n        {\r\n            return a + b;\r\n        }\r\n    }\r\n    TCallable tcallable;\r\n    static assert(!is(typeof(curry!(tcallable, \"5\"))));\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -funittest -g -c functional.d\r\nfunctional.d: In function '__unittest1':\r\nfunctional.d:11:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in build_function_type, at tree.c:7435\r\n}}}","assignee":"ibuclaw","created_on":"2012-02-21T21:57:24.209422+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-26T16:52:43.003644+00:00","id":317},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Inconsistent mangling of extern(C++) when it comes to shared.","reporter":"deadalnix","component":null,"watchers":["ibuclaw"],"content":"As an example is better than a long discourse :\n{{{\nmodule fail;\n\nextern(C++) void foo1(void*);\nextern(C++) void bar1(shared void*);\n\npragma(msg, foo1.mangleof);\npragma(msg, bar1.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, this make sense.\n\nextern(C++) void foo2(void function(void*));\nextern(C++) void bar2(void function(shared void*));\n\npragma(msg, foo2.mangleof);\npragma(msg, bar2.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, this make sense.\n\nextern(C++) void foo3(void function(void*), void*);\nextern(C++) void bar3(void function(shared void*), void*);\n\npragma(msg, foo3.mangleof);\npragma(msg, bar3.mangleof); \/\/ shared generate a different mangling here.\n\nextern(C++) void foo4(void function(void*), shared void*);\nextern(C++) void bar4(void function(shared void*), shared void*);\n\npragma(msg, foo4.mangleof); \/\/ Same mangling as bar3.\npragma(msg, bar4.mangleof); \/\/ back to correct mangling (the one expected by g++).\n\nextern(C++) void foo5(void* function(void*), void*);\nextern(C++) void bar5(void* function(shared void*), void*);\n\npragma(msg, foo5.mangleof);\npragma(msg, bar5.mangleof); \/\/ shared generate a different mangling here.\n\nextern(C++) void foo6(void* function(void*), shared void*);\nextern(C++) void bar6(void* function(shared void*), shared void*);\n\npragma(msg, foo6.mangleof); \/\/ shared generate a different mangling here.\npragma(msg, bar6.mangleof); \/\/ function pointer mangled as in bar5, but second parameter get a \"0\" in the mangling that none of the mangling above had.\n}}}\n\nGive the following output :\n{{{\n_Z4foo1Pv\n_Z4bar1Pv\n_Z4foo2PFvPvE\n_Z4bar2PFvPvE\n_Z4foo3PFvPvES_\n_Z4bar3PFvPvEPv\n_Z4foo4PFvPvEPv\n_Z4bar4PFvPvES_\n_Z4foo5PFPvS_ES_\n_Z4bar5PFPvPvES_\n_Z4foo6PFPvS_EPv\n_Z4bar6PFPvPvES0_\n}}}\n\nComment describe what is inconsistent (or what require something on C++ side that I'm not aware of). None is generating any warning, but many will fail to link. GDC and G++ are used here, both in 4.6.2 version (and frontend v2.055, the last supported by GDC) on linux amd64. ","assignee":null,"created_on":"2011-11-28T11:29:04.442936+00:00","version":null,"edited_on":"2011-11-30T20:56:57.095435+00:00","milestone":null,"updated_on":"2012-01-22T18:21:28.872335+00:00","id":267},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Throwing exception in ~this causes SEGV in runtime.","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"{{{\r\n#!d\r\n\r\nclass C\r\n{\r\npublic:\r\n    this()\r\n    {\r\n    }\r\n\r\n    ~this()\r\n    {\r\n        writeln(this); \/\/ crash\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    C c = new C;\r\n}\r\n}}}\r\n\r\nThis does not crash the executable with DMD. Putting an assert in the destructor also it crash, not sure if that's a bug though: http:\/\/d.puremagic.com\/issues\/post_bug.cgi","assignee":null,"created_on":"2012-01-22T18:45:17.963706+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-01-29T18:40:28.223266+00:00","id":308},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: segfault in std.parallelism unittest","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r","jpf"],"content":"{{{\r\n#!d\r\nimport std.range;\r\nimport std.stdio;\r\nfinal class TaskPool\r\n{\r\n    ParallelForeach!R parallel(R)(R range)\r\n    {\r\n            return parallel(range, );\r\n    }\r\n    auto asyncBuf(S)(S source, size_t bufSize = 100)\r\n    {\r\n        static final class AsyncBuf\r\n        {\r\n            this(S source, size_t bufSize, TaskPool pool) {}\r\n\r\n        }\r\n        return new AsyncBuf(source, bufSize, this);\r\n    }\r\n}\r\n\r\n@property TaskPool taskPool()\r\n{\r\n    __gshared static TaskPool pool;\r\n    return pool;\r\n}\r\n\r\nParallelForeach!R parallel(R)(R range) {\r\n    return taskPool.parallel(range);\r\n}\r\n\r\nprivate struct ParallelForeach(R)\r\n{\r\n    alias ElementType!R E;\r\n\r\n    int opApply(scope int delegate(ref E) )\r\n    {\r\n        return 0;\r\n    }\r\n}\r\n\r\nunittest\r\n{\r\n    auto file = File();\r\n    void next()\r\n    {\r\n        file.readln;\r\n    }\r\n\r\n    auto asyncReader = taskPool.asyncBuf(&next, );\r\n\r\n    \/\/ Test exception handling.\r\n    static void parallelForeachThrow()\r\n    {\r\n        foreach(elem; parallel(iota(10)))\r\n            throw new Exception(\"\");\r\n    }\r\n}\r\n}}}\r\n{{{\r\n$ gdc -funittest -c parallelism.d\r\nparallelism.d: In function 'parallelForeachThrow':\r\nparallelism.d:54:0: internal compiler error: Segmentation fault\r\n}}}","assignee":"ibuclaw","created_on":"2012-02-21T22:34:49.599781+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-02-27T22:10:02.173465+00:00","id":319},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Link error with cross-module template call to AA.get()","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"abc.d:\r\n{{{\r\nint[string] map;\r\n    void func(bool B)(string x) {\r\n        map.get(x, 0);\r\n    }\r\n}}}\r\n\r\ntest.d:\r\n{{{\r\nimport std.stdio;\r\nimport abc;\r\nvoid main() {\r\n    func!true(\"abc\");\r\n}\r\n}}}\r\n\r\nResult:\r\n{{{\r\n\/tmp\/ccprmf4H.o: In function `_D3abc12__T4funcVb1Z4funcFAyaZv':\r\ntest.d:(.text._D3abc12__T4funcVb1Z4funcFAyaZv[_D3abc12__T4funcVb1Z4funcFAyaZv]+0x54): undefined reference to `_D6object28__T16AssociativeArrayTAyaTiZ16AssociativeArray3getMFAyaLiZi'\r\ncollect2: ld returned 1 exit status\r\n}}}\r\n\r\nGDC version:\r\n{{{\r\ngdc-4.6 (Debian 4.6.2-4) 4.6.2\r\n}}}","assignee":"ibuclaw","created_on":"2012-02-16T00:01:45.888722+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-01T11:10:08.745898+00:00","id":313},{"status":"on hold","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Issue with TLS symbol ordering","reporter":"venix1","component":null,"watchers":["ibuclaw","venix1"],"content":"Using gcc 4.6.1 and <<changeset d89c3b7d495a>>, D will not correctly delay symbol output to ensure that _tlsstart comes at the beginning.  \r\n\r\nRunning the code below generates a negative number for the offset of **barfoo - _tlsstart**. \r\n{{{\r\nextern (C)\r\n{\r\n    int printf(char*,...);\r\n    extern int _tlsend;\r\n    extern int _tlsstart;\r\n}\r\nint foobar;\r\nint shutdown;\r\nint barfoo = 3;\r\n\r\n\r\n\r\nvoid main()\r\n{\r\n\r\n    printf(cast(char*)\"%p\\n\", &_tlsstart);\r\n    printf(cast(char*)\"%p\\n\", &barfoo);\r\n    printf(cast(char*)\"%p\\n\", &foobar);\r\n    printf(cast(char*)\"%p\\n\", &_tlsend);\r\n    \r\n    printf(cast(char*)\"\\n%d\\n\", &barfoo - &_tlsstart);\r\n    \r\n    printf(cast(char*)\"%d %d\\n\", barfoo, foobar);\r\n    barfoo = 4;\r\n    foobar = 5;\r\n    printf(cast(char*)\"%d %d\\n\", barfoo, foobar);\r\n}\r\n}}}","assignee":null,"created_on":"2011-11-30T18:33:33.846425+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-03-25T14:01:16.550008+00:00","id":270},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"std.socket","reporter":null,"component":null,"watchers":[],"content":"I'm using \"gcc-4.6.1-tdm-1-gdc-9841510e8ba6-20120109.7z\" with Windows (copied into a MinGW installation, is that okay?).\r\nWhen I'm trying to import std.socket, I'm missing libws2_32, and have to include it manually. I could understand this, but when I'm trying to include it with \"-Xlinker -lws2_32\", it doesn't work either, because this command has to go after -lgphobos2, or it won't work. So I'd have to link my project manually, which would be rather tedious.\r\nIt would be very very nice if this could be fixed, since without GDC, D isn't production ready in Windows for me yet. (Great project btw.)","assignee":null,"created_on":"2012-03-08T10:02:49.596415+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-03-09T12:27:31.371858+00:00","id":325},{"status":"on hold","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: __traits(allMembers) and CTFE","reporter":"Ingrater","component":null,"watchers":["Ingrater","ibuclaw"],"content":"Reproduced with: gdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)\r\n\r\ngdc repro.d\r\n\r\nCompiler output is:\r\n\r\nAssertion failed!\r\n\r\nProgram: f:\\mingw64\\bin\\..\\libexec\\gcc\\x86_64-w64-mingw32\\4.6.1\\cc1d.exe\r\nFile: ..\/..\/gcc-4.6.1\/gcc\/d\/dmd2\/dsymbol.c, Line 1052\r\n\r\nExpression: members\r\n\r\nThis application has requested the Runtime to terminate it in an unusual way.\r\nPlease contact the application's support team for more information.\r\ncc1d.exe: internal compiler error: Aborted\r\n\r\nThis stopps me from using gdc since about a year. I now managed to reduce this bug. Thanks to DustMite.","assignee":null,"created_on":"2012-03-15T19:10:27.529772+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-04-17T19:00:08.773742+00:00","id":326},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"The windows toolchain is missing dll's","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw"],"content":"I am trying to use the most recent windows toolchain, but there are a bunch of dll's missing, and when I try and source them, I can only seem to find the incorrect versions.\r\nSuggest: include the appropriate versions of dependant dll's with gdc.exe\r\n\r\nMissing so far: libgmp-3.dll, libppl_c-4.dll possibly more...","assignee":null,"created_on":"2012-03-16T15:04:29.248616+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-03-24T21:59:47.719056+00:00","id":327},{"status":"resolved","priority":"blocker","kind":"bug","content_updated_on":null,"voters":[],"title":"Weird error","reporter":null,"component":null,"watchers":["venix1","ibuclaw"],"content":"Source\/Emulator\/Parts\/Sound\/SN76489.d:1:0: internal compiler error: in toCtype, at d\/d-glue.cc:3589\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\nBuilding Debug\\DEmu.exe failed!\r\nDetails saved as \"file:\/\/D:\\Projects\\SuperEmu\\Debug\\DEmu.buildlog.html\"\r\n\r\n\r\nI get this for no good reason... I have tried to isolate the problem in the file it's complaining about by systematically gutting the file until nothing is left... When there was nothing left, the problem still persisted.\r\n\r\nThe source is here:\r\nhttp:\/\/code.google.com\/p\/super-emu\/source\/browse\/\r\n","assignee":null,"created_on":"2012-04-02T19:44:46.454646+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-04-23T22:02:51.286887+00:00","id":329},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Mingw 64 build error - Recursive alias","reporter":"Varriount","component":null,"watchers":["Varriount"],"content":"Hello. I have been trying to build gdc with Mingw-w64, and come up against what appears to be a previous bug, cited in #151 , \r\n{{{\r\n\/c\/crossdev\/src\/gcc-4.6.0\/build\/.\/gcc\/gdc -B\/c\/crossdev\/src\/gcc-4.6.0\/build\/.\/gc\r\nc\/ -L\/sysroot64\/x86_64-w64-mingw32\/lib -L\/sysroot64\/mingw\/lib -isystem \/sysroot6\r\n4\/x86_64-w64-mingw32\/include -isystem \/sysroot64\/mingw\/include -B\/sysroot64\/x86_\r\n64-w64-mingw32\/bin\/ -B\/sysroot64\/x86_64-w64-mingw32\/lib\/ -isystem \/sysroot64\/x86\r\n_64-w64-mingw32\/include -isystem \/sysroot64\/x86_64-w64-mingw32\/sys-include -m32\r\n-Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/..\/libphobos -I\r\n .\/x86_64-w64-mingw32 -m32 -fintfc-file=import\/core\/sys\/posix\/sys\/un.di -fsyntax\r\n-only ..\/..\/..\/..\/libphobos\/core\/sys\/posix\/sys\/un.d\r\n..\/..\/..\/..\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: import __anonymous sa_f\r\namily_t not found\r\n..\/..\/..\/..\/libphobos\/core\/sys\/posix\/sys\/un.d:17: Error: alias core.sys.posix.sy\r\ns.un.sa_family_t recursive alias declaration\r\nmake[6]: *** [import\/core\/sys\/posix\/sys\/un.di] Error 1\r\nmake[6]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build\/x86_64-w64-mingw32\/3\r\n2\/libphobos'\r\nmake[5]: *** [all] Error 2\r\nmake[5]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build\/x86_64-w64-mingw32\/3\r\n2\/libphobos'\r\nmake[4]: *** [multi-do] Error 1\r\nmake[4]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build\/x86_64-w64-mingw32\/l\r\nibphobos'\r\nmake[3]: *** [all-multi] Error 2\r\nmake[3]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build\/x86_64-w64-mingw32\/l\r\nibphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build\/x86_64-w64-mingw32\/l\r\nibphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/c\/crossdev\/src\/gcc-4.6.0\/build'\r\nmake: *** [all] Error 2\r\n}}}\r\n\r\nThe code which fixed this issue has disapeared, starting from what seems to be revision [[https:\/\/bitbucket.org\/goshawk\/gdc\/changeset\/04b8a399ddeb|04b8a399ddeb]]\r\nOddly enough, I haven't found a particular revision that actually deleted the original code (Though, I'm new to mercurial, so maybe I missed it)\r\nI am running Windows 7, 64 bit, and am using the 64 bit version of the latest TMD Compiler Suite. All other gcc libraries, such as gmp, have all been successfully built. Attached is whatever output files I thought might be useful.\r\n\r\n","assignee":null,"created_on":"2012-04-27T01:27:54.697412+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-04-27T03:09:06.758866+00:00","id":337},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Windows dll implicit cast error","reporter":"Varriount","component":null,"watchers":["Varriount"],"content":"Hey again. I fixed the previous bug from the last Issue posted, however a new one popped up and bit me. \r\n\r\n{{{\r\n\/c\/crossdev\/gcc-build\/.\/gcc\/gdc -B\/c\/crossdev\/gcc-build\/.\/gcc\/ -L\/sysroot64\/x86_\r\n64-w64-mingw32\/lib -L\/sysroot64\/mingw\/lib -isystem \/sysroot64\/x86_64-w64-mingw32\r\n\/include -isystem \/sysroot64\/mingw\/include -B\/sysroot64\/x86_64-w64-mingw32\/bin\/\r\n-B\/sysroot64\/x86_64-w64-mingw32\/lib\/ -isystem \/sysroot64\/x86_64-w64-mingw32\/incl\r\nude -isystem \/sysroot64\/x86_64-w64-mingw32\/sys-include -o core\/sys\/windows\/dll.o\r\n -Wall -g -frelease -O2  -nostdinc -pipe -fdeprecated -I ..\/..\/..\/src\/gcc-4.6.3\/\r\nlibphobos -I .\/x86_64-w64-mingw32  -c ..\/..\/..\/src\/gcc-4.6.3\/libphobos\/core\/sys\/\r\nwindows\/dll.d\r\n..\/..\/..\/src\/gcc-4.6.3\/libphobos\/core\/sys\/windows\/dll.d:194: Error: cannot impli\r\ncitly convert expression ((tlsend - tlsstart) \/ 1L) of type long to int\r\n..\/..\/..\/src\/gcc-4.6.3\/libphobos\/core\/sys\/windows\/dll.d:203: Error: cannot impli\r\ncitly convert expression (cast(ulong)(tlsindex + 1) * 8LU) of type ulong to uint\r\n\r\nmake[3]: *** [core\/sys\/windows\/dll.o] Error 1\r\nmake[3]: Leaving directory `\/c\/crossdev\/gcc-build\/x86_64-w64-mingw32\/libphobos'\r\nmake[2]: *** [all] Error 2\r\nmake[2]: Leaving directory `\/c\/crossdev\/gcc-build\/x86_64-w64-mingw32\/libphobos'\r\nmake[1]: *** [all-target-libphobos] Error 2\r\nmake[1]: Leaving directory `\/c\/crossdev\/gcc-build'\r\nmake: *** [all] Error 2\r\n}}}\r\n\r\nAttached are the logs, in case you need them. \r\nRunning Windows 7 64 bit, TMD Compiler, Mingw-w64.\r\n\r\n(Sorry about posting another issue)","assignee":null,"created_on":"2012-04-27T12:44:03.208635+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-04-27T15:12:33.135023+00:00","id":339},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"associative array remove method should return bool","reporter":"lomereiter","component":null,"watchers":["lomereiter","ibuclaw"],"content":"According to TDPL, \"the remove method returns a bool that is true if the deleted key was in the associative array, or false otherwise.\" \r\n\r\nIn GDC, the method seems to return void.","assignee":null,"created_on":"2012-07-02T15:46:07.913330+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-03T17:13:45.910664+00:00","id":356},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Compiling gdc with gcc 4.7.0 base fails","reporter":"Calrama","component":null,"watchers":["Calrama"],"content":"Building the newest git version with gcc 4.7.0 fails with this error:\n\n{{{\n#!make\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphobos'\nmake[2]: *** [install-recursive] Error 1\nmake[2]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphobos'\nmake[1]: *** [install-target-libphobos] Error 2\nmake[1]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build'\nmake: *** [install] Error 2\n}}}\n\nI also tried configuring with --with-system-zlib, same result.\n\n\nThe config\/build-bootstrap.log files are from when I tried compiling without --disable-bootstrap, there I get another error:\n\n{{{\n#!make\n\n\/home\/cal\/gdc-git\/src\/gcc-build\/.\/prev-gcc\/g++ -B\/home\/cal\/gdc-git\/src\/gcc-build\/.\/prev-gcc\/ -B\/usr\/i686-pc-linux-gnu\/bin\/ -nostdinc++ -B\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-pc-linux-gnu\/\nlibstdc++-v3\/src\/.libs -B\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-pc-linux-gnu\/libstdc++-v3\/libsupc++\/.libs -I\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-pc-linux-gnu\/libstdc++-v3\/include\/i686-\npc-linux-gnu -I\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-pc-linux-gnu\/libstdc++-v3\/include -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/libstdc++-v3\/libsupc++ -L\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-\npc-linux-gnu\/libstdc++-v3\/src\/.libs -L\/home\/cal\/gdc-git\/src\/gcc-build\/prev-i686-pc-linux-gnu\/libstdc++-v3\/libsupc++\/.libs -c   -g -O2 -gtoggle -DIN_GCC   -fno-exceptions -fno-rtti -W -Wall -Wn\no-narrowing -Wwrite-strings -Wcast-qual -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I\/home\/cal\/gdc-git\/src\/gcc-4\n.7.0\/gcc -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/. -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/..\/include -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/..\/libcpp\/include  -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\n\/..\/libdecnumber -I\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/..\/libdecnumber\/bid -I..\/libdecnumber    \\\n        \/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/config\/i386\/i386.c -o i386.o\n\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/config\/i386\/i386.c:35362:1: error: uninitialized const member 'attribute_spec::affects_type_identity'\n\/home\/cal\/gdc-git\/src\/gcc-4.7.0\/gcc\/config\/i386\/i386.c:35362:1: warning: missing initializer for member 'attribute_spec::affects_type_identity' [-Wmissing-field-initializers]\nmake[3]: *** [i386.o] Error 1\nmake[3]: Leaving directory `\/home\/cal\/gdc-git\/src\/gcc-build\/gcc'\nmake[2]: *** [all-stage2-gcc] Error 2\nmake[2]: Leaving directory `\/home\/cal\/gdc-git\/src\/gcc-build'\nmake[1]: *** [stage2-bubble] Error 2\nmake[1]: Leaving directory `\/home\/cal\/gdc-git\/src\/gcc-build'\nmake: *** [all] Error 2 \n}}}","assignee":null,"created_on":"2012-05-24T16:13:40.564987+00:00","version":null,"edited_on":"2012-05-25T09:29:25.004642+00:00","milestone":null,"updated_on":"2012-05-25T15:53:17.180278+00:00","id":343},{"status":"resolved","priority":"trivial","kind":"enhancement","content_updated_on":null,"voters":[],"title":"gcc\/d\/setup-gcc.sh misses version check for gcc-4.8.0","reporter":"Calrama","component":null,"watchers":["Calrama"],"content":"As the title says, the script reports unknown version even though the patches for 4.8.0 are already in \/patches and work.","assignee":null,"created_on":"2012-05-28T18:41:59.186338+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-05-30T01:04:06.583635+00:00","id":345},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Compilation with latest trunk fails","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"The first error I came across when compiling HG head with GCC trunk was an issue with option help text definitions in lang.opt.  These either need to match what is in GCC trunk or be removed.\r\n\r\nThe second issue I came across was the renaming of cgraph_finalize_compilation_unit to finalize_compilation_unit\r\n\r\nAfter that, there was another cgraph function that was just removed instead of being replaced by something.  I didn't get further than this.","assignee":null,"created_on":"2012-05-25T18:22:19.401400+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-05-29T11:44:59.101783+00:00","id":344},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D2, std.stdio and MinGW","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"Right now GDC doesn't have an implementation of stdio for mingw.  I've managed to compile a working copy of stdio.d.  I wouldn't consider it quality code ready for inclusion into D without testing by an IO heavy application.\n\n * **flockfile** and **funlockfile** is just a stub.\n * **GENERIC_IO** declarations are mainly used with some windows things borrowed from **DIGITALMARS_IO**.\n\nEdit: Since bitbucket doesn't have facility to deprecate patches.  All relevant patches will be post fixed with VX.  The higher X, should be the newer\/better version.","assignee":"venix1","created_on":"2011-03-06T04:15:11.354133+00:00","version":null,"edited_on":"2011-03-26T00:14:35.667417+00:00","milestone":null,"updated_on":"2012-06-29T22:02:51.448539+00:00","id":160},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"core.thread.Fiber doesn't work","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","venix1"],"content":"void coroutine()\r\n{\r\n\tassert(false, \"hooray! I'm here!\");\r\n}\r\n\r\nFiber f = new Fiber( &coroutine );\r\nf.call();\r\n\r\nThis crashes with a null pointer within f.call(), but before it enters coroutine().\r\n\r\nI think it returns null from core.thread.thread_findByAddr.","assignee":"venix1","created_on":"2012-05-21T12:55:28.983187+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-12T17:29:32.136022+00:00","id":342},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Strange warning","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw"],"content":"gdc (tdm64-1) 4.6.1 20110627 (gdc hg r790:7e1a98da2769(default), using dmd 1.072\/2.057)\r\n{{{\r\nmodule testmodule;\r\nimport core.vararg;\r\n\r\nextern(C) void Func(void *pRetPtr, ...)\r\n{\r\n\tva_list va;\r\n\tva_start(va, pRetPtr);\r\n\r\n\tint x = va_arg!int(va);\r\n\tfloat y = va_arg!float(va);\r\n\r\n\tva_end(va);\r\n\r\n\/\/\t*cast(int*)pRetPtr = TestFunction(x, y);\r\n}\r\n}}}\r\n\r\n{{{\r\nwarning: second parameter of 'va_start' not last named argument [enabled by default]\r\n}}}\r\nI beg to differ...","assignee":"ibuclaw","created_on":"2012-04-05T08:22:52.930315+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-27T11:25:55.044232+00:00","id":330},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"Template undefined references","reporter":"Calrama","component":null,"watchers":["Calrama","ibuclaw"],"content":"Using goldie (and semtwist because it depends on it) leads to the following:\n\n{{{\ngdc  -omain main.d  semitwist\/refbox.d semitwist\/treeout.d semitwist\/cmdlineparser.d  semitwist\/util\/array.d semitwist\/util\/text.d semitwist\/util\/container.d semitwist\/util\/io.d semitwist\/util\/all.d semitwist\/util\/os.d semitwist\/util\/mixins.d semitwist\/util\/ctfe.d semitwist\/util\/process.d semitwist\/util\/reflect.d semitwist\/util\/ver.d semitwist\/util\/unittests.d semitwist\/util\/functional.d  goldie\/base.d goldie\/lexer.d goldie\/exception.d goldie\/all.d goldie\/lang.d goldie\/parser.d goldie\/file.d goldie\/token.d goldie\/langHelper.d goldie\/ver.d  goldie\/grmc\/ast.d goldie\/grmc\/fsm.d goldie\/grmc\/gendfa.d goldie\/grmc\/genlalr.d goldie\/grmc\/process.d    goldie\/langs\/grm\/lexer.d goldie\/langs\/grm\/all.d goldie\/langs\/grm\/lang.d goldie\/langs\/grm\/parser.d goldie\/langs\/grm\/token.d goldie\/langs\/grm\/langHelper.d tools\/util.d\n\/tmp\/ccqs3uDn.o: In function `_D9semitwist4util4text22__T12unindentImplTAyaZ12unindentImpl\nFAAyaAyaZAAya119__T6reduceS104_D9semitwist4util4text22__\nT12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya17shorterAnd\nNonNullMFAyaAyaZAyaZ16__T6reduceTAAyaZ6reduceMFAAyaZAya':\nmain.d:(.text+0x7f24): undefined reference to `_D9semitwist4util4text22__T12unindentImplTAyaZ12unindentImpl\nFAAyaAyaZAAya119__T6reduceS104_D9semitwist4util4text22__\nT12unindentImplTAyaZ12unindentImplFAAyaAyaZAAya17shorterAnd\nNonNullMFAyaAyaZAyaZ20__T6reduceTAyaTAAyaZ6reduceMFAyaAAyaZAya'\ncollect2: error: ld returned 1 exit status\nmake: *** [all] Error 1\n}}}\n\nUsing dmd it compiles and links fine.\nI attached a zip with as much of the code files removed that I thought could be removed easily. \"make\" will compile and link with gdc and when linking throw the above error, \"make dmd\" will compile and link with dmd fine.\nI have not encountered this issue anywhere else other than with semitwist\/goldie so it's not a bug that should hinder many people as of now.","assignee":"ibuclaw","created_on":"2012-06-26T06:57:07.814916+00:00","version":null,"edited_on":"2012-06-26T06:58:07.447300+00:00","milestone":null,"updated_on":"2012-07-01T10:55:51.329979+00:00","id":354},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"in\/out contract overrides cause \"cannot get frame pointer\" error","reporter":"WebDrake","component":null,"watchers":["ibuclaw","WebDrake"],"content":"This problem was observed with gdc 4.6.3 on Ubuntu 12.04.\r\n\r\nCompilation fails when both an overridden class method and the one overriding it have in\/out contracts.  The compiler returns the following error for the attached minimal example:\r\n\r\n    inout.d:16: Error: function inout.B.foo cannot get frame pointer to __require\r\n\r\nCompilation succeeds only if the -release flag is used, which skips the assertions.  DMD compiles the same code without problems.","assignee":null,"created_on":"2012-04-18T11:56:03.219774+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-27T11:24:47.044331+00:00","id":333},{"status":"resolved","priority":"blocker","kind":"task","content_updated_on":null,"voters":[],"title":"GDC update","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw"],"content":"Hey guys, I just wanted to put a formal bug about this.\r\nSomewhere to put any discussion on the topic. ETA's, etc.. that sort of thing.\r\n\r\nI'm basically blocked until this happens. There are so many bugs in 2.057 that are fixed in 2.059, some are basically show stoppers, and they're eating way more time than I can reasonably allocate :\/","assignee":null,"created_on":"2012-04-23T11:47:33.981726+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-27T11:25:23.807798+00:00","id":336},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"LTO: undefined reference to `___t.0.1713.2134.2121","reporter":null,"component":null,"watchers":["Calrama","art_","ibuclaw","venix1"],"content":"{{{\r\n\r\ninterface I {\r\n   void m();\r\n}\r\nclass C : I {\r\n   void m() {}\r\n}\r\n\r\nvoid main(string[] args) {\r\n}\r\n}}}\r\n$ gdc -O2 -flto lto01.d  -o lto01\r\n\r\n\/tmp\/cccld7WJ.ltrans0.ltrans.o:(.data+0x100): undefined reference to `___t.0.1713.2134.2121'\r\ncollect2: ld returned 1 exit status\r\n\r\n\/\/hg gdc: gcc version 4.6.3 20111204 (prerelease gdc 0.30, using dmd 2.056 Target: i686-pc-linux-gnu","assignee":"ibuclaw","created_on":"2011-12-10T20:08:07.387434+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-26T06:48:44.478444+00:00","id":284},{"status":"resolved","priority":"trivial","kind":"bug","content_updated_on":null,"voters":[],"title":"patch-gcc-4.8.x  (and thus setup-gcc.sh) broken","reporter":"Calrama","component":null,"watchers":["Calrama"],"content":"This commit\n\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/5e0a5219aadfa9a8a1e5607e8c49edb326f144e2\n\nadds another level (\"xyz\/\") to the beginning of each entry in the patch file patch-gcc-4.8.x which results in the patch call in setup-gcc.sh\nfailing, because the patch cannot find the file to patch.\n\nAttached patch fixes this by removing the leading \"xyz\/\" added in the commit mentioned above.\n\n{{{\ndiff --git a\/gcc\/d\/patches\/patch-gcc-4.8.x b\/gcc\/d\/patches\/patch-gcc-4.8.x\nindex 0968e32..0787e19 100644\n--- a\/gcc\/d\/patches\/patch-gcc-4.8.x\n+++ b\/gcc\/d\/patches\/patch-gcc-4.8.x\n@@ -1,5 +1,5 @@\n---- gcc-4.8-20120617\/gcc\/config\/i386\/i386.c\t2012-06-13 18:46:59.000000000 +0100\n-+++ gcc-4.8\/gcc\/config\/i386\/i386.c\t2012-06-18 20:40:41.882589307 +0100\n+--- gcc\/config\/i386\/i386.c\t2012-06-13 18:46:59.000000000 +0100\n++++ gcc\/config\/i386\/i386.c\t2012-06-18 20:40:41.882589307 +0100\n @@ -5441,6 +5441,14 @@ ix86_return_pops_args (tree fundecl, tre\n  \n    return 0;\n@@ -78,8 +78,8 @@\n    \/* End element.  *\/\n    { NULL,        0, 0, false, false, false, NULL, false }\n  };\n---- gcc-4.8-20120617\/gcc\/config\/rs6000\/rs6000.c\t2012-06-17 22:08:39.000000000 +0100\n-+++ gcc-4.8\/gcc\/config\/rs6000\/rs6000.c\t2012-06-18 20:40:42.126589298 +0100\n+--- gcc\/config\/rs6000\/rs6000.c\t2012-06-17 22:08:39.000000000 +0100\n++++ gcc\/config\/rs6000\/rs6000.c\t2012-06-18 20:40:42.126589298 +0100\n @@ -21296,7 +21296,8 @@ rs6000_output_function_epilogue (FILE *f\n  \t either, so for now use 0.  *\/\n        if (! strcmp (language_string, \"GNU C\")\n@@ -90,8 +90,8 @@\n  \ti = 0;\n        else if (! strcmp (language_string, \"GNU F77\")\n  \t       || ! strcmp (language_string, \"GNU Fortran\"))\n---- gcc-4.8-20120617\/gcc\/doc\/frontends.texi\t2011-01-03 20:52:22.000000000 +0000\n-+++ gcc-4.8\/gcc\/doc\/frontends.texi\t2012-04-22 17:09:57.525883721 +0100\n+--- gcc\/doc\/frontends.texi\t2011-01-03 20:52:22.000000000 +0000\n++++ gcc\/doc\/frontends.texi\t2012-04-22 17:09:57.525883721 +0100\n @@ -10,6 +10,7 @@\n  @cindex GNU Compiler Collection\n  @cindex GNU C Compiler\n@@ -109,8 +109,8 @@\n  \n  The abbreviation @dfn{GCC} has multiple meanings in common use.  The\n  current official meaning is ``GNU Compiler Collection'', which refers\n---- gcc-4.8-20120617\/gcc\/doc\/install.texi\t2012-05-29 15:14:06.000000000 +0100\n-+++ gcc-4.8\/gcc\/doc\/install.texi\t2012-06-18 20:39:45.058591380 +0100\n+--- gcc\/doc\/install.texi\t2012-05-29 15:14:06.000000000 +0100\n++++ gcc\/doc\/install.texi\t2012-06-18 20:39:45.058591380 +0100\n @@ -1360,12 +1360,12 @@ their runtime libraries should be built.\n  grep language= *\/config-lang.in\n  @end smallexample\n@@ -126,8 +126,8 @@\n  \n  @item --enable-stage1-languages=@var{lang1},@var{lang2},@dots{}\n  Specify that a particular subset of compilers and their runtime\n---- gcc-4.8-20120617\/gcc\/doc\/invoke.texi\t2012-06-15 10:22:00.000000000 +0100\n-+++ gcc-4.8\/gcc\/doc\/invoke.texi\t2012-06-18 20:40:42.598589280 +0100\n+--- gcc\/doc\/invoke.texi\t2012-06-15 10:22:00.000000000 +0100\n++++ gcc\/doc\/invoke.texi\t2012-06-18 20:40:42.598589280 +0100\n @@ -1137,6 +1137,15 @@ called @dfn{specs}.\n  Ada source code file containing a library unit body (a subprogram or\n  package body).  Such files are also called @dfn{bodies}.\n@@ -152,8 +152,8 @@\n  f77  f77-cpp-input f95  f95-cpp-input\n  go\n  java\n---- gcc-4.8-20120617\/gcc\/doc\/sourcebuild.texi\t2012-03-15 12:25:47.000000000 +0000\n-+++ gcc-4.8\/gcc\/doc\/sourcebuild.texi\t2012-04-22 17:25:20.189850056 +0100\n+--- gcc\/doc\/sourcebuild.texi\t2012-03-15 12:25:47.000000000 +0000\n++++ gcc\/doc\/sourcebuild.texi\t2012-04-22 17:25:20.189850056 +0100\n @@ -104,6 +104,9 @@ dereferencing operations.\n  @item libobjc\n  The Objective-C and Objective-C++ runtime library.\n@@ -164,8 +164,8 @@\n  @item libssp\n  The Stack protector runtime library.\n  \n---- gcc-4.8-20120617\/gcc\/doc\/standards.texi\t2011-12-21 17:53:58.000000000 +0000\n-+++ gcc-4.8\/gcc\/doc\/standards.texi\t2012-04-22 17:11:38.553880036 +0100\n+--- gcc\/doc\/standards.texi\t2011-12-21 17:53:58.000000000 +0000\n++++ gcc\/doc\/standards.texi\t2012-04-22 17:11:38.553880036 +0100\n @@ -289,6 +289,16 @@ a specific version.  In general GCC trac\n  closely, and any given release will support the language as of the\n  date that the release was frozen.\n@@ -183,8 +183,8 @@\n  @section References for other languages\n  \n  @xref{Top, GNAT Reference Manual, About This Guide, gnat_rm,\n---- gcc-4.8-20120617\/gcc\/dwarf2out.c\t2012-06-17 22:08:39.000000000 +0100\n-+++ gcc-4.8\/gcc\/dwarf2out.c\t2012-06-18 20:40:42.726589276 +0100\n+--- gcc\/dwarf2out.c\t2012-06-17 22:08:39.000000000 +0100\n++++ gcc\/dwarf2out.c\t2012-06-18 20:40:42.726589276 +0100\n @@ -18105,6 +18105,8 @@ gen_compile_unit_die (const char *filena\n    language = DW_LANG_C89;\n    if (strcmp (language_string, \"GNU C++\") == 0)\n@@ -194,8 +194,8 @@\n    else if (strcmp (language_string, \"GNU F77\") == 0)\n      language = DW_LANG_Fortran77;\n    else if (strcmp (language_string, \"GNU Pascal\") == 0)\n---- gcc-4.8-20120617\/gcc\/gcc.c\t2012-06-01 08:55:39.000000000 +0100\n-+++ gcc-4.8\/gcc\/gcc.c\t2012-06-18 20:39:46.586591323 +0100\n+--- gcc\/gcc.c\t2012-06-01 08:55:39.000000000 +0100\n++++ gcc\/gcc.c\t2012-06-18 20:39:46.586591323 +0100\n @@ -935,6 +935,7 @@ static const struct compiler default_com\n    {\".java\", \"#Java\", 0, 0, 0}, {\".class\", \"#Java\", 0, 0, 0},\n    {\".zip\", \"#Java\", 0, 0, 0}, {\".jar\", \"#Java\", 0, 0, 0},\n\n}}}","assignee":null,"created_on":"2012-06-25T20:47:56.252301+00:00","version":null,"edited_on":"2012-06-25T20:50:12.338480+00:00","milestone":null,"updated_on":"2012-06-25T23:24:40.162509+00:00","id":353},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"undefined reference to `__imp_InterlockedIncrement'","reporter":"dev10","component":null,"watchers":["venix1","ibuclaw","dev10"],"content":"Hi,\r\n\r\nI am trying to link a 64-bit version of the COM client sample from the dmd samples directory. \r\nThe dmd compiler can build it but I need the 64-bit version. \r\n\r\nI am running Win 7 64-bit with the latest build I could find (gcc-4.6.1-tdm64-1-gdc-5aa95e2678-20120613-D2.058.7z)\r\n\r\nThe sample is from here: https:\/\/github.com\/D-Programming-Language\/dmd\/blob\/master\/samples\/dclient.d\r\n\r\nThe compile command is: \r\n**gdc.exe -Wall  -g  -m64    -c dclient.d -o obj\\Debug\\dclient.o**\r\n\r\nThe link command where it fails is:\r\n**gdc.exe -LC:\\MinGW64_with_gdc\\lib -LC:\\MinGW64_with_gdc\\x86_64-w64-mingw32\\lib  -o bin\\Debug\\testD.exe obj\\Debug\\dclient.o    -luuid -lole32 -ladvapi32 -lkernel32 -luser32**\r\n\r\nC:\\MinGW64_with_gdc\\lib\/libgphobos2.a(com.o): In function `_D3std1c7windows3com9ComObject14QueryInterfaceMWPxS3std1c7windows3com4GUIDPPvZi':\r\nc:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/c\/windows\/com.d:211: **undefined reference to `IID_IUnknown'**\r\nC:\\MinGW64_with_gdc\\lib\/libgphobos2.a(com.o): In function `_D3std1c7windows3com9ComObject6AddRefMWZk':\r\nc:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/c\/windows\/com.d:225: **undefined reference to `__imp_InterlockedIncrement'**\r\nC:\\MinGW64_with_gdc\\lib\/libgphobos2.a(com.o): In function `_D3std1c7windows3com9ComObject7ReleaseMWZk':\r\nc:\\crossdev\\gdc64\\v2\\build\\x86_64-w64-mingw32\\libphobos\/..\/..\/..\/gcc-4.6.1\/libphobos\/std\/c\/windows\/com.d:230: **undefined reference to `__imp_InterlockedDecrement'**\r\ncollect2: ld returned 1 exit status\r\n\r\nAfter a bit of investigation it seems the Interlocked* functions are \/\/intrinsic \/\/ compiler functions. They aren't available in the libkernel32.a probably because they are no longer in the 64-bit version of kernel32.dll (according to this: http:\/\/stackoverflow.com\/questions\/5339277\/unable-to-find-an-entry-point-named-interlockedincrement-in-dll-kernel32-dll)\r\n\r\nThis is the MSDN page for the function: http:\/\/msdn.microsoft.com\/en-us\/library\/windows\/desktop\/ms683614%28v=vs.85%29.aspx\r\n\r\nIs it possible to somehow replace the function(s) in the com.d file with a synchronised function call?","assignee":"venix1","created_on":"2012-06-26T22:32:03.167030+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-06-29T00:10:51.938484+00:00","id":355},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Linker error with contract in interface implemented in class in separate module","reporter":"alexrp","component":null,"watchers":["ibuclaw","alexrp"],"content":"test1.d:\n\n{{{\n#!d\n\nmodule test1;\n\nimport test2, test3;\nimport std.stdio;\n\nvoid main()\n{\n    I i = new C();\n    writeln(i.get());\n}\n}}}\n\ntest2.d:\n\n{{{\n#!d\n\nmodule test2;\n\ninterface I\n{\n    string get()\n    out (result)\n    {\n        assert(result);\n    }\n}\n}}}\n\ntest3.d:\n\n{{{\n#!d\n\nmodule test3;\n\nimport test2;\n\nclass C : I\n{\n    string get()\n    {\n        return \"foo\";\n    }\n}\n}}}\n\nCompile with:\n\n{{{\n$ gdc -c -o test1.o test1.d\n$ gdc -c -o test2.o test2.d\n$ gdc -c -o test3.o test3.d\n$ gdc test1.o test2.o test3.o\n}}}\n\nResult:\n\n{{{\ntest3.o: In function `_D5test31C3getMFZAya':\ntest3.d:(.text+0x92): undefined reference to `_D5test21I3getMFZAya8__ensureMFKxAyaZv'\ncollect2: ld returned 1 exit status\n}}}","assignee":"ibuclaw","created_on":"2012-02-10T21:36:06.161581+00:00","version":null,"edited_on":"2012-02-10T21:37:23.106971+00:00","milestone":null,"updated_on":"2012-07-01T11:14:37.354109+00:00","id":312},{"status":"wontfix","priority":"major","kind":"enhancement","content_updated_on":null,"voters":[],"title":"General 64bit IASM report","reporter":"ibuclaw","component":null,"watchers":["ibuclaw","jcrapuchettes"],"content":"General issue for anything 64bit IASM-related. The criteria for closing is when IASM is stable\/works enough for phobos to be built with D_InlineAsm_X86_64 turned on.","assignee":"ibuclaw","created_on":"2011-04-07T16:20:07.101864+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T07:49:59.912323+00:00","id":181},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"D Class in a DLL","reporter":"arabasso","component":null,"watchers":["arabasso","venix1"],"content":"Hello. I am trying to create a DLL using the GDC (gcc-4.6.1-tdm64-1-gdc-5aa95e2678-20120613-D2.058), and I am using the following code:\n\n{{{\n\/\/ testdll.d\n\nmodule testdll;\n\nimport std.c.windows.windows;\n\n__gshared HINSTANCE g_hInst;\n\nextern(C) int _tls_callbacks_a;\n\nversion(Windows)\n{\n\textern(Windows) BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved)\n\t{\n\t\timport core.sys.windows.dll;\n\n\t\tswitch (ulReason)\n\t\t{\n\t\t\tcase DLL_PROCESS_ATTACH:\n\t\t\t\tdll_process_attach(hInstance, true);\n\t\t\tbreak;\n\t\t\tcase DLL_PROCESS_DETACH:\n\t\t\t\tdll_process_detach(hInstance, true);\n\t\t\tbreak;\n\t\t\tcase DLL_THREAD_ATTACH:\n\t\t\t\tdll_thread_attach(true, true);\n\t\t\tbreak;\n\t\t\tcase DLL_THREAD_DETACH:\n\t\t\t\tdll_thread_detach(true, true);\n\t\t\treturn false;\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\tg_hInst = hInstance;\n\n\t\treturn true;\n\t}\n}\n\nexport int sum(int x, int y)\n{\n\treturn x + y;\n}\n}}}\n\nAnd\n\n{{{\n\/\/ main.d\n\nimport std.stdio;\nimport testdll;\n\nint main(string [] args)\n{\n\twritefln(\"%d\", sum(10, 20));\n\n\treturn 0;\n}\n}}}\n\nTo compile, I'm using:\n\n{{{\ngdc -shared -o testdll.dll testdll.d -Wl,--out-implib,libtestdll.a\ngdc -fintfc -v2 -fsyntax-only -H testdll.d\ngdc -o main.exe main.d -L. -ltestdll\n}}}\n\nThis code compiles without errors and runs normally. The problem is when I put a class within the DLL and try to compile the code:\n\n{{{\nimport std.stdio;\n\nexport class Test\n{\n\tpublic void hello()\n\t{\n\t\twritefln(\"Hello!\");\n\t}\n}\n}}}\n\nThe DLL compiles normally, the problem is when I try to link the library with the program:\n\n{{{\nundefined reference to `_D7testdll4Test7__ClassZ'\nundefined reference to `_D7testdll12__ModuleInfoZ'\n}}}\n\nThere is something missing in my code, or the GDC has not implemented full support for DLLs?","assignee":"venix1","created_on":"2012-06-25T11:35:41.150608+00:00","version":null,"edited_on":"2012-06-25T11:42:07.767513+00:00","milestone":null,"updated_on":"2012-07-07T16:45:21.487019+00:00","id":352},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"<symbol> referenced in section `.text' of \/tmp\/a.o: defined in discarded section <section>","reporter":"debio","component":null,"watchers":["venix1","debio","ibuclaw"],"content":"I've hit this bug sporadically, but I now have it reproducing consistently on a codebase I'm working on, and I've attached the linker errors. I have DustMite chewing away at a reduced testcase. Here's what I know:\r\n* This bug occurs (for me) on GDC built against GCC 4.5.3\r\n* This bug does not seem to occur on GDC built against GCC 4.6.*\r\n* My host GCC is 4.6.1 (So this whole thing may just be bad linker versions, but it seems like that should still work)\r\n* In the past, the bug has been caused by removing seemingly unneeded imports\r\n* The bug seems to only occur with dcollections templates (my codebase uses dcollections, and I just have both codebases in the same source tree)\r\n* The bug does not occur when I use -combine","assignee":"ibuclaw","created_on":"2011-10-10T17:17:22.405974+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T09:39:57.731245+00:00","id":246},{"status":"resolved","priority":"major","kind":"proposal","content_updated_on":null,"voters":[],"title":"etc.c...","reporter":"TurkeyMan","component":null,"watchers":["ibuclaw","TurkeyMan","venix1"],"content":"I have a request for the next binary release of GDC.\r\n\r\nCan it please contain binaries for the libs in etc.c...?\r\nTrying to track down compatible versions of zlib, curl, sqlite for MinGW64 is surprisingly difficult to do! >_<\r\n\r\nThese modules are packaged with phobos as if they're standard issue, so can we please consider the libs standard issue too? Otherwise they're pretty useless.","assignee":"venix1","created_on":"2012-04-06T15:54:24.620295+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T09:45:51.188611+00:00","id":331},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Link time optimization","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"I just tried out -flto but it doesn't work at all.\r\n\r\nIn my real-world code it ends in an ICE in one of the files:\r\n{{{\r\nfoo.d:1:0: internal compiler error: in write_symbol, at lto-streamer-out.c:2457\r\n}}}\r\n\r\nA simple hello world results in:\r\n{{{\r\n\/usr\/bin\/ld: _tlsstart: TLS reference in \/opt\/gdc\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.1\/..\/..\/..\/..\/lib64\/libgphobos2.a(thread.o) mismatches non-TLS definition in \/tmp\/ccwbRKwh.o.ironly\u0004 section .text\r\n\/opt\/gdc\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.6.1\/..\/..\/..\/..\/lib64\/libgphobos2.a: could not read symbols: Bad value\r\n}}}","assignee":"ibuclaw","created_on":"2011-08-09T15:11:50.508210+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:13:14.824042+00:00","id":224},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: verify_cgraph_node failed","reporter":"jpf","component":null,"watchers":["ibuclaw","jpf"],"content":"Reduced from a failing std.algorithm \/ std.functional unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nThis is probably related to #307\n\nCompiling algorithm.d with -c and a GCC 4.6.2 compiler which was configured with --enable-checking produces this output:\n{{{\nalgorithm.d:1:0: error: missing callgraph edge for call stmt:\nD.1839 = algorithm.largestPartialIntersectionWeighted!(double[],Tuple!(uint)[],double[]).largestPartialIntersectionWeighted.heapComp (0B, D.1788, D.1797);\n\nalgorithm.d:1:0: error: missing callgraph edge for call stmt:\nD.1840 = algorithm.largestPartialIntersectionWeighted!(double[],Tuple!(uint)[],double[]).largestPartialIntersectionWeighted.heapComp (0B, D.1810, D.1819);\n\nalgorithm.d:1:0: error: missing callgraph edge for call stmt:\nD.1841 = algorithm.largestPartialIntersectionWeighted!(double[],Tuple!(uint)[],double[]).largestPartialIntersectionWeighted.heapComp (0B, D.1829, D.1838);\n\nalgorithm.largestPartialIntersectionWeighted!(double[],Tuple!(uint)[],double[]).largestPartialIntersectionWeighted.BinaryHeap!(Tuple!(uint)[],heapComp).BinaryHeap.percolateDown\/5(3) @0xb7347e58 (asm: _D9algorithm79__T34largestPartialIntersectionWeightedTAdTAS9algorithm12__T5TupleTkZ5TupleTAdZ34largestPartialIntersectionWeightedFAdAS9algorithm12__T5TupleTkZ5TupleAdZv296__T10BinaryHeapTAS9algorithm12__T5TupleTkZ5TupleS243_D9algorithm79__T34largestPartialIntersectionWeightedTAdTAS9algorithm12__T5TupleTkZ5TupleTAdZ34largestPartialIntersectionWeightedFAdAS9algorithm12__T5TupleTkZ5TupleAdZv8heapCompMFS9algorithm12__T5TupleTkZ5TupleS9algorithm12__T5TupleTkZ5TupleZbZ10BinaryHeap13percolateDownMFAS9algorithm12__T5TupleTkZ5TuplekZv) analyzed needed reachable body finalized\n  called by: \n  calls: _d_array_bounds\/9 (1.00 per call) (can throw external) _d_array_bounds\/9 (1.00 per call) (can throw external) _d_array_bounds\/9 (1.00 per call) (can throw external) _d_array_bounds\/9 (1.00 per call) (can throw external) _d_array_bounds\/9 (1.00 per call) (can throw external) _d_array_bounds\/9 (1.00 per call) (can throw external) \n  References: \n  Refering this function: \nalgorithm.d:1:0: internal compiler error: verify_cgraph_node failed\n}}}","assignee":null,"created_on":"2012-02-21T21:18:20.846022+00:00","version":null,"edited_on":"2012-02-21T21:19:22.127856+00:00","milestone":null,"updated_on":"2012-07-11T10:06:58.888942+00:00","id":315},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE: alias this and function templates","reporter":"art_","component":null,"watchers":["art_","ibuclaw"],"content":"{{{\r\nstruct S {\r\n   int t(A...)(A a) { return 0; }\r\n   alias t this;\r\n}\r\n\r\nint main() {\r\n   S s;\r\n   return s;\r\n}\r\n}}}\r\n\r\n> gdc -fdeprecated futures_bug1.d -c\r\n{{{\r\ncc1d: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n}}}\r\n\r\ngcc version 4.6.3 20120106 (prerelease gdc 0.31 - r748:ab99d67f04c2, using dmd 2.057) (GCC); x86 linux\r\n","assignee":null,"created_on":"2012-01-26T09:49:54.971747+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:07:54.257832+00:00","id":310},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"Classinfo size mismatch when importing extra TypeInfo classes into object.d","reporter":"tbone","component":null,"watchers":["tbone","ibuclaw"],"content":"This is another odd corner case which I can't figure out.\r\n\r\nI have a skeleton object.d (attached), and a stub.d (which defines the extra ti_*.TypeInfo_* classes).\r\n\r\nIf I put the extra TypeInfo_* classes directly into object.d, it compiles.\r\n\r\nIf I comment out the {{{import stubs;}}}, and compile the stubs.d and object.d seperately, it works.\r\n\r\nWhen I import stubs.d, it gives a mismatch error:\r\n\r\n{{{\r\nCLASSINFO_SIZE = x98, classinfo->structsize = x88\r\neruntime\/object.d:32: Error: class object.Object mismatch between dmd and object.d or object.di found. Check installation and import paths with -v compiler switch.\r\n}}}\r\n\r\nIt looks like when I import the extra classes, the vtbl and monitor are not added to TypeInfo?  (notice it's 16 bytes, 2 pointers, smaller than it should be).\r\n\r\nIf I add a couple pointers to the TypeInfo definition (as a test), the extra TypeInfo_* classes that are imported become 16 bytes too big.\r\n","assignee":null,"created_on":"2011-01-07T23:29:41.230039+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:35:46.330237+00:00","id":146},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"LTO - ICE: in rtl_for_decl_init, at dwarf2out.c:16750","reporter":"art_","component":null,"watchers":["ibuclaw","art_"],"content":"The program\r\n{{{\r\nclass C {}\r\nC cg;\r\nvoid main() {}\r\n}}}\r\nwhen compiled with \"gdc -flto -g bug.d  -o bug\" causes \r\n{{{\r\nlto1: internal compiler error: in rtl_for_decl_init, at dwarf2out.c:16750\r\nPlease submit a full bug report,\r\n}}}\r\n\r\nNeeds both \"-flto\" and \"-g\" to fail.\r\nThe compiler somehow gets confused, because in real code this worked when i had one \"cg\"-like global, but started ICEing after i added another. But, after reduction, this program appears to fail in the same way.\r\n\r\nOther than this assert, LTO has been working relatively well here, it would be good to be able to use it for builds with debuginfo too (even if incomplete). ","assignee":null,"created_on":"2012-01-06T14:31:49.032267+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:08:51.777403+00:00","id":304},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"missing callgraph edge for call stmt","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"reduced version:\r\n\r\n{{{\r\n#!d\r\nint parseJSON(T)(T json, )\r\n{\r\n        dchar next = 0;\r\n        int pos = 1;\r\n\r\n        dchar peekChar() {\r\n                return next;\r\n        }\r\n\r\n        dchar getChar()() {\r\n                dchar c = void;\r\n                if(c == '\\r' && peekChar)\r\n                    pos = 1;\r\n                return c;\r\n        }\r\n\r\n        void parseString() {\r\n                switch(peekChar)\r\n                {\r\n                default:\r\n                        auto c = getChar();\r\n                }\r\n        }\r\n        return 1;\r\n}\r\n\r\nvoid main()\r\n{\r\n\tauto obj = parseJSON(\"ttt\");\r\n}\r\n}}}\r\n{{{\r\n$ gdc -c web.d\r\nweb.d:1:0: error: missing callgraph edge for call stmt:\r\nD.1704 = web.parseJSON!(string).parseJSON.peekChar (D.1696);\r\n\r\nweb.parseJSON!(string).parseJSON.getChar!().getChar\/4(2) @0x7f1020c35b00 (asm: _D3web18__T9parseJSONTAyaZ9parseJSONFAyaZi12__T7getCharZ7getCharMFZw) analyzed needed reachable body finalized\r\n  called by: \r\n  calls: \r\n  References: \r\n  Refering this function: \r\nweb.d:1:0: internal compiler error: verify_cgraph_node failed\r\n}}}","assignee":"ibuclaw","created_on":"2012-01-18T20:23:14.302069+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:22:49.636328+00:00","id":307},{"status":"resolved","priority":"minor","kind":"bug","content_updated_on":null,"voters":[],"title":"-O3 breaks writefln(\"%b\", -1UL)","reporter":null,"component":null,"watchers":["ibuclaw"],"content":"compile \"stdout.writefln(\"%b\", -1UL);\" with \"\/opt\/gdc\/bin\/gdc -frelease -O3\"\r\nIt prints garbage like this:\r\n@�oRJ�111111111111111111111111111111111111111111111111\r\n\r\nVerified by two people for GCC 6.4.1 and 6.4.2, GDC 0.31 with DMD 2.057\r\n\r\n-O2 works fine","assignee":"ibuclaw","created_on":"2012-01-13T04:01:43.373598+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T10:31:44.374001+00:00","id":305},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"-m64 floating point to int conversion","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"{{{\r\n#!d\r\nimport std.stdio;\r\nvoid main()\r\n{\r\n    float f = float.infinity;\r\n    int i = cast(int) f;\r\n    writeln(i);\r\n    writeln(cast(int)float.max);\r\n    assert(i == cast(int)float.max);\r\n    assert(i == 0x80000000);\r\n}\r\n}}}\r\n{{{\r\n$ gdmd -run test.d\r\n-2147483648\r\n2147483647\r\ncore.exception.AssertError@test.d(8): Assertion failure\r\n}}}","assignee":"ibuclaw","created_on":"2011-12-09T03:19:08.255039+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-03-06T17:44:05.844796+00:00","id":280},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ASM:  Invalid absolute jmp\/call address","reporter":"venix1","component":null,"watchers":["venix1","ibuclaw"],"content":"When attempting to execute a jmp\/call from an array, GDC incorrectly generates the address.\r\n\r\n{{{\r\n#!d\r\n\r\nextern (C) void*[5] ptr;\r\n\r\nvoid foo() {}\r\n\r\nextern (C) void main()\r\n{\r\n\tptr[1] = &foo;\r\n\tasm \r\n\t{\r\n\t\tjmp ptr[1*4];\r\n\t}\r\n}\r\n\r\n\/\/ invalid jump statement produced by GDC\r\njmp 4+*ptr(%rip)\r\n\r\n\/\/ Correct syntax\r\njmp *ptr(%rip)+4 \/\/ The entire address needs a * prefix\r\n}}}\r\n\r\nReordering the if block at line 2180 of d-asm-i386.h to the end of the case statement produced correct results.  However, I'm not sure if it will produce any other side effects.\r\n\r\n\r\n\r\n\r\n","assignee":"ibuclaw","created_on":"2011-06-20T05:32:26.771236+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T07:51:02.088668+00:00","id":213},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"linker error with mapped regex","reporter":"trass3r","component":null,"watchers":["trass3r","ibuclaw"],"content":"Tried to compile DustMite revision \"--help text consistency\": https:\/\/github.com\/CyberShadow\/DustMite\/commit\/cde46e0f6fdaefe3d0698f3d8535140aeb70e0f9\r\n\r\nWorks with git dmd, but not with gdc:\r\n{{{\r\n$ gdc dustmite.d dsplit.d -o DustMite\r\n\/tmp\/ccpHtMzM.o: In function `_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result4backMFNdZS3std5regex12__T5RegexTaZ5Regex':\r\ndustmite.d:(.text._D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result4backMFNdZS3std5regex12__T5RegexTaZ5Regex[_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result4backMFNdZS3std5regex12__T5RegexTaZ5Regex]+0x8b): undefined reference to `_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5Regex'\r\n\/tmp\/ccpHtMzM.o: In function `_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result5frontMFNdZS3std5regex12__T5RegexTaZ5Regex':\r\ndustmite.d:(.text._D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result5frontMFNdZS3std5regex12__T5RegexTaZ5Regex[_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result5frontMFNdZS3std5regex12__T5RegexTaZ5Regex]+0x8b): undefined reference to `_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5Regex'\r\n\/tmp\/ccpHtMzM.o: In function `_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result7opIndexMFmZS3std5regex12__T5RegexTaZ5Regex':\r\ndustmite.d:(.text._D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result7opIndexMFmZS3std5regex12__T5RegexTaZ5Regex[_D8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapMFAAyaZS8dustmite18applyNoRemoveRegexFAAyaZv103__T3mapS92_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5RegexZ13__T3mapTAAyaZ3mapM6Result6Result7opIndexMFmZS3std5regex12__T5RegexTaZ5Regex]+0xca): undefined reference to `_D8dustmite18applyNoRemoveRegexFAAyaZv13__dgliteral11MFNfAyaZS3std5regex12__T5RegexTaZ5Regex'\r\n}}}","assignee":"ibuclaw","created_on":"2012-03-04T21:53:09.967954+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T09:47:10.713048+00:00","id":323},{"status":"wontfix","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE in make_decl_rtl, at varasm.c:1290","reporter":"eestieve","component":null,"watchers":["eestieve","ibuclaw"],"content":"Got an ICE in make_decl_rtl, at varasm.c:1290\r\nwhen compiling code:\r\n\r\n{{\r\nint zz( int p1 ) { asm {\r\n  naked;\r\n  mov EAX, p1[EBP];\r\n} }\r\n}}\r\n\r\nremoving the naked make it disappear.\r\n\r\ncheers.\r\n","assignee":"ibuclaw","created_on":"2011-01-04T20:45:22.706464+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T07:51:32.729897+00:00","id":135},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":" internal compiler error: in dwarf2out_finish","reporter":"golfboy","component":null,"watchers":["golfboy","ibuclaw"],"content":"$ gdc --version\r\ngdc (GCC) 4.6.3 20111112 (prerelease   gdc 0.30, using dmd 2.055)\r\n\r\nCompiler output is:\r\n\r\nUtils\/Logger.d:1:0: internal compiler error: in dwarf2out_finish, at dwarf2out.c:23411\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n\r\nOrdinarily I'd paste source, but the code that 'causes' this (in the sense that commenting it out removes the problem) is a nested function in a module other than the one giving the error. Neither module imports (directly) from the other. Let me know what if any additional info I can provide.","assignee":null,"created_on":"2012-03-05T02:03:09.338495+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-07-11T07:54:02.187001+00:00","id":324},{"status":"resolved","priority":"critical","kind":"bug","content_updated_on":null,"voters":[],"title":"std.json produces errors","reporter":"TurkeyMan","component":null,"watchers":["TurkeyMan","ibuclaw"],"content":"This code:\n{{{\nimport std.json;\n\nstring text = \"10\";\nJSONValue root = parseJSON( text );\n}}}\n\nCauses compile errors like so (compiled for 64bit):\n{{{\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.json.parseJSON!(string).parseJSON.getChar!(true).getChar':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/json.d(97):undefined reference to `_D3std4json18__T9parseJSONTAyaZ9parseJSONFAyaiZS3std4json9JSONValue14skipWhitespaceMFZv'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.json.parseJSON!(string).parseJSON.testChar!(true,true).testChar':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/json.d(131):undefined reference to `_D3std4json18__T9parseJSONTAyaZ9parseJSONFAyaiZS3std4json9JSONValue14skipWhitespaceMFZv'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.json.parseJSON!(string).parseJSON.checkChar!(true,true).checkChar':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/json.d(122):undefined reference to `_D3std4json18__T9parseJSONTAyaZ9parseJSONFAyaiZS3std4json9JSONValue14skipWhitespaceMFZv'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1131':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2133):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2133Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1132':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2144):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2144Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1133':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2147):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2147Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1134':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2151):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2151Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1135':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2155):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2155Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1136':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2157):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2157Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1137':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2256):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2256Z7bailOutMFAyaZC3std4conv13ConvException'\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.conv.parse!(real,string).parse.__dgliteral1138':\nw:\/game\/main\/latest\/tools\/mingw64\/include\/d2\/4.6.1\/std\/conv.d(2258):undefined reference to `_D3std4conv16__T5parseTeTAyaZ5parseFKAyaZe154__T7bailOutVAyaa64_773a5c7175616e74756d5c6d61696e5c6c61746573745c746f6f6c735c6d696e677736345c696e636c7564655c64325c342e362e315c7374645c636f6e762e64Vi2258Z7bailOutMFAyaZC3std4conv13ConvException'\n}}}","assignee":null,"created_on":"2012-06-13T12:33:47.458596+00:00","version":null,"edited_on":"2012-06-13T13:57:10.355118+00:00","milestone":null,"updated_on":"2012-07-11T09:43:04.297089+00:00","id":350},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"internal compiler error: in toCtype, at d\/d-glue.cc:3596","reporter":"katahiromz","component":null,"watchers":["katahiromz"],"content":"http:\/\/dl.dropbox.com\/u\/72753355\/wonders.zip\r\n\r\nmake -f Makefile.gdc\r\ngdc.exe -c -frelease -finline-functions -O3 -fweb -Wall -fversion=Unicode\r\n-fversion=Windows7   -fversion=WondersBuild -o wonders\\gdiplus.o wonders\\gdiplus.d\r\nwonders\\gdiplus.d:406:0: internal compiler error: in toCtype, at d\/d-glue.cc:3596\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <https:\/\/bitbucket.org\/goshawk\/gdc\/issues> for instructions.\r\n\r\n** error 1 ** deleting wonders\\gdiplus.o","assignee":null,"created_on":"2012-09-04T05:52:41.142397+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2012-09-08T07:30:06.423385+00:00","id":359},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"ICE in RedBlackTree unittest","reporter":"trass3r","component":null,"watchers":["ibuclaw","trass3r","jpf"],"content":"{{{\r\n#!d\r\nclass RedBlackTree(T, alias less = \"a < b\", )\r\n{\r\n    struct Range\r\n    {\r\n    }\r\n\r\n    Range opSlice()\r\n    {\r\n        return Range;\r\n    }\r\n}\r\n\r\nauto redBlackTree(alias less, E)()\r\n{\r\n    return new RedBlackTree!(E, less);\r\n}\r\n\r\nunittest\r\n{\r\n    auto rbt2 = redBlackTree!({}, double);\r\n}\r\n}}}\r\n\r\n{{{\r\n$ gdc -g -funittest -c container.d\r\ncontainer.d:15:0: internal compiler error: tree check: expected class 'type', have 'declaration' (function_decl) in gen_type_die_with_usage, at dwarf2out.c:20488\r\n\r\n$ gdc  -funittest -c container.d\r\ncontainer.d: In member function 'opSlice':\r\ncontainer.d:9:0: error: type Range is not an expression\r\ncontainer.d:9:0: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in useless_type_conversion_p, at tree-ssa.c:1293\r\n\r\n$ gdc -v\r\nConfigured with: ..\/configure --enable-languages=d --prefix=\/opt\/gdc --disable-bootstrap --disable-shared --enable-checking=yes --enable-lto --with-arch=native --disable-nls --enable-threads --with-system-zlib --disable-libgomp --disable-libmudflap --with-bugurl=https:\/\/bitbucket.org\/goshawk\/gdc\/issues\r\ngcc version 4.6.2 20111026 (gdc 0.31 - r788:80285454df3c+, using dmd 2.057) (GCC)\r\n}}}","assignee":"ibuclaw","created_on":"2012-02-21T21:19:33.986053+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-03-06T17:37:48.964174+00:00","id":316},{"status":"resolved","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"GCC trunk","reporter":"Calrama","component":null,"watchers":["Calrama"],"content":"Latest gdc does not compile with gcc trunk, build.log with errors is attached.\r\n\r\nAlso, in gcc\/d\/setup-gcc.sh the line\r\n\r\npatch -p1 < \"$gcc_patch_fn\" || exit 1\r\n\r\nneeds to be changed to\r\n\r\npatch -p2 < \"$gcc_patch_fn\" || exit 1\r\n\r\nbecause the new patches seem to have one more path level than the old ones.","assignee":null,"created_on":"2012-08-18T17:12:31.638990+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2013-03-06T17:38:34.260750+00:00","id":358},{"status":"invalid","priority":"major","kind":"bug","content_updated_on":null,"voters":[],"title":"possible problem with C calling convention","reporter":null,"component":null,"watchers":[],"content":"When calling a C function with (int argc, char *argv[]) as parameters the second one is passed incorrectly.\r\n\r\nAttached are a makefile and two source files to reproduce the problem.\r\n\r\nWhen executing \"make\":\r\n\r\n#############\r\n\r\ngdc main.d cmain.c -o dmain\r\n\r\ngdc -v\r\n\r\nUsing built-in specs.\r\n\r\nCOLLECT_GCC=gdc\r\n\r\nCOLLECT_LTO_WRAPPER=\/opt\/gdc\/libexec\/gcc\/x86_64-unknown-linux-gnu\/4.6.1\/lto-wrapper\r\n\r\nTarget: x86_64-unknown-linux-gnu\r\n\r\nConfigured with: \/var\/abs\/local\/gdc\/src\/gcc-4.6.1\/configure --prefix=\/opt\/gdc --enable-languages=c,d --disable-shared --disable-multilib --enable-checking=release\r\n\r\nThread model: posix\r\n\r\ngcc version 4.6.1 20110627 (gdc hg r604:dda1c10c8c7b+, using dmd 2.054) (GCC) \r\n\r\n.\/dmain hello\r\n\r\nargc=2, argv=0x13\r\n\r\n#############\r\n\r\nthe result is argv=0x13 which is the length of argv, not a pointer.\r\n\r\n","assignee":null,"created_on":"2011-08-19T21:41:44.435193+00:00","version":null,"edited_on":null,"milestone":null,"updated_on":"2011-08-19T22:26:46.685394+00:00","id":228}],"logs":[{"comment":400804,"changed_to":"New_d-lang.cc.patch","field":"attachment","created_on":"2011-03-12T06:49:51.370634+00:00","user":"venix1","issue":158,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110312\/158\/New_d-lang.cc.patch"},{"comment":885282,"changed_to":"resolved","field":"status","created_on":"2011-12-19T01:41:46.848012+00:00","user":"ibuclaw","issue":236,"changed_from":"open"},{"comment":1605848,"changed_to":"resolved","field":"status","created_on":"2012-06-29T00:10:52.005896+00:00","user":"venix1","issue":355,"changed_from":"new"},{"comment":227657,"changed_to":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6) - albeit with one minor quirk that you need to remove all config.cache files to build libphobos.\n\nThis brings the list of supported versions (known to me) to be GCC 3","field":"content","created_on":"2010-08-09T09:31:17.035100+00:00","user":"ibuclaw","issue":53,"changed_from":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6)\n\nThis brings the list of supported versions (known to me) to be GCC 3.4.6, GCC 4.1.2, and GCC 4.3.5\n\nThis brings me to the following question: Which versions should w"},{"comment":1652689,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:08:51.823704+00:00","user":"ibuclaw","issue":304,"changed_from":"new"},{"comment":1062284,"changed_to":"test1.d:\n\n{{{\n#!d\n\nmodule test1;\n\nimport test2, test3;\nimport std.stdio;\n\nvoid main()\n{\n    I i = new C();\n    writeln(i.get());\n}\n}}}\n\ntest2.d:\n\n{{{\n#!d\n\nmodule test2;\n\ninterface I\n{\n    string get()\n    out (result)\n    {\n        assert(result);\n    }\n","field":"content","created_on":"2012-02-10T21:37:23.162245+00:00","user":"alexrp","issue":312,"changed_from":"test1.d:\r\n\r\n{{{\r\n#!d\r\n\r\nmodule test1;\r\n\r\nimport test2, test3;\r\nimport std.stdio;\r\n\r\nvoid main()\r\n{\r\n    I i = new C();\r\n    writeln(i.get());\r\n}\r\n}}}\r\n\r\ntest2.d:\r\n\r\n{{{\r\n#!d\r\n\r\nmodule test2;\r\n\r\ninterface I\r\n{\r\n    string get()\r\n    out (result)\r\n    {\r\n "},{"comment":654837,"changed_to":"duplicate","field":"status","created_on":"2011-09-15T16:46:27.517509+00:00","user":"dsimcha","issue":233,"changed_from":"new"},{"comment":209595,"changed_to":"resolved","field":"status","created_on":"2010-07-08T21:20:26.987300+00:00","user":"ibuclaw","issue":35,"changed_from":"open"},{"comment":1600267,"changed_to":"resolved","field":"status","created_on":"2012-06-27T19:45:04.193115+00:00","user":"ibuclaw","issue":346,"changed_from":"open"},{"comment":1598184,"changed_to":"open","field":"status","created_on":"2012-06-27T11:29:29.288551+00:00","user":"ibuclaw","issue":346,"changed_from":"new"},{"comment":1598184,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-06-27T11:29:29.290669+00:00","user":"ibuclaw","issue":346,"changed_from":"None"},{"comment":554561,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-07-12T00:16:58.912025+00:00","user":"venix1","issue":213,"changed_from":"venix1"},{"comment":190237,"changed_to":"open","field":"status","created_on":"2010-06-05T08:53:32.099802+00:00","user":"goshawk","issue":24,"changed_from":"new"},{"comment":899087,"changed_to":"open","field":"status","created_on":"2011-12-22T19:09:17.001349+00:00","user":"art_","issue":295,"changed_from":"new"},{"comment":415431,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-24T22:56:49.902216+00:00","user":"ibuclaw","issue":163,"changed_from":"None"},{"comment":1561219,"changed_to":"I have a crash that only happens occasionally when loading a GDC-64 DLL. The same DLL may work or not work depending on the direction of the wind. Though it seems to crash far less often than it does.\n\nThe callstack, and various other details are visible","field":"content","created_on":"2012-06-18T14:53:54.792337+00:00","user":"TurkeyMan","issue":351,"changed_from":"I have a crash that only happens occasionally when loading a GDC-64 DLL. The same DLL may work or not work depending on the direction of the wind. Though it seems to crash far less often than it does.\r\n\r\nThe callstack, and various other details are visib"},{"comment":1321482,"changed_to":"open","field":"status","created_on":"2012-04-19T17:12:31.497110+00:00","user":"WebDrake","issue":333,"changed_from":"new"},{"comment":1535547,"changed_to":"resolved","field":"status","created_on":"2012-06-11T22:22:12.940223+00:00","user":"venix1","issue":342,"changed_from":"open"},{"comment":591362,"changed_to":"resolved","field":"status","created_on":"2011-08-06T21:30:33.560182+00:00","user":"ibuclaw","issue":222,"changed_from":"new"},{"comment":232486,"changed_to":"resolved","field":"status","created_on":"2010-08-20T17:43:35.457978+00:00","user":"ibuclaw","issue":30,"changed_from":"open"},{"comment":330394,"changed_to":"open","field":"status","created_on":"2011-01-04T04:48:18.132131+00:00","user":"ibuclaw","issue":133,"changed_from":"new"},{"comment":330394,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-01-04T04:48:18.135241+00:00","user":"ibuclaw","issue":133,"changed_from":"None"},{"comment":1476794,"changed_to":"config.log","field":"attachment","created_on":"2012-05-29T11:44:58.477880+00:00","user":"Calrama","issue":344,"changed_from":"\/goshawk\/gdc\/issue-attachment\/344\/goshawk\/gdc\/1338291898.18\/344\/config.log"},{"comment":1476794,"changed_to":"build.log","field":"attachment","created_on":"2012-05-29T11:44:59.097982+00:00","user":"Calrama","issue":344,"changed_from":"\/goshawk\/gdc\/issue-attachment\/344\/goshawk\/gdc\/1338291898.48\/344\/build.log"},{"comment":1476794,"changed_to":"resolved","field":"status","created_on":"2012-05-29T11:44:59.145295+00:00","user":"Calrama","issue":344,"changed_from":"open"},{"comment":1652595,"changed_to":"resolved","field":"status","created_on":"2012-07-11T09:45:51.260024+00:00","user":"ibuclaw","issue":331,"changed_from":"new"},{"comment":377636,"changed_to":"resolved","field":"status","created_on":"2011-02-20T11:31:01.411574+00:00","user":"ibuclaw","issue":152,"changed_from":"new"},{"comment":546632,"changed_to":"open","field":"status","created_on":"2011-07-05T23:31:55.911864+00:00","user":"ibuclaw","issue":213,"changed_from":"resolved"},{"comment":546632,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-07-05T23:31:55.914550+00:00","user":"ibuclaw","issue":213,"changed_from":"venix1"},{"comment":441395,"changed_to":"new","field":"status","created_on":"2011-04-14T23:18:20.489603+00:00","user":"venix1","issue":189,"changed_from":"resolved"},{"comment":993423,"changed_to":"Using debian gdc-4.6.2-4\n\n{{{\nbll-desktop:bll$ cat x1.c\n#include <stdio.h>\n#include <stdlib.h>\n\nunion a {\n  long double a1;\n  char        ac[20];\n};\n\nstruct b {\n  long double b1;\n  char        bc[20];\n};\n\nint\nmain (int argc, char *argv[]) {\n  union a a;\n","field":"content","created_on":"2012-01-24T08:47:17.272303+00:00","user":"ibuclaw","issue":309,"changed_from":"Using debian gdc-4.6.2-4\r\n\r\nbll-desktop:bll$ cat x1.c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nunion a {\r\n  long double a1;\r\n  char        ac[20];\r\n};\r\n\r\nstruct b {\r\n  long double b1;\r\n  char        bc[20];\r\n};\r\n\r\nint\r\nmain (int argc, char *argv[]) {\r"},{"comment":1652175,"changed_to":"wontfix","field":"status","created_on":"2012-07-11T07:50:00.043853+00:00","user":"ibuclaw","issue":181,"changed_from":"new"},{"comment":209474,"changed_to":"struct-abi.patch","field":"attachment","created_on":"2010-07-08T19:01:13.584478+00:00","user":"ibuclaw","issue":35,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100708\/35\/struct-abi.patch"},{"comment":209474,"changed_to":"open","field":"status","created_on":"2010-07-08T19:01:14.459177+00:00","user":"ibuclaw","issue":35,"changed_from":"new"},{"comment":209474,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-08T19:01:14.469865+00:00","user":"ibuclaw","issue":35,"changed_from":"None"},{"comment":233645,"changed_to":"resolved","field":"status","created_on":"2010-08-24T11:37:51.513625+00:00","user":"ibuclaw","issue":58,"changed_from":"new"},{"comment":858613,"changed_to":"resolved","field":"status","created_on":"2011-12-10T09:25:36.725244+00:00","user":"ibuclaw","issue":279,"changed_from":"new"},{"comment":97167,"changed_to":"error4.txt","field":"attachment","created_on":"2009-12-23T04:04:14.632945+00:00","user":"ricochet1k","issue":5,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2009\/12\/error4.txt"},{"comment":459419,"changed_to":"resolved","field":"status","created_on":"2011-04-29T13:17:26.725038+00:00","user":"ibuclaw","issue":203,"changed_from":"new"},{"comment":8053938,"changed_to":"resolved","field":"status","created_on":"2014-02-03T09:31:43.178076+00:00","user":"ibuclaw","issue":361,"changed_from":"new"},{"comment":260450,"changed_to":"typedef_arraycat.patch","field":"attachment","created_on":"2010-10-04T22:52:33.406593+00:00","user":"ibuclaw","issue":69,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101005\/69\/typedef_arraycat.patch"},{"comment":502360,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\nEDIT: apparently SOME","field":"content","created_on":"2011-05-31T21:04:19.306335+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\nEDIT: apparently SOME"},{"comment":228371,"changed_to":"array_init.tar.gz","field":"attachment","created_on":"2010-08-10T20:14:12.105922+00:00","user":"ibuclaw","issue":33,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100810\/33\/array_init.tar.gz"},{"comment":267021,"changed_to":"phobos2029.patch","field":"attachment","created_on":"2010-10-14T13:44:12.071401+00:00","user":"ibuclaw","issue":74,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101014\/74\/phobos2029.patch"},{"comment":455636,"changed_to":"invalid","field":"status","created_on":"2011-04-26T19:14:01.471035+00:00","user":"ibuclaw","issue":201,"changed_from":"new"},{"comment":673965,"changed_to":"open","field":"status","created_on":"2011-09-27T19:06:48.712820+00:00","user":"ibuclaw","issue":242,"changed_from":"new"},{"comment":882785,"changed_to":"mod1.d","field":"attachment","created_on":"2011-12-17T20:59:28.738416+00:00","user":"debio","issue":246,"changed_from":"\/goshawk\/gdc\/issue-attachment\/246\/goshawk\/gdc\/1324155568.48\/246\/mod1.d"},{"comment":882785,"changed_to":"mod2.d","field":"attachment","created_on":"2011-12-17T20:59:28.854558+00:00","user":"debio","issue":246,"changed_from":"\/goshawk\/gdc\/issue-attachment\/246\/goshawk\/gdc\/1324155568.76\/246\/mod2.d"},{"comment":376967,"changed_to":"resolved","field":"status","created_on":"2011-02-19T12:11:57.224362+00:00","user":"ibuclaw","issue":151,"changed_from":"new"},{"comment":256396,"changed_to":"open","field":"status","created_on":"2010-09-28T09:46:35.544407+00:00","user":"ibuclaw","issue":67,"changed_from":"new"},{"comment":411292,"changed_to":"open","field":"status","created_on":"2011-03-21T20:48:27.158278+00:00","user":"ibuclaw","issue":153,"changed_from":"new"},{"comment":411292,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-21T20:48:27.160788+00:00","user":"ibuclaw","issue":153,"changed_from":"None"},{"comment":904320,"changed_to":"current hg gdc does not build (D2)","field":"title","created_on":"2011-12-25T16:51:19.107512+00:00","user":"art_","issue":299,"changed_from":"curent hg gdc does not build (D2)"},{"comment":139716,"changed_to":"gdc-libphobos-kbsd2.patch","field":"attachment","created_on":"2010-03-15T23:43:00.943743+00:00","user":"ibuclaw","issue":13,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100316\/13\/gdc-libphobos-kbsd2.patch"},{"comment":139716,"changed_to":"open","field":"status","created_on":"2010-03-15T23:43:01.286442+00:00","user":"ibuclaw","issue":13,"changed_from":"resolved"},{"comment":139716,"changed_to":"michaelp","field":"responsible","created_on":"2010-03-15T23:43:01.292128+00:00","user":"ibuclaw","issue":13,"changed_from":"None"},{"comment":1591497,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-06-26T02:35:02.707435+00:00","user":"ibuclaw","issue":284,"changed_from":"None"},{"comment":1591497,"changed_to":"critical","field":"priority","created_on":"2012-06-26T02:35:02.713328+00:00","user":"ibuclaw","issue":284,"changed_from":"major"},{"comment":243216,"changed_to":"issue56.patch","field":"attachment","created_on":"2010-09-11T22:46:18.801299+00:00","user":"ibuclaw","issue":56,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100912\/56\/issue56.patch"},{"comment":243216,"changed_to":"michaelp","field":"responsible","created_on":"2010-09-11T22:46:19.027541+00:00","user":"ibuclaw","issue":56,"changed_from":"None"},{"comment":1504329,"changed_to":"None","field":"responsible","created_on":"2012-06-04T14:13:31.166545+00:00","user":"ibuclaw","issue":284,"changed_from":"ibuclaw"},{"comment":262915,"changed_to":"open","field":"status","created_on":"2010-10-07T17:49:31.552560+00:00","user":"ibuclaw","issue":70,"changed_from":"new"},{"comment":591879,"changed_to":"open","field":"status","created_on":"2011-08-07T15:02:20.091675+00:00","user":"ibuclaw","issue":205,"changed_from":"new"},{"comment":329961,"changed_to":"resolved","field":"status","created_on":"2011-01-03T18:03:02.255596+00:00","user":"ibuclaw","issue":132,"changed_from":"new"},{"comment":801693,"changed_to":"resolved","field":"status","created_on":"2011-11-21T00:02:32.320421+00:00","user":"ibuclaw","issue":264,"changed_from":"new"},{"comment":1598196,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:31:16.045024+00:00","user":"ibuclaw","issue":334,"changed_from":"new"},{"comment":1125423,"changed_to":"open","field":"status","created_on":"2012-02-27T19:51:20.980935+00:00","user":"ibuclaw","issue":322,"changed_from":"new"},{"comment":1125423,"changed_to":"minor","field":"priority","created_on":"2012-02-27T19:51:20.984036+00:00","user":"ibuclaw","issue":322,"changed_from":"major"},{"comment":1119990,"changed_to":"open","field":"status","created_on":"2012-02-26T12:48:36.249501+00:00","user":"ibuclaw","issue":317,"changed_from":"new"},{"comment":219209,"changed_to":"open","field":"status","created_on":"2010-07-21T14:51:40.344227+00:00","user":"trass3r","issue":21,"changed_from":"new"},{"comment":645470,"changed_to":"duplicate","field":"status","created_on":"2011-09-10T20:35:09.577574+00:00","user":"venix1","issue":195,"changed_from":"new"},{"comment":301184,"changed_to":"Test case:\n\n{{{\nimport std.math;\n\ndouble kernelFun(alias kernel)(double x) {\n    return kernel(x);\n}\n\nvoid main() {\n    auto num = kernelFun!sin(2);\n}\n\n}}}\n\nError message:\n{{{\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5","field":"content","created_on":"2010-11-28T02:23:00.461831+00:00","user":"dsimcha","issue":113,"changed_from":"Test case:\n\n{{{\nimport std.math;\n\ndouble kernelFun(alias kernel)(double x) {\n    return kernel(x);\n}\n\nvoid main() {\n    auto num = kernelFun!sin(2);\n}\n\n}}}\n\nError message:\n\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/st"},{"comment":218737,"changed_to":"MinGW.wiki","field":"attachment","created_on":"2010-07-20T22:18:02.077260+00:00","user":"trass3r","issue":41,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100721\/41\/MinGW.wiki"},{"comment":841762,"changed_to":"resolved","field":"status","created_on":"2011-12-05T20:58:50.603086+00:00","user":"ibuclaw","issue":276,"changed_from":"new"},{"comment":622724,"changed_to":"blocker","field":"priority","created_on":"2011-08-27T02:28:02.078697+00:00","user":"dsimcha","issue":214,"changed_from":"major"},{"comment":1481244,"changed_to":"open","field":"status","created_on":"2012-05-30T07:47:33.388417+00:00","user":"ibuclaw","issue":284,"changed_from":"new"},{"comment":1481244,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-05-30T07:47:33.402093+00:00","user":"ibuclaw","issue":284,"changed_from":"None"},{"comment":279863,"changed_to":"resolved","field":"status","created_on":"2010-11-01T14:02:10.805591+00:00","user":"ibuclaw","issue":82,"changed_from":"open"},{"comment":560428,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-07-16T03:04:31.832178+00:00","user":"venix1","issue":216,"changed_from":"None"},{"comment":154704,"changed_to":"resolved","field":"status","created_on":"2010-04-13T15:32:40.443346+00:00","user":"opticron","issue":15,"changed_from":"open"},{"comment":441293,"changed_to":"issue187.patch","field":"attachment","created_on":"2011-04-14T21:31:42.395476+00:00","user":"venix1","issue":187,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110414\/187\/issue187.patch"},{"comment":441293,"changed_to":"issue187.patch","field":"attachment","created_on":"2011-04-14T21:31:42.597073+00:00","user":"venix1","issue":187,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110414\/187\/issue187.patch"},{"comment":571892,"changed_to":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!java\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n  \n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_","field":"content","created_on":"2011-07-25T13:19:51.524535+00:00","user":"trass3r","issue":218,"changed_from":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n\n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRAPP"},{"comment":393921,"changed_to":"open","field":"status","created_on":"2011-03-06T18:17:58.475861+00:00","user":"ibuclaw","issue":161,"changed_from":"new"},{"comment":393921,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-06T18:17:58.479540+00:00","user":"ibuclaw","issue":161,"changed_from":"None"},{"comment":257035,"changed_to":"resolved","field":"status","created_on":"2010-09-29T10:18:34.130475+00:00","user":"ibuclaw","issue":68,"changed_from":"new"},{"comment":379540,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-02-21T21:48:02.335404+00:00","user":"ibuclaw","issue":156,"changed_from":"None"},{"comment":378014,"changed_to":"open","field":"status","created_on":"2011-02-20T18:49:41.935727+00:00","user":"ibuclaw","issue":155,"changed_from":"new"},{"comment":378014,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-02-20T18:49:41.939794+00:00","user":"ibuclaw","issue":155,"changed_from":"None"},{"comment":741874,"changed_to":"layoutpatch","field":"attachment","created_on":"2011-10-27T05:14:34.451594+00:00","user":"debio","issue":215,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20111027\/215\/layoutpatch"},{"comment":191902,"changed_to":"issue25.patch","field":"attachment","created_on":"2010-06-07T23:36:58.549029+00:00","user":"ibuclaw","issue":25,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100608\/25\/issue25.patch"},{"comment":748852,"changed_to":"open","field":"status","created_on":"2011-10-30T20:28:56.479463+00:00","user":"trass3r","issue":224,"changed_from":"resolved"},{"comment":900079,"changed_to":"resolved","field":"status","created_on":"2011-12-23T02:02:16.511281+00:00","user":"ibuclaw","issue":296,"changed_from":"new"},{"comment":432657,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-08T11:46:44.926740+00:00","user":"ibuclaw","issue":164,"changed_from":"None"},{"comment":413036,"changed_to":"open","field":"status","created_on":"2011-03-22T23:42:09.079341+00:00","user":"Andrej08","issue":160,"changed_from":"new"},{"comment":276972,"changed_to":"resolved","field":"status","created_on":"2010-10-28T00:10:05.195554+00:00","user":"ibuclaw","issue":80,"changed_from":"new"},{"comment":1104191,"changed_to":"ICE: non-trivial conversion at assignment","field":"title","created_on":"2012-02-21T19:23:36.452445+00:00","user":"jpf","issue":314,"changed_from":"non-trivial conversion at assignment"},{"comment":9408073,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:13:11.783541+00:00","user":"ibuclaw","issue":348,"changed_from":"new"},{"comment":1221749,"changed_to":"invalid","field":"status","created_on":"2012-03-24T21:58:16.842631+00:00","user":"venix1","issue":327,"changed_from":"new"},{"comment":885203,"changed_to":"new","field":"status","created_on":"2011-12-19T00:54:11.707085+00:00","user":"dsimcha","issue":291,"changed_from":"duplicate"},{"comment":315689,"changed_to":"resolved","field":"status","created_on":"2010-12-14T00:57:32.171302+00:00","user":"ibuclaw","issue":125,"changed_from":"new"},{"comment":575972,"changed_to":"venix1","field":"responsible","created_on":"2011-07-28T05:11:20.374083+00:00","user":"venix1","issue":160,"changed_from":"None"},{"comment":831918,"changed_to":"resolved","field":"status","created_on":"2011-12-02T04:13:12.340852+00:00","user":"ibuclaw","issue":268,"changed_from":"new"},{"comment":999083,"changed_to":"resolved","field":"status","created_on":"2012-01-25T18:52:30.955013+00:00","user":"ibuclaw","issue":265,"changed_from":"new"},{"comment":289308,"changed_to":"gdc-4.4 [D2] ICE with struct and variant","field":"title","created_on":"2010-11-14T02:01:16.127497+00:00","user":"jordirovira","issue":88,"changed_from":"[gdc-4.4 [D2] ICE with struct and variant"},{"comment":333596,"changed_to":"open","field":"status","created_on":"2011-01-06T22:15:43.212373+00:00","user":"ibuclaw","issue":141,"changed_from":"new"},{"comment":333596,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-01-06T22:15:43.215810+00:00","user":"ibuclaw","issue":141,"changed_from":"None"},{"comment":707194,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-10-11T15:44:28.217641+00:00","user":"mafm","issue":96,"changed_from":"None"},{"comment":124239,"changed_to":"GCC 4.3.1, GDC <<changeset 76:7ef3514fb27b>>\n\nRecently I tried building GDC version 1 using  TDM's GCC\/mingw32 patches, build files, and Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following err","field":"content","created_on":"2010-02-16T02:21:31.344245+00:00","user":"venix1","issue":9,"changed_from":"GCC 4.3.1, GDC <<changeset 76:7ef3514fb27b>\n\nRecently I tried building GDC version 1 using  TDM's GCC\/mingw32 patches, build files, and Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following erro"},{"comment":411538,"changed_to":"open","field":"status","created_on":"2011-03-22T01:32:40.777265+00:00","user":"ibuclaw","issue":169,"changed_from":"new"},{"comment":411538,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-22T01:32:40.781191+00:00","user":"ibuclaw","issue":169,"changed_from":"None"},{"comment":139016,"changed_to":"gdc-4.3 ices  whilst building libphobos std\/socket.d\n\nThe output received:\n{{{\nsocket.d: In member function 'getHostByAddr':\nsocket.d:577: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriat","field":"content","created_on":"2010-03-14T10:59:39.833830+00:00","user":"ibuclaw","issue":11,"changed_from":"gdc-4.3 ices  whilst building libphobos std\/socket.d\n\nThe output received:\n{{{\nsocket.d: In member function 'getHostByAddr':\nsocket.d:577: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriat"},{"comment":222734,"changed_to":"resolved","field":"status","created_on":"2010-07-28T19:07:41.937858+00:00","user":"ibuclaw","issue":48,"changed_from":"new"},{"comment":301118,"changed_to":"resolved","field":"status","created_on":"2010-11-27T23:30:01.516171+00:00","user":"dsimcha","issue":109,"changed_from":"open"},{"comment":999124,"changed_to":"wontfix","field":"status","created_on":"2012-01-25T19:04:27.678178+00:00","user":"ibuclaw","issue":293,"changed_from":"new"},{"comment":669857,"changed_to":"duplicate","field":"status","created_on":"2011-09-25T15:02:30.202614+00:00","user":"ibuclaw","issue":238,"changed_from":"new"},{"comment":295505,"changed_to":"open","field":"status","created_on":"2010-11-20T19:14:42.727288+00:00","user":"ibuclaw","issue":106,"changed_from":"new"},{"comment":295505,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-20T19:14:42.734527+00:00","user":"ibuclaw","issue":106,"changed_from":"None"},{"comment":228323,"changed_to":"open","field":"status","created_on":"2010-08-10T17:37:32.958579+00:00","user":"michaelp","issue":33,"changed_from":"new"},{"comment":239113,"changed_to":"resolved","field":"status","created_on":"2010-09-04T18:53:04.639578+00:00","user":"michaelp","issue":61,"changed_from":"new"},{"comment":354532,"changed_to":"resolved","field":"status","created_on":"2011-01-29T20:55:43.515916+00:00","user":"ibuclaw","issue":137,"changed_from":"new"},{"comment":672133,"changed_to":"open","field":"status","created_on":"2011-09-26T21:16:06.378658+00:00","user":"ibuclaw","issue":239,"changed_from":"new"},{"comment":672133,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-09-26T21:16:06.381251+00:00","user":"ibuclaw","issue":239,"changed_from":"None"},{"comment":294870,"changed_to":"D2 - undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi' in libphobos\/std\/xml.d:1148 and libphobos\/std\/xml.d:689","field":"title","created_on":"2010-11-20T10:07:39.576124+00:00","user":"itecgo","issue":106,"changed_from":"D2:undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi' in libphobos\/std\/xml.d:1148 and libphobos\/std\/xml.d:689"},{"comment":6092382,"changed_to":"resolved","field":"status","created_on":"2013-09-17T10:01:30.367688+00:00","user":"ibuclaw","issue":271,"changed_from":"new"},{"comment":224406,"changed_to":"ibuclaw_stdcall.patch","field":"attachment","created_on":"2010-08-01T21:29:30.111594+00:00","user":"venix1","issue":47,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100801\/47\/ibuclaw_stdcall.patch"},{"comment":243471,"changed_to":"issue56-updates.patch","field":"attachment","created_on":"2010-09-12T17:24:31.367982+00:00","user":"ibuclaw","issue":56,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100912\/56\/issue56-updates.patch"},{"comment":985308,"changed_to":"resolved","field":"status","created_on":"2012-01-21T16:16:23.092329+00:00","user":"ibuclaw","issue":202,"changed_from":"open"},{"comment":238635,"changed_to":"resolved","field":"status","created_on":"2010-09-03T10:10:36.098185+00:00","user":"ibuclaw","issue":60,"changed_from":"new"},{"comment":430919,"changed_to":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..","field":"content","created_on":"2011-04-07T02:45:03.479661+00:00","user":"ricochet1k","issue":180,"changed_from":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/.."},{"comment":295614,"changed_to":"resolved","field":"status","created_on":"2010-11-21T00:16:07.322922+00:00","user":"ibuclaw","issue":106,"changed_from":"open"},{"comment":329307,"changed_to":"resolved","field":"status","created_on":"2011-01-02T19:31:50.723774+00:00","user":"ibuclaw","issue":105,"changed_from":"new"},{"comment":265755,"changed_to":"open","field":"status","created_on":"2010-10-12T16:12:31.445603+00:00","user":"ibuclaw","issue":71,"changed_from":"new"},{"comment":224828,"changed_to":"deh.patch","field":"attachment","created_on":"2010-08-02T17:19:16.538739+00:00","user":"ibuclaw","issue":50,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100802\/50\/deh.patch"},{"comment":416484,"changed_to":"mingw_stdioV0.patch","field":"attachment","created_on":"2011-03-26T00:10:43.878851+00:00","user":"venix1","issue":160,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110326\/160\/mingw_stdioV0.patch"},{"comment":654698,"changed_to":"open","field":"status","created_on":"2011-09-15T15:30:14.003619+00:00","user":"dsimcha","issue":226,"changed_from":"resolved"},{"comment":273059,"changed_to":"open","field":"status","created_on":"2010-10-22T14:23:11.527324+00:00","user":"ibuclaw","issue":74,"changed_from":"new"},{"comment":430907,"changed_to":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..","field":"content","created_on":"2011-04-07T02:32:24.852094+00:00","user":"ricochet1k","issue":180,"changed_from":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\r\n\r\n{{{\r\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \r\n    p_args=<value optimized out>) at ."},{"comment":416487,"changed_to":"mingw_stdioV0.patch","field":"attachment","created_on":"2011-03-26T00:12:05.228311+00:00","user":"venix1","issue":173,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110326\/173\/mingw_stdioV0.patch"},{"comment":416487,"changed_to":"resolved","field":"status","created_on":"2011-03-26T00:12:05.349658+00:00","user":"venix1","issue":173,"changed_from":"new"},{"comment":218072,"changed_to":"dmd2020fe.2.patch","field":"attachment","created_on":"2010-07-19T13:27:10.803384+00:00","user":"ibuclaw","issue":40,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100719\/40\/dmd2020fe.2.patch"},{"comment":218072,"changed_to":"enhancement","field":"kind","created_on":"2010-07-19T13:27:11.159520+00:00","user":"ibuclaw","issue":40,"changed_from":"bug"},{"comment":268358,"changed_to":"duplicate","field":"status","created_on":"2010-10-16T18:24:18.813878+00:00","user":"ibuclaw","issue":75,"changed_from":"new"},{"comment":335572,"changed_to":"resolved","field":"status","created_on":"2011-01-09T19:40:53.999965+00:00","user":"ibuclaw","issue":134,"changed_from":"open"},{"comment":668468,"changed_to":"resolved","field":"status","created_on":"2011-09-23T21:41:33.866373+00:00","user":"ibuclaw","issue":235,"changed_from":"new"},{"comment":9408141,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:16:27.573479+00:00","user":"ibuclaw","issue":288,"changed_from":"new"},{"comment":379059,"changed_to":"config.log","field":"attachment","created_on":"2011-02-21T15:17:15.849928+00:00","user":"Andrej08","issue":156,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110221\/156\/config.log"},{"comment":394075,"changed_to":"resolved","field":"status","created_on":"2011-03-06T22:37:42.531480+00:00","user":"ibuclaw","issue":161,"changed_from":"open"},{"comment":265185,"changed_to":"open","field":"status","created_on":"2010-10-11T22:01:12.718520+00:00","user":"ibuclaw","issue":38,"changed_from":"new"},{"comment":183915,"changed_to":"The problem is most noticeable with Tango's Thread.d as mentioned http:\/\/dsource.org\/projects\/tango\/ticket\/541.\n\nInspecting the output from GDC one notices a missing 0 on the first line which is where the error will always point to.\n\n{{{\n# Inline Asm\npus","field":"content","created_on":"2010-05-26T04:43:17.438879+00:00","user":"venix1","issue":22,"changed_from":"The problem is most notiable with Tango's Thread.d as mentioned http:\/\/dsource.org\/projects\/tango\/ticket\/541.\r\n\r\nInspecting the output from GDC one notices a missing 0 on the first line which is where the error will always point to.\r\n\r\n{{{\r\n# Inline Asm\r"},{"comment":183916,"changed_to":"inline_asm_segment_register_fix.patch","field":"attachment","created_on":"2010-05-26T04:43:54.224586+00:00","user":"venix1","issue":22,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100526\/22\/inline_asm_segment_register_fix.patch"},{"comment":642664,"changed_to":"open","field":"status","created_on":"2011-09-08T18:26:22.113264+00:00","user":"ibuclaw","issue":214,"changed_from":"resolved"},{"comment":1596292,"changed_to":"venix1","field":"responsible","created_on":"2012-06-27T00:16:30.964642+00:00","user":"venix1","issue":352,"changed_from":"None"},{"comment":331414,"changed_to":"open","field":"status","created_on":"2011-01-05T02:40:27.302207+00:00","user":"ibuclaw","issue":135,"changed_from":"new"},{"comment":331414,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-01-05T02:40:27.306989+00:00","user":"ibuclaw","issue":135,"changed_from":"None"},{"comment":139478,"changed_to":"resolved","field":"status","created_on":"2010-03-15T17:25:21.051995+00:00","user":"michaelp","issue":8,"changed_from":"new"},{"comment":1591634,"changed_to":"resolved","field":"status","created_on":"2012-06-26T03:49:56.757734+00:00","user":"ibuclaw","issue":284,"changed_from":"open"},{"comment":334484,"changed_to":"object.d","field":"attachment","created_on":"2011-01-07T23:15:57.751791+00:00","user":"tbone","issue":145,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110108\/145\/object.d"},{"comment":419034,"changed_to":"Attempting to rebuild MinGW using the <<changeset 509>> fails when compiling inline assembly.\n\nWhen compiling D1's std.math the following errors occur.\n{{{\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d: In function 'scalbn':\n..\/..\/..\/..\/src\/gcc-4.5.1\/li","field":"content","created_on":"2011-03-28T17:14:53.752950+00:00","user":"venix1","issue":175,"changed_from":"Attempting to rebuild MinGW using the <<changeset 509>> fails when compiling inline assembly.\r\n\r\nWhen compiling D1's std.math the following errors occur.\r\n{{{\r\n..\/..\/..\/..\/src\/gcc-4.5.1\/libphobos\/std\/math.d: In function 'scalbn':\r\n..\/..\/..\/..\/src\/gcc-4.5"},{"comment":232911,"changed_to":"resolved","field":"status","created_on":"2010-08-22T12:32:54.014387+00:00","user":"ibuclaw","issue":51,"changed_from":"open"},{"comment":571893,"changed_to":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n  \n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRA","field":"content","created_on":"2011-07-25T13:20:23.921646+00:00","user":"trass3r","issue":218,"changed_from":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!java\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n  \n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_"},{"comment":418144,"changed_to":"gdc_d1_d2.patch","field":"attachment","created_on":"2011-03-28T02:59:40.588616+00:00","user":"venix1","issue":159,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110328\/159\/gdc_d1_d2.patch"},{"comment":418144,"changed_to":"package-release.sh","field":"attachment","created_on":"2011-03-28T02:59:41.193018+00:00","user":"venix1","issue":159,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110328\/159\/package-release.sh"},{"comment":771480,"changed_to":"When trying to build GDC2 on Cygwin:\n\n{{{\nchecking for __libc_stack_end... no\nrm: cannot remove `core': Is a directory\nconfigure: error: No usable stack origin information\nrm: cannot remove `core': Is a directory\n}}}","field":"content","created_on":"2011-11-09T02:09:22.084120+00:00","user":"dsimcha","issue":256,"changed_from":"When trying to build GDC2 on Cygwin:\r\n\r\nchecking for __libc_stack_end... no\r\nrm: cannot remove `core': Is a directory\r\nconfigure: error: No usable stack origin information\r\nrm: cannot remove `core': Is a directory\r\n"},{"comment":645570,"changed_to":"resolved","field":"status","created_on":"2011-09-10T22:39:22.729032+00:00","user":"ibuclaw","issue":230,"changed_from":"new"},{"comment":231892,"changed_to":"resolved","field":"status","created_on":"2010-08-19T13:30:43.993737+00:00","user":"michaelp","issue":57,"changed_from":"new"},{"comment":465420,"changed_to":"I get an ICE when compiling with optimisations:\n\n{{{\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\n","field":"content","created_on":"2011-05-04T12:00:38.786526+00:00","user":"jordirovira","issue":205,"changed_from":"I get an ICE when compiling with optimisations:\r\n\r\n{{{\r\ngdc -O3 -c bug.d \r\nbug.d: In function ‘foo’:\r\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\r\nPlease submit a full bug report,\r\nwith preprocessed source if approp"},{"comment":238637,"changed_to":"resolved","field":"status","created_on":"2010-09-03T10:10:59.265294+00:00","user":"ibuclaw","issue":59,"changed_from":"new"},{"comment":408345,"changed_to":"resolved","field":"status","created_on":"2011-03-18T20:19:19.391437+00:00","user":"ibuclaw","issue":167,"changed_from":"open"},{"comment":648678,"changed_to":"resolved","field":"status","created_on":"2011-09-12T22:47:36.299873+00:00","user":"ibuclaw","issue":214,"changed_from":"open"},{"comment":439922,"changed_to":"issue188.patch","field":"attachment","created_on":"2011-04-13T23:34:38.820426+00:00","user":"ibuclaw","issue":188,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110414\/188\/issue188.patch"},{"comment":439922,"changed_to":"open","field":"status","created_on":"2011-04-13T23:34:38.936739+00:00","user":"ibuclaw","issue":188,"changed_from":"new"},{"comment":439922,"changed_to":"venix1","field":"responsible","created_on":"2011-04-13T23:34:38.938896+00:00","user":"ibuclaw","issue":188,"changed_from":"None"},{"comment":67863,"changed_to":"open","field":"status","created_on":"2009-10-24T11:36:51.517860+00:00","user":"goshawk","issue":2,"changed_from":"new"},{"comment":224481,"changed_to":"terror.patch","field":"attachment","created_on":"2010-08-02T00:07:04.383417+00:00","user":"ibuclaw","issue":51,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100802\/51\/terror.patch"},{"comment":301166,"changed_to":"open","field":"status","created_on":"2010-11-28T01:13:38.426571+00:00","user":"ibuclaw","issue":115,"changed_from":"new"},{"comment":333184,"changed_to":"resolved","field":"status","created_on":"2011-01-06T13:52:16.683459+00:00","user":"ibuclaw","issue":144,"changed_from":"new"},{"comment":579530,"changed_to":"duplicate","field":"status","created_on":"2011-07-30T16:14:04.009714+00:00","user":"ibuclaw","issue":190,"changed_from":"new"},{"comment":918927,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-01-02T02:12:56.956557+00:00","user":"ibuclaw","issue":295,"changed_from":"None"},{"comment":733459,"changed_to":"open","field":"status","created_on":"2011-10-24T03:08:13.514160+00:00","user":"venix1","issue":249,"changed_from":"resolved"},{"comment":329888,"changed_to":"open","field":"status","created_on":"2011-01-03T16:30:03.328948+00:00","user":"ibuclaw","issue":132,"changed_from":"new"},{"comment":984956,"changed_to":"LTO - ICE: in rtl_for_decl_init, at dwarf2out.c:16750","field":"title","created_on":"2012-01-21T12:21:05.784927+00:00","user":"ibuclaw","issue":304,"changed_from":"ICE: in rtl_for_decl_init, at dwarf2out.c:16750"},{"comment":669179,"changed_to":"invalid","field":"status","created_on":"2011-09-24T21:01:49.736854+00:00","user":"dsimcha","issue":237,"changed_from":"new"},{"comment":276236,"changed_to":"D1\/D2 - Wrong decimal value in error message","field":"title","created_on":"2010-10-27T12:08:53.255385+00:00","user":"ibuclaw","issue":79,"changed_from":"D1\/D2 - Wrong value in error message"},{"comment":191421,"changed_to":"dmd1047_rev93~ibuclaw.patch","field":"attachment","created_on":"2010-06-07T12:32:24.403663+00:00","user":"ibuclaw","issue":24,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100607\/24\/dmd1047_rev93%7Eibuclaw.patch"},{"comment":268211,"changed_to":"resolved","field":"status","created_on":"2010-10-16T12:23:02.116456+00:00","user":"ibuclaw","issue":72,"changed_from":"new"},{"comment":890552,"changed_to":"new","field":"status","created_on":"2011-12-20T14:52:20.832668+00:00","user":"art_","issue":289,"changed_from":"resolved"},{"comment":252052,"changed_to":"valist.patch","field":"attachment","created_on":"2010-09-21T18:54:21.433153+00:00","user":"ibuclaw","issue":1,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100921\/1\/valist.patch"},{"comment":124237,"changed_to":"GCC 4.3.1, GDC <<changeset 76:7ef3514fb27b>\n\nRecently I tried building GDC version 1 using  TDM's GCC\/mingw32 patches, build files, and Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following erro","field":"content","created_on":"2010-02-16T02:21:19.138418+00:00","user":"venix1","issue":9,"changed_from":"Recently I tried building GDC version 1 using <<changeset 76:7ef3514fb27b>> with TDM's GCC\/mingw32 patches and build files using Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\n{{{"},{"comment":591456,"changed_to":"invalid","field":"status","created_on":"2011-08-07T00:15:13.499960+00:00","user":"dsimcha","issue":223,"changed_from":"new"},{"comment":1463580,"changed_to":"Building the newest git version with gcc 4.7.0 fails with this error:\n\n{{{\n#!make\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphob","field":"content","created_on":"2012-05-25T09:29:25.075092+00:00","user":"Calrama","issue":343,"changed_from":"Building the newest git version with gcc 4.7.0 fails with this error:\n\n{{{\n#!make\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphob"},{"comment":885215,"changed_to":"resolved","field":"status","created_on":"2011-12-19T01:00:30.302788+00:00","user":"ibuclaw","issue":279,"changed_from":"open"},{"comment":224480,"changed_to":"zero_ip.patch","field":"attachment","created_on":"2010-08-02T00:07:04.052388+00:00","user":"venix1","issue":50,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100802\/50\/zero_ip.patch"},{"comment":354619,"changed_to":"open","field":"status","created_on":"2011-01-30T00:06:21.059881+00:00","user":"dsimcha","issue":137,"changed_from":"resolved"},{"comment":300599,"changed_to":"resolved","field":"status","created_on":"2010-11-26T22:32:30.859373+00:00","user":"ibuclaw","issue":110,"changed_from":"open"},{"comment":293851,"changed_to":"resolved","field":"status","created_on":"2010-11-19T01:25:25.591836+00:00","user":"ibuclaw","issue":103,"changed_from":"open"},{"comment":227671,"changed_to":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6)\n\nThis brings the list of supported versions (known to me) to be GCC 3.4.6, GCC 4.1.2, and GCC 4.3.5\n\nThis brings me to the following question: Which versions should w","field":"content","created_on":"2010-08-09T10:05:25.273508+00:00","user":"ibuclaw","issue":53,"changed_from":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6) - albeit with one minor quirk that you need to remove all config.cache files to build libphobos.\n\nThis brings the list of supported versions (known to me) to be GCC 3"},{"comment":1128505,"changed_to":"open","field":"status","created_on":"2012-02-28T14:39:10.253688+00:00","user":"ibuclaw","issue":316,"changed_from":"resolved"},{"comment":260433,"changed_to":"open","field":"status","created_on":"2010-10-04T22:31:43.410161+00:00","user":"ibuclaw","issue":69,"changed_from":"resolved"},{"comment":260433,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-10-04T22:31:43.450803+00:00","user":"ibuclaw","issue":69,"changed_from":"None"},{"comment":1104591,"changed_to":"Reduced from a failing std.algorithm \/ std.functional unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nThis is probably related to #307\n\nCompiling algorithm.d with -c and a GCC 4.6.2 compiler which was configured w","field":"content","created_on":"2012-02-21T21:19:22.163310+00:00","user":"jpf","issue":315,"changed_from":"Reduced from a failing std.algorithm \/ std.functional unittest as discussed here:\r\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\r\n\r\nCompiling algorithm.d with -c and a GCC 4.6.2 compiler which was configured with --enable-checking produces "},{"comment":291857,"changed_to":"open","field":"status","created_on":"2010-11-17T02:22:01.580796+00:00","user":"ibuclaw","issue":104,"changed_from":"new"},{"comment":291857,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-17T02:22:01.584641+00:00","user":"ibuclaw","issue":104,"changed_from":"None"},{"comment":404804,"changed_to":"resolved","field":"status","created_on":"2011-03-16T03:08:21.067985+00:00","user":"dsimcha","issue":139,"changed_from":"new"},{"comment":351327,"changed_to":"duplicate","field":"status","created_on":"2011-01-26T15:53:16.963804+00:00","user":"ibuclaw","issue":149,"changed_from":"new"},{"comment":288968,"changed_to":"open","field":"status","created_on":"2010-11-13T14:30:12.032199+00:00","user":"ibuclaw","issue":91,"changed_from":"new"},{"comment":288968,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-13T14:30:12.035657+00:00","user":"ibuclaw","issue":91,"changed_from":"None"},{"comment":284084,"changed_to":"resolved","field":"status","created_on":"2010-11-07T12:21:59.860532+00:00","user":"ibuclaw","issue":86,"changed_from":"new"},{"comment":139415,"changed_to":"resolved","field":"status","created_on":"2010-03-15T15:22:28.516933+00:00","user":"michaelp","issue":9,"changed_from":"new"},{"comment":200620,"changed_to":"resolved","field":"status","created_on":"2010-06-22T19:18:43.552140+00:00","user":"michaelp","issue":17,"changed_from":"new"},{"comment":256220,"changed_to":"duplicate","field":"status","created_on":"2010-09-27T21:54:52.713076+00:00","user":"ibuclaw","issue":40,"changed_from":"open"},{"comment":1652748,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:22:49.680453+00:00","user":"ibuclaw","issue":307,"changed_from":"new"},{"comment":575971,"changed_to":"venix1","field":"responsible","created_on":"2011-07-28T05:11:08.706767+00:00","user":"venix1","issue":195,"changed_from":"None"},{"comment":277858,"changed_to":"issue78.patch","field":"attachment","created_on":"2010-10-28T23:49:32.741825+00:00","user":"ibuclaw","issue":78,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101029\/78\/issue78.patch"},{"comment":277858,"changed_to":"open","field":"status","created_on":"2010-10-28T23:49:32.862952+00:00","user":"ibuclaw","issue":78,"changed_from":"new"},{"comment":67866,"changed_to":"open","field":"status","created_on":"2009-10-24T12:37:16.040688+00:00","user":"goshawk","issue":1,"changed_from":"new"},{"comment":67866,"changed_to":"enhancement","field":"kind","created_on":"2009-10-24T12:37:16.150253+00:00","user":"goshawk","issue":1,"changed_from":"bug"},{"comment":222619,"changed_to":"resolved","field":"status","created_on":"2010-07-28T14:18:33.328649+00:00","user":"ibuclaw","issue":42,"changed_from":"open"},{"comment":222619,"changed_to":"michaelp","field":"responsible","created_on":"2010-07-28T14:18:33.350001+00:00","user":"ibuclaw","issue":42,"changed_from":"None"},{"comment":287605,"changed_to":"None","field":"responsible","created_on":"2010-11-11T19:24:35.209226+00:00","user":"ibuclaw","issue":89,"changed_from":"opticron"},{"comment":393390,"changed_to":"03_gdc_mingw.diff","field":"attachment","created_on":"2011-03-06T00:34:39.501564+00:00","user":"ibuclaw","issue":49,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110306\/49\/03_gdc_mingw.diff"},{"comment":654909,"changed_to":"resolved","field":"status","created_on":"2011-09-15T17:31:05.390541+00:00","user":"venix1","issue":231,"changed_from":"new"},{"comment":252449,"changed_to":"arraybounds.patch","field":"attachment","created_on":"2010-09-22T13:07:18.806685+00:00","user":"venix1","issue":66,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100922\/66\/arraybounds.patch"},{"comment":417474,"changed_to":"resolved","field":"status","created_on":"2011-03-27T14:10:52.166817+00:00","user":"ibuclaw","issue":1,"changed_from":"open"},{"comment":1598210,"changed_to":"open","field":"status","created_on":"2012-06-27T11:34:08.073690+00:00","user":"ibuclaw","issue":341,"changed_from":"new"},{"comment":1598210,"changed_to":"enhancement","field":"kind","created_on":"2012-06-27T11:34:08.075651+00:00","user":"ibuclaw","issue":341,"changed_from":"bug"},{"comment":1598210,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-06-27T11:34:08.076628+00:00","user":"ibuclaw","issue":341,"changed_from":"None"},{"comment":1598210,"changed_to":"minor","field":"priority","created_on":"2012-06-27T11:34:08.078017+00:00","user":"ibuclaw","issue":341,"changed_from":"major"},{"comment":905307,"changed_to":"wontfix","field":"status","created_on":"2011-12-26T10:55:37.935684+00:00","user":"ibuclaw","issue":300,"changed_from":"new"},{"comment":502358,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\nEDIT: apparently SOME","field":"content","created_on":"2011-05-31T21:03:37.847969+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\r\n\r\nSee the output of {{{nm libgphobos2.a}}} attached.\r\n\r\nI'm also attaching the linking errors (where it also shows what versions I have installed)."},{"comment":244798,"changed_to":"resolved","field":"status","created_on":"2010-09-15T00:16:15.524215+00:00","user":"ibuclaw","issue":56,"changed_from":"open"},{"comment":338422,"changed_to":"\n{{{\n#!d\n\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    work","field":"content","created_on":"2011-01-12T17:46:40.685552+00:00","user":"tbolsh","issue":147,"changed_from":"\n{{{\n#!d\n\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    work"},{"comment":670424,"changed_to":"task","field":"kind","created_on":"2011-09-25T23:07:15.230839+00:00","user":"ibuclaw","issue":234,"changed_from":"enhancement"},{"comment":306833,"changed_to":"When  running a program on ARM, the GC immediately enters an infinite loop. Debugging shows that the entered loop is in gcx.d line 2179:\n{{{\nfor (; p < ptop; p += size)\n{\n     (cast(List *)p).next = *b;\n     *b = cast(List *)p;\n}\n}}}\np and ptop are corre","field":"content","created_on":"2010-12-04T10:44:12.430430+00:00","user":"jpf","issue":120,"changed_from":"When  running a program on ARM, the GC immediately enters an infinite loop. Debugging shows that the entered loop is in gcx.d line 2179:\r\n{{{\r\nfor (; p < ptop; p += size)\r\n{\r\n     (cast(List *)p).next = *b;\r\n     *b = cast(List *)p;\r\n}\r\n}}}\r\np and ptop a"},{"comment":1612609,"changed_to":"open","field":"status","created_on":"2012-07-01T08:24:16.395581+00:00","user":"ibuclaw","issue":346,"changed_from":"resolved"},{"comment":1612609,"changed_to":"venix1","field":"responsible","created_on":"2012-07-01T08:24:16.397068+00:00","user":"ibuclaw","issue":346,"changed_from":"ibuclaw"},{"comment":288960,"changed_to":"open","field":"status","created_on":"2010-11-13T14:21:17.101342+00:00","user":"ibuclaw","issue":90,"changed_from":"new"},{"comment":288960,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-13T14:21:17.110255+00:00","user":"ibuclaw","issue":90,"changed_from":"None"},{"comment":362721,"changed_to":"invalid","field":"status","created_on":"2011-02-06T13:58:27.086096+00:00","user":"ibuclaw","issue":150,"changed_from":"open"},{"comment":579526,"changed_to":"new","field":"status","created_on":"2011-07-30T16:13:10.493317+00:00","user":"ibuclaw","issue":78,"changed_from":"duplicate"},{"comment":303809,"changed_to":"open","field":"status","created_on":"2010-12-01T01:34:48.844345+00:00","user":"dsimcha","issue":109,"changed_from":"resolved"},{"comment":191753,"changed_to":"bug_foreach_ref-rev2.patch","field":"attachment","created_on":"2010-06-07T19:14:46.998234+00:00","user":"ibuclaw","issue":24,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100607\/24\/bug_foreach_ref-rev2.patch"},{"comment":6092343,"changed_to":"resolved","field":"status","created_on":"2013-09-17T09:57:58.905765+00:00","user":"ibuclaw","issue":335,"changed_from":"new"},{"comment":281052,"changed_to":"resolved","field":"status","created_on":"2010-11-02T23:30:31.874147+00:00","user":"ibuclaw","issue":83,"changed_from":"new"},{"comment":9408132,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:15:59.206988+00:00","user":"ibuclaw","issue":166,"changed_from":"new"},{"comment":362708,"changed_to":"open","field":"status","created_on":"2011-02-06T13:40:12.435733+00:00","user":"ibuclaw","issue":150,"changed_from":"new"},{"comment":214669,"changed_to":"resolved","field":"status","created_on":"2010-07-14T15:15:09.211592+00:00","user":"ibuclaw","issue":34,"changed_from":"new"},{"comment":289183,"changed_to":"resolved","field":"status","created_on":"2010-11-13T22:28:41.431111+00:00","user":"ibuclaw","issue":94,"changed_from":"new"},{"comment":579523,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-07-30T16:11:57.557405+00:00","user":"ibuclaw","issue":78,"changed_from":"None"},{"comment":289083,"changed_to":"resolved","field":"status","created_on":"2010-11-13T18:02:18.165273+00:00","user":"ibuclaw","issue":93,"changed_from":"open"},{"comment":303259,"changed_to":"open","field":"status","created_on":"2010-11-30T13:55:08.674546+00:00","user":"ibuclaw","issue":118,"changed_from":"new"},{"comment":303259,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-30T13:55:08.677953+00:00","user":"ibuclaw","issue":118,"changed_from":"None"},{"comment":294874,"changed_to":"D2 - compilation failed on files importing std.xml ","field":"title","created_on":"2010-11-20T10:10:22.189056+00:00","user":"itecgo","issue":106,"changed_from":"D2 - undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi' in libphobos\/std\/xml.d:1148 and libphobos\/std\/xml.d:689"},{"comment":788768,"changed_to":"resolved","field":"status","created_on":"2011-11-16T01:50:51.884901+00:00","user":"ibuclaw","issue":259,"changed_from":"new"},{"comment":322449,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-12-22T01:04:57.842932+00:00","user":"ibuclaw","issue":127,"changed_from":"None"},{"comment":591968,"changed_to":"resolved","field":"status","created_on":"2011-08-07T16:51:09.385750+00:00","user":"ibuclaw","issue":205,"changed_from":"open"},{"comment":217359,"changed_to":"-Wall should not error out compiler","field":"title","created_on":"2010-07-17T20:13:50.483392+00:00","user":"ibuclaw","issue":42,"changed_from":"-Wall should not error out compile"},{"comment":280092,"changed_to":"resolved","field":"status","created_on":"2010-11-01T19:38:40.727632+00:00","user":"michaelp","issue":76,"changed_from":"open"},{"comment":291630,"changed_to":"open","field":"status","created_on":"2010-11-16T20:18:06.146198+00:00","user":"ibuclaw","issue":99,"changed_from":"new"},{"comment":335573,"changed_to":"resolved","field":"status","created_on":"2011-01-09T19:42:11.757662+00:00","user":"ibuclaw","issue":141,"changed_from":"open"},{"comment":225695,"changed_to":"tokushr.patch","field":"attachment","created_on":"2010-08-04T14:12:46.310986+00:00","user":"ibuclaw","issue":43,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100804\/43\/tokushr.patch"},{"comment":225695,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-08-04T14:12:46.858551+00:00","user":"ibuclaw","issue":43,"changed_from":"None"},{"comment":246627,"changed_to":"resolved","field":"status","created_on":"2010-09-18T02:09:13.056471+00:00","user":"vgivanovic","issue":62,"changed_from":"open"},{"comment":67737,"changed_to":"goshawk","field":"responsible","created_on":"2009-10-23T23:38:25.099904+00:00","user":"goshawk","issue":2,"changed_from":"None"},{"comment":325692,"changed_to":"resolved","field":"status","created_on":"2010-12-27T18:40:18.482997+00:00","user":"ibuclaw","issue":122,"changed_from":"new"},{"comment":888606,"changed_to":"resolved","field":"status","created_on":"2011-12-20T00:13:07.524226+00:00","user":"debio","issue":193,"changed_from":"new"},{"comment":291583,"changed_to":"resolved","field":"status","created_on":"2010-11-16T19:18:35.125406+00:00","user":"ibuclaw","issue":98,"changed_from":"new"},{"comment":191418,"changed_to":"bug_foreach_ref~ibuclaw.patch","field":"attachment","created_on":"2010-06-07T12:25:05.817264+00:00","user":"ibuclaw","issue":24,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100607\/24\/bug_foreach_ref%7Eibuclaw.patch"},{"comment":198591,"changed_to":"resolved","field":"status","created_on":"2010-06-18T20:15:31.361215+00:00","user":"ibuclaw","issue":10,"changed_from":"open"},{"comment":1609833,"changed_to":"resolved","field":"status","created_on":"2012-06-29T22:02:51.556622+00:00","user":"venix1","issue":160,"changed_from":"open"},{"comment":225344,"changed_to":"open","field":"status","created_on":"2010-08-03T16:02:05.255196+00:00","user":"michaelp","issue":43,"changed_from":"new"},{"comment":277876,"changed_to":"invalid","field":"status","created_on":"2010-10-29T00:12:45.249913+00:00","user":"opticron","issue":12,"changed_from":"new"},{"comment":457384,"changed_to":"ABI: extern(D) calling convention should be reverse args","field":"title","created_on":"2011-04-27T22:50:34.035763+00:00","user":"ibuclaw","issue":202,"changed_from":"std.algorithm.reduce broken"},{"comment":907699,"changed_to":"resolved","field":"status","created_on":"2011-12-27T10:46:56.384254+00:00","user":"ibuclaw","issue":249,"changed_from":"open"},{"comment":289081,"changed_to":"resolved","field":"status","created_on":"2010-11-13T18:01:48.385876+00:00","user":"ibuclaw","issue":91,"changed_from":"open"},{"comment":9408149,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:16:46.693442+00:00","user":"ibuclaw","issue":210,"changed_from":"new"},{"comment":791763,"changed_to":"resolved","field":"status","created_on":"2011-11-16T23:52:43.444378+00:00","user":"ibuclaw","issue":255,"changed_from":"new"},{"comment":1638256,"changed_to":"resolved","field":"status","created_on":"2012-07-07T16:45:21.580786+00:00","user":"venix1","issue":352,"changed_from":"new"},{"comment":1598175,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:25:55.084780+00:00","user":"ibuclaw","issue":330,"changed_from":"open"},{"comment":208922,"changed_to":"open","field":"status","created_on":"2010-07-07T18:15:30.198366+00:00","user":"michaelp","issue":31,"changed_from":"new"},{"comment":289643,"changed_to":"resolved","field":"status","created_on":"2010-11-14T17:58:25.846849+00:00","user":"ibuclaw","issue":95,"changed_from":"new"},{"comment":454758,"changed_to":"resolved","field":"status","created_on":"2011-04-26T06:12:25.113039+00:00","user":"ibuclaw","issue":200,"changed_from":"open"},{"comment":1460727,"changed_to":"Building the newest git version with gcc 4.7.0 fails with this error:\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphobos'\nmake[2]:","field":"content","created_on":"2012-05-24T16:14:30.578211+00:00","user":"Calrama","issue":343,"changed_from":"Building the newest git version with gcc 4.7.0 fails with this error:\r\n\r\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\r\nmake[3]: Leaving directory `\/home\/cal\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphobos'\r\nma"},{"comment":1464671,"changed_to":"invalid","field":"status","created_on":"2012-05-25T14:35:24.419785+00:00","user":"venix1","issue":343,"changed_from":"new"},{"comment":1480399,"changed_to":"open","field":"status","created_on":"2012-05-30T01:35:05.514628+00:00","user":"venix1","issue":342,"changed_from":"new"},{"comment":1562333,"changed_to":"open","field":"status","created_on":"2012-06-18T19:26:17.264586+00:00","user":"ibuclaw","issue":349,"changed_from":"new"},{"comment":1476963,"changed_to":"config.log","field":"attachment","created_on":"2012-05-29T12:21:21.962624+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338294081.65\/284\/config.log"},{"comment":1476963,"changed_to":"lto02.log","field":"attachment","created_on":"2012-05-29T12:21:22.096821+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338294081.98\/284\/lto02.log"},{"comment":1476963,"changed_to":"lto02_flto.log","field":"attachment","created_on":"2012-05-29T12:21:22.214069+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338294082.1\/284\/lto02_flto.log"},{"comment":1476963,"changed_to":"lto04.d","field":"attachment","created_on":"2012-05-29T12:21:22.324877+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338294082.22\/284\/lto04.d"},{"comment":1476963,"changed_to":"lto04.log","field":"attachment","created_on":"2012-05-29T12:21:22.500345+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338294082.33\/284\/lto04.log"},{"comment":288976,"changed_to":"open","field":"status","created_on":"2010-11-13T14:37:03.250314+00:00","user":"ibuclaw","issue":93,"changed_from":"new"},{"comment":288976,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-13T14:37:03.254753+00:00","user":"ibuclaw","issue":93,"changed_from":"None"},{"comment":1012651,"changed_to":"resolved","field":"status","created_on":"2012-01-29T17:12:25.920206+00:00","user":"ibuclaw","issue":311,"changed_from":"new"},{"comment":905309,"changed_to":"resolved","field":"status","created_on":"2011-12-26T10:56:39.835588+00:00","user":"ibuclaw","issue":299,"changed_from":"new"},{"comment":295781,"changed_to":"open","field":"status","created_on":"2010-11-21T11:47:12.491810+00:00","user":"ibuclaw","issue":108,"changed_from":"new"},{"comment":1474954,"changed_to":"venix1","field":"responsible","created_on":"2012-05-29T02:58:46.018750+00:00","user":"venix1","issue":342,"changed_from":"None"},{"comment":622726,"changed_to":"blocker","field":"priority","created_on":"2011-08-27T02:28:29.121085+00:00","user":"dsimcha","issue":226,"changed_from":"major"},{"comment":289307,"changed_to":"[gdc-4.4 [D2] ICE with struct and variant","field":"title","created_on":"2010-11-14T02:01:00.258328+00:00","user":"jordirovira","issue":88,"changed_from":"ICE with struct and variant"},{"comment":203312,"changed_to":"open","field":"status","created_on":"2010-06-27T12:08:07.780231+00:00","user":"ibuclaw","issue":27,"changed_from":"new"},{"comment":203312,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-06-27T12:08:07.791389+00:00","user":"ibuclaw","issue":27,"changed_from":"None"},{"comment":280883,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-02T18:52:34.784867+00:00","user":"ibuclaw","issue":85,"changed_from":"None"},{"comment":591878,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-08-07T15:02:10.712685+00:00","user":"ibuclaw","issue":205,"changed_from":"None"},{"comment":885212,"changed_to":"open","field":"status","created_on":"2011-12-19T00:59:01.198497+00:00","user":"ibuclaw","issue":244,"changed_from":"new"},{"comment":885212,"changed_to":"critical","field":"priority","created_on":"2011-12-19T00:59:01.212430+00:00","user":"ibuclaw","issue":244,"changed_from":"major"},{"comment":150867,"changed_to":"open","field":"status","created_on":"2010-04-07T01:48:49.175885+00:00","user":"michaelp","issue":16,"changed_from":"new"},{"comment":182630,"changed_to":"{{{\nAfter compiling gdc and phobos for the mingw platform, when attempting to compile and link an executable the following error appears.\n\nInfo: resolving __iob by linking to __imp___iob (auto-importfu000001.o:(.idata$2+0xc): undefined reference to `libm","field":"content","created_on":"2010-05-24T06:24:06.197930+00:00","user":"venix1","issue":21,"changed_from":"After compiling gdc and phobos for the mingw platform, when attempting to compile and link an executable the following error appears.\r\n{{{\r\nInfo: resolving __iob by linking to __imp___iob (auto-importfu000001.o:(.idata$2+0xc): undefined reference to `lib"},{"comment":124222,"changed_to":"Recently I tried building GDC version 1 using <<changeset 76:7ef3514fb27b>> with TDM's GCC\/mingw32 patches and build files using Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\n{{{","field":"content","created_on":"2010-02-16T02:16:01.662250+00:00","user":"venix1","issue":9,"changed_from":"Recently I tried building GDC version 1 using <<changeset 76:7ef3514fb27b>> with TDM's GCC\/mingw32 patches and build files using Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\n{{{"},{"comment":561162,"changed_to":"issue213V1.patch","field":"attachment","created_on":"2011-07-17T03:18:26.490790+00:00","user":"venix1","issue":213,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110717\/213\/issue213V1.patch"},{"comment":296005,"changed_to":"issue108.patch","field":"attachment","created_on":"2010-11-21T17:14:33.220319+00:00","user":"ibuclaw","issue":108,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101121\/108\/issue108.patch"},{"comment":296005,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-21T17:14:33.344696+00:00","user":"ibuclaw","issue":108,"changed_from":"None"},{"comment":353574,"changed_to":"open","field":"status","created_on":"2011-01-28T14:53:17.884205+00:00","user":"ibuclaw","issue":97,"changed_from":"new"},{"comment":273164,"changed_to":"resolved","field":"status","created_on":"2010-10-22T17:07:15.276138+00:00","user":"michaelp","issue":74,"changed_from":"open"},{"comment":443580,"changed_to":"resolved","field":"status","created_on":"2011-04-16T20:57:31.707294+00:00","user":"venix1","issue":185,"changed_from":"open"},{"comment":782578,"changed_to":"resolved","field":"status","created_on":"2011-11-14T00:27:16.459258+00:00","user":"ibuclaw","issue":242,"changed_from":"open"},{"comment":633789,"changed_to":"issue214.patch","field":"attachment","created_on":"2011-09-03T10:06:29.810949+00:00","user":"ibuclaw","issue":214,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110903\/214\/issue214.patch"},{"comment":288441,"changed_to":"resolved","field":"status","created_on":"2010-11-12T18:35:05.597830+00:00","user":"ibuclaw","issue":87,"changed_from":"open"},{"comment":1354224,"changed_to":"I can't compile hello world with the new release.\n\nCode\n{{{\nimport std.stdio;\n\nint main(string[] args)\n{\n    writeln(\"Hello, world!\");\n    return 0;\n}\n\nError message is\n\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x82): undefined reference","field":"content","created_on":"2012-04-27T18:59:00.763117+00:00","user":"venix1","issue":338,"changed_from":"I can't compile hello world with the new release.\n\nCode\n{{{\nimport std.stdio;\n\nint main(string[] args)\n{\n    writeln(\"Hello, world!\");\n    return 0;\n}\n\nError message is\n\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x82): undefined reference"},{"comment":68049,"changed_to":"michaelp","field":"responsible","created_on":"2009-10-25T03:41:19.283435+00:00","user":"goshawk","issue":2,"changed_from":"goshawk"},{"comment":338417,"changed_to":"<code>\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    workaro","field":"content","created_on":"2011-01-12T17:42:12.459307+00:00","user":"tbolsh","issue":147,"changed_from":"alias immutable( ubyte )[6] MAC;\r\n\r\nvoid showTbolshBug1( MAC mac ){\r\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\r\n}\r\n    \r\nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\r\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\r\n}\r\n       \r\nvoid main(){\r\n    wor"},{"comment":441393,"changed_to":"resolved","field":"status","created_on":"2011-04-14T23:15:33.061630+00:00","user":"ibuclaw","issue":189,"changed_from":"new"},{"comment":419033,"changed_to":"registers.error","field":"attachment","created_on":"2011-03-28T17:14:10.397819+00:00","user":"venix1","issue":175,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110328\/175\/registers.error"},{"comment":259627,"changed_to":"resolved","field":"status","created_on":"2010-10-03T19:51:19.795942+00:00","user":"ibuclaw","issue":69,"changed_from":"open"},{"comment":233425,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-08-23T20:33:05.378657+00:00","user":"ibuclaw","issue":14,"changed_from":"None"},{"comment":1294839,"changed_to":"wontfix","field":"status","created_on":"2012-04-13T00:06:52.168161+00:00","user":"venix1","issue":332,"changed_from":"new"},{"comment":227797,"changed_to":"resolved","field":"status","created_on":"2010-08-09T15:17:00.242483+00:00","user":"michaelp","issue":46,"changed_from":"open"},{"comment":221208,"changed_to":"http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\n\nI think it would be a good idea to include information from that manual in the wiki, it took me some time to find that place again.\n\nIt's the only source explaining GNU {{{__attribute__}}}s in GDC, extended as","field":"content","created_on":"2010-07-25T20:00:58.636330+00:00","user":"trass3r","issue":45,"changed_from":"http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\r\n\r\nI think it would be a good idea to include information from that manual in the wiki, it took me some time to find that place again.\r\n\r\nIt's the only source explaining GNU __attribute__s in GDC, extended asse"},{"comment":204861,"changed_to":"phobos-testing.patch","field":"attachment","created_on":"2010-06-29T21:27:07.669614+00:00","user":"ibuclaw","issue":27,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100629\/27\/phobos-testing.patch"},{"comment":503978,"changed_to":"missing_symbols.txt","field":"attachment","created_on":"2011-06-02T01:46:39.816886+00:00","user":"dan.sanduleac","issue":210,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110602\/210\/missing_symbols.txt"},{"comment":301161,"changed_to":"open","field":"status","created_on":"2010-11-28T01:03:30.424654+00:00","user":"ibuclaw","issue":114,"changed_from":"new"},{"comment":433300,"changed_to":"resolved","field":"status","created_on":"2011-04-08T20:54:41.645967+00:00","user":"ibuclaw","issue":164,"changed_from":"open"},{"comment":1125957,"changed_to":"resolved","field":"status","created_on":"2012-02-27T22:10:02.225146+00:00","user":"ibuclaw","issue":319,"changed_from":"open"},{"comment":419471,"changed_to":"invalid","field":"status","created_on":"2011-03-29T01:01:01.219566+00:00","user":"venix1","issue":176,"changed_from":"new"},{"comment":323729,"changed_to":"resolved","field":"status","created_on":"2010-12-23T12:57:15.006464+00:00","user":"ibuclaw","issue":129,"changed_from":"new"},{"comment":930503,"changed_to":"resolved","field":"status","created_on":"2012-01-05T20:36:22.499849+00:00","user":"ibuclaw","issue":303,"changed_from":"new"},{"comment":3330879,"changed_to":"resolved","field":"status","created_on":"2013-03-06T17:37:49.000180+00:00","user":"ibuclaw","issue":316,"changed_from":"open"},{"comment":844052,"changed_to":"Really weird.\n\nDustMite has a really tough time reducing it, so here's the original: https:\/\/github.com\/adamdruppe\/misc-stuff-including-D-programming-language-web-stuff\/tree\/e5573750bd600b8ac88b54042a7793768ce58351\n\n{{{\n$ gdc -c arsd\/web.d\narsd\/web.d: In","field":"content","created_on":"2011-12-06T12:35:04.530068+00:00","user":"trass3r","issue":278,"changed_from":"Really weird.\r\n\r\nDustMite has a really tough time reducing it, so just get https:\/\/github.com\/adamdruppe\/misc-stuff-including-D-programming-language-web-stuff\/tree\/e5573750bd600b8ac88b54042a7793768ce58351\r\n\r\n{{{\r\n$ gdc -c arsd\/web.d\r\narsd\/web.d: In membe"},{"comment":214633,"changed_to":"duplicate","field":"status","created_on":"2010-07-14T14:45:00.571198+00:00","user":"ibuclaw","issue":39,"changed_from":"new"},{"comment":418142,"changed_to":"mingw_stdioV1.patch","field":"attachment","created_on":"2011-03-28T02:48:50.756765+00:00","user":"venix1","issue":160,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110328\/160\/mingw_stdioV1.patch"},{"comment":1949790,"changed_to":"Any chance of a new release? Has there been stable points more recently than July?\nWe rely on a lot of cutting edge D features, and totally fail at building it ourselves.","field":"content","created_on":"2012-09-11T00:47:16.130686+00:00","user":"venix1","issue":360,"changed_from":"Any chance of a new release? Has there been stable points more recently than July?\r\nWe rely on a lot of cutting edge D features, and totally fail at building it ourselves."},{"comment":1949790,"changed_to":"venix1","field":"responsible","created_on":"2012-09-11T00:47:16.132412+00:00","user":"venix1","issue":360,"changed_from":"None"},{"comment":559048,"changed_to":"I suggest we get rid of the -hg option.\nIf hg is installed it should automatically extract the revision.\nThen you don't have to reconfigure every time just to get a gdc with a proper hg revision in the -v output (which is extremely helpful for bug report","field":"content","created_on":"2011-07-14T23:03:24.630227+00:00","user":"trass3r","issue":216,"changed_from":"I suggest we get rid of the -hg option.\r\nIf hg is installed it should automatically extract the revision.\r\nThen you don't have to reconfigure every time just to get a gdc with a proper hg revision in the -v output (which is extremely helpful for bug repo"},{"comment":354528,"changed_to":"resolved","field":"status","created_on":"2011-01-29T20:46:39.792828+00:00","user":"ibuclaw","issue":109,"changed_from":"open"},{"comment":851886,"changed_to":"resolved","field":"status","created_on":"2011-12-08T14:37:39.953561+00:00","user":"dsimcha","issue":253,"changed_from":"new"},{"comment":552080,"changed_to":"venix1","field":"responsible","created_on":"2011-07-09T22:47:58.797429+00:00","user":"ibuclaw","issue":213,"changed_from":"ibuclaw"},{"comment":649801,"changed_to":"critical","field":"priority","created_on":"2011-09-13T12:56:18.144622+00:00","user":"dsimcha","issue":232,"changed_from":"major"},{"comment":299133,"changed_to":"resolved","field":"status","created_on":"2010-11-25T01:45:46.335426+00:00","user":"ibuclaw","issue":112,"changed_from":"open"},{"comment":819907,"changed_to":"Inconsistent mangling of extern(C++) when it comes to shared.","field":"title","created_on":"2011-11-28T11:31:44.586829+00:00","user":"deadalnix","issue":267,"changed_from":"Incosistent mangling of extern(C++) chen it comes to shared."},{"comment":280587,"changed_to":"resolved","field":"status","created_on":"2010-11-02T12:54:36.937716+00:00","user":"ibuclaw","issue":79,"changed_from":"new"},{"comment":526557,"changed_to":"venix1","field":"responsible","created_on":"2011-06-20T06:55:46.128548+00:00","user":"ibuclaw","issue":213,"changed_from":"None"},{"comment":335525,"changed_to":"invalid","field":"status","created_on":"2011-01-09T17:53:30.218840+00:00","user":"ibuclaw","issue":134,"changed_from":"new"},{"comment":1598171,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:24:47.104961+00:00","user":"ibuclaw","issue":333,"changed_from":"open"},{"comment":1354219,"changed_to":"I can't compile hello world with the new release.\n\nCode\n{{{\nimport std.stdio;\n\nint main(string[] args)\n{\n    writeln(\"Hello, world!\");\n    return 0;\n}\n\nError message is\n\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x82): undefined reference","field":"content","created_on":"2012-04-27T18:56:53.954194+00:00","user":"venix1","issue":338,"changed_from":"I can't compile hello world with the new release.\r\n\r\nCode\r\nimport std.stdio;\r\n\r\nint main(string[] args)\r\n{\r\n    writeln(\"Hello, world!\");\r\n    return 0;\r\n}\r\n\r\nError message is\r\n\r\nC:\\Users\\kw1\\AppData\\Local\\Temp\\ccLLc2A7.o:hello.d:(.text+0x82): undefined "},{"comment":307231,"changed_to":"open","field":"status","created_on":"2010-12-05T00:30:04.813950+00:00","user":"ibuclaw","issue":120,"changed_from":"new"},{"comment":3330950,"changed_to":"resolved","field":"status","created_on":"2013-03-06T17:44:05.904225+00:00","user":"ibuclaw","issue":280,"changed_from":"open"},{"comment":226487,"changed_to":"sjlj_fix_for_ert_catch.patch","field":"attachment","created_on":"2010-08-05T21:51:28.104740+00:00","user":"venix1","issue":50,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100805\/50\/sjlj_fix_for_ert_catch.patch"},{"comment":503984,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nIgnore {{{linking.txt}}}.","field":"content","created_on":"2011-06-02T01:50:34.914598+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nIgnore {{{linking.txt}}}."},{"comment":494685,"changed_to":"duplicate","field":"status","created_on":"2011-05-25T18:18:57.400274+00:00","user":"debio","issue":207,"changed_from":"new"},{"comment":252425,"changed_to":"{{{\n#!d\nextern (C) void printf(char*, ...);\n\nvoid main()\n{\n  byte[16] tmp;\n  byte[] utmp;\n  utmp = tmp[1..0];\n  \n  printf(\"%ud : %ud\\n\", utmp.length, tmp.length);\n}\n\n\/* Output:\n4294967295d : 16.  Forces GDC to throw OutOfMemory when trying to allocate sp","field":"content","created_on":"2010-09-22T11:47:38.385829+00:00","user":"venix1","issue":66,"changed_from":"{{{\r\n#!d\r\nextern (C) void printf(char*, ...);\r\n\r\nvoid main()\r\n{\r\n  byte[16] tmp;\r\n  byte[] utmp;\r\n  utmp = tmp[1..0];\r\n  \r\n  printf(\"%ud : %ud\\n\", utmp.length, tmp.length);\r\n}\r\n\r\n\/* Output:\r\n4294967295d : 16.  Forces GDC to throw OutOfMemory when trying "},{"comment":725287,"changed_to":"resolved","field":"status","created_on":"2011-10-19T20:14:02.913980+00:00","user":"ibuclaw","issue":249,"changed_from":"new"},{"comment":1598165,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:24:14.418377+00:00","user":"ibuclaw","issue":349,"changed_from":"open"},{"comment":225440,"changed_to":"open","field":"status","created_on":"2010-08-03T23:51:05.358689+00:00","user":"trass3r","issue":49,"changed_from":"new"},{"comment":288972,"changed_to":"open","field":"status","created_on":"2010-11-13T14:33:25.969698+00:00","user":"ibuclaw","issue":92,"changed_from":"new"},{"comment":288972,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-13T14:33:25.972594+00:00","user":"ibuclaw","issue":92,"changed_from":"None"},{"comment":612123,"changed_to":"invalid","field":"status","created_on":"2011-08-19T22:26:46.807657+00:00","user":"venix1","issue":228,"changed_from":"new"},{"comment":435503,"changed_to":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\n\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{B","field":"content","created_on":"2011-04-11T08:43:26.536361+00:00","user":"venix1","issue":185,"changed_from":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{BU"},{"comment":131288,"changed_to":"fix_param_zu.patch","field":"attachment","created_on":"2010-02-27T17:51:30.316798+00:00","user":"venix1","issue":9,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2010\/02\/fix_param_zu.patch"},{"comment":226437,"changed_to":"open","field":"status","created_on":"2010-08-05T20:18:01.734488+00:00","user":"michaelp","issue":46,"changed_from":"new"},{"comment":403394,"changed_to":"cc1d.c","field":"attachment","created_on":"2011-03-14T22:13:42.212980+00:00","user":"venix1","issue":159,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110314\/159\/cc1d.c"},{"comment":1223146,"changed_to":"on hold","field":"status","created_on":"2012-03-25T14:01:16.688931+00:00","user":"jpf","issue":270,"changed_from":"new"},{"comment":418141,"changed_to":"on hold","field":"status","created_on":"2011-03-28T02:45:47.560271+00:00","user":"venix1","issue":172,"changed_from":"new"},{"comment":829836,"changed_to":"open","field":"status","created_on":"2011-12-01T13:20:21.542188+00:00","user":"trass3r","issue":254,"changed_from":"resolved"},{"comment":221908,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-27T00:34:35.344701+00:00","user":"ibuclaw","issue":36,"changed_from":"None"},{"comment":269955,"changed_to":"resolved","field":"status","created_on":"2010-10-19T11:56:16.845663+00:00","user":"ibuclaw","issue":73,"changed_from":"new"},{"comment":782573,"changed_to":"alignment.patch","field":"attachment","created_on":"2011-11-14T00:20:05.125850+00:00","user":"ibuclaw","issue":215,"changed_from":"\/goshawk\/gdc\/issue-attachment\/215\/goshawk\/gdc\/1321230003.9\/215\/alignment.patch"},{"comment":835986,"changed_to":"resolved","field":"status","created_on":"2011-12-03T21:15:05.947102+00:00","user":"Andrej08","issue":273,"changed_from":"new"},{"comment":987809,"changed_to":"Throwing exception in ~this causes SEGV in runtime.","field":"title","created_on":"2012-01-22T19:39:57.293138+00:00","user":"ibuclaw","issue":308,"changed_from":"Accessing `this` or data members in class destructor"},{"comment":204486,"changed_to":"open","field":"status","created_on":"2010-06-29T11:52:32.610263+00:00","user":"ibuclaw","issue":28,"changed_from":"new"},{"comment":1012872,"changed_to":"resolved","field":"status","created_on":"2012-01-29T18:40:28.261263+00:00","user":"ibuclaw","issue":308,"changed_from":"new"},{"comment":113834,"changed_to":"seg fault on wrong arg type","field":"title","created_on":"2010-01-28T21:54:33.363328+00:00","user":"michaelp","issue":6,"changed_from":"std.conv.toInt seg faults on wrong arg"},{"comment":222724,"changed_to":"open","field":"status","created_on":"2010-07-28T18:46:20.275031+00:00","user":"michaelp","issue":47,"changed_from":"new"},{"comment":288938,"changed_to":"{{{select.d}}} fails to compile on 64bits Linux with the following message:\n\n{{{\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/ -i","field":"content","created_on":"2010-11-13T13:31:29.755479+00:00","user":"jmb","issue":90,"changed_from":"{{{select.d}}} fails to compile on 64bits Linux with the following message:\r\n\r\n{{{\r\n\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/gdc -B\/home\/jerome\/abs\/gdc2-hg\/src\/gcc-build\/.\/gcc\/ -B\/usr\/x86_64-unknown-linux-gnu\/bin\/ -B\/usr\/x86_64-unknown-linux-gnu\/lib\/"},{"comment":228418,"changed_to":"resolved","field":"status","created_on":"2010-08-10T22:47:55.723970+00:00","user":"michaelp","issue":33,"changed_from":"open"},{"comment":280513,"changed_to":"This is a proposal. I see no great reason or benefit to keep support for these versions of GCC around.\n\nAnyone got any reasons to object?\n\nRegards","field":"content","created_on":"2010-11-02T10:29:33.441711+00:00","user":"ibuclaw","issue":84,"changed_from":"This is a proposal. I see no great reason to keep support for these versions of GCC around.\r\n\r\nAnyone got any reasons to object?\r\n\r\nRegards"},{"comment":525775,"changed_to":"resolved","field":"status","created_on":"2011-06-19T11:29:20.594765+00:00","user":"ibuclaw","issue":163,"changed_from":"open"},{"comment":413099,"changed_to":"open","field":"status","created_on":"2011-03-23T00:43:39.543519+00:00","user":"Andrej08","issue":170,"changed_from":"new"},{"comment":430911,"changed_to":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..","field":"content","created_on":"2011-04-07T02:37:34.324092+00:00","user":"ricochet1k","issue":180,"changed_from":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/.."},{"comment":759640,"changed_to":"issue215.patch","field":"attachment","created_on":"2011-11-04T02:43:31.054158+00:00","user":"ibuclaw","issue":215,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20111104\/215\/issue215.patch"},{"comment":448362,"changed_to":"wontfix","field":"status","created_on":"2011-04-20T09:01:25.166313+00:00","user":"ibuclaw","issue":197,"changed_from":"new"},{"comment":376968,"changed_to":"resolved","field":"status","created_on":"2011-02-19T12:12:30.632057+00:00","user":"ibuclaw","issue":119,"changed_from":"new"},{"comment":1598180,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:27:21.469955+00:00","user":"ibuclaw","issue":328,"changed_from":"new"},{"comment":842358,"changed_to":"wontfix","field":"status","created_on":"2011-12-06T00:28:07.608903+00:00","user":"venix1","issue":194,"changed_from":"new"},{"comment":426104,"changed_to":"resolved","field":"status","created_on":"2011-04-03T20:03:52.731226+00:00","user":"ibuclaw","issue":177,"changed_from":"new"},{"comment":430908,"changed_to":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..","field":"content","created_on":"2011-04-07T02:35:27.129017+00:00","user":"ricochet1k","issue":180,"changed_from":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/.."},{"comment":885892,"changed_to":"proposal","field":"kind","created_on":"2011-12-19T08:05:13.627015+00:00","user":"ibuclaw","issue":293,"changed_from":"bug"},{"comment":885892,"changed_to":"minor","field":"priority","created_on":"2011-12-19T08:05:13.628604+00:00","user":"ibuclaw","issue":293,"changed_from":"major"},{"comment":592028,"changed_to":"resolved","field":"status","created_on":"2011-08-07T18:02:52.592480+00:00","user":"ibuclaw","issue":145,"changed_from":"new"},{"comment":883022,"changed_to":"open","field":"status","created_on":"2011-12-17T23:58:07.834577+00:00","user":"dsimcha","issue":279,"changed_from":"resolved"},{"comment":1652181,"changed_to":"wontfix","field":"status","created_on":"2012-07-11T07:51:32.806200+00:00","user":"ibuclaw","issue":135,"changed_from":"open"},{"comment":237706,"changed_to":"resolved","field":"status","created_on":"2010-09-01T17:24:16.412883+00:00","user":"ibuclaw","issue":50,"changed_from":"open"},{"comment":685242,"changed_to":"wontfix","field":"status","created_on":"2011-10-04T16:27:44.742790+00:00","user":"ibuclaw","issue":243,"changed_from":"new"},{"comment":1652178,"changed_to":"wontfix","field":"status","created_on":"2012-07-11T07:51:02.148181+00:00","user":"ibuclaw","issue":213,"changed_from":"open"},{"comment":229350,"changed_to":"tango_gdc.patch","field":"attachment","created_on":"2010-08-12T22:30:22.367004+00:00","user":"venix1","issue":49,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100813\/49\/tango_gdc.patch"},{"comment":219373,"changed_to":"langcc.patch","field":"attachment","created_on":"2010-07-21T20:31:59.105605+00:00","user":"trass3r","issue":44,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100721\/44\/langcc.patch"},{"comment":514518,"changed_to":"open","field":"status","created_on":"2011-06-09T23:24:37.038130+00:00","user":"ibuclaw","issue":211,"changed_from":"new"},{"comment":139015,"changed_to":"gdc-4.3 ices  whilst building libphobos std\/socket.d\n\nThe output received:\n{{{\nsocket.d: In member function 'getHostByAddr':\nsocket.d:577: internal compiler error: Segmentation fault\nPlease submit a full bug report,\nwith preprocessed source if appropriat","field":"content","created_on":"2010-03-14T10:58:55.502203+00:00","user":"ibuclaw","issue":11,"changed_from":"gdc-4.3 ices  whilst building libphobos std\/socket.d\r\n\r\nThe output received:\r\n{{{\r\nsocket.d: In member function 'getHostByAddr':\r\nsocket.d:577: internal compiler error: Segmentation fault\r\nPlease submit a full bug report,\r\nwith preprocessed source if app"},{"comment":801692,"changed_to":"resolved","field":"status","created_on":"2011-11-21T00:02:00.146529+00:00","user":"ibuclaw","issue":263,"changed_from":"new"},{"comment":224724,"changed_to":"resolved","field":"status","created_on":"2010-08-02T14:25:53.631427+00:00","user":"ibuclaw","issue":47,"changed_from":"open"},{"comment":465422,"changed_to":"I get an ICE when compiling with optimisations:\n\n{{{\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\n","field":"content","created_on":"2011-05-04T12:02:05.724614+00:00","user":"jordirovira","issue":205,"changed_from":"I get an ICE when compiling with optimisations:\n\n{{{\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\n"},{"comment":984958,"changed_to":"resolved","field":"status","created_on":"2012-01-21T12:23:17.132286+00:00","user":"ibuclaw","issue":11,"changed_from":"open"},{"comment":771483,"changed_to":"duplicate","field":"status","created_on":"2011-11-09T02:10:56.225833+00:00","user":"dsimcha","issue":256,"changed_from":"new"},{"comment":97935,"changed_to":"resolved","field":"status","created_on":"2009-12-24T18:15:26.384303+00:00","user":"michaelp","issue":5,"changed_from":"new"},{"comment":353840,"changed_to":"open","field":"status","created_on":"2011-01-28T19:45:01.294526+00:00","user":"ibuclaw","issue":115,"changed_from":"new"},{"comment":419153,"changed_to":"resolved","field":"status","created_on":"2011-03-28T18:41:24.343621+00:00","user":"venix1","issue":175,"changed_from":"new"},{"comment":298413,"changed_to":"invalid","field":"status","created_on":"2010-11-24T08:39:39.720778+00:00","user":"ibuclaw","issue":111,"changed_from":"new"},{"comment":441384,"changed_to":"resolved","field":"status","created_on":"2011-04-14T23:07:45.290166+00:00","user":"ibuclaw","issue":188,"changed_from":"open"},{"comment":882052,"changed_to":"resolved","field":"status","created_on":"2011-12-17T13:35:05.634658+00:00","user":"ibuclaw","issue":286,"changed_from":"new"},{"comment":435499,"changed_to":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{BUI","field":"content","created_on":"2011-04-11T08:43:13.029169+00:00","user":"venix1","issue":185,"changed_from":"{{{\r\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\r\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\r\nialCall, at d\/d-codegen.cc:1776\r\n}}}\r\nThe intrinsic is the long_double({{{BUILT_IN_SQRTL}}}) form of {{{BUILT_IN_S"},{"comment":232993,"changed_to":"resolved","field":"status","created_on":"2010-08-22T22:03:35.744132+00:00","user":"ibuclaw","issue":55,"changed_from":"new"},{"comment":227959,"changed_to":"resolved","field":"status","created_on":"2010-08-09T22:04:55.699640+00:00","user":"michaelp","issue":52,"changed_from":"new"},{"comment":404805,"changed_to":"resolved","field":"status","created_on":"2011-03-16T03:12:30.856266+00:00","user":"dsimcha","issue":114,"changed_from":"open"},{"comment":885208,"changed_to":"duplicate","field":"status","created_on":"2011-12-19T00:56:53.254870+00:00","user":"dsimcha","issue":291,"changed_from":"new"},{"comment":1120303,"changed_to":"invalid","field":"status","created_on":"2012-02-26T16:17:48.759715+00:00","user":"alexrp","issue":320,"changed_from":"new"},{"comment":227493,"changed_to":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6)\n\nThis brings the list of supported versions (known to me) to be GCC 3.4.6, GCC 4.1.2, and GCC 4.3.5\n\nThis brings me to the following question: Which versions should w","field":"content","created_on":"2010-08-08T19:01:33.912960+00:00","user":"ibuclaw","issue":53,"changed_from":"I've just pushed an update which re-enables building GDC with GCC-3.4 (tested on 3.4.6) - albeit with one minor quirk that you need to remove all config.cache files to build libphobos.\r\n\r\nThis brings the list of supported versions (known to me) to be GCC"},{"comment":139163,"changed_to":"open","field":"status","created_on":"2010-03-14T21:04:09.751367+00:00","user":"ibuclaw","issue":13,"changed_from":"new"},{"comment":131285,"changed_to":"version_windows.patch","field":"attachment","created_on":"2010-02-27T17:48:40.995133+00:00","user":"venix1","issue":8,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2010\/02\/version_windows.patch"},{"comment":1126176,"changed_to":"resolved","field":"status","created_on":"2012-02-27T23:28:10.279800+00:00","user":"ibuclaw","issue":316,"changed_from":"new"},{"comment":204067,"changed_to":"resolved","field":"status","created_on":"2010-06-28T20:06:59.734590+00:00","user":"michaelp","issue":26,"changed_from":"open"},{"comment":407133,"changed_to":"(ICE:fold-const.c:2792) using std.range.zip","field":"title","created_on":"2011-03-17T18:40:26.891067+00:00","user":"ibuclaw","issue":164,"changed_from":"Segfault on using std.range.zip"},{"comment":748851,"changed_to":"resolved","field":"status","created_on":"2011-10-30T20:28:31.422712+00:00","user":"ibuclaw","issue":78,"changed_from":"open"},{"comment":303485,"changed_to":"stdio.patch","field":"attachment","created_on":"2010-11-30T18:14:40.107928+00:00","user":"venix1","issue":100,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101130\/100\/stdio.patch"},{"comment":303485,"changed_to":"trivial.patch","field":"attachment","created_on":"2010-11-30T18:14:40.598227+00:00","user":"venix1","issue":100,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101130\/100\/trivial.patch"},{"comment":231058,"changed_to":"open","field":"status","created_on":"2010-08-17T16:17:15.548538+00:00","user":"michaelp","issue":56,"changed_from":"new"},{"comment":430910,"changed_to":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/..","field":"content","created_on":"2011-04-07T02:36:41.142021+00:00","user":"ricochet1k","issue":180,"changed_from":"I just updated GDC to the latest version, and whenever I use std.string.format(...) I get a segfault. Here's the top of a backtrace from gdb:\n\n{{{\n#0  0x00000000004251e9 in doFormatPtr (putc=..., arguments=..., \n    p_args=<value optimized out>) at ..\/.."},{"comment":1652184,"changed_to":"invalid","field":"status","created_on":"2012-07-11T07:54:02.231506+00:00","user":"ibuclaw","issue":324,"changed_from":"new"},{"comment":1612832,"changed_to":"wontfix","field":"status","created_on":"2012-07-01T11:10:08.793127+00:00","user":"ibuclaw","issue":313,"changed_from":"open"},{"comment":1353471,"changed_to":"invalid","field":"status","created_on":"2012-04-27T15:12:33.186306+00:00","user":"venix1","issue":339,"changed_from":"new"},{"comment":276232,"changed_to":"real.patch","field":"attachment","created_on":"2010-10-27T11:58:23.342001+00:00","user":"ibuclaw","issue":79,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101027\/79\/real.patch"},{"comment":140422,"changed_to":"open","field":"status","created_on":"2010-03-16T22:08:40.488293+00:00","user":"michaelp","issue":11,"changed_from":"new"},{"comment":571277,"changed_to":"I try to build GDC (based on the last source codes) with MingW GCC 2.5.2 + MSYS On Windows server 2008, and got this error messages seen belown:\n\n\/home\/Administrator\/build\/gcc\/.\/gcc\/gdc -B\/home\/Administrator\/build\/gcc\/.\/gcc\/ -\nL\/home\/Administrator\/build\/","field":"content","created_on":"2011-07-25T03:27:53.569731+00:00","user":"heromyth","issue":217,"changed_from":"I try to build GDC (based on the last source codes) with Mingw GCC 2.5.2 + MSYS, and got this error messages seen belown:\r\n\r\n\/home\/Administrator\/build\/gcc\/.\/gcc\/gdc -B\/home\/Administrator\/build\/gcc\/.\/gcc\/ -\r\nL\/home\/Administrator\/build\/gcc\/i686-pc-mingw32\/"},{"comment":888750,"changed_to":"resolved","field":"status","created_on":"2011-12-20T01:11:41.097536+00:00","user":"ibuclaw","issue":289,"changed_from":"new"},{"comment":888750,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-12-20T01:11:41.099199+00:00","user":"ibuclaw","issue":289,"changed_from":"None"},{"comment":918975,"changed_to":"resolved","field":"status","created_on":"2012-01-02T03:14:06.621191+00:00","user":"ibuclaw","issue":274,"changed_from":"new"},{"comment":1561378,"changed_to":"open","field":"status","created_on":"2012-06-18T15:27:16.152336+00:00","user":"ibuclaw","issue":351,"changed_from":"new"},{"comment":1561378,"changed_to":"venix1","field":"responsible","created_on":"2012-06-18T15:27:16.154636+00:00","user":"ibuclaw","issue":351,"changed_from":"None"},{"comment":377355,"changed_to":"resolved","field":"status","created_on":"2011-02-19T23:56:42.188556+00:00","user":"dsimcha","issue":154,"changed_from":"new"},{"comment":407145,"changed_to":"resolved","field":"status","created_on":"2011-03-17T18:53:58.712310+00:00","user":"ibuclaw","issue":164,"changed_from":"new"},{"comment":731260,"changed_to":"resolved","field":"status","created_on":"2011-10-22T17:32:10.344251+00:00","user":"ibuclaw","issue":247,"changed_from":"open"},{"comment":256193,"changed_to":"resolved","field":"status","created_on":"2010-09-27T20:55:54.098431+00:00","user":"ibuclaw","issue":65,"changed_from":"open"},{"comment":1652687,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:07:54.312093+00:00","user":"ibuclaw","issue":310,"changed_from":"new"},{"comment":435501,"changed_to":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{BU","field":"content","created_on":"2011-04-11T08:43:20.975675+00:00","user":"venix1","issue":185,"changed_from":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{BUI"},{"comment":503976,"changed_to":"Missing symbols of libgphobos2.a","field":"title","created_on":"2011-06-02T01:44:54.916618+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Missing symbols in libgphobos2.a"},{"comment":670359,"changed_to":"open","field":"status","created_on":"2011-09-25T21:46:48.050131+00:00","user":"ibuclaw","issue":234,"changed_from":"new"},{"comment":670359,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-09-25T21:46:48.052325+00:00","user":"ibuclaw","issue":234,"changed_from":"None"},{"comment":293765,"changed_to":"D2 - destructor not called on array of structs","field":"title","created_on":"2010-11-18T22:48:10.872198+00:00","user":"ibuclaw","issue":103,"changed_from":"D2 - destructor not called on array of classes\/structs"},{"comment":9408048,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:11:59.060127+00:00","user":"ibuclaw","issue":357,"changed_from":"new"},{"comment":223713,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-30T17:09:30.705683+00:00","user":"ibuclaw","issue":40,"changed_from":"None"},{"comment":309623,"changed_to":"resolved","field":"status","created_on":"2010-12-07T19:32:21.493130+00:00","user":"ibuclaw","issue":113,"changed_from":"new"},{"comment":329801,"changed_to":"invalid","field":"status","created_on":"2011-01-03T14:20:21.568649+00:00","user":"ibuclaw","issue":131,"changed_from":"new"},{"comment":381198,"changed_to":"resolved","field":"status","created_on":"2011-02-23T01:05:52.238813+00:00","user":"ibuclaw","issue":151,"changed_from":"open"},{"comment":291861,"changed_to":"resolved","field":"status","created_on":"2010-11-17T02:33:40.647532+00:00","user":"ibuclaw","issue":102,"changed_from":"new"},{"comment":866213,"changed_to":"venix1","field":"responsible","created_on":"2011-12-13T02:40:59.331869+00:00","user":"venix1","issue":285,"changed_from":"None"},{"comment":379417,"changed_to":"open","field":"status","created_on":"2011-02-21T20:21:18.686139+00:00","user":"ibuclaw","issue":156,"changed_from":"new"},{"comment":451238,"changed_to":"-fsection-anchors broken on ARM","field":"title","created_on":"2011-04-22T11:39:04.747052+00:00","user":"jpf","issue":120,"changed_from":"GC enters an infinite loop on ARM"},{"comment":838384,"changed_to":"resolved","field":"status","created_on":"2011-12-04T22:36:33.351427+00:00","user":"ibuclaw","issue":275,"changed_from":"new"},{"comment":838384,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-12-04T22:36:33.353461+00:00","user":"ibuclaw","issue":275,"changed_from":"None"},{"comment":113647,"changed_to":"Code that seg faults:\n\n{{{\n\nvoid f( char[] c )\n{\n}\nvoid main()\n{\n\tchar c = '2';\n\tf( c );\n}\n\n}}}\n\nError:\n\n{{{\ntoint.d:7: Error: function toint.f (char[]) does not match parameter types (char)\ntoint.d:0: internal compiler error: Segmentation fault\nPlease s","field":"content","created_on":"2010-01-28T14:17:52.277243+00:00","user":"michaelp","issue":6,"changed_from":"Code that seg faults:\r\n\r\n{{{\r\n\r\nimport std.conv;\r\nvoid main()\r\n{\r\n    char c = ' ';\r\n    int i = toInt( c );\r\n}\r\n}}}\r\n\r\nError:\r\n\r\n{{{\r\ntoint.d:5: Error: function std.conv.toInt (char[]) does not match parameter types (char)\r\ntoint.d:0: internal compiler "},{"comment":9408158,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:17:01.218891+00:00","user":"ibuclaw","issue":208,"changed_from":"new"},{"comment":189242,"changed_to":"resolved","field":"status","created_on":"2010-06-03T22:39:36.752467+00:00","user":"goshawk","issue":22,"changed_from":"new"},{"comment":1350842,"changed_to":"invalid","field":"status","created_on":"2012-04-27T03:09:06.810235+00:00","user":"venix1","issue":337,"changed_from":"new"},{"comment":429440,"changed_to":"resolved","field":"status","created_on":"2011-04-06T00:17:30.646173+00:00","user":"dsimcha","issue":143,"changed_from":"open"},{"comment":413049,"changed_to":"open","field":"status","created_on":"2011-03-23T00:03:28.101825+00:00","user":"Andrej08","issue":170,"changed_from":"new"},{"comment":984172,"changed_to":"resolved","field":"status","created_on":"2012-01-21T02:00:44.011579+00:00","user":"ibuclaw","issue":306,"changed_from":"open"},{"comment":221907,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-27T00:34:01.549188+00:00","user":"ibuclaw","issue":38,"changed_from":"None"},{"comment":301150,"changed_to":"Test case:\n\n{{{\nimport core.memory, std.stdio;\n\nclass C {\n    uint num;\n}\n\nC c;\n\nvoid main() {\n    c = new C;\n    c.num = 31415;\n\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    foreach(arr; arrs) {\n        auto","field":"content","created_on":"2010-11-28T00:41:00.526358+00:00","user":"dsimcha","issue":115,"changed_from":"Test case:\r\n\r\n{{{\r\nimport core.memory, std.stdio;\r\n\r\nclass C {\r\n    uint num;\r\n}\r\n\r\nC c;\r\n\r\nvoid main() {\r\n    c = new C;\r\n    c.num = 31415;\r\n\r\n    uint[][] arrs;\r\n    foreach(i; 0..40) {\r\n        arrs ~= new uint[1_048_576];\r\n    }\r\n\r\n    foreach(arr; "},{"comment":1505563,"changed_to":"lto02.d","field":"attachment","created_on":"2012-06-04T18:44:39.870341+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338835479.55\/284\/lto02.d"},{"comment":1505563,"changed_to":"lto02.log","field":"attachment","created_on":"2012-06-04T18:44:39.977604+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338835479.88\/284\/lto02.log"},{"comment":646986,"changed_to":"issue229_D2.patch","field":"attachment","created_on":"2011-09-12T02:57:29.214886+00:00","user":"venix1","issue":229,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110912\/229\/issue229_D2.patch"},{"comment":591969,"changed_to":"resolved","field":"status","created_on":"2011-08-07T16:52:28.451434+00:00","user":"ibuclaw","issue":198,"changed_from":"new"},{"comment":1543073,"changed_to":"This code:\n{{{\nimport std.json;\n\nstring text = \"10\";\nJSONValue root = parseJSON( text );\n}}}\n\nCauses compile errors like so (compiled for 64bit):\n{{{\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.json.parseJSON!(string).parseJSON.getChar","field":"content","created_on":"2012-06-13T13:57:10.411819+00:00","user":"TurkeyMan","issue":350,"changed_from":"This code:\r\n{{{\r\nstring text = \"10\";\r\nJSONValue root = parseJSON( text );\r\n}}}\r\n\r\nCauses compile errors like so (compiled for 64bit):\r\n{{{\r\nC:\\Users\\manue\\AppData\\Local\\Temp\\ccOay8GG.o: In function `std.json.parseJSON!(string).parseJSON.getChar!(true).ge"},{"comment":723083,"changed_to":"open","field":"status","created_on":"2011-10-18T22:23:38.303883+00:00","user":"ibuclaw","issue":247,"changed_from":"new"},{"comment":888627,"changed_to":"on hold","field":"status","created_on":"2011-12-20T00:18:28.048953+00:00","user":"trass3r","issue":254,"changed_from":"open"},{"comment":1125361,"changed_to":"resolved","field":"status","created_on":"2012-02-27T19:37:10.764466+00:00","user":"ibuclaw","issue":318,"changed_from":"new"},{"comment":401309,"changed_to":"The following code segfaults GDC revision 488, compiled with GCC 4.4.5, at compile time.  This happens regardless of whether the flags -O, -inline, -release, or -m32\/-m64 are set.\n\n{{{\nvoid fun(R)(R range) {\n    void inner() {}\n\n    foreach(elem; range) ","field":"content","created_on":"2011-03-12T22:56:52.156073+00:00","user":"dsimcha","issue":163,"changed_from":"The following code segfaults GDC revision 488, compiled with GCC 4.4.5, regardless of whether the flags -O, -inline, -release, or -m32\/-m64 are set.\r\n\r\n{{{\r\nvoid fun(R)(R range) {\r\n    void inner() {}\r\n\r\n    foreach(elem; range) {\r\n        inner();\r\n    "},{"comment":224061,"changed_to":"open","field":"status","created_on":"2010-07-31T22:30:08.657995+00:00","user":"ibuclaw","issue":51,"changed_from":"new"},{"comment":256722,"changed_to":"Cannot cast to structs of same type size","field":"title","created_on":"2010-09-28T20:12:30.332122+00:00","user":"ibuclaw","issue":68,"changed_from":"Cannot cast to structs of same size"},{"comment":323438,"changed_to":"open","field":"status","created_on":"2010-12-23T01:12:19.315857+00:00","user":"ibuclaw","issue":128,"changed_from":"new"},{"comment":274360,"changed_to":"Code:\n\n{{{\nvoid main()\n{\n\tchar c = cast(char)\" \";\n}\n}}}\n\nError message:\n\n{{{\nIn file included from <builtin>:1:\nstringtocharcast.d: In function ‘main’:\nstringtocharcast.d:3: error: aggregate value used where an integer was expected\n}}}\n\nWhat's expected:\n","field":"content","created_on":"2010-10-24T23:31:24.649842+00:00","user":"michaelp","issue":76,"changed_from":"Code:\r\n\r\n{{{\r\nvoid main()\r\n{\r\n\tchar c = cast(char)\" \";\r\n}\r\n}}}\r\n\r\nError message:\r\n\r\n{{{\r\nIn file included from <builtin>:1:\r\nstringtocharcast.d: In function ‘main’:\r\nstringtocharcast.d:3: error: aggregate value used where an integer was expected\r\n}}}\r\n\r\n"},{"comment":418568,"changed_to":"open","field":"status","created_on":"2011-03-28T10:37:13.577983+00:00","user":"ibuclaw","issue":174,"changed_from":"new"},{"comment":418568,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-28T10:37:13.582646+00:00","user":"ibuclaw","issue":174,"changed_from":"None"},{"comment":431165,"changed_to":"open","field":"status","created_on":"2011-04-07T07:48:46.785205+00:00","user":"ibuclaw","issue":180,"changed_from":"new"},{"comment":431165,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-07T07:48:46.788490+00:00","user":"ibuclaw","issue":180,"changed_from":"None"},{"comment":194865,"changed_to":"resolved","field":"status","created_on":"2010-06-12T17:24:24.460322+00:00","user":"ibuclaw","issue":23,"changed_from":"open"},{"comment":1652792,"changed_to":"open","field":"status","created_on":"2012-07-11T10:34:02.267817+00:00","user":"ibuclaw","issue":280,"changed_from":"new"},{"comment":415372,"changed_to":"open","field":"status","created_on":"2011-03-24T22:07:18.193979+00:00","user":"ibuclaw","issue":163,"changed_from":"new"},{"comment":426105,"changed_to":"resolved","field":"status","created_on":"2011-04-03T20:04:36.283116+00:00","user":"ibuclaw","issue":169,"changed_from":"open"},{"comment":1258973,"changed_to":"Code:\n\n{{{\nstring GetPublicMembers()\n{\n\tstring members;\n\tforeach(m; __traits(allMembers, remedy.testmodule))\n\t{\n\t\tmembers ~= m;\n\t}\n\n\tstatic assert(0, members);\n\n\treturn members;\n}\n}}}\n\n{{{\nDMD2:\nC:\\Users\\venix\\projects\\fusion\\fail>c:\\dmd2\\windows\\bin\\dmd","field":"content","created_on":"2012-04-03T15:21:14.056438+00:00","user":"venix1","issue":328,"changed_from":"Code:\n\n{{{\nstring GetPublicMembers()\n{\n\tstring members;\n\tforeach(m; __traits(allMembers, remedy.testmodule))\n\t{\n\t\tmembers ~= m;\n\t}\n\n\tstatic assert(0, members);\n\n\treturn members;\n}\n}}}\n\nDMD2:\nC:\\Users\\venix\\projects\\fusion\\fail>c:\\dmd2\\windows\\bin\\dmd.exe"},{"comment":859264,"changed_to":"resolved","field":"status","created_on":"2011-12-10T16:29:05.841839+00:00","user":"venix1","issue":277,"changed_from":"new"},{"comment":335532,"changed_to":"open","field":"status","created_on":"2011-01-09T18:09:00.234148+00:00","user":"ibuclaw","issue":134,"changed_from":"invalid"},{"comment":458975,"changed_to":"resolved","field":"status","created_on":"2011-04-29T01:52:10.576007+00:00","user":"venix1","issue":196,"changed_from":"new"},{"comment":1652582,"changed_to":"resolved","field":"status","created_on":"2012-07-11T09:43:04.362864+00:00","user":"ibuclaw","issue":350,"changed_from":"new"},{"comment":503982,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nIgnore {{{linking.txt}}}.","field":"content","created_on":"2011-06-02T01:49:10.181205+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\n{{{\n# examples for on"},{"comment":674105,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-09-27T20:40:43.601723+00:00","user":"ibuclaw","issue":242,"changed_from":"None"},{"comment":838277,"changed_to":"\"immutable\" in the following program is an error, but causes the compiler to segfault:\n\n------------------------------------------------------------\n{{{\ninterface I\n{\n   void m(int arg);\n}\n\nclass C : I\n{\n   void m(immutable int arg) {}\n}\n\nvoid run() {\n  ","field":"content","created_on":"2011-12-04T21:58:06.020644+00:00","user":"ibuclaw","issue":275,"changed_from":"\"immutable\" in the following program is an error, but causes the compiler to segfault:\r\n\r\n------------------------------------------------------------\r\ninterface I\r\n{\r\n   void m(int arg);\r\n}\r\n\r\nclass C : I\r\n{\r\n   void m(immutable int arg) {}\r\n}\r\n\r\nvoid r"},{"comment":1607584,"changed_to":"Makefile","field":"attachment","created_on":"2012-06-29T11:43:37.627621+00:00","user":"Calrama","issue":354,"changed_from":"\/goshawk\/gdc\/issue-attachment\/354\/goshawk\/gdc\/1340970217.36\/354\/Makefile"},{"comment":1607584,"changed_to":"log.txt","field":"attachment","created_on":"2012-06-29T11:43:37.775291+00:00","user":"Calrama","issue":354,"changed_from":"\/goshawk\/gdc\/issue-attachment\/354\/goshawk\/gdc\/1340970217.64\/354\/log.txt"},{"comment":1607584,"changed_to":"undref.zip","field":"attachment","created_on":"2012-06-29T11:43:37.974375+00:00","user":"Calrama","issue":354,"changed_from":"\/goshawk\/gdc\/issue-attachment\/354\/goshawk\/gdc\/1340970217.78\/354\/undref.zip"},{"comment":305566,"changed_to":"mingw.patch","field":"attachment","created_on":"2010-12-02T17:56:03.464031+00:00","user":"venix1","issue":100,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101202\/100\/mingw.patch"},{"comment":875518,"changed_to":"resolved","field":"status","created_on":"2011-12-15T10:34:20.023689+00:00","user":"venix1","issue":285,"changed_from":"new"},{"comment":291378,"changed_to":"D1\/D2 - bogus this pointer in nested functions","field":"title","created_on":"2010-11-16T15:21:33.847124+00:00","user":"ibuclaw","issue":101,"changed_from":"D1\/D2 - "},{"comment":920948,"changed_to":"resolved","field":"status","created_on":"2012-01-03T00:33:27.362665+00:00","user":"ibuclaw","issue":240,"changed_from":"new"},{"comment":920948,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-01-03T00:33:27.367389+00:00","user":"ibuclaw","issue":240,"changed_from":"None"},{"comment":1598222,"changed_to":"open","field":"status","created_on":"2012-06-27T11:36:01.760629+00:00","user":"ibuclaw","issue":354,"changed_from":"new"},{"comment":1598222,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-06-27T11:36:01.763938+00:00","user":"ibuclaw","issue":354,"changed_from":"None"},{"comment":456027,"changed_to":"issue196.patch","field":"attachment","created_on":"2011-04-27T02:57:24.548624+00:00","user":"venix1","issue":196,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110427\/196\/issue196.patch"},{"comment":456027,"changed_to":"venix1","field":"responsible","created_on":"2011-04-27T02:57:24.670863+00:00","user":"venix1","issue":196,"changed_from":"None"},{"comment":292568,"changed_to":"open","field":"status","created_on":"2010-11-17T18:16:41.201344+00:00","user":"ibuclaw","issue":89,"changed_from":"new"},{"comment":905319,"changed_to":"resolved","field":"status","created_on":"2011-12-26T11:02:07.820377+00:00","user":"ibuclaw","issue":298,"changed_from":"new"},{"comment":224046,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-31T19:19:11.727072+00:00","user":"ibuclaw","issue":47,"changed_from":"None"},{"comment":813274,"changed_to":"resolved","field":"status","created_on":"2011-11-24T21:53:01.308503+00:00","user":"ibuclaw","issue":266,"changed_from":"new"},{"comment":514617,"changed_to":"invalid","field":"status","created_on":"2011-06-10T01:55:50.141493+00:00","user":"dsimcha","issue":211,"changed_from":"open"},{"comment":1266200,"changed_to":"open","field":"status","created_on":"2012-04-05T08:31:40.323052+00:00","user":"ibuclaw","issue":330,"changed_from":"new"},{"comment":1266200,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-04-05T08:31:40.337847+00:00","user":"ibuclaw","issue":330,"changed_from":"None"},{"comment":331443,"changed_to":"invalid","field":"status","created_on":"2011-01-05T03:35:54.167596+00:00","user":"ibuclaw","issue":136,"changed_from":"new"},{"comment":150119,"changed_to":"resolved","field":"status","created_on":"2010-04-06T02:03:36.602342+00:00","user":"michaelp","issue":2,"changed_from":"open"},{"comment":254248,"changed_to":"resolved","field":"status","created_on":"2010-09-23T09:59:50.857492+00:00","user":"ibuclaw","issue":66,"changed_from":"open"},{"comment":246738,"changed_to":"open","field":"status","created_on":"2010-09-18T12:16:40.002764+00:00","user":"ibuclaw","issue":65,"changed_from":"new"},{"comment":285777,"changed_to":"open","field":"status","created_on":"2010-11-09T17:33:15.201505+00:00","user":"ibuclaw","issue":87,"changed_from":"new"},{"comment":285777,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-09T17:33:15.213586+00:00","user":"ibuclaw","issue":87,"changed_from":"None"},{"comment":1652604,"changed_to":"resolved","field":"status","created_on":"2012-07-11T09:47:10.749311+00:00","user":"ibuclaw","issue":323,"changed_from":"new"},{"comment":256190,"changed_to":"resolved","field":"status","created_on":"2010-09-27T20:54:47.051625+00:00","user":"ibuclaw","issue":63,"changed_from":"new"},{"comment":902686,"changed_to":"An example:\n{{{\nimport core.sync.mutex;\nimport std.stdio;\n\nclass DebugMutex : Mutex {\n    this() {}\n    this(Object o) {\n        super(o);\n    }\n    override void lock() {\n        super.lock();\n        writeln(\"lock\");\n    }\n    override void unlock() {\n","field":"content","created_on":"2011-12-24T05:04:44.565919+00:00","user":"debio","issue":297,"changed_from":"An example:\r\n{{{\r\nimport core.sync.mutex;\r\nimport std.stdio;\r\n\r\nclass DebugMutex : Mutex {\r\n    this() {}\r\n    this(Object o) {\r\n        super(o);\r\n    }\r\n    override void lock() {\r\n        super.lock();\r\n        writeln(\"lock\");\r\n    }\r\n    override vo"},{"comment":298864,"changed_to":"issue112.patch","field":"attachment","created_on":"2010-11-24T17:59:52.274444+00:00","user":"ibuclaw","issue":112,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101124\/112\/issue112.patch"},{"comment":797855,"changed_to":"resolved","field":"status","created_on":"2011-11-18T20:48:33.822958+00:00","user":"ibuclaw","issue":262,"changed_from":"new"},{"comment":827628,"changed_to":"As an example is better than a long discourse :\n{{{\nmodule fail;\n\nextern(C++) void foo1(void*);\nextern(C++) void bar1(shared void*);\n\npragma(msg, foo1.mangleof);\npragma(msg, bar1.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, this","field":"content","created_on":"2011-11-30T20:56:57.138102+00:00","user":"ibuclaw","issue":267,"changed_from":"As an example is better than a long discourse :\nmodule fail;\n\nextern(C++) void foo1(void*);\nextern(C++) void bar1(shared void*);\n\npragma(msg, foo1.mangleof);\npragma(msg, bar1.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, this mak"},{"comment":288978,"changed_to":"new","field":"status","created_on":"2010-11-13T14:37:55.648670+00:00","user":"jmb","issue":93,"changed_from":"open"},{"comment":224784,"changed_to":"open","field":"status","created_on":"2010-08-02T15:31:16.315732+00:00","user":"ibuclaw","issue":50,"changed_from":"new"},{"comment":224784,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-08-02T15:31:16.343184+00:00","user":"ibuclaw","issue":50,"changed_from":"None"},{"comment":803094,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-11-21T14:02:31.503340+00:00","user":"trass3r","issue":265,"changed_from":"None"},{"comment":9408030,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:11:05.815556+00:00","user":"ibuclaw","issue":162,"changed_from":"new"},{"comment":575969,"changed_to":"resolved","field":"status","created_on":"2011-07-28T05:09:25.722972+00:00","user":"venix1","issue":206,"changed_from":"new"},{"comment":444109,"changed_to":"resolved","field":"status","created_on":"2011-04-17T14:18:32.609990+00:00","user":"ibuclaw","issue":192,"changed_from":"new"},{"comment":902211,"changed_to":"resolved","field":"status","created_on":"2011-12-23T20:27:30.711879+00:00","user":"ibuclaw","issue":287,"changed_from":"new"},{"comment":592126,"changed_to":"resolved","field":"status","created_on":"2011-08-07T20:57:31.319042+00:00","user":"ibuclaw","issue":124,"changed_from":"new"},{"comment":707623,"changed_to":"resolved","field":"status","created_on":"2011-10-11T19:00:51.037275+00:00","user":"ibuclaw","issue":96,"changed_from":"new"},{"comment":9408060,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:12:32.976744+00:00","user":"ibuclaw","issue":347,"changed_from":"open"},{"comment":433921,"changed_to":"proposal","field":"kind","created_on":"2011-04-09T16:27:40.780923+00:00","user":"axeoth","issue":182,"changed_from":"bug"},{"comment":274389,"changed_to":"open","field":"status","created_on":"2010-10-25T01:35:41.669047+00:00","user":"michaelp","issue":76,"changed_from":"new"},{"comment":430376,"changed_to":"resolved","field":"status","created_on":"2011-04-06T16:26:53.546438+00:00","user":"ibuclaw","issue":99,"changed_from":"open"},{"comment":1652800,"changed_to":"wontfix","field":"status","created_on":"2012-07-11T10:35:46.373730+00:00","user":"ibuclaw","issue":146,"changed_from":"new"},{"comment":293036,"changed_to":"resolved","field":"status","created_on":"2010-11-18T09:37:38.811014+00:00","user":"ibuclaw","issue":89,"changed_from":"open"},{"comment":325679,"changed_to":"resolved","field":"status","created_on":"2010-12-27T18:18:01.425289+00:00","user":"ibuclaw","issue":109,"changed_from":"new"},{"comment":1652565,"changed_to":"resolved","field":"status","created_on":"2012-07-11T09:39:57.782670+00:00","user":"ibuclaw","issue":246,"changed_from":"open"},{"comment":6091416,"changed_to":"resolved","field":"status","created_on":"2013-09-17T08:57:54.179401+00:00","user":"ibuclaw","issue":346,"changed_from":"open"},{"comment":263038,"changed_to":"resolved","field":"status","created_on":"2010-10-07T20:45:57.593471+00:00","user":"ibuclaw","issue":70,"changed_from":"open"},{"comment":579516,"changed_to":"resolved","field":"status","created_on":"2011-07-30T16:05:17.493423+00:00","user":"ibuclaw","issue":220,"changed_from":"new"},{"comment":194867,"changed_to":"resolved","field":"status","created_on":"2010-06-12T17:27:17.823727+00:00","user":"ibuclaw","issue":24,"changed_from":"open"},{"comment":885200,"changed_to":"duplicate","field":"status","created_on":"2011-12-19T00:53:11.435535+00:00","user":"ibuclaw","issue":291,"changed_from":"new"},{"comment":503973,"changed_to":"patch.txt","field":"attachment","created_on":"2011-06-02T01:43:03.356278+00:00","user":"dan.sanduleac","issue":209,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110602\/209\/patch.txt"},{"comment":503973,"changed_to":"resolved","field":"status","created_on":"2011-06-02T01:43:03.476810+00:00","user":"dan.sanduleac","issue":209,"changed_from":"new"},{"comment":288992,"changed_to":"open","field":"status","created_on":"2010-11-13T15:00:23.842680+00:00","user":"jmb","issue":93,"changed_from":"new"},{"comment":1598329,"changed_to":"resolved","field":"status","created_on":"2012-06-27T12:05:09.332517+00:00","user":"alexrp","issue":312,"changed_from":"open"},{"comment":299744,"changed_to":"open","field":"status","created_on":"2010-11-25T20:25:10.753362+00:00","user":"ibuclaw","issue":101,"changed_from":"new"},{"comment":299744,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-25T20:25:10.757205+00:00","user":"ibuclaw","issue":101,"changed_from":"None"},{"comment":211981,"changed_to":"resolved","field":"status","created_on":"2010-07-13T19:23:33.100310+00:00","user":"ibuclaw","issue":32,"changed_from":"new"},{"comment":782611,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-11-14T01:01:07.584641+00:00","user":"ibuclaw","issue":215,"changed_from":"None"},{"comment":242626,"changed_to":"open","field":"status","created_on":"2010-09-10T09:04:36.603990+00:00","user":"ibuclaw","issue":62,"changed_from":"new"},{"comment":242626,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-09-10T09:04:36.613351+00:00","user":"ibuclaw","issue":62,"changed_from":"None"},{"comment":332760,"changed_to":"wontfix","field":"status","created_on":"2011-01-06T01:06:51.189254+00:00","user":"ibuclaw","issue":142,"changed_from":"new"},{"comment":303289,"changed_to":"open","field":"status","created_on":"2010-11-30T14:34:47.416712+00:00","user":"ibuclaw","issue":100,"changed_from":"new"},{"comment":303289,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-30T14:34:47.419999+00:00","user":"ibuclaw","issue":100,"changed_from":"None"},{"comment":626095,"changed_to":"open","field":"status","created_on":"2011-08-29T19:09:12.214354+00:00","user":"ibuclaw","issue":214,"changed_from":"new"},{"comment":310826,"changed_to":"resolved","field":"status","created_on":"2010-12-09T00:16:28.938647+00:00","user":"ibuclaw","issue":121,"changed_from":"open"},{"comment":294868,"changed_to":"D2:undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi' in libphobos\/std\/xml.d:1148 and libphobos\/std\/xml.d:689","field":"title","created_on":"2010-11-20T10:07:21.882318+00:00","user":"itecgo","issue":106,"changed_from":"undefined reference to `_D6object31__T16AssociativeArrayTAyaTxAyaZ16AssociativeArray7opApplyMFMDFKAyaKxAyaZiZi' in libphobos\/std\/xml.d:1148 and libphobos\/std\/xml.d:689"},{"comment":458960,"changed_to":"Continued from [[https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/170\/problems-relating-to-windows-binaries#comment-448541|issue 170]].\n\nThe erroneous GIMPLE code is a result of ArrayLiteralExp::toElem always setting TREE_STATIC on the constructor.\n\nIn the event ","field":"content","created_on":"2011-04-29T01:31:20.370491+00:00","user":"venix1","issue":203,"changed_from":"Continued from [[https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/170\/problems-relating-to-windows-binaries#comment-448541| #170]].\r\n\r\nThe erroneous GIMPLE code is a result of ArrayLiteralExp::toElem always setting TREE_STATIC on the constructor.\r\n\r\nIn the event "},{"comment":245803,"changed_to":"resolved","field":"status","created_on":"2010-09-16T18:57:07.276339+00:00","user":"ibuclaw","issue":28,"changed_from":"on hold"},{"comment":919024,"changed_to":"resolved","field":"status","created_on":"2012-01-02T04:04:19.222847+00:00","user":"ibuclaw","issue":281,"changed_from":"new"},{"comment":391271,"changed_to":"relocatable.patch","field":"attachment","created_on":"2011-03-03T18:36:05.541161+00:00","user":"venix1","issue":158,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110303\/158\/relocatable.patch"},{"comment":435508,"changed_to":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\nError:\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_doubl","field":"content","created_on":"2011-04-11T08:44:31.947478+00:00","user":"venix1","issue":185,"changed_from":"Edit: MinGW, <<changeset 531>>, GCC-4.5.1\n\n\n{{{\n..\/..\/..\/libphobos\/std\/math.d: In function 'acosh':\n..\/..\/..\/libphobos\/std\/math.d:686:0: internal compiler error: in maybeExpandSpec\nialCall, at d\/d-codegen.cc:1776\n}}}\nThe intrinsic is the long_double({{{B"},{"comment":650836,"changed_to":"resolved","field":"status","created_on":"2011-09-13T21:22:47.077325+00:00","user":"ibuclaw","issue":232,"changed_from":"new"},{"comment":920952,"changed_to":"open","field":"status","created_on":"2012-01-03T00:35:44.972724+00:00","user":"ibuclaw","issue":45,"changed_from":"new"},{"comment":920952,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-01-03T00:35:44.982641+00:00","user":"ibuclaw","issue":45,"changed_from":"None"},{"comment":579522,"changed_to":"wontfix","field":"status","created_on":"2011-07-30T16:10:01.533287+00:00","user":"ibuclaw","issue":182,"changed_from":"new"},{"comment":1118068,"changed_to":"resolved","field":"status","created_on":"2012-02-25T17:23:28.540773+00:00","user":"ibuclaw","issue":314,"changed_from":"new"},{"comment":909199,"changed_to":"resolved","field":"status","created_on":"2011-12-27T22:14:02.791611+00:00","user":"ibuclaw","issue":258,"changed_from":"new"},{"comment":577060,"changed_to":"resolved","field":"status","created_on":"2011-07-28T20:51:35.032577+00:00","user":"venix1","issue":219,"changed_from":"new"},{"comment":1125358,"changed_to":"resolved","field":"status","created_on":"2012-02-27T19:36:52.028478+00:00","user":"ibuclaw","issue":321,"changed_from":"new"},{"comment":6092317,"changed_to":"resolved","field":"status","created_on":"2013-09-17T09:56:01.731605+00:00","user":"ibuclaw","issue":244,"changed_from":"open"},{"comment":525715,"changed_to":"resolved","field":"status","created_on":"2011-06-19T09:59:18.322229+00:00","user":"ibuclaw","issue":212,"changed_from":"new"},{"comment":838272,"changed_to":"open","field":"status","created_on":"2011-12-04T21:55:02.911138+00:00","user":"ibuclaw","issue":236,"changed_from":"new"},{"comment":1125553,"changed_to":"open","field":"status","created_on":"2012-02-27T20:23:06.092587+00:00","user":"ibuclaw","issue":319,"changed_from":"new"},{"comment":330404,"changed_to":"resolved","field":"status","created_on":"2011-01-04T05:28:08.206023+00:00","user":"ibuclaw","issue":133,"changed_from":"open"},{"comment":582600,"changed_to":"issue217.patch","field":"attachment","created_on":"2011-08-01T22:07:22.748767+00:00","user":"venix1","issue":217,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110802\/217\/issue217.patch"},{"comment":582600,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-08-01T22:07:22.868318+00:00","user":"venix1","issue":217,"changed_from":"None"},{"comment":902943,"changed_to":"resolved","field":"status","created_on":"2011-12-24T11:06:39.666424+00:00","user":"ibuclaw","issue":297,"changed_from":"new"},{"comment":1327070,"changed_to":"When gdmd -run is used to run a D file in scripting mode, it runs the compiled-on-the-fly program with an additional include argument that can interfere with the program's expected command-line argument.\n\nMinimal example attached.  If I run,\n\n   gdmd -ru","field":"content","created_on":"2012-04-21T03:57:46.656339+00:00","user":"WebDrake","issue":335,"changed_from":"When gdmd -run is used to run a D file in scripting mode, it runs the compiled-on-the-fly program with an additional include argument that can interfere with the program's expected command-line argument.\r\n\r\nMinimal example attached.  If I run,\r\n\r\n   gdmd"},{"comment":338462,"changed_to":"wontfix","field":"status","created_on":"2011-01-12T18:38:11.537384+00:00","user":"ibuclaw","issue":148,"changed_from":"new"},{"comment":1504473,"changed_to":"This program:\n\n{{{\nimport core.simd;\nvoid main()\n{\n    float4 a;\n    a = a * a;\n}\n}}}\n\nFails to compile with a recent MinGW release. The error message is:\n\n{{{\na.d:6: Error: incompatible types for ((a) * (a)): '__vector(float[4LU])' and '__vector(float[4","field":"content","created_on":"2012-06-04T14:41:41.728486+00:00","user":"jkrempus","issue":346,"changed_from":"This program:\r\n\r\n{{{\r\nimport core.simd;\r\nvoid main()\r\n{\r\n    float4 a;\r\n    a = a * a;\r\n}\r\n}}}\r\n\r\nFails to compile with a recent MinGW release. The error message is:\r\n\r\na.d:6: Error: incompatible types for ((a) * (a)): '__vector(float[4LU])' and '__vecto"},{"comment":200365,"changed_to":"open","field":"status","created_on":"2010-06-22T10:28:56.042178+00:00","user":"goshawk","issue":26,"changed_from":"new"},{"comment":561141,"changed_to":"issue213V0.patch","field":"attachment","created_on":"2011-07-17T02:10:58.765858+00:00","user":"venix1","issue":213,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110717\/213\/issue213V0.patch"},{"comment":6092393,"changed_to":"resolved","field":"status","created_on":"2013-09-17T10:02:07.144731+00:00","user":"ibuclaw","issue":250,"changed_from":"new"},{"comment":531030,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-06-23T06:38:42.350540+00:00","user":"ibuclaw","issue":214,"changed_from":"None"},{"comment":452436,"changed_to":"changes.diff","field":"attachment","created_on":"2011-04-23T16:55:59.401185+00:00","user":"venix1","issue":170,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110423\/170\/changes.diff"},{"comment":684398,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-10-04T10:54:32.228346+00:00","user":"jpf","issue":120,"changed_from":"None"},{"comment":299867,"changed_to":"resolved","field":"status","created_on":"2010-11-26T01:09:31.538891+00:00","user":"ibuclaw","issue":101,"changed_from":"open"},{"comment":227846,"changed_to":"resolved","field":"status","created_on":"2010-08-09T17:20:50.366013+00:00","user":"ibuclaw","issue":29,"changed_from":"open"},{"comment":720004,"changed_to":"resolved","field":"status","created_on":"2011-10-17T20:35:02.657405+00:00","user":"ibuclaw","issue":248,"changed_from":"new"},{"comment":338478,"changed_to":"open","field":"status","created_on":"2011-01-12T19:12:13.192632+00:00","user":"ibuclaw","issue":109,"changed_from":"resolved"},{"comment":508133,"changed_to":"resolved","field":"status","created_on":"2011-06-05T19:58:54.412985+00:00","user":"ibuclaw","issue":204,"changed_from":"new"},{"comment":592123,"changed_to":"resolved","field":"status","created_on":"2011-08-07T20:56:15.465703+00:00","user":"ibuclaw","issue":97,"changed_from":"open"},{"comment":685249,"changed_to":"open","field":"status","created_on":"2011-10-04T16:31:21.881342+00:00","user":"ibuclaw","issue":78,"changed_from":"new"},{"comment":685249,"changed_to":"blocker","field":"priority","created_on":"2011-10-04T16:31:21.883858+00:00","user":"ibuclaw","issue":78,"changed_from":"major"},{"comment":294916,"changed_to":"open","field":"status","created_on":"2010-11-20T12:18:45.998845+00:00","user":"ibuclaw","issue":107,"changed_from":"new"},{"comment":294916,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-20T12:18:46.005955+00:00","user":"ibuclaw","issue":107,"changed_from":"None"},{"comment":1104180,"changed_to":"Reduced from a failing std.file unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nCompiling file.d with -c -O2 and a GCC 4.6.2 compiler which was configured with --enable-checking produces this output:\n{{{\nfile.d: I","field":"content","created_on":"2012-02-21T19:18:11.134486+00:00","user":"jpf","issue":314,"changed_from":"Reduced from a failing std.file unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nCompiling file.d with -c -O2 produces this output:\n{{{\nfile.d: In function 'file.blah':\nfile.d:3:0: error: non-trivial conversion at "},{"comment":379420,"changed_to":"GCC-4.5.0 - ICE(tree-sra.c:1405): when building Phobos","field":"title","created_on":"2011-02-21T20:24:26.205044+00:00","user":"ibuclaw","issue":156,"changed_from":"ICE when building Phobos on Windows, x86, changeset 475"},{"comment":322046,"changed_to":"open","field":"status","created_on":"2010-12-21T15:50:39.686156+00:00","user":"ibuclaw","issue":127,"changed_from":"new"},{"comment":148793,"changed_to":"open","field":"status","created_on":"2010-04-03T01:15:53.666627+00:00","user":"michaelp","issue":14,"changed_from":"new"},{"comment":265883,"changed_to":"multilib.diff","field":"attachment","created_on":"2010-10-12T19:36:45.724339+00:00","user":"opticron","issue":71,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101012\/71\/multilib.diff"},{"comment":287596,"changed_to":"D1\/D2 - Error initialising struct with static array","field":"title","created_on":"2010-11-11T19:18:54.547956+00:00","user":"ibuclaw","issue":89,"changed_from":"D1\/D2 - Error initialising static array in a struct."},{"comment":731410,"changed_to":"resolved","field":"status","created_on":"2011-10-22T19:23:52.142520+00:00","user":"ibuclaw","issue":224,"changed_from":"new"},{"comment":238902,"changed_to":"resolved","field":"status","created_on":"2010-09-03T23:27:10.033003+00:00","user":"ibuclaw","issue":54,"changed_from":"new"},{"comment":3330888,"changed_to":"resolved","field":"status","created_on":"2013-03-06T17:38:34.323758+00:00","user":"ibuclaw","issue":358,"changed_from":"new"},{"comment":393492,"changed_to":"dirty_stdio.patch","field":"attachment","created_on":"2011-03-06T04:15:51.299304+00:00","user":"venix1","issue":49,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110306\/49\/dirty_stdio.patch"},{"comment":882115,"changed_to":"resolved","field":"status","created_on":"2011-12-17T14:43:47.465004+00:00","user":"ibuclaw","issue":282,"changed_from":"new"},{"comment":246737,"changed_to":"zlib.patch","field":"attachment","created_on":"2010-09-18T12:16:32.929560+00:00","user":"ibuclaw","issue":65,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100918\/65\/zlib.patch"},{"comment":411271,"changed_to":"resolved","field":"status","created_on":"2011-03-21T20:41:46.929266+00:00","user":"ibuclaw","issue":168,"changed_from":"new"},{"comment":246419,"changed_to":"resolved","field":"status","created_on":"2010-09-17T17:53:11.652641+00:00","user":"ibuclaw","issue":64,"changed_from":"new"},{"comment":428913,"changed_to":"resolved","field":"status","created_on":"2011-04-05T17:16:07.278427+00:00","user":"ibuclaw","issue":178,"changed_from":"new"},{"comment":252424,"changed_to":"open","field":"status","created_on":"2010-09-22T11:45:42.078466+00:00","user":"ibuclaw","issue":66,"changed_from":"new"},{"comment":280850,"changed_to":"open","field":"status","created_on":"2010-11-02T17:56:21.946487+00:00","user":"ibuclaw","issue":85,"changed_from":"new"},{"comment":223399,"changed_to":"dllimport_fix.patch","field":"attachment","created_on":"2010-07-29T23:10:06.831224+00:00","user":"venix1","issue":21,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100730\/21\/dllimport_fix.patch"},{"comment":303993,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-12-01T08:14:56.310779+00:00","user":"ibuclaw","issue":115,"changed_from":"None"},{"comment":372941,"changed_to":"wontfix","field":"status","created_on":"2011-02-16T04:17:54.648344+00:00","user":"dsimcha","issue":140,"changed_from":"new"},{"comment":437347,"changed_to":"invalid","field":"status","created_on":"2011-04-12T11:29:20.698073+00:00","user":"ibuclaw","issue":186,"changed_from":"new"},{"comment":1652685,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:06:58.954084+00:00","user":"ibuclaw","issue":315,"changed_from":"new"},{"comment":246824,"changed_to":"check.log","field":"attachment","created_on":"2010-09-18T15:54:21.925556+00:00","user":"vgivanovic","issue":62,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100918\/62\/check.log"},{"comment":442077,"changed_to":"resolved","field":"status","created_on":"2011-04-15T11:53:11.386202+00:00","user":"ibuclaw","issue":187,"changed_from":"new"},{"comment":1598226,"changed_to":"open","field":"status","created_on":"2012-06-27T11:37:28.192755+00:00","user":"ibuclaw","issue":312,"changed_from":"new"},{"comment":411598,"changed_to":"resolved","field":"status","created_on":"2011-03-22T02:56:58.751175+00:00","user":"venix1","issue":49,"changed_from":"open"},{"comment":190494,"changed_to":"dmd1047_rev92~ibuclaw.patch","field":"attachment","created_on":"2010-06-05T18:50:22.347532+00:00","user":"ibuclaw","issue":24,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100605\/24\/dmd1047_rev92%7Eibuclaw.patch"},{"comment":225953,"changed_to":"resolved","field":"status","created_on":"2010-08-05T00:31:54.148477+00:00","user":"ibuclaw","issue":43,"changed_from":"on hold"},{"comment":605128,"changed_to":"resolved","field":"status","created_on":"2011-08-15T19:41:13.227315+00:00","user":"ibuclaw","issue":225,"changed_from":"new"},{"comment":413092,"changed_to":"new","field":"status","created_on":"2011-03-23T00:41:11.690796+00:00","user":"Andrej08","issue":170,"changed_from":"open"},{"comment":245793,"changed_to":"on hold","field":"status","created_on":"2010-09-16T18:31:20.124933+00:00","user":"ibuclaw","issue":28,"changed_from":"open"},{"comment":672523,"changed_to":"resolved","field":"status","created_on":"2011-09-27T05:01:53.753587+00:00","user":"ibuclaw","issue":234,"changed_from":"open"},{"comment":223419,"changed_to":"resolved","field":"status","created_on":"2010-07-29T23:46:15.908934+00:00","user":"michaelp","issue":21,"changed_from":"open"},{"comment":902927,"changed_to":"open","field":"status","created_on":"2011-12-24T10:49:03.437361+00:00","user":"ibuclaw","issue":246,"changed_from":"new"},{"comment":902927,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-12-24T10:49:03.448131+00:00","user":"ibuclaw","issue":246,"changed_from":"None"},{"comment":599801,"changed_to":"resolved","field":"status","created_on":"2011-08-11T20:51:57.381575+00:00","user":"ibuclaw","issue":199,"changed_from":"new"},{"comment":301152,"changed_to":"Test case:\n\n{{{\nimport core.memory, std.stdio;\n\nclass C {\n    uint num;\n}\n\nC c;\n\nvoid main() {\n    c = new C;\n    c.num = 31415;\n\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    foreach(arr; arrs) {\n        auto","field":"content","created_on":"2010-11-28T00:41:25.700344+00:00","user":"dsimcha","issue":115,"changed_from":"Test case:\n\n{{{\nimport core.memory, std.stdio;\n\nclass C {\n    uint num;\n}\n\nC c;\n\nvoid main() {\n    c = new C;\n    c.num = 31415;\n\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    foreach(arr; arrs) {\n        auto"},{"comment":428975,"changed_to":"open","field":"status","created_on":"2011-04-05T18:17:08.115362+00:00","user":"ibuclaw","issue":143,"changed_from":"new"},{"comment":428975,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-05T18:17:08.118486+00:00","user":"ibuclaw","issue":143,"changed_from":"None"},{"comment":834962,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-12-03T10:51:50.800820+00:00","user":"ibuclaw","issue":236,"changed_from":"None"},{"comment":325230,"changed_to":"new","field":"status","created_on":"2010-12-26T23:31:45.226517+00:00","user":"ibuclaw","issue":109,"changed_from":"open"},{"comment":325230,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-12-26T23:31:45.229600+00:00","user":"ibuclaw","issue":109,"changed_from":"None"},{"comment":6092366,"changed_to":"resolved","field":"status","created_on":"2013-09-17T10:00:04.665061+00:00","user":"ibuclaw","issue":340,"changed_from":"new"},{"comment":645540,"changed_to":"resolved","field":"status","created_on":"2011-09-10T22:04:24.641829+00:00","user":"ibuclaw","issue":226,"changed_from":"open"},{"comment":633795,"changed_to":"open","field":"status","created_on":"2011-09-03T10:21:04.998093+00:00","user":"ibuclaw","issue":215,"changed_from":"new"},{"comment":204612,"changed_to":"resolved","field":"status","created_on":"2010-06-29T16:11:36.633852+00:00","user":"ibuclaw","issue":28,"changed_from":"open"},{"comment":198949,"changed_to":"resolved","field":"status","created_on":"2010-06-19T17:18:59.677269+00:00","user":"ibuclaw","issue":25,"changed_from":"new"},{"comment":322447,"changed_to":"resolved","field":"status","created_on":"2010-12-22T01:02:56.994862+00:00","user":"ibuclaw","issue":117,"changed_from":"new"},{"comment":683404,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-10-03T22:30:15.565868+00:00","user":"ibuclaw","issue":244,"changed_from":"None"},{"comment":301162,"changed_to":"This one only happens on -m32 builds.\n\nTest case:\n\n{{{\nimport std.stdio;  \/\/ This needs to be imported to reproduce the bug.\n\nvoid main() {\n    uint[][] arrs;\n    foreach(i; 0..40) {\n        arrs ~= new uint[1_048_576];\n    }\n\n    stderr.writeln(\"AAA\"); ","field":"content","created_on":"2010-11-28T01:07:41.403628+00:00","user":"dsimcha","issue":116,"changed_from":"This one only happens on -m32 builds.\r\n\r\nTest case:\r\n\r\n{{{\r\nimport std.stdio;  \/\/ This needs to be imported to reproduce the bug.\r\n\r\nvoid main() {\r\n    uint[][] arrs;\r\n    foreach(i; 0..40) {\r\n        arrs ~= new uint[1_048_576];\r\n    }\r\n\r\n    stderr.wri"},{"comment":890556,"changed_to":"resolved","field":"status","created_on":"2011-12-20T14:53:08.737127+00:00","user":"art_","issue":289,"changed_from":"new"},{"comment":909337,"changed_to":"resolved","field":"status","created_on":"2011-12-27T23:25:34.304747+00:00","user":"trass3r","issue":278,"changed_from":"open"},{"comment":1480332,"changed_to":"resolved","field":"status","created_on":"2012-05-30T01:04:06.639606+00:00","user":"venix1","issue":345,"changed_from":"new"},{"comment":315154,"changed_to":"resolved","field":"status","created_on":"2010-12-13T15:52:16.012172+00:00","user":"ibuclaw","issue":104,"changed_from":"open"},{"comment":216541,"changed_to":"open","field":"status","created_on":"2010-07-16T04:12:49.991408+00:00","user":"michaelp","issue":40,"changed_from":"new"},{"comment":549832,"changed_to":"issue213_gcc46.patch","field":"attachment","created_on":"2011-07-07T21:14:53.368190+00:00","user":"ibuclaw","issue":213,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110707\/213\/issue213_gcc46.patch"},{"comment":313567,"changed_to":"wontfix","field":"status","created_on":"2010-12-11T11:22:49.419872+00:00","user":"ibuclaw","issue":123,"changed_from":"new"},{"comment":1591044,"changed_to":"resolved","field":"status","created_on":"2012-06-25T23:24:40.235096+00:00","user":"ibuclaw","issue":353,"changed_from":"new"},{"comment":309779,"changed_to":"open","field":"status","created_on":"2010-12-07T22:32:18.790917+00:00","user":"ibuclaw","issue":121,"changed_from":"on hold"},{"comment":309779,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-12-07T22:32:18.793892+00:00","user":"ibuclaw","issue":121,"changed_from":"None"},{"comment":429783,"changed_to":"resolved","field":"status","created_on":"2011-04-06T07:43:23.745651+00:00","user":"ibuclaw","issue":179,"changed_from":"new"},{"comment":429783,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-06T07:43:23.750037+00:00","user":"ibuclaw","issue":179,"changed_from":"None"},{"comment":434018,"changed_to":"invalid","field":"status","created_on":"2011-04-09T19:13:58.313675+00:00","user":"ibuclaw","issue":184,"changed_from":"new"},{"comment":999904,"changed_to":"venix1","field":"responsible","created_on":"2012-01-25T23:05:22.424986+00:00","user":"venix1","issue":288,"changed_from":"None"},{"comment":277094,"changed_to":"resolved","field":"status","created_on":"2010-10-28T07:22:42.499305+00:00","user":"ibuclaw","issue":81,"changed_from":"new"},{"comment":354527,"changed_to":"resolved","field":"status","created_on":"2011-01-29T20:44:40.965132+00:00","user":"ibuclaw","issue":115,"changed_from":"open"},{"comment":642551,"changed_to":"open","field":"status","created_on":"2011-09-08T17:26:33.630331+00:00","user":"ibuclaw","issue":226,"changed_from":"new"},{"comment":642551,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-09-08T17:26:33.632034+00:00","user":"ibuclaw","issue":226,"changed_from":"None"},{"comment":224407,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-08-01T21:29:30.507615+00:00","user":"ibuclaw","issue":51,"changed_from":"None"},{"comment":252629,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-09-22T18:02:38.738674+00:00","user":"ibuclaw","issue":66,"changed_from":"None"},{"comment":1587855,"changed_to":"Hello. I am trying to create a DLL using the GDC (gcc-4.6.1-tdm64-1-gdc-5aa95e2678-20120613-D2.058), and I am using the following code:\n\n{{{\n\/\/ testdll.d\n\nmodule testdll;\n\nimport std.c.windows.windows;\n\n__gshared HINSTANCE g_hInst;\n\nextern(C) int _tls_ca","field":"content","created_on":"2012-06-25T11:42:07.826181+00:00","user":"arabasso","issue":352,"changed_from":"Hello. I am trying to create a DLL using the GDC, and I am using the following code:\r\n\r\n{{{\r\n\/\/ testdll.d\r\n\r\nmodule testdll;\r\n\r\nimport std.c.windows.windows;\r\n\r\n__gshared HINSTANCE g_hInst;\r\n\r\nextern(C) int _tls_callbacks_a;\r\n\r\nversion(Windows)\r\n{\r\n\texte"},{"comment":147693,"changed_to":"revision.diff","field":"attachment","created_on":"2010-03-31T22:44:53.168638+00:00","user":"ibuclaw","issue":2,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100401\/2\/revision.diff"},{"comment":642546,"changed_to":"resolved","field":"status","created_on":"2011-09-08T17:25:42.840064+00:00","user":"ibuclaw","issue":214,"changed_from":"open"},{"comment":441270,"changed_to":"issue187.patch","field":"attachment","created_on":"2011-04-14T21:04:48.284604+00:00","user":"venix1","issue":187,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110414\/187\/issue187.patch"},{"comment":918446,"changed_to":"resolved","field":"status","created_on":"2012-01-01T15:57:36.482257+00:00","user":"ibuclaw","issue":294,"changed_from":"new"},{"comment":571890,"changed_to":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n\n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRAPP","field":"content","created_on":"2011-07-25T13:19:19.886566+00:00","user":"trass3r","issue":218,"changed_from":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\r\n{{{\r\n#!D\r\nimport std.stdio;\r\nvoid main()\r\n{\r\n\twriteln(\"Hello World\");\r\n}\r\n}}}\r\n{{{\r\n$ gdc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gdc\r\nCOLLE"},{"comment":219222,"changed_to":"open","field":"status","created_on":"2010-07-21T15:12:45.652691+00:00","user":"michaelp","issue":41,"changed_from":"new"},{"comment":219207,"changed_to":"open","field":"status","created_on":"2010-07-21T14:50:16.292214+00:00","user":"michaelp","issue":44,"changed_from":"new"},{"comment":274380,"changed_to":"resolved","field":"status","created_on":"2010-10-25T01:23:06.118952+00:00","user":"michaelp","issue":77,"changed_from":"new"},{"comment":190617,"changed_to":"bug_foreach_ref.patch","field":"attachment","created_on":"2010-06-05T23:43:30.970224+00:00","user":"venix1","issue":24,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100606\/24\/bug_foreach_ref.patch"},{"comment":294871,"changed_to":"The following error ocurred during the compilation of one of my project using D2 via GDC (last checkout). One of my project file imports std.xml and use its XML handling capabilities.\n\ngdc -I. -c main.d -o main.o\ngdc  main.o -o test_xml \n\/home\/itecgo\/Jul","field":"content","created_on":"2010-11-20T10:09:14.852469+00:00","user":"itecgo","issue":106,"changed_from":"The following error ocurred during the compilation of one of my project using D2 via GDC (last checkout). One of my project file imports std.xml and use its XML handling capabilities.\r\n\r\nA simple Makefile-based project file and the error-producing main.d"},{"comment":377635,"changed_to":"open","field":"status","created_on":"2011-02-20T11:27:31.345661+00:00","user":"ibuclaw","issue":151,"changed_from":"resolved"},{"comment":377635,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-02-20T11:27:31.349216+00:00","user":"ibuclaw","issue":151,"changed_from":"None"},{"comment":97936,"changed_to":"open","field":"status","created_on":"2009-12-24T18:23:02.599210+00:00","user":"michaelp","issue":4,"changed_from":"new"},{"comment":1273668,"changed_to":"proposal","field":"kind","created_on":"2012-04-07T02:51:18.760514+00:00","user":"venix1","issue":331,"changed_from":"bug"},{"comment":1273668,"changed_to":"venix1","field":"responsible","created_on":"2012-04-07T02:51:18.771312+00:00","user":"venix1","issue":331,"changed_from":"None"},{"comment":999077,"changed_to":"resolved","field":"status","created_on":"2012-01-25T18:51:36.214440+00:00","user":"ibuclaw","issue":215,"changed_from":"open"},{"comment":842364,"changed_to":"resolved","field":"status","created_on":"2011-12-06T00:29:44.873480+00:00","user":"venix1","issue":170,"changed_from":"open"},{"comment":435683,"changed_to":"open","field":"status","created_on":"2011-04-11T11:17:46.321684+00:00","user":"ibuclaw","issue":185,"changed_from":"new"},{"comment":435683,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-11T11:17:46.326087+00:00","user":"ibuclaw","issue":185,"changed_from":"None"},{"comment":225924,"changed_to":"tokushr-fix.patch","field":"attachment","created_on":"2010-08-04T22:15:35.638313+00:00","user":"ibuclaw","issue":43,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100805\/43\/tokushr-fix.patch"},{"comment":225924,"changed_to":"on hold","field":"status","created_on":"2010-08-04T22:15:35.954545+00:00","user":"ibuclaw","issue":43,"changed_from":"open"},{"comment":407148,"changed_to":"open","field":"status","created_on":"2011-03-17T18:55:53.050592+00:00","user":"ibuclaw","issue":164,"changed_from":"resolved"},{"comment":268351,"changed_to":"enhancement","field":"kind","created_on":"2010-10-16T18:06:24.911205+00:00","user":"ibuclaw","issue":75,"changed_from":"bug"},{"comment":303276,"changed_to":"resolved","field":"status","created_on":"2010-11-30T14:13:37.071230+00:00","user":"ibuclaw","issue":118,"changed_from":"open"},{"comment":1937264,"changed_to":"invalid","field":"status","created_on":"2012-09-08T07:30:06.461568+00:00","user":"venix1","issue":359,"changed_from":"new"},{"comment":227488,"changed_to":"open","field":"status","created_on":"2010-08-08T18:06:28.690356+00:00","user":"michaelp","issue":53,"changed_from":"new"},{"comment":451698,"changed_to":"The following doesn't compile:\n\n{{{\nimport std.stdio; void main(){\n  auto a = [1:10, 2:20].keys;\n  writeln(123,456,a);\n}\n}}}\n\n.\/gdmd A.d produces\n\nA.d: In function ‘main’:\nA.d:2: internal compiler error: in toElem, at d\/d-glue.cc:2480\n\ngdc - mercurial re","field":"content","created_on":"2011-04-22T21:48:35.638896+00:00","user":"ibuclaw","issue":198,"changed_from":"The following doesn't compile:\r\n\r\nimport std.stdio; void main(){\r\n  auto a = [1:10, 2:20].keys;\r\n  writeln(123,456,a);\r\n}\r\n\r\n.\/gdmd A.d produces\r\n\r\nA.d: In function ‘main’:\r\nA.d:2: internal compiler error: in toElem, at d\/d-glue.cc:2480\r\n\r\ngdc - mercuria"},{"comment":97142,"changed_to":"error3.txt","field":"attachment","created_on":"2009-12-23T02:07:32.893552+00:00","user":"ricochet1k","issue":5,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2009\/12\/error3.txt"},{"comment":842466,"changed_to":"venix1","field":"responsible","created_on":"2011-12-06T01:35:00.281832+00:00","user":"venix1","issue":277,"changed_from":"None"},{"comment":6092329,"changed_to":"resolved","field":"status","created_on":"2013-09-17T09:57:10.968270+00:00","user":"ibuclaw","issue":229,"changed_from":"new"},{"comment":206244,"changed_to":"resolved","field":"status","created_on":"2010-07-02T07:38:50.420794+00:00","user":"ibuclaw","issue":27,"changed_from":"open"},{"comment":404799,"changed_to":"resolved","field":"status","created_on":"2011-03-16T03:06:35.007049+00:00","user":"dsimcha","issue":138,"changed_from":"new"},{"comment":909268,"changed_to":"resolved","field":"status","created_on":"2011-12-27T22:48:29.576900+00:00","user":"ibuclaw","issue":254,"changed_from":"on hold"},{"comment":918989,"changed_to":"resolved","field":"status","created_on":"2012-01-02T03:33:14.054572+00:00","user":"ibuclaw","issue":216,"changed_from":"new"},{"comment":1312785,"changed_to":"on hold","field":"status","created_on":"2012-04-17T19:00:08.913097+00:00","user":"venix1","issue":326,"changed_from":"new"},{"comment":289082,"changed_to":"resolved","field":"status","created_on":"2010-11-13T18:02:02.407433+00:00","user":"ibuclaw","issue":92,"changed_from":"open"},{"comment":504558,"changed_to":"[OSX][64-bit] Missing symbols of libgphobos2.a","field":"title","created_on":"2011-06-02T14:34:21.807125+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Missing symbols of libgphobos2.a"},{"comment":6091429,"changed_to":"resolved","field":"status","created_on":"2013-09-17T08:58:46.486162+00:00","user":"ibuclaw","issue":360,"changed_from":"new"},{"comment":672522,"changed_to":"resolved","field":"status","created_on":"2011-09-27T04:59:18.163864+00:00","user":"ibuclaw","issue":239,"changed_from":"open"},{"comment":329927,"changed_to":"new","field":"status","created_on":"2011-01-03T17:12:37.257759+00:00","user":"ibuclaw","issue":132,"changed_from":"open"},{"comment":329927,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-01-03T17:12:37.261467+00:00","user":"ibuclaw","issue":132,"changed_from":"None"},{"comment":222112,"changed_to":"open","field":"status","created_on":"2010-07-27T14:01:24.096039+00:00","user":"ibuclaw","issue":28,"changed_from":"resolved"},{"comment":222112,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-07-27T14:01:24.137281+00:00","user":"ibuclaw","issue":28,"changed_from":"None"},{"comment":1460732,"changed_to":"Building the newest git version with gcc 4.7.0 fails with this error:\n\n{{{\n#!make\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphob","field":"content","created_on":"2012-05-24T16:15:06.316342+00:00","user":"Calrama","issue":343,"changed_from":"Building the newest git version with gcc 4.7.0 fails with this error:\n\nmake[3]: *** No rule to make target `zlib\/gzclose.o', needed by `libgphobos2.a'.  Stop.\nmake[3]: Leaving directory `\/home\/*\/gdc-git\/src\/gcc-build\/i686-pc-linux-gnu\/libphobos'\nmake[2]:"},{"comment":1486313,"changed_to":"undref.zip","field":"attachment","created_on":"2012-05-31T07:16:35.406045+00:00","user":"Calrama","issue":284,"changed_from":"\/goshawk\/gdc\/issue-attachment\/284\/goshawk\/gdc\/1338448595.04\/284\/undref.zip"},{"comment":295633,"changed_to":"resolved","field":"status","created_on":"2010-11-21T02:13:36.914007+00:00","user":"ibuclaw","issue":107,"changed_from":"open"},{"comment":591343,"changed_to":"resolved","field":"status","created_on":"2011-08-06T21:10:41.079947+00:00","user":"ibuclaw","issue":217,"changed_from":"new"},{"comment":431684,"changed_to":"resolved","field":"status","created_on":"2011-04-07T16:17:04.861744+00:00","user":"ibuclaw","issue":180,"changed_from":"open"},{"comment":217432,"changed_to":"dmd2020fe.patch","field":"attachment","created_on":"2010-07-18T00:41:16.286806+00:00","user":"ibuclaw","issue":40,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100718\/40\/dmd2020fe.patch"},{"comment":151627,"changed_to":"enhancement","field":"kind","created_on":"2010-04-07T23:04:00.800705+00:00","user":"ibuclaw","issue":16,"changed_from":"bug"},{"comment":279860,"changed_to":"issue82.patch","field":"attachment","created_on":"2010-11-01T13:59:43.703518+00:00","user":"ibuclaw","issue":82,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20101101\/82\/issue82.patch"},{"comment":279860,"changed_to":"open","field":"status","created_on":"2010-11-01T13:59:43.842398+00:00","user":"ibuclaw","issue":82,"changed_from":"new"},{"comment":1590558,"changed_to":"This commit\n\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/5e0a5219aadfa9a8a1e5607e8c49edb326f144e2\n\nadds another level (\"xyz\/\") to the beginning of each entry in the patch file patch-gcc-4.8.x which results in the patch call in setup-gcc.sh\nfailing, b","field":"content","created_on":"2012-06-25T20:50:12.403122+00:00","user":"Calrama","issue":353,"changed_from":"This commit\r\n\r\nhttps:\/\/github.com\/D-Programming-GDC\/GDC\/commit\/5e0a5219aadfa9a8a1e5607e8c49edb326f144e2\r\n\r\nadds another level (\"xyz\/\") to the beginning of each entry in the patch file patch-gcc-4.8.x which results in the patch call in setup-gcc.sh\r\nfaili"},{"comment":330039,"changed_to":"new","field":"status","created_on":"2011-01-03T19:49:14.013565+00:00","user":"ibuclaw","issue":115,"changed_from":"open"},{"comment":454718,"changed_to":"open","field":"status","created_on":"2011-04-26T05:23:36.342609+00:00","user":"ibuclaw","issue":200,"changed_from":"new"},{"comment":353580,"changed_to":"resolved","field":"status","created_on":"2011-01-28T14:57:54.937079+00:00","user":"ibuclaw","issue":84,"changed_from":"new"},{"comment":780292,"changed_to":"invalid","field":"status","created_on":"2011-11-12T14:55:00.198197+00:00","user":"dsimcha","issue":257,"changed_from":"new"},{"comment":317815,"changed_to":"duplicate","field":"status","created_on":"2010-12-15T19:45:32.641081+00:00","user":"ibuclaw","issue":126,"changed_from":"new"},{"comment":189240,"changed_to":"open","field":"status","created_on":"2010-06-03T22:33:48.263635+00:00","user":"goshawk","issue":23,"changed_from":"new"},{"comment":225432,"changed_to":"sjlj_exception_fix.patch","field":"attachment","created_on":"2010-08-03T22:05:19.384849+00:00","user":"venix1","issue":50,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100804\/50\/sjlj_exception_fix.patch"},{"comment":804747,"changed_to":"resolved","field":"status","created_on":"2011-11-21T23:08:54.795622+00:00","user":"trass3r","issue":260,"changed_from":"new"},{"comment":771482,"changed_to":"When trying to build GDC2 on Cygwin:\n\n{{{\nchecking for __libc_stack_end... no\nrm: cannot remove `core': Is a directory\nconfigure: error: No usable stack origin information\nrm: cannot remove `core': Is a directory\nmake[1]: *** [configure-target-libphobos]","field":"content","created_on":"2011-11-09T02:09:41.359811+00:00","user":"dsimcha","issue":256,"changed_from":"When trying to build GDC2 on Cygwin:\n\n{{{\nchecking for __libc_stack_end... no\nrm: cannot remove `core': Is a directory\nconfigure: error: No usable stack origin information\nrm: cannot remove `core': Is a directory\n}}}"},{"comment":139852,"changed_to":"resolved","field":"status","created_on":"2010-03-16T07:49:55.111993+00:00","user":"ibuclaw","issue":13,"changed_from":"open"},{"comment":442991,"changed_to":"mingw_stdioV2.patch","field":"attachment","created_on":"2011-04-16T03:15:53.784650+00:00","user":"venix1","issue":160,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110416\/160\/mingw_stdioV2.patch"},{"comment":139408,"changed_to":"resolved","field":"status","created_on":"2010-03-15T15:14:44.819094+00:00","user":"michaelp","issue":6,"changed_from":"new"},{"comment":984967,"changed_to":"resolved","field":"status","created_on":"2012-01-21T12:27:36.692278+00:00","user":"ibuclaw","issue":156,"changed_from":"open"},{"comment":541318,"changed_to":"issue213.patch","field":"attachment","created_on":"2011-07-01T00:41:42.742660+00:00","user":"venix1","issue":213,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110701\/213\/issue213.patch"},{"comment":541318,"changed_to":"resolved","field":"status","created_on":"2011-07-01T00:41:42.871298+00:00","user":"venix1","issue":213,"changed_from":"new"},{"comment":882103,"changed_to":"resolved","field":"status","created_on":"2011-12-17T14:36:08.342203+00:00","user":"ibuclaw","issue":283,"changed_from":"new"},{"comment":68344,"changed_to":"resolved","field":"status","created_on":"2009-10-26T01:09:12.846949+00:00","user":"michaelp","issue":3,"changed_from":"new"},{"comment":976866,"changed_to":"open","field":"status","created_on":"2012-01-19T00:01:20.399219+00:00","user":"ibuclaw","issue":306,"changed_from":"new"},{"comment":976866,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-01-19T00:01:20.402229+00:00","user":"ibuclaw","issue":306,"changed_from":"None"},{"comment":139400,"changed_to":"resolved","field":"status","created_on":"2010-03-15T14:59:47.789888+00:00","user":"michaelp","issue":13,"changed_from":"open"},{"comment":378119,"changed_to":"resolved","field":"status","created_on":"2011-02-20T20:35:24.025800+00:00","user":"ibuclaw","issue":155,"changed_from":"open"},{"comment":124221,"changed_to":"Recently I tried building GDC version 1 using <<changeset 76:7ef3514fb27b>> with TDM's GCC\/mingw32 patches and build files using Cygwin.\n\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\n{{{","field":"content","created_on":"2010-02-16T02:15:43.718581+00:00","user":"venix1","issue":9,"changed_from":"Recently I tried building GDC version 1 using <<changeset 76:7ef3514fb27b>> with TDM's GCC\/mingw32 patches and build files using Cygwin.\r\n\r\nAfter successfully building GDC, Tango-0.99.8 failed at 'tango\/text\/Regex.d'.  GDC outputs the following errors.\r\n"},{"comment":430899,"changed_to":"resolved","field":"status","created_on":"2011-04-07T02:13:13.088724+00:00","user":"dsimcha","issue":174,"changed_from":"open"},{"comment":1652773,"changed_to":"open","field":"status","created_on":"2012-07-11T10:30:28.089521+00:00","user":"ibuclaw","issue":305,"changed_from":"new"},{"comment":1652773,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-07-11T10:30:28.136586+00:00","user":"ibuclaw","issue":305,"changed_from":"None"},{"comment":685246,"changed_to":"duplicate","field":"status","created_on":"2011-10-04T16:28:34.146699+00:00","user":"ibuclaw","issue":245,"changed_from":"new"},{"comment":209131,"changed_to":"Original issue: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1689\n\nCode to reproduce the issue:\n\n{{{\nvoid main()\n{\n     float[][] bar;\n     bar = new float[][](2,3);\n}\n}}}\n\nGDC seg faults on the line \"bar = new float[][](2,3);\".\n\nIn DStress as:\n\nhttp:\/\/","field":"content","created_on":"2010-07-08T03:34:02.348556+00:00","user":"michaelp","issue":33,"changed_from":"Original issue: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1689\r\n\r\nCode to reproduce the issue:\r\n\r\n{{{\r\nvoid main()\r\n{\r\n     float[][] bar;\r\n     bar = new float[][](2,3);\r\n}\r\n}}}\r\n\r\nGDC seg faults on the line \"bar = new float[][](2,3);\"."},{"comment":217137,"changed_to":"wontfix","field":"status","created_on":"2010-07-17T10:13:32.406110+00:00","user":"ibuclaw","issue":37,"changed_from":"new"},{"comment":224034,"changed_to":"stdcall.patch","field":"attachment","created_on":"2010-07-31T18:41:57.703397+00:00","user":"venix1","issue":47,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100731\/47\/stdcall.patch"},{"comment":417661,"changed_to":"resolved","field":"status","created_on":"2011-03-27T17:56:25.369506+00:00","user":"ibuclaw","issue":153,"changed_from":"open"},{"comment":9408010,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:10:09.977483+00:00","user":"ibuclaw","issue":41,"changed_from":"open"},{"comment":918973,"changed_to":"resolved","field":"status","created_on":"2012-01-02T03:12:45.035854+00:00","user":"ibuclaw","issue":272,"changed_from":"new"},{"comment":196976,"changed_to":"fdeps.patch","field":"attachment","created_on":"2010-06-16T07:58:53.303478+00:00","user":"ibuclaw","issue":10,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100616\/10\/fdeps.patch"},{"comment":196976,"changed_to":"open","field":"status","created_on":"2010-06-16T07:58:53.623544+00:00","user":"ibuclaw","issue":10,"changed_from":"new"},{"comment":379711,"changed_to":"config.log","field":"attachment","created_on":"2011-02-21T23:44:34.778671+00:00","user":"Andrej08","issue":156,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110222\/156\/config.log"},{"comment":379711,"changed_to":"build.log","field":"attachment","created_on":"2011-02-21T23:44:37.363383+00:00","user":"Andrej08","issue":156,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110222\/156\/build.log"},{"comment":883291,"changed_to":"invalid","field":"status","created_on":"2011-12-18T05:31:33.728945+00:00","user":"dsimcha","issue":292,"changed_from":"new"},{"comment":465423,"changed_to":"I get an ICE when compiling with optimisations:\n\n{{{\n\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.","field":"content","created_on":"2011-05-04T12:02:22.817694+00:00","user":"jordirovira","issue":205,"changed_from":"I get an ICE when compiling with optimisations:\n\n{{{\ngdc -O3 -c bug.d \nbug.d: In function ‘foo’:\nbug.d:1: internal compiler error: in mark_operand_necessary, at tree-ssa-dce.c:240\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\n"},{"comment":999112,"changed_to":"resolved","field":"status","created_on":"2012-01-25T19:00:20.163283+00:00","user":"ibuclaw","issue":45,"changed_from":"open"},{"comment":801739,"changed_to":"resolved","field":"status","created_on":"2011-11-21T00:53:14.537712+00:00","user":"ibuclaw","issue":261,"changed_from":"new"},{"comment":9408089,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:14:13.457886+00:00","user":"ibuclaw","issue":351,"changed_from":"open"},{"comment":224484,"changed_to":"gdc-arm-unwind_ptr.dpatch","field":"attachment","created_on":"2010-08-02T00:15:56.005686+00:00","user":"ibuclaw","issue":50,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com:443\/goshawk\/gdc\/20100802\/50\/gdc-arm-unwind_ptr.dpatch"},{"comment":407180,"changed_to":"resolved","field":"status","created_on":"2011-03-17T19:28:31.876556+00:00","user":"ibuclaw","issue":165,"changed_from":"new"},{"comment":1012608,"changed_to":"issue311_0.patch","field":"attachment","created_on":"2012-01-29T16:52:09.498084+00:00","user":"venix1","issue":311,"changed_from":"\/goshawk\/gdc\/issue-attachment\/311\/goshawk\/gdc\/1327855929.26\/311\/issue311_0.patch"},{"comment":256215,"changed_to":"Finished the initial merge in <<changeset 272>>\n\nOutstanding \/ Missing implemented features.\n\n* Add -safe switch.\n* Make the 'this' parameter to struct member functions a reference type, rather than a pointer.\n\nHaven't looked at -safe just yet, however c","field":"content","created_on":"2010-09-27T21:47:01.642353+00:00","user":"ibuclaw","issue":67,"changed_from":"Finished the initial merge in <<changeset 272>>\r\n\r\nOutstanding \/ Missing implemented features.\r\n\r\n* Add -safe switch.\r\n* Make the 'this' parameter to struct member functions a reference type, rather than a pointer.\r\n\r\nHaven't looked at -safe just yet, ho"},{"comment":381637,"changed_to":"error.txt","field":"attachment","created_on":"2011-02-23T12:01:31.694728+00:00","user":"heromyth","issue":49,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20110223\/49\/error.txt"},{"comment":441396,"changed_to":"resolved","field":"status","created_on":"2011-04-14T23:21:49.709552+00:00","user":"venix1","issue":189,"changed_from":"new"},{"comment":896097,"changed_to":"I don't have a test case to trigger this because it's non-deterministic and happens in the context of a fairly large program.  However, from what I've been able to glean from GDB, I occasionally get a segfault at \n\n{{{\n0x00000000005d16a9 in _d_arrayappen","field":"content","created_on":"2011-12-21T19:31:32.549641+00:00","user":"dsimcha","issue":295,"changed_from":"I don't have a test case to trigger this because it's non-deterministic and happens in the context of a fairly large program.  However, from what I've been able to glean from GDB, I occasionally get a segfault at \r\n\r\n0x00000000005d16a9 in _d_arrayappendc"},{"comment":1120367,"changed_to":"resolved","field":"status","created_on":"2012-02-26T16:52:43.065454+00:00","user":"ibuclaw","issue":317,"changed_from":"open"},{"comment":149584,"changed_to":"open","field":"status","created_on":"2010-04-05T02:39:03.976319+00:00","user":"michaelp","issue":15,"changed_from":"new"},{"comment":301712,"changed_to":"duplicate","field":"status","created_on":"2010-11-28T20:23:13.296932+00:00","user":"ibuclaw","issue":116,"changed_from":"new"},{"comment":96617,"changed_to":"Error2.txt","field":"attachment","created_on":"2009-12-22T06:00:17.285675+00:00","user":"ricochet1k","issue":5,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2009\/12\/Error2.txt"},{"comment":260804,"changed_to":"resolved","field":"status","created_on":"2010-10-05T13:17:34.115127+00:00","user":"ibuclaw","issue":69,"changed_from":"open"},{"comment":294879,"changed_to":"D2 - compilation failed on associated array.clear()","field":"title","created_on":"2010-11-20T10:29:48.363004+00:00","user":"itecgo","issue":107,"changed_from":"#106 D2 - compilation failed on associated array.clear()"},{"comment":260807,"changed_to":"resolved","field":"status","created_on":"2010-10-05T13:21:15.223648+00:00","user":"ibuclaw","issue":67,"changed_from":"open"},{"comment":827515,"changed_to":"resolved","field":"status","created_on":"2011-11-30T20:16:32.951868+00:00","user":"ibuclaw","issue":254,"changed_from":"new"},{"comment":1652782,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:31:44.443100+00:00","user":"ibuclaw","issue":305,"changed_from":"open"},{"comment":401310,"changed_to":"The following code segfaults GDC revision 488, compiled with GCC 4.4.5, at compile time.  This happens regardless of whether the flags -O, -inline, -release, or -m32\/-m64 are set.\n\n\n{{{\nvoid fun(R)(R range) {\n    void inner() {}\n\n    foreach(elem; range)","field":"content","created_on":"2011-03-12T22:57:15.143352+00:00","user":"dsimcha","issue":163,"changed_from":"The following code segfaults GDC revision 488, compiled with GCC 4.4.5, at compile time.  This happens regardless of whether the flags -O, -inline, -release, or -m32\/-m64 are set.\n\n{{{\nvoid fun(R)(R range) {\n    void inner() {}\n\n    foreach(elem; range) "},{"comment":293757,"changed_to":"D2 - destructor not called on array of classes\/structs","field":"title","created_on":"2010-11-18T22:42:34.071381+00:00","user":"ibuclaw","issue":103,"changed_from":"D1\/D2 - destructor not called on array of classes\/structs"},{"comment":587864,"changed_to":"resolved","field":"status","created_on":"2011-08-04T23:29:34.806693+00:00","user":"venix1","issue":221,"changed_from":"new"},{"comment":1125928,"changed_to":"invalid","field":"status","created_on":"2012-02-27T22:04:34.202263+00:00","user":"ibuclaw","issue":322,"changed_from":"open"},{"comment":388959,"changed_to":"invalid","field":"status","created_on":"2011-03-01T23:50:29.013561+00:00","user":"ibuclaw","issue":130,"changed_from":"new"},{"comment":1474045,"changed_to":"config.log","field":"attachment","created_on":"2012-05-28T19:51:10.548090+00:00","user":"Calrama","issue":344,"changed_from":"\/goshawk\/gdc\/issue-attachment\/344\/goshawk\/gdc\/1338234670.27\/344\/config.log"},{"comment":1474045,"changed_to":"build.log","field":"attachment","created_on":"2012-05-28T19:51:11.092789+00:00","user":"Calrama","issue":344,"changed_from":"\/goshawk\/gdc\/issue-attachment\/344\/goshawk\/gdc\/1338234670.56\/344\/build.log"},{"comment":1474045,"changed_to":"open","field":"status","created_on":"2012-05-28T19:51:11.127311+00:00","user":"Calrama","issue":344,"changed_from":"resolved"},{"comment":1354409,"changed_to":"venix1","field":"responsible","created_on":"2012-04-27T19:51:39.651125+00:00","user":"venix1","issue":338,"changed_from":"None"},{"comment":1354409,"changed_to":"blocker","field":"priority","created_on":"2012-04-27T19:51:39.660740+00:00","user":"venix1","issue":338,"changed_from":"major"},{"comment":741902,"changed_to":"layoutpatch2","field":"attachment","created_on":"2011-10-27T05:47:01.667329+00:00","user":"debio","issue":215,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20111027\/215\/layoutpatch2"},{"comment":338482,"changed_to":"resolved","field":"status","created_on":"2011-01-12T19:18:14.770634+00:00","user":"ibuclaw","issue":147,"changed_from":"new"},{"comment":242757,"changed_to":"fwdrefs.patch","field":"attachment","created_on":"2010-09-10T14:38:05.402988+00:00","user":"ibuclaw","issue":56,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20100910\/56\/fwdrefs.patch"},{"comment":686378,"changed_to":"issue120.patch","field":"attachment","created_on":"2011-10-05T06:06:48.512173+00:00","user":"ibuclaw","issue":120,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20111005\/120\/issue120.patch"},{"comment":208493,"changed_to":"open","field":"status","created_on":"2010-07-06T22:18:41.689719+00:00","user":"michaelp","issue":30,"changed_from":"new"},{"comment":457381,"changed_to":"open","field":"status","created_on":"2011-04-27T22:49:49.444609+00:00","user":"ibuclaw","issue":202,"changed_from":"new"},{"comment":457381,"changed_to":"enhancement","field":"kind","created_on":"2011-04-27T22:49:49.448307+00:00","user":"ibuclaw","issue":202,"changed_from":"bug"},{"comment":457381,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-04-27T22:49:49.450330+00:00","user":"ibuclaw","issue":202,"changed_from":"None"},{"comment":314995,"changed_to":"resolved","field":"status","created_on":"2010-12-13T13:27:21.456349+00:00","user":"ibuclaw","issue":85,"changed_from":"open"},{"comment":218278,"changed_to":"resolved","field":"status","created_on":"2010-07-19T20:09:51.275249+00:00","user":"ibuclaw","issue":16,"changed_from":"open"},{"comment":351923,"changed_to":"resolved","field":"status","created_on":"2011-01-27T00:38:43.477821+00:00","user":"ibuclaw","issue":136,"changed_from":"invalid"},{"comment":338418,"changed_to":"\n{{{\n#!d\n\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    work","field":"content","created_on":"2011-01-12T17:43:29.274478+00:00","user":"tbolsh","issue":147,"changed_from":"<code>\nalias immutable( ubyte )[6] MAC;\n\nvoid showTbolshBug1( MAC mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n    \nvoid workaroundTbolshBug1( immutable(ubyte) [] mac ){\n    assert( mac == [ 0, 1, 2, 3, 4, 5 ] );\n}\n       \nvoid main(){\n    workaro"},{"comment":504563,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X) - {{{linking.txt}}}.\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nSince","field":"content","created_on":"2011-06-02T14:36:09.037925+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached (as the rightmost {{{missing_symbols.txt}}}.. apparently can't delete\/rename attachments.\n\nIgnore {{{linking.txt}}}."},{"comment":1598225,"changed_to":"open","field":"status","created_on":"2012-06-27T11:37:10.004567+00:00","user":"ibuclaw","issue":313,"changed_from":"new"},{"comment":1598225,"changed_to":"ibuclaw","field":"responsible","created_on":"2012-06-27T11:37:10.018036+00:00","user":"ibuclaw","issue":313,"changed_from":"None"},{"comment":648502,"changed_to":"duplicate","field":"status","created_on":"2011-09-12T21:13:17.003310+00:00","user":"siretty","issue":4,"changed_from":"open"},{"comment":199963,"changed_to":"resolved","field":"status","created_on":"2010-06-21T18:37:09.156246+00:00","user":"michaelp","issue":18,"changed_from":"new"},{"comment":389633,"changed_to":"invalid","field":"status","created_on":"2011-03-02T13:48:38.833695+00:00","user":"ibuclaw","issue":157,"changed_from":"new"},{"comment":739091,"changed_to":"resolved","field":"status","created_on":"2011-10-25T23:40:10.820492+00:00","user":"ibuclaw","issue":252,"changed_from":"new"},{"comment":210750,"changed_to":"First of two GCC-4.3.x specific bugs in dwarf2out.c\n\nIn both cases, it looks like the inliner violates some invariant, and the DWARF code chokes on it.  The compiler flags matter in this example, it only happens with '-O2 -frelease -g'.\n\n{{{\nstruct Color","field":"content","created_on":"2010-07-11T19:12:34.703503+00:00","user":"ibuclaw","issue":38,"changed_from":"First of two GCC-4.3.x specific bugs in dwarf2out.c\r\n\r\nIn both cases, it looks like the inliner violates some invariant, and the DWARF code chokes on it.  The compiler flags matter in this example, it only happens with '-O2 -frelease -g'.\r\n\r\n{{{\r\nstruct "},{"comment":579521,"changed_to":"invalid","field":"status","created_on":"2011-07-30T16:08:13.819248+00:00","user":"ibuclaw","issue":171,"changed_from":"new"},{"comment":1596291,"changed_to":"venix1","field":"responsible","created_on":"2012-06-27T00:16:00.102990+00:00","user":"venix1","issue":355,"changed_from":"None"},{"comment":325691,"changed_to":"resolved","field":"status","created_on":"2010-12-27T18:37:24.232751+00:00","user":"ibuclaw","issue":127,"changed_from":"open"},{"comment":985324,"changed_to":"wontfix","field":"status","created_on":"2012-01-21T16:23:22.304808+00:00","user":"ibuclaw","issue":267,"changed_from":"open"},{"comment":570797,"changed_to":"resolved","field":"status","created_on":"2011-07-24T15:26:14.513056+00:00","user":"ibuclaw","issue":183,"changed_from":"new"},{"comment":438312,"changed_to":"Attempting to compile a couple test files with the lastest revision of GDC produces the following errors.\n{{{\n\/\/ D1, gdc hg r535:0066ecfe85f1\nvoid main()\n{\n}\n\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aaA.o):aaA.d:(.data+0x110): multi","field":"content","created_on":"2011-04-12T22:16:13.579794+00:00","user":"venix1","issue":187,"changed_from":"Attempting to compile a couple test files with the lastest revision of GDC produces the following errors.\r\n{{{\r\n\/\/ D1, gdc hg r535:0066ecfe85f1\r\nvoid main()\r\n{\r\n}\r\n\r\nc:\/mingw32\/bin\/..\/lib\/gcc\/mingw32\/4.5.2\/..\/..\/..\/libgphobos.a(aaA.o):aaA.d:(.data+0x110)"},{"comment":1414901,"changed_to":"resolved","field":"status","created_on":"2012-05-14T04:11:14.702409+00:00","user":"venix1","issue":338,"changed_from":"new"},{"comment":157890,"changed_to":"duplicate","field":"status","created_on":"2010-04-18T16:44:58.046335+00:00","user":"ibuclaw","issue":20,"changed_from":"new"},{"comment":293668,"changed_to":"This only happens when compiling with optimizations enabled (-O2) or with -fomit-frame-pointer\n\nTestcase:\n{{{\nstruct S\n{\n    long x;\n    char y;\n    long z;\n}\n\nvoid callfunc()\n{\n    S a = S(1,2,3);\n    S b = S(1,2,3);\n    assert(a == b);\n    assert(a == ","field":"content","created_on":"2010-11-18T21:31:36.128588+00:00","user":"ibuclaw","issue":105,"changed_from":"This only happens when compiling with optimizations enabled (-O2) or with -fomit-frame-pointer\r\n\r\nTestcase:\r\n{{{\r\nstruct S\r\n{\r\n    long x;\r\n    char y;\r\n    long z;\r\n}\r\n\r\nvoid callfunc()\r\n{\r\n    S a = S(1,2,3);\r\n    S b = S(1,2,3);\r\n    assert(a == b);\r\n"},{"comment":309721,"changed_to":"on hold","field":"status","created_on":"2010-12-07T21:42:41.372551+00:00","user":"ibuclaw","issue":121,"changed_from":"new"},{"comment":323825,"changed_to":"resolved","field":"status","created_on":"2010-12-23T13:45:38.584152+00:00","user":"ibuclaw","issue":128,"changed_from":"open"},{"comment":9408109,"changed_to":"resolved","field":"status","created_on":"2014-03-31T15:15:02.864462+00:00","user":"ibuclaw","issue":120,"changed_from":"open"},{"comment":395760,"changed_to":"Hi,\ntried to make gcc-4.4.5 \/ gdc D2.052 in a cygwin environment, sticking to your build instructions. GCC itself configured & compiled fine, but libphobos bailed out in configure with error message:\n\n\n\n{{{\nchecking for __libc_stack_end... no\n\n  configur","field":"content","created_on":"2011-03-08T08:30:03.751547+00:00","user":"sschuerger","issue":162,"changed_from":"Hi,\r\ntried to make gcc-4.4.5 \/ gdc D2.052 in a cygwin environment, sticking to your build instructions. GCC itself configured & compiled fine, but libphobos bailed out in configure with error message:\r\n\r\n\r\n\r\n{{{\r\nchecking for __libc_stack_end... no\r\n\r\n  "},{"comment":1163713,"changed_to":"invalid","field":"status","created_on":"2012-03-08T13:25:42.801028+00:00","user":"venix1","issue":325,"changed_from":"new"},{"comment":1258965,"changed_to":"Code:\n\n{{{\nstring GetPublicMembers()\n{\n\tstring members;\n\tforeach(m; __traits(allMembers, remedy.testmodule))\n\t{\n\t\tmembers ~= m;\n\t}\n\n\tstatic assert(0, members);\n\n\treturn members;\n}\n}}}\n\nDMD2:\nC:\\Users\\venix\\projects\\fusion\\fail>c:\\dmd2\\windows\\bin\\dmd.exe","field":"content","created_on":"2012-04-03T15:20:21.652969+00:00","user":"venix1","issue":328,"changed_from":"Code:\r\n\r\n{{{\r\nstring GetPublicMembers()\r\n{\r\n\tstring members;\r\n\tforeach(m; __traits(allMembers, remedy.testmodule))\r\n\t{\r\n\t\tmembers ~= m;\r\n\t}\r\n\r\n\tstatic assert(0, members);\r\n\r\n\treturn members;\r\n}\r\n}}}\r\n\r\nFail:\r\n\r\n\r\ngdc.exe failed with errors:\r\n\r\nThis appli"},{"comment":611116,"changed_to":"resolved","field":"status","created_on":"2011-08-19T09:33:34.311421+00:00","user":"venix1","issue":227,"changed_from":"new"},{"comment":668915,"changed_to":"resolved","field":"status","created_on":"2011-09-24T14:23:14.981904+00:00","user":"ibuclaw","issue":226,"changed_from":"open"},{"comment":131467,"changed_to":"segfault-wrong-type.patch","field":"attachment","created_on":"2010-02-28T04:13:35.058512+00:00","user":"ibuclaw","issue":6,"changed_from":"http:\/\/bitbucket.org\/m\/attch\/2010\/02\/segfault-wrong-type.patch"},{"comment":1012642,"changed_to":"resolved","field":"status","created_on":"2012-01-29T17:06:06.449778+00:00","user":"ibuclaw","issue":309,"changed_from":"new"},{"comment":1652706,"changed_to":"resolved","field":"status","created_on":"2012-07-11T10:13:14.875878+00:00","user":"ibuclaw","issue":224,"changed_from":"open"},{"comment":6092133,"changed_to":"resolved","field":"status","created_on":"2013-09-17T09:42:38.469065+00:00","user":"ibuclaw","issue":341,"changed_from":"open"},{"comment":819905,"changed_to":"As an example is better than a long discourse :\nmodule fail;\n\nextern(C++) void foo1(void*);\nextern(C++) void bar1(shared void*);\n\npragma(msg, foo1.mangleof);\npragma(msg, bar1.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, this mak","field":"content","created_on":"2011-11-28T11:30:27.020400+00:00","user":"deadalnix","issue":267,"changed_from":"As an exemple is better than a long discours :\r\nmodule fail;\r\n\r\nextern(C++) void foo1(void*);\r\nextern(C++) void bar1(shared void*);\r\n\r\npragma(msg, foo1.mangleof);\r\npragma(msg, bar1.mangleof); \/\/ shared is ignored here, because C++ doesn't have shared, th"},{"comment":826570,"changed_to":"Code:\n\n{{{\n#!d\nclass Foo()\n{\n}\n\nvoid main()\n{\n    auto x = new B!Foo();\n}\n\nclass A(T)\n{\n}\n\nclass B(T) : A!T\n{\n}\n}}}\n\nError:\n\nfoo.d:7: Error: template instance B!(Foo) does not match template declaration B(T)\nfoo.d:7: Error: B!(Foo) is used as a type","field":"content","created_on":"2011-11-30T14:11:03.184897+00:00","user":"alexrp","issue":269,"changed_from":"Code:\r\n\r\n{{{\r\n#!d\r\nclass Foo()\r\n{\r\n}\r\n\r\nvoid main()\r\n{\r\n    auto x = new B!Foo();\r\n}\r\n\r\nclass A(T)\r\n{\r\n}\r\n\r\nclass B(T) : A!T\r\n{\r\n}\r\n}}}\r\n\r\nError:\r\n\r\ncontainer.d:7: Error: template instance B!(Foo) does not match template declaration B(T)\r\ncontainer.d:7: "},{"comment":827550,"changed_to":"wontfix","field":"status","created_on":"2011-11-30T20:29:58.587862+00:00","user":"ibuclaw","issue":269,"changed_from":"new"},{"comment":207416,"changed_to":"open","field":"status","created_on":"2010-07-04T22:03:43.210500+00:00","user":"michaelp","issue":29,"changed_from":"new"},{"comment":673856,"changed_to":"resolved","field":"status","created_on":"2011-09-27T18:20:27.549813+00:00","user":"ibuclaw","issue":241,"changed_from":"new"},{"comment":909272,"changed_to":"open","field":"status","created_on":"2011-12-27T22:51:35.052317+00:00","user":"ibuclaw","issue":278,"changed_from":"new"},{"comment":381199,"changed_to":"resolved","field":"status","created_on":"2011-02-23T01:06:29.249314+00:00","user":"ibuclaw","issue":100,"changed_from":"open"},{"comment":416489,"changed_to":"Right now GDC doesn't have an implementation of stdio for mingw.  I've managed to compile a working copy of stdio.d.  I wouldn't consider it quality code ready for inclusion into D without testing by an IO heavy application.\n\n * **flockfile** and **funlo","field":"content","created_on":"2011-03-26T00:14:35.774295+00:00","user":"venix1","issue":160,"changed_from":"Right now GDC doesn't have an implementation of stdio for mingw.  I've managed to compile a working copy of stdio.d.  I wouldn't consider it quality code ready for inclusion into D without testing by an IO heavy application.\r\n\r\n * **flockfile** and **fun"},{"comment":571896,"changed_to":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n\n{{{\n\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRAP","field":"content","created_on":"2011-07-25T13:21:31.626945+00:00","user":"trass3r","issue":218,"changed_from":"Tried to compile a simple hello world. It works with 'gdc -fdebug -g test.d' but crashes with 'gdc test.d' alone.\n{{{\n#!d\nimport std.stdio;\nvoid main()\n{\n\twriteln(\"Hello World\");\n}\n}}}\n  \n{{{\n$ gdc -v\nUsing built-in specs.\nCOLLECT_GCC=gdc\nCOLLECT_LTO_WRA"},{"comment":433972,"changed_to":"enhancement","field":"kind","created_on":"2011-04-09T17:57:25.421037+00:00","user":"dsimcha","issue":183,"changed_from":"bug"},{"comment":131660,"changed_to":"invalid","field":"status","created_on":"2010-02-28T15:28:57.621190+00:00","user":"ibuclaw","issue":7,"changed_from":"new"},{"comment":827581,"changed_to":"open","field":"status","created_on":"2011-11-30T20:44:13.180854+00:00","user":"ibuclaw","issue":267,"changed_from":"new"},{"comment":904848,"changed_to":"This is inspired by https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/298\/array-range-functions-dont-get-inlined , but as i'm not sure it's really related, and involves LTO, i'll file it separately.\n\nAs in #298, gdc currently does a very bad job inlining non-local","field":"content","created_on":"2011-12-26T03:28:59.267288+00:00","user":"art_","issue":300,"changed_from":"This is inspired by https:\/\/bitbucket.org\/goshawk\/gdc\/issue\/298\/array-range-functions-dont-get-inlined , but as i'm not sure it's really related, and involves LTO, i'll file it separately.\r\n\r\nAs in #298, gdc currently does a very bad job inlining non-loc"},{"comment":734377,"changed_to":"resolved","field":"status","created_on":"2011-10-24T11:29:01.020615+00:00","user":"ibuclaw","issue":251,"changed_from":"new"},{"comment":289320,"changed_to":"resolved","field":"status","created_on":"2010-11-14T03:21:36.650606+00:00","user":"jordirovira","issue":88,"changed_from":"new"},{"comment":408330,"changed_to":"open","field":"status","created_on":"2011-03-18T19:53:58.625252+00:00","user":"ibuclaw","issue":167,"changed_from":"new"},{"comment":408330,"changed_to":"ibuclaw","field":"responsible","created_on":"2011-03-18T19:53:58.629679+00:00","user":"ibuclaw","issue":167,"changed_from":"None"},{"comment":266061,"changed_to":"resolved","field":"status","created_on":"2010-10-13T01:11:07.060658+00:00","user":"opticron","issue":71,"changed_from":"open"},{"comment":296974,"changed_to":"resolved","field":"status","created_on":"2010-11-22T20:39:55.322528+00:00","user":"ibuclaw","issue":108,"changed_from":"open"},{"comment":594165,"changed_to":"resolved","field":"status","created_on":"2011-08-09T00:54:18.249955+00:00","user":"ibuclaw","issue":191,"changed_from":"new"},{"comment":1274409,"changed_to":"win32.zip","field":"attachment","created_on":"2012-04-07T09:35:34.706282+00:00","user":"TurkeyMan","issue":329,"changed_from":"\/goshawk\/gdc\/issue-attachment\/329\/goshawk\/gdc\/1333791334.1\/329\/win32.zip"},{"comment":1274409,"changed_to":"VS-Build.zip","field":"attachment","created_on":"2012-04-07T09:35:34.819290+00:00","user":"TurkeyMan","issue":329,"changed_from":"\/goshawk\/gdc\/issue-attachment\/329\/goshawk\/gdc\/1333791334.71\/329\/VS-Build.zip"},{"comment":1011650,"changed_to":"minor","field":"priority","created_on":"2012-01-29T08:49:06.538802+00:00","user":"venix1","issue":311,"changed_from":"major"},{"comment":1598188,"changed_to":"SIMD multiplication using float4 doesn't work","field":"title","created_on":"2012-06-27T11:29:55.101254+00:00","user":"ibuclaw","issue":346,"changed_from":"SIMD multiplication in MinGW doesn't work"},{"comment":221915,"changed_to":"resolved","field":"status","created_on":"2010-07-27T00:40:07.334244+00:00","user":"ibuclaw","issue":44,"changed_from":"open"},{"comment":741082,"changed_to":"issue249.patch","field":"attachment","created_on":"2011-10-26T19:30:14.956895+00:00","user":"ibuclaw","issue":249,"changed_from":"https:\/\/bitbucket-assetroot.s3.amazonaws.com\/goshawk\/gdc\/20111026\/249\/issue249.patch"},{"comment":298509,"changed_to":"open","field":"status","created_on":"2010-11-24T11:07:07.038048+00:00","user":"ibuclaw","issue":109,"changed_from":"new"},{"comment":503977,"changed_to":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\n{{{\n# examples for on","field":"content","created_on":"2011-06-02T01:45:30.865091+00:00","user":"dan.sanduleac","issue":210,"changed_from":"Some symbols are missing, which raises linking errors when I use gdc (under Mac OS X).\n\nSee the output of {{{nm libgphobos2.a}}} attached.\n\nI'm also attaching the linking errors (where it also shows what versions I have installed).\n\nEDIT: apparently SOME"},{"comment":298571,"changed_to":"open","field":"status","created_on":"2010-11-24T11:56:21.803108+00:00","user":"ibuclaw","issue":110,"changed_from":"new"},{"comment":1104171,"changed_to":"Reduced from a failing std.file unittest as discussed here:\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\n\nCompiling file.d with -c -O2 produces this output:\n{{{\nfile.d: In function 'file.blah':\nfile.d:3:0: error: non-trivial conversion at ","field":"content","created_on":"2012-02-21T19:15:35.140234+00:00","user":"jpf","issue":314,"changed_from":"Reduced from a failing std.file unittest as discussed here:\r\nhttp:\/\/forum.dlang.org\/thread\/ji0173$1o52$1@digitalmars.com\r\n\r\nCompiling file.d with -O2 produces this output:\r\n{{{\r\nfile.d: In function 'file.blah':\r\nfile.d:3:0: error: non-trivial conversion "},{"comment":209179,"changed_to":"Originally reported: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1041\n\nCode:\n\n{{{\n\nint main()\n{\n    int i = 2;\n\n    switch(3)\n    {\n        scope(exit) { i--; }\n        default:\n    }\n\n    if(i != 2){\n        assert(0);\n    }\n\n    return 0;\n}\n}}}\n\nBuil","field":"content","created_on":"2010-07-08T07:40:55.479097+00:00","user":"ibuclaw","issue":37,"changed_from":"Originally reported: http:\/\/d.puremagic.com\/issues\/show_bug.cgi?id=1041\r\n\r\nCode:\r\n\r\n{{{\r\n\r\nint main()\r\n{\r\n    int i = 2;\r\n\r\n    switch(3)\r\n    {\r\n        scope(exit) { i--; }\r\n        default:\r\n    }\r\n\r\n    if(i != 2){\r\n        assert(0);\r\n    }\r\n\r\n    r"},{"comment":358707,"changed_to":"resolved","field":"status","created_on":"2011-02-02T10:48:47.038334+00:00","user":"ibuclaw","issue":137,"changed_from":"open"},{"comment":1617358,"changed_to":"resolved","field":"status","created_on":"2012-07-02T17:13:45.522833+00:00","user":"ibuclaw","issue":356,"changed_from":"new"},{"comment":1592033,"changed_to":"Using goldie (and semtwist because it depends on it) leads to the following:\n\n{{{\ngdc  -omain main.d  semitwist\/refbox.d semitwist\/treeout.d semitwist\/cmdlineparser.d  semitwist\/util\/array.d semitwist\/util\/text.d semitwist\/util\/container.d semitwist\/util","field":"content","created_on":"2012-06-26T06:58:07.497182+00:00","user":"Calrama","issue":354,"changed_from":"Using goldie (and semtwist because it depends on it) leads to the following:\r\n\r\n{{{\r\ngdc  -omain main.d  semitwist\/refbox.d semitwist\/treeout.d semitwist\/cmdlineparser.d  semitwist\/util\/array.d semitwist\/util\/text.d semitwist\/util\/container.d semitwist\/u"},{"comment":221209,"changed_to":"http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\n\nI think it would be a good idea to include (updated) information from that manual in the wiki, it took me some time to find that place again.\n\nIt's the only source explaining GNU {{{__attribute__}}}s in GDC, e","field":"content","created_on":"2010-07-25T20:08:42.026157+00:00","user":"trass3r","issue":45,"changed_from":"http:\/\/dgcc.sourceforge.net\/gdc\/manual.html\n\nI think it would be a good idea to include information from that manual in the wiki, it took me some time to find that place again.\n\nIt's the only source explaining GNU {{{__attribute__}}}s in GDC, extended as"},{"comment":436517,"changed_to":"resolved","field":"status","created_on":"2011-04-11T21:17:24.656046+00:00","user":"venix1","issue":158,"changed_from":"new"},{"comment":916903,"changed_to":"resolved","field":"status","created_on":"2011-12-31T00:27:47.865176+00:00","user":"ibuclaw","issue":301,"changed_from":"new"},{"comment":259597,"changed_to":"open","field":"status","created_on":"2010-10-03T19:03:51.347810+00:00","user":"ibuclaw","issue":69,"changed_from":"new"},{"comment":1473440,"changed_to":"resolved","field":"status","created_on":"2012-05-28T16:15:07.686043+00:00","user":"venix1","issue":344,"changed_from":"new"},{"comment":877726,"changed_to":"wontfix","field":"status","created_on":"2011-12-15T22:25:48.497510+00:00","user":"venix1","issue":159,"changed_from":"new"},{"comment":1515107,"changed_to":"open","field":"status","created_on":"2012-06-06T13:41:12.643754+00:00","user":"ibuclaw","issue":347,"changed_from":"new"},{"comment":301116,"changed_to":"Test case:\n\n{{{\nimport std.math;\n\ndouble kernelFun(alias kernel)(double x) {\n    return kernel(x);\n}\n\nvoid main() {\n    auto num = kernelFun!sin(2);\n}\n\n}}}\n\nError message:\n\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/include\/d2\/4.4.5\/st","field":"content","created_on":"2010-11-27T23:26:24.339495+00:00","user":"dsimcha","issue":113,"changed_from":"Test case:\r\n\r\n{{{\r\nimport std.math;\r\n\r\ndouble kernelFun(alias kernel)(double x) {\r\n    return kernel(x);\r\n}\r\n\r\nvoid main() {\r\n    auto num = kernelFun!sin(2);\r\n}\r\n\r\n}}}\r\n\r\nError message:\r\n\r\n\/usr\/local\/lib\/gcc\/x86_64-unknown-linux-gnu\/4.4.5\/..\/..\/..\/..\/in"},{"comment":1329983,"changed_to":"blocker","field":"priority","created_on":"2012-04-22T11:42:52.659685+00:00","user":"TurkeyMan","issue":329,"changed_from":"major"},{"comment":579507,"changed_to":"resolved","field":"status","created_on":"2011-07-30T15:57:45.235326+00:00","user":"ibuclaw","issue":218,"changed_from":"new"},{"comment":244364,"changed_to":"D2 build errors - non-i386 archs not supported by druntime","field":"title","created_on":"2010-09-14T07:08:47.602773+00:00","user":"ibuclaw","issue":62,"changed_from":"Build error with gcc-4.4.4"},{"comment":236588,"changed_to":"resolved","field":"status","created_on":"2010-08-30T16:19:39.883307+00:00","user":"ibuclaw","issue":14,"changed_from":"open"},{"comment":200044,"changed_to":"proposal","field":"kind","created_on":"2010-06-21T20:28:46.536605+00:00","user":"michaelp","issue":26,"changed_from":"bug"},{"comment":209008,"changed_to":"resolved","field":"status","created_on":"2010-07-07T21:07:53.914861+00:00","user":"michaelp","issue":31,"changed_from":"open"},{"comment":594043,"changed_to":"resolved","field":"status","created_on":"2011-08-08T22:29:09.922892+00:00","user":"ibuclaw","issue":38,"changed_from":"open"},{"comment":198607,"changed_to":"wontfix","field":"status","created_on":"2010-06-18T20:28:07.958326+00:00","user":"ibuclaw","issue":19,"changed_from":"new"},{"comment":288965,"changed_to":"resolved","field":"status","created_on":"2010-11-13T14:24:40.129331+00:00","user":"ibuclaw","issue":90,"changed_from":"open"},{"comment":920830,"changed_to":"resolved","field":"status","created_on":"2012-01-02T23:28:02.440919+00:00","user":"ibuclaw","issue":295,"changed_from":"open"},{"comment":1598174,"changed_to":"resolved","field":"status","created_on":"2012-06-27T11:25:23.874052+00:00","user":"ibuclaw","issue":336,"changed_from":"new"},{"comment":884018,"changed_to":"resolved","field":"status","created_on":"2011-12-18T15:21:23.930775+00:00","user":"ibuclaw","issue":290,"changed_from":"new"},{"comment":293767,"changed_to":"open","field":"status","created_on":"2010-11-18T22:48:29.963089+00:00","user":"ibuclaw","issue":103,"changed_from":"new"},{"comment":293767,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-18T22:48:29.968166+00:00","user":"ibuclaw","issue":103,"changed_from":"None"},{"comment":417142,"changed_to":"resolved","field":"status","created_on":"2011-03-26T22:36:35.538710+00:00","user":"ibuclaw","issue":53,"changed_from":"open"},{"comment":222269,"changed_to":"resolved","field":"status","created_on":"2010-07-27T19:59:50.919669+00:00","user":"ibuclaw","issue":36,"changed_from":"new"},{"comment":912123,"changed_to":"resolved","field":"status","created_on":"2011-12-29T00:12:38.727600+00:00","user":"ibuclaw","issue":302,"changed_from":"new"},{"comment":298630,"changed_to":"open","field":"status","created_on":"2010-11-24T13:00:07.356154+00:00","user":"ibuclaw","issue":112,"changed_from":"new"},{"comment":298630,"changed_to":"ibuclaw","field":"responsible","created_on":"2010-11-24T13:00:07.359994+00:00","user":"ibuclaw","issue":112,"changed_from":"None"},{"comment":217382,"changed_to":"open","field":"status","created_on":"2010-07-17T21:07:23.193313+00:00","user":"michaelp","issue":42,"changed_from":"new"},{"comment":283848,"changed_to":"proposal","field":"kind","created_on":"2010-11-06T21:49:12.077013+00:00","user":"ibuclaw","issue":86,"changed_from":"bug"},{"comment":1330773,"changed_to":"resolved","field":"status","created_on":"2012-04-22T18:28:26.764522+00:00","user":"venix1","issue":329,"changed_from":"new"}]}