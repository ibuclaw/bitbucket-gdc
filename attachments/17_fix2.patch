diff -r 616079c615b1 d/phobos/configure
--- a/d/phobos/configure	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos/configure	Wed Apr 07 23:25:54 2010 +0100
@@ -5099,14 +5099,9 @@
 # AC_SUBST(DCFG_EXPM1)
 # also erf, erfc
 
-ac_fn_c_check_func "$LINENO" "execvpe" "ac_cv_func_execvpe"
-if test "x$ac_cv_func_execvpe" = x""yes; then :
-  DCFG_EXECVPE=""
-else
-  DCFG_EXECVPE="GNU_Need_execvpe"
-fi
-
-
+# use version(Posix) instead.
+#AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
+#AC_SUBST(DCFG_EXECVPE)
 
 ac_fn_c_check_func "$LINENO" "spawnvp" "ac_cv_func_spawnvp"
 if test "x$ac_cv_func_spawnvp" = x""yes; then :
diff -r 616079c615b1 d/phobos/configure.in
--- a/d/phobos/configure.in	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos/configure.in	Wed Apr 07 23:25:54 2010 +0100
@@ -440,8 +440,9 @@
 # AC_SUBST(DCFG_EXPM1)
 # also erf, erfc
 
-AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
-AC_SUBST(DCFG_EXECVPE)
+# use version(Posix) instead.
+#AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
+#AC_SUBST(DCFG_EXECVPE)
 
 AC_CHECK_FUNC(spawnvp,DCFG_SPAWNVP="",DCFG_SPAWNVP="GNU_Need_spawnvp")
 AC_SUBST(DCFG_SPAWNVP)
diff -r 616079c615b1 d/phobos/std/process.d
--- a/d/phobos/std/process.d	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos/std/process.d	Wed Apr 07 23:25:54 2010 +0100
@@ -205,7 +205,7 @@
 /** ditto */
 int execvpe(string pathname, string[] argv, string[] envp)
 {
-version (GNU_Need_execvpe)
+version(Posix)
 {
     // Is pathname rooted?
     if(pathname[0] == '/')
@@ -249,9 +249,7 @@
 }
 else
 {
-  // Evidently if we don't need it we don't _need_ it.
-  assert(false);
-  // static assert(0);
+  static assert(0);
 } // version
 }
 
diff -r 616079c615b1 d/phobos2/configure
--- a/d/phobos2/configure	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos2/configure	Wed Apr 07 23:25:54 2010 +0100
@@ -5735,108 +5735,9 @@
 # AC_SUBST(DCFG_EXPM1)
 # also erf, erfc
 
-echo "$as_me:$LINENO: checking for execvpe" >&5
-echo $ECHO_N "checking for execvpe... $ECHO_C" >&6
-if test "${ac_cv_func_execvpe+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  if test x$gcc_no_link = xyes; then
-  { { echo "$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES." >&5
-echo "$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES." >&2;}
-   { (exit 1); exit 1; }; }
-fi
-cat >conftest.$ac_ext <<_ACEOF
-/* confdefs.h.  */
-_ACEOF
-cat confdefs.h >>conftest.$ac_ext
-cat >>conftest.$ac_ext <<_ACEOF
-/* end confdefs.h.  */
-/* Define execvpe to an innocuous variant, in case <limits.h> declares execvpe.
-   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
-#define execvpe innocuous_execvpe
-
-/* System header to define __stub macros and hopefully few prototypes,
-    which can conflict with char execvpe (); below.
-    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
-    <limits.h> exists even on freestanding compilers.  */
-
-#ifdef __STDC__
-# include <limits.h>
-#else
-# include <assert.h>
-#endif
-
-#undef execvpe
-
-/* Override any gcc2 internal prototype to avoid an error.  */
-#ifdef __cplusplus
-extern "C"
-{
-#endif
-/* We use char because int might match the return type of a gcc2
-   builtin and then its argument prototype would still apply.  */
-char execvpe ();
-/* The GNU C library defines this for functions which it implements
-    to always fail with ENOSYS.  Some functions are actually named
-    something starting with __ and the normal name is an alias.  */
-#if defined (__stub_execvpe) || defined (__stub___execvpe)
-choke me
-#else
-char (*f) () = execvpe;
-#endif
-#ifdef __cplusplus
-}
-#endif
-
-int
-main ()
-{
-return f != execvpe;
-  ;
-  return 0;
-}
-_ACEOF
-rm -f conftest.$ac_objext conftest$ac_exeext
-if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
-  (eval $ac_link) 2>conftest.er1
-  ac_status=$?
-  grep -v '^ *+' conftest.er1 >conftest.err
-  rm -f conftest.er1
-  cat conftest.err >&5
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest$ac_exeext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-  ac_cv_func_execvpe=yes
-else
-  echo "$as_me: failed program was:" >&5
-sed 's/^/| /' conftest.$ac_ext >&5
-
-ac_cv_func_execvpe=no
-fi
-rm -f conftest.err conftest.$ac_objext \
-      conftest$ac_exeext conftest.$ac_ext
-fi
-echo "$as_me:$LINENO: result: $ac_cv_func_execvpe" >&5
-echo "${ECHO_T}$ac_cv_func_execvpe" >&6
-if test $ac_cv_func_execvpe = yes; then
-  DCFG_EXECVPE=""
-else
-  DCFG_EXECVPE="GNU_Need_execvpe"
-fi
-
-
+# use version(Unix) instead.
+#AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
+#AC_SUBST(DCFG_EXECVPE)
 
 echo "$as_me:$LINENO: checking for spawnvp" >&5
 echo $ECHO_N "checking for spawnvp... $ECHO_C" >&6
diff -r 616079c615b1 d/phobos2/configure.in
--- a/d/phobos2/configure.in	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos2/configure.in	Wed Apr 07 23:25:54 2010 +0100
@@ -440,8 +440,9 @@
 # AC_SUBST(DCFG_EXPM1)
 # also erf, erfc
 
-AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
-AC_SUBST(DCFG_EXECVPE)
+# use version(Unix) instead.
+#AC_CHECK_FUNC(execvpe,DCFG_EXECVPE="",DCFG_EXECVPE="GNU_Need_execvpe")
+#AC_SUBST(DCFG_EXECVPE)
 
 AC_CHECK_FUNC(spawnvp,DCFG_SPAWNVP="",DCFG_SPAWNVP="GNU_Need_spawnvp")
 AC_SUBST(DCFG_SPAWNVP)
diff -r 616079c615b1 d/phobos2/std/process.d
--- a/d/phobos2/std/process.d	Mon Apr 05 19:53:16 2010 -0400
+++ b/d/phobos2/std/process.d	Wed Apr 07 23:25:54 2010 +0100
@@ -241,7 +241,7 @@
 /** ditto */
 int execvpe(in string pathname, in string[] argv, in string[] envp)
 {
-version (GNU_Need_execvpe)
+version(Unix)
 {
     // Is pathname rooted?
     if(pathname[0] == '/')
